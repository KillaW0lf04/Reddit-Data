<!DOCTYPE html>
<!--[if IE 6]>
<html id="ie6" lang="en-US">
<![endif]-->
<!--[if IE 7]>
<html id="ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html id="ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 6) | !(IE 7) | !(IE 8)  ]><!-->
<html lang="en-US">
<!--<![endif]-->
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />
<title>Fixing frequent freezing of Wasteland 1 when using mouse | The Gödelian Knot</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="https://poizan.dk/blog/wp-content/themes/twentyeleven/style.css" />
<link rel="pingback" href="https://poizan.dk/blog/xmlrpc.php" />
<!--[if lt IE 9]>
<script src="https://poizan.dk/blog/wp-content/themes/twentyeleven/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel="stylesheet" href="https://poizan.dk/blog/wp-content/plugins/codesnippet/codesnippet.css" type="text/css" />
<style type="text/css">
.codesnip-container  {;}
</style>
<link rel="alternate" type="application/rss+xml" title="The Gödelian Knot &raquo; Feed" href="https://poizan.dk/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="The Gödelian Knot &raquo; Comments Feed" href="https://poizan.dk/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="The Gödelian Knot &raquo; Fixing frequent freezing of Wasteland 1 when using mouse Comments Feed" href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/feed/" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://poizan.dk/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://poizan.dk/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Reading raw attribute constructor data' href='https://poizan.dk/blog/2012/07/23/reading-raw-attribute-constructor-data/' />
<link rel='next' title='Protected: Fixing the disappearing store bug in Wasteland 1' href='https://poizan.dk/blog/2013/11/30/fixing-the-disappearing-store-bug-in-wasteland-1/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/' />
<link rel='shortlink' href='https://poizan.dk/blog/?p=89' />
<link rel="stylesheet" type="text/css" href="https://poizan.dk/blog/wp-content/plugins/wp-recaptcha/recaptcha.css" /><style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style>
</head>

<body class="single single-post postid-89 single-format-standard single-author singular two-column right-sidebar">
<div id="page" class="hfeed">
	<header id="branding" role="banner">
			<hgroup>
				<h1 id="site-title"><span><a href="https://poizan.dk/blog/" title="The Gödelian Knot" rel="home">The Gödelian Knot</a></span></h1>
				<h2 id="site-description"></h2>
			</hgroup>

			
								<form method="get" id="searchform" action="https://poizan.dk/blog/">
		<label for="s" class="assistive-text">Search</label>
		<input type="text" class="field" name="s" id="s" placeholder="Search" />
		<input type="submit" class="submit" name="submit" id="searchsubmit" value="Search" />
	</form>
			
			<nav id="access" role="navigation">
				<h3 class="assistive-text">Main menu</h3>
								<div class="skip-link"><a class="assistive-text" href="#content" title="Skip to primary content">Skip to primary content</a></div>
				<div class="skip-link"><a class="assistive-text" href="#secondary" title="Skip to secondary content">Skip to secondary content</a></div>
								<div class="menu"><ul><li ><a href="https://poizan.dk/blog/">Home</a></li></ul></div>
			</nav><!-- #access -->
	</header><!-- #branding -->


	<div id="main">

		<div id="primary">
			<div id="content" role="main">

				
					<nav id="nav-single">
						<h3 class="assistive-text">Post navigation</h3>
						<span class="nav-previous"><a href="https://poizan.dk/blog/2012/07/23/reading-raw-attribute-constructor-data/" rel="prev"><span class="meta-nav">&larr;</span> Previous</a></span>
						<span class="nav-next"><a href="https://poizan.dk/blog/2013/11/30/fixing-the-disappearing-store-bug-in-wasteland-1/" rel="next">Next <span class="meta-nav">&rarr;</span></a></span>
					</nav><!-- #nav-single -->

					
<article id="post-89" class="post-89 post type-post status-publish format-standard hentry category-low-level category-programming category-reverse-engineering">
	<header class="entry-header">
		<h1 class="entry-title">Fixing frequent freezing of Wasteland 1 when using mouse</h1>

				<div class="entry-meta">
			<span class="sep">Posted on </span><a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/" title="06:11" rel="bookmark"><time class="entry-date" datetime="2013-11-27T06:11:27+00:00">November 27, 2013</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="https://poizan.dk/blog/author/admin/" title="View all posts by Kasper Brandt" rel="author">Kasper Brandt</a></span></span>		</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

	<div class="entry-content">
		<p><b style="color: red">UPDATE:</b> According to inXile this fix will probably be incorporated into the next patch.</p>
<p><b style="color: red">UPDATE2:</b> This has been incorporated into patch 2.</p>
<p>Wasteland (the original) has a problem where it randomly freezes after playing for some time.<br />
<a href="http://wasteland.inxile-entertainment.com/forum/viewtopic.php?f=33&amp;t=4791">From the known issues FAQ</a>:</p>
<blockquote><p>The game freeze frequently.<br />
o This is a heritage issue which may be circumvented by using only the keyboard to control the game.</p></blockquote>
<p>Also:</p>
<blockquote><p>In general, fixing legacy issues is a quasi-impossibility as the original is not buildable.</p></blockquote>
<p>I&#039;m not completely sure about what they mean by &#034;not buildable&#034;, but frankly I would rather that inXile focus on T:ToN and Wasteland 2 than wasting resources on fixing legacy code from 25 years ago. However nothing prevents me from &#034;wasting&#034; resources on fixing 25 year old dos games. So I took it upon myself to localize and fix the issue.</p>
<p>The short version is this: find rom\DATA\WLA.BIN in your steamapps/GoG folder and open it in your favourite hex editor, go to offset 0E5E where it says &#034;77 1F&#034; and replace with &#034;EB 1F&#034;. The long version below explains how I figured this out, and probably requires a good understanding of x86 assembler and the PC platform to read.<br />
<span id="more-89"></span></p>
<p>The first step was to get a useful build and debugging environment up and running. So I downloaded <a href="https://s3.amazonaws.com/inxile-wasteland/dosbox-0.74-WastelandEXT.zip">inXile&#039;s modified DOSBox.</a> To build that you need:</p>
<ul>
<li>zlib</li>
<li>libpng</li>
<li>libogg</li>
<li>libvorbis+libvorbisfile</li>
<li>SDL 1.2</li>
<li>libcurses (use standard PDCurses on windows &#8211; win32a won&#039;t work with DOSBox out of the box)</li>
</ul>
<p>You will need to change the library and include search paths if you are going to build it on windows with Visual Studio.</p>
<p>DOSBox has a build in debugger that can be activated at build time which is very useful for debugging dos applications. <a href="http://www.vogons.org/viewtopic.php?t=3944">This forum post</a> from VOGONS explains how to activate and use it. I made a build with heavy debugging enabled which  has some nifty features, though it slows down DOSBox tremendously. The modified DOSBox expects to see the game files inside a &#034;rom&#034; directory like under the steamapps folder, so copy the neccessary game files over to wherever you are running it from.</p>
<p>So now to actually analyze the executable. I found <a href="http://wasteland.wikispaces.com/Files">this wiki</a> with some useful information about the different files. Especially important is that WLA.BIN is overlaid from address zero of the code segment (it is overlaid over the start of the code segment of WL.EXE). Also WL.EXE has been packed with LINK /EXEPACK. Luckily <a href="http://sourceforge.net/p/openkb/code/ci/master/tree/src/tools/unexepack.c">unpackers exists</a>, though in the end I didn&#039;t actually have any use for unpacking it.</p>
<p>What I ended up doing was playing Wasteland with a debugger attached to DOSBox. This turned out to be quite useful as information about the internal state of the emulated hardware isn&#039;t easily accessible using the DOSBox debugger. So i played the game until it froze. Then I activated the DOSBox debugger (actually I couldn&#039;t get the Alt+Pause combination working so I ended up using my Visual Studio debugger to pretend a breakpoint was hit by returning true in DEBUG_HeavyIsBreakpoint() in debug.c).</p>
<p>After getting the DOSBox debugger to break into the frozen Wasteland I could use the MEMDUMP command to dump all the memory (1MB from 0000:0000), and some sed / xxd magic to turn the generated text file into a binary file. I could then load that dump into IDA and begin setting up segments.</p>
<p>DOSBox with heavy debugging enabled has the useful LOG command which dumps a complete trace of executed instructions and registers. Dumping 10000 instructions to figure out why the game was stuck gave me this pattern:</p>
<pre class="codesnip-container" style="white-space: pre">01A6:00000E78  jns  00000E7A ($+0)             (down)                 EAX:0000167C EBX:000024E2 ECX:00003E80 EDX:00000E66 ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:0
01A6:00000E7A  cmp  ax,cx                                             EAX:0000167C EBX:000024E2 ECX:00003E80 EDX:00000E66 ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:0 IF:0
01A6:00000E7C  jc   00000E6C ($-12)            (up)                   EAX:0000167C EBX:000024E2 ECX:00003E80 EDX:00000E66 ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:1 ZF:0 SF:1 OF:0 AF:0 PF:1 IF:0
01A6:00000E6C  in   al,40                                             EAX:0000167C EBX:000024E2 ECX:00003E80 EDX:00000E66 ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:1 ZF:0 SF:1 OF:0 AF:0 PF:1 IF:0
01A6:00000E6E  mov  dl,al                                             EAX:000016FE EBX:000024E2 ECX:00003E80 EDX:00000E66 ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:1 ZF:0 SF:1 OF:0 AF:0 PF:1 IF:0
01A6:00000E70  in   al,40                                             EAX:000016FE EBX:000024E2 ECX:00003E80 EDX:00000EFE ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:1 ZF:0 SF:1 OF:0 AF:0 PF:1 IF:0
01A6:00000E72  mov  dh,al                                             EAX:00001607 EBX:000024E2 ECX:00003E80 EDX:00000EFE ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:1 ZF:0 SF:1 OF:0 AF:0 PF:1 IF:0
01A6:00000E74  mov  ax,bx                                             EAX:00001607 EBX:000024E2 ECX:00003E80 EDX:000007FE ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:1 ZF:0 SF:1 OF:0 AF:0 PF:1 IF:0
01A6:00000E76  sub  ax,dx                                             EAX:000024E2 EBX:000024E2 ECX:00003E80 EDX:000007FE ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:1 ZF:0 SF:1 OF:0 AF:0 PF:1 IF:0
01A6:00000E78  jns  00000E7A ($+0)             (down)                 EAX:00001CE4 EBX:000024E2 ECX:00003E80 EDX:000007FE ESI:00000002 EDI:0000CAFF EBP:00000000 ESP:000001E0 DS:0E88 ES:A000 FS:0000 GS:0000 SS:2AA6 CF:0 ZF:0 SF:0 OF:0 AF:1 PF:1 IF:0</pre>
<p>And kept going like that. Especially EDX kept counting down to zero and then restarting from around 0x24DE &#8211; namely slightly lower than the value of EBX of 0x24E2. The address being read from in the in statements &#8211; 0&#120;40 &#8211; is the address of <a href="http://en.wikipedia.org/wiki/Programmable_interval_timer">Programmable Interval Timer</a> 0. Wikipedia has more information about how it works <a href="http://en.wikipedia.org/wiki/Intel_8253">here</a>. Using the Visual Studio debugger to dump the state of the timer (pit[0] from timer.cpp) it turned out to be running in mode 3 &#8211; &#034;Square Wave Generator&#034; mode &#8211; with a loaded counter value of 0x24E3. The important thing here is that it counted down from 0x24E3 to zero and then restarted. To get past the jc (/jb) jump at 01A6:0E7C it would have to end up with ebx &#8211; timer0 &gt;= 0x3E80 which would require timer0 &gt; 0x24E2. I&#039;m not sure about the behaviour on PC platforms in general, but in DOSBox this is actually impossible as the counter value is rounded down to nearest even value when the timer is configured in Square Wave Generator mode. For slightly smaller values in ebx it may run forever or for a very long time depending on the cycle length of the loop relative to the cycle time of the timer on a particular machine / emulator.</p>
<p>The actual code in question turns out to be the function that draws the cursor. Here is the annotated assembler from IDA after some digging around and figuring out what the global variables were:</p>
<pre class="codesnip-container" style="white-space: pre; color: blue; background: white;"><span style="color: black;">code1:0E45 </span><span style="color: gray;">; =============== S U B R O U T I N E =======================================
</span><span style="color: black;">code1:0E45
code1:0E45
code1:0E45 </span>drawCursor proc near <span style="color: green;">; CODE XREF: j_drawCursorj
</span><span style="color: black;">code1:0E45 </span><span style="color: navy;">cmp </span>mouseEnabled<span style="color: navy;">, </span><span style="color: #ff8000;">0
</span><span style="color: black;">code1:0E4A </span><span style="color: navy;">jz short </span><span style="color: gray;">end_clean
</span><span style="color: black;">code1:0E4C </span><span style="color: navy;">mov dx, </span><span style="color: #ff8000;">3DAh </span>; dx is the CGA/VGA Input Status #1 Register
<span style="color: black;">code1:0E4F
code1:0E4F </span><span style="color: gray;">waitForVSync</span><span style="color: navy;">: </span><span style="color: green;">; CODE XREF: drawCursor+Dj
</span><span style="color: black;">code1:0E4F </span><span style="color: navy;">in al, dx </span>; Video status bits:
<span style="color: black;">code1:0E4F </span>; 0: retrace. 1=display is in vert or horiz retrace.
<span style="color: black;">code1:0E4F </span>; 1: 1=light pen is triggered; 0=armed
<span style="color: black;">code1:0E4F </span>; 2: 1=light pen switch is open; 0=closed
<span style="color: black;">code1:0E4F </span>; 3: 1=vertical sync pulse is occurring.
<span style="color: black;">code1:0E50 </span><span style="color: navy;">and al, </span><span style="color: green;">8
</span><span style="color: black;">code1:0E52 </span><span style="color: navy;">jz short </span><span style="color: gray;">waitForVSync
</span><span style="color: black;">code1:0E54 </span><span style="color: navy;">mov al, </span><span style="color: #ff8000;">0
</span><span style="color: black;">code1:0E56 </span><span style="color: navy;">call </span>NI_updatePalette ; Dummied stub?
<span style="color: black;">code1:0E59
code1:0E59 </span><span style="color: navy;">loc_28B9: </span><span style="color: #8080ff;">; DATA XREF: stack:01DEo
</span><span style="color: black;">code1:0E59 </span><span style="color: navy;">cmp </span>mouseRow<span style="color: navy;">, </span><span style="color: green;">50
</span><span style="color: black;">code1:0E5E </span><span style="color: navy;">ja short </span><span style="color: gray;">after_wait </span>; wait if mouseRow &lt;= 50
<span style="color: black;">code1:0E60 </span><span style="color: navy;">cli
</span><span style="color: black;">code1:0E61 </span><span style="color: navy;">mov cx, </span><span style="color: #ff8000;">3E80h
</span><span style="color: black;">code1:0E64 </span>; So after a VSync we wait for - something...?
<span style="color: black;">code1:0E64 </span>; Timer 0 is configured in mode 3: Square Wave Generator
<span style="color: black;">code1:0E64 </span>; read/write state: 2xRead/2xWrite bits 0..7 then 8..15 of counter value
<span style="color: black;">code1:0E64 </span>; counter = 0x24E3
<span style="color: black;">code1:0E64 </span>; Read counter value into bx
<span style="color: black;">code1:0E64 </span><span style="color: navy;">in al, </span><span style="color: green;">40h </span>; Timer 8253-5 (AT: 8254.2).
<span style="color: black;">code1:0E66 </span><span style="color: navy;">mov bl, al
</span><span style="color: black;">code1:0E68 </span><span style="color: navy;">in al, </span><span style="color: green;">40h </span>; Timer 8253-5 (AT: 8254.2).
<span style="color: black;">code1:0E6A </span><span style="color: navy;">mov bh, al
</span><span style="color: black;">code1:0E6C </span>; Read timer into dx
<span style="color: black;">code1:0E6C
code1:0E6C </span><span style="color: navy;">loc_28CC: </span><span style="color: green;">; CODE XREF: drawCursor+37j
</span><span style="color: black;">code1:0E6C </span><span style="color: navy;">in al, </span><span style="color: green;">40h </span>; Timer 8253-5 (AT: 8254.2).
<span style="color: black;">code1:0E6C </span>; STUCK HERE!! (01A6:00000E6C)
<span style="color: black;">code1:0E6E </span><span style="color: navy;">mov dl, al
</span><span style="color: black;">code1:0E70 </span><span style="color: navy;">in al, </span><span style="color: green;">40h </span>; Timer 8253-5 (AT: 8254.2).
<span style="color: black;">code1:0E72 </span><span style="color: navy;">mov dh, al
</span><span style="color: black;">code1:0E74 </span><span style="color: navy;">mov ax, bx
</span><span style="color: black;">code1:0E76 </span><span style="color: navy;">sub ax, dx </span>; ax = starttime (bx) - nowtime (dx)
<span style="color: black;">code1:0E78 </span><span style="color: navy;">jns short $+</span><span style="color: green;">2 </span>; huh? wierd nop??
<span style="color: black;">code1:0E7A </span><span style="color: navy;">cmp ax, cx
</span><span style="color: black;">code1:0E7C </span><span style="color: navy;">jb short loc_28CC </span>; LOOPS BACK if unsigned(starttime - nowtime) &lt; 0x3E80
<span style="color: black;">code1:0E7E </span><span style="color: navy;">sti
</span><span style="color: black;">code1:0E7F
code1:0E7F </span><span style="color: gray;">after_wait</span><span style="color: navy;">: </span><span style="color: green;">; CODE XREF: drawCursor+19j
</span><span style="color: black;">code1:0E7F </span><span style="c_olor: navy;">mov al, </span><span style="color: #ff8000;">4
</span><span style="color: black;">code1:0E81 </span><span style="color: navy;">call </span>NI_updatePalette
<span style="color: black;">code1:0E84 </span><span style="color: navy;">call sub_2862
</span><span style="color: black;">code1:0E87 </span><span style="color: navy;">call sub_27AD
</span><span style="color: black;">code1:0E8A </span><span style="color: navy;">mov al, </span><span style="color: #ff8000;">3
</span><span style="color: black;">code1:0E8C </span><span style="color: navy;">call </span>NI_updatePalette
<span style="color: black;">code1:0E8F
code1:0E8F </span><span style="color: gray;">end_clean</span><span style="color: navy;">: </span><span style="color: green;">; CODE XREF: drawCursor+5j
</span><span style="color: black;">code1:0E8F </span><span style="color: navy;">xor bx, bx
</span><span style="color: black;">code1:0E91 </span><span style="color: navy;">xor dx, dx
</span><span style="color: black;">code1:0E93 </span><span style="color: navy;">mov word_1764B, </span><span style="color: #ff8000;">1
</span><span style="color: black;">code1:0E99 </span><span style="color: navy;">retn
</span><span style="color: black;">code1:0E99 </span>drawCursor endp</pre>
<p>This has some interesting peculiarities. This is part of the WLA.BIN file which seems to have been hand crafted in assembly &#8211; it definitely contains some constructs that I doubt any compiler would ever create as well as some dead code lying around. The function NI_updatePalette is an example of the latter &#8211; it only consists of a retn instruction but is followed by some seemingly unreferenced and vestigial code.</p>
<p>Another thing to note is &#034;jns short $+2&#034;. If ax-dx &gt;= 0 then it just continues to the next instruction. Otherwise it &#8211; well &#8211; &#034;jumps&#034; to the next instruction (the instruction is 2 bytes long). That is; it does absolutely nothing. My guess is that it should probably have been something else, but it&#039;s not entirely clear what. The whole logic of this function seems to be kinda broken as we saw before. Here in pseudo c:</p>
<div class="codesnip-container" >
<div class="c codesnip" style="font-family:monospace;"><span class="kw4">void</span> drawCursor<span class="br0">&#40;</span><span class="br0">&#41;</span><br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">!</span>mouseEnabled<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $bx <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $dx <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; word_1764B <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">return</span><span class="sy0">;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">!</span><span class="br0">&#40;</span>CgaInputStatus1<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&amp;</span> CGA_VSYNC<span class="br0">&#41;</span><span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Wait for VSync</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>mouseRow <span class="sy0">&lt;=</span> 50<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cli<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Timer 0 is initialized to mode 3: Square Wave Generator with count from 0x24E3</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Latch mode is 2xRead/2xWrite</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">const</span> <span class="kw4">unsigned</span> <span class="kw4">int</span> waitTime <span class="sy0">=</span> <span class="nu12">0x3E80</span><span class="sy0">;</span> <span class="co1">//$cx</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw4">unsigned</span> <span class="kw4">int</span> startTime <span class="sy0">=</span> GetTimer0<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//$bx</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">while</span> <span class="br0">&#40;</span>startTime <span class="sy0">-</span> GetTimer0<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&lt;</span> waitTime<span class="br0">&#41;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Wait&#8230;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sti<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; sub_2862<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">// Writes something to video ram</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; sub_27AD<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">// Also writes something to video ram</span><br />
<span class="br0">&#125;</span></div>
</div>
<p>I haven&#039;t investigated the last two functions but from a cursory glance they checks graphics status and do the actual writing to the video ram. The important part here is the &#034;Wait&#8230;&#034; loop. It only triggers when the mouse is within the top 50 pixels of the screen. The point is probably to avoid writing the mouse cursor to video ram while the cathode ray is displaying those pixles to avoid screen flicker. However the logic is obviously broken. The comparision to 0x3E80 (which is 16000 in decimal) seems completely non-sensical. As the timer counts down from 9443 (0x24e3) we will always have<br />
<img src='https://poizan.dk/blog/wp-content/latex/653/65316e67ef97500ee11d72132b47e520-ffffff-000000-0.png' alt='  -9443 \leq \text{startTime} - \text{GetTimer0}() \leq 9443.  ' title='  -9443 \leq \text{startTime} - \text{GetTimer0}() \leq 9443.  ' class='latex' /><br />
Furthermore the comparision is unsigned, so to break out of the loop we must have for positive difference<br />
<img src='https://poizan.dk/blog/wp-content/latex/b02/b023eed1ecaf0e308b52ed512dfbe09c-ffffff-000000-0.png' alt='  \text{startTime} - \text{GetTimer0}() \geq 16000  ' title='  \text{startTime} - \text{GetTimer0}() \geq 16000  ' class='latex' /><br />
or for negative difference<br />
<img src='https://poizan.dk/blog/wp-content/latex/3bb/3bb39f9e028fd8fedd6c7b5303603f47-ffffff-000000-0.png' alt='  2^{16} + (\text{startTime} - \text{GetTimer0}()) \geq 16000.  ' title='  2^{16} + (\text{startTime} - \text{GetTimer0}()) \geq 16000.  ' class='latex' /><br />
But as 65536 &#8211; 9443 = 56093 &gt; 16000 we have that the first case is always false and the second is always true, so the loop might just as well have been</p>
<div class="codesnip-container" >
<div class="c codesnip" style="font-family:monospace;"><span class="kw1">while</span> <span class="br0">&#40;</span>startTime <span class="sy0">&lt;=</span> GetTimer0<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><br />
<span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">//Wait&#8230;</span><br />
<span class="br0">&#125;</span></div>
</div>
<p>Considering that the loop never worked (at least the time waited varies widely depending on the value of the timer when the function is called) it doesn&#039;t seems like it would harm to just deactivate it. Also I&#039;m not even sure how far DOSBox goes towards actually emulating a cathode ray (though I&#039;ve heard of a few games that actually did things like changing the palette in the middle of writing a frame to get more available colors), so it may actually be immune to flicker caused by that.</p>
<p>So the fix I propose is to simply replace the conditional jump at code1:0E5E with an uncoditional one which is just changing the single byte opcode 0&#120;77 into 0xEB. As I mentioned before that address is within WLA.BIN, so it can even be done without having to repack WL.EXE</p>
			</div><!-- .entry-content -->

	<footer class="entry-meta">
		This entry was posted in <a href="https://poizan.dk/blog/category/programming/low-level/" title="View all posts in Low level" rel="category tag">Low level</a>, <a href="https://poizan.dk/blog/category/programming/" title="View all posts in Programming" rel="category tag">Programming</a>, <a href="https://poizan.dk/blog/category/reverse-engineering/" title="View all posts in Reverse Engineering" rel="category tag">Reverse Engineering</a> by <a href="https://poizan.dk/blog/author/admin/">Kasper Brandt</a>. Bookmark the <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/" title="Permalink to Fixing frequent freezing of Wasteland 1 when using mouse" rel="bookmark">permalink</a>.		
			</footer><!-- .entry-meta -->
</article><!-- #post-89 -->

						<div id="comments">
	
	
			<h2 id="comments-title">
			13 thoughts on &ldquo;<span>Fixing frequent freezing of Wasteland 1 when using mouse</span>&rdquo;		</h2>

		
		<ol class="commentlist">
				<li class="comment even thread-even depth-1" id="li-comment-199">
		<article id="comment-199" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/744c2d7d23b3b16dda432a16a1f98c05?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">gandolf</span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-199"><time datetime="2013-11-28T02:10:35+00:00">November 28, 2013 at 02:10</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Love posts like this, great stuff, great write-up.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-201">
		<article id="comment-201" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/7716c8eed0fe70fedc3c3cb1043b7e98?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://www.templeos.org' rel='external nofollow' class='url'>Terry A. Davis</a></span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-201"><time datetime="2013-11-28T14:56:06+00:00">November 28, 2013 at 14:56</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Does DOSBox run in real-mode?  I have an operating system launched from real-mode DOS that wants permission to change from real mode to pertected mode.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-202">
		<article id="comment-202" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/dc7e8ed8bea5b05435f6eed75cc92f7c?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://dashwinterson.com' rel='external nofollow' class='url'>dash</a></span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-202"><time datetime="2013-11-28T15:41:43+00:00">November 28, 2013 at 15:41</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>gotta love disassemblers/debuggers! this is pretty impressive</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-203">
		<article id="comment-203" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/9357ec87e889fe820213c0861f8fa35b?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Jarrett</span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-203"><time datetime="2013-11-28T16:04:56+00:00">November 28, 2013 at 16:04</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Awesome write-up!  Very interesting to read.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-204">
		<article id="comment-204" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/eb94df15541639e462d11322f7bb7c0a?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://hotwetbrain.com' rel='external nofollow' class='url'>J Jinglehiemer</a></span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-204"><time datetime="2013-11-28T18:47:07+00:00">November 28, 2013 at 18:47</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Amazing work, so love to see people dive in and take matters in their own hands with abandoned software and hardware.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-admin bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-205">
		<article id="comment-205" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/8ea9d9a57777ff4ef77a50c64325175e?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Kasper Brandt</span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-205"><time datetime="2013-11-28T19:41:15+00:00">November 28, 2013 at 19:41</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>@Terry it starts in real-mode and emulates a PC well enough that it can run Windows 95. There is no 64 bit support though. Are you working on a 32-bit version of TempleOS now, or something else?</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-209">
		<article id="comment-209" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/e9ca5c94d610aae413e4d5e9728cfc99?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">wjp</span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-209"><time datetime="2013-11-29T01:12:27+00:00">November 29, 2013 at 01:12</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Interesting analysis. My hypothesis would be they were going for a</p>
<p>while (nowtime &lt; starttime || nowtime &#8211; starttime = 0) ax -= 16000;</p>
<p>if (ax &lt; 0) goto back;</p>
<p>which translates to asm very close to what&#039;s in WLA.BIN.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-210">
		<article id="comment-210" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/e9ca5c94d610aae413e4d5e9728cfc99?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">wjp</span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-210"><time datetime="2013-11-29T01:15:50+00:00">November 29, 2013 at 01:15</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>WordPress conveniently ate most of the code there. Attempt number two&#8230;</p>
<p>Interesting analysis. My hypothesis would be they were going for a</p>
<p>while (nowtime &lt; starttime || nowtime &#8211; starttime &lt; 16000) { }</p>
<p>In a C/asm mix you could write that expression as:</p>
<p>ax = nowtime &#8211; starttime;<br />
if (ax &gt;= 0) ax -= 16000;<br />
if (ax &lt; 0) goto back;</p>
<p>which translates to asm very close to what&#039;s in WLA.BIN.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-211">
		<article id="comment-211" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/efa204c17a0cbb81cc1bc339c491ec76?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn"><a href='http://javarevisited.blogspot.in' rel='external nofollow' class='url'>Rohit</a></span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-211"><time datetime="2013-11-29T05:40:13+00:00">November 29, 2013 at 05:40</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Indeed good work, not many are willing to spend there precious time fixing things on old softwares, big thanks from me.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-212">
		<article id="comment-212" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/d8ce36797ce90cf8ff2e371542ad1b7c?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Walton Lierne</span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-212"><time datetime="2013-11-30T03:19:06+00:00">November 30, 2013 at 03:19</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Thank you very much for spending your free time doing this. Fixed my version.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-213">
		<article id="comment-213" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/cc9da57432b29c117616e6ea923402b2?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">noop</span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-213"><time datetime="2013-11-30T23:20:07+00:00">November 30, 2013 at 23:20</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>Good work. I remember hacking a few games some years ago for various reasons.<br />
Monkey Island 1 to resolve hangup problem on newer machines , Alien Carnage to remove r200 and increase sound sampling frequency, Daggerfall to add russian font support (it used signed characters, so only 7 bit chars initially worked)…</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-admin bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-214">
		<article id="comment-214" class="comment">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<img alt='' src='https://secure.gravatar.com/avatar/8ea9d9a57777ff4ef77a50c64325175e?s=68&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D68&amp;r=G' class='avatar avatar-68 photo' height='68' width='68' /><span class="fn">Kasper Brandt</span> on <a href="https://poizan.dk/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/comment-page-1/#comment-214"><time datetime="2013-12-03T04:10:14+00:00">December 3, 2013 at 04:10</time></a> <span class="says">said:</span>
									</div><!-- .comment-author .vcard -->

				
			</footer>

			<div class="comment-content"><p>@wjp: Well that&#039;s possible, but it still wouldn&#039;t make much sense as the (signed) difference of nowtime – starttime will always be far less than 16000. It is of course possible that they had configured the timer differently at an earlier point in development and forgot to update the code.</p>
</div>

			<div class="reply">
							</div><!-- .reply -->
		</article><!-- #comment-## -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://wasteland.96.lt/wasteland-1-perleistas-su-ivairiais-atnaujinimais/' rel='external nofollow' class='url'>Wasteland 1 perleistas su įvairiais atnaujinimais | WasteLand</a></p>
	</li><!-- #comment-## -->
		</ol>

		
		
	
									<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/2013/11/27/fixing-frequent-freezing-of-wasteland-1-when-using-mouse/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="https://poizan.dk/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='89' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="b277ee261c" /></p>                <script type='text/javascript'>
                    var RecaptchaOptions = { theme : 'red', lang : 'en' , tabindex : 5 };
                </script><script type="text/javascript" src="https://www.google.com/recaptcha/api/challenge?k=6Lcs6u4SAAAAAO3mev3imQxu-6aLy4gC4-5hLKLQ"></script>

	<noscript>
  		<iframe src="https://www.google.com/recaptcha/api/noscript?k=6Lcs6u4SAAAAAO3mev3imQxu-6aLy4gC4-5hLKLQ" height="300" width="500" frameborder="0"></iframe><br/>
  		<textarea name="recaptcha_challenge_field" rows="3" cols="40"></textarea>
  		<input type="hidden" name="recaptcha_response_field" value="manual_challenge"/>
	</noscript>                        <div id="recaptcha-submit-btn-area">&nbsp;</div>
                        <noscript>
                         <style type='text/css'>#submit {display:none;}</style>
                         <input name="submit" type="submit" id="submit-alt" tabindex="6" value="Submit Comment"/> 
                        </noscript><script type='text/javascript' src='https://poizan.dk/blog/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='https://poizan.dk/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='https://poizan.dk/blog/wp-content/plugins/akismet/_inc/form.js?ver=3.0.0'></script>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="57"/></p>					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->

				
			</div><!-- #content -->
		</div><!-- #primary -->


	</div><!-- #main -->

	<footer id="colophon" role="contentinfo">

			

			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantic Personal Publishing Platform">Proudly powered by WordPress</a>
			</div>
	</footer><!-- #colophon -->
</div><!-- #page -->

                <script type="text/javascript">
                var sub = document.getElementById('submit');
                document.getElementById('recaptcha-submit-btn-area').appendChild (sub);
                document.getElementById('submit').tabIndex = 6;
                if ( typeof _recaptcha_wordpress_savedcomment != 'undefined') {
                        document.getElementById('comment').value = _recaptcha_wordpress_savedcomment;
                }
                document.getElementById('recaptcha_table').style.direction = 'ltr';
                </script>
</body>
</html>