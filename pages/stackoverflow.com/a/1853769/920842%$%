<!DOCTYPE html>
<html>
<head>
    
    <title>C++: do you (really) write exception safe code? - Stack Overflow</title>
    <link rel="shortcut icon" href="//cdn.sstatic.net/stackoverflow/img/favicon.ico?v=038622610830">
    <link rel="apple-touch-icon image_src" href="//cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png?v=fd7230a85918">
    <link rel="search" type="application/opensearchdescription+xml" title="Stack Overflow" href="/opensearch.xml">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:domain" content="stackoverflow.com"/>
    <meta name="og:type" content="website" />
    <meta name="og:image" content="http://cdn.sstatic.net/stackoverflow/img/apple-touch-icon@2.png?v=fde65a5a78c6"/>
    <meta name="og:title" content="C++: do you (really) write exception safe code?" />
    <meta name="og:description" content="Exception handling (EH) seems to be the current standard, and by searching the web, I can not find any novel ideas or methods that try to improve or replace it (well, some variations exist, but not..." />
    <meta name="og:url" content="http://stackoverflow.com/questions/1853243/c-do-you-really-write-exception-safe-code"/>
    <link rel="canonical" href="http://stackoverflow.com/questions/1853243/c-do-you-really-write-exception-safe-code" />

    
    
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
    <script src="//cdn.sstatic.net/Js/stub.en.js?v=d142d951ee55"></script>
    <link rel="stylesheet" type="text/css" href="//cdn.sstatic.net/stackoverflow/all.css?v=dc5a5d7ef830">
    
    <script>
        
        StackExchange.ready(function () {
            StackExchange.using("postValidation", function () {
                StackExchange.postValidation.initOnBlurAndSubmit($('#post-form'), 2, 'answer');
            });

            
            StackExchange.question.init({showAnswerHelp:true,totalCommentCount:10,shownCommentCount:5,highlightColor:'#F4A83D',backgroundColor:'#FFF',questionId:1853243});

            styleCode();

                StackExchange.realtime.subscribeToQuestion('1', '1853243');
            
                    });
    </script>


    <script>
        StackExchange.init({"locale":"en","stackAuthUrl":"https://stackauth.com","serverTime":1404248418,"networkMetaHostname":"meta.stackexchange.com","styleCode":true,"enableUserHovercards":true,"site":{"name":"Stack Overflow","description":"Q&A for professional and enthusiast programmers","isNoticesTabEnabled":true,"recaptchaPublicKey":"6LdchgIAAAAAAJwGpIzRQSOFaO0pU6s44Xt8aTwc","recaptchaAudioLang":"en","enableNewTagCreationWarning":true,"nonAsciiTags":true,"enableSocialMediaInSharePopup":true},"user":{"fkey":"8c6b727b7d57e168eb0f1d8a05eba522","isAnonymous":true}});
        StackExchange.using.setCacheBreakers({"js/prettify-full.en.js":"12ef2711e474","js/moderator.en.js":"e2c6bab58c56","js/full-anon.en.js":"a66b4586d8f3","js/full.en.js":"d43401f72f80","js/wmd.en.js":"d25c057c3f48","js/third-party/jquery.autocomplete.min.js":"e5f01e97f7c3","js/third-party/jquery.autocomplete.min.en.js":"","js/mobile.en.js":"5f0b5c72eaa8","js/help.en.js":"43b6b771d4d9","js/tageditor.en.js":"afabf8d8de91","js/tageditornew.en.js":"140e973e4037","js/inline-tag-editing.en.js":"21223186b436","js/revisions.en.js":"989c474e85a9","js/review.en.js":"c261687765b3","js/tagsuggestions.en.js":"bb4721d888d2","js/post-validation.en.js":"62fe2d3d1730","js/explore-qlist.en.js":"8b8b631bd679","js/events.en.js":"7263182fd2c2"});
        StackExchange.using("gps", function() {
             StackExchange.gps.init(true);
        });
    </script>
    
        <script>
            StackExchange.ready(function () {
                $('#nav-tour').click(function () {
                    StackExchange.using("gps", function() {
                        StackExchange.gps.track("aboutpage.click", { aboutclick_location: "headermain" }, true);
                    });
                });
            });
        </script>
</head>
<body class="question-page new-topbar">
    <noscript><div id="noscript-padding"></div></noscript>
    <div id="notify-container"></div>
    <div id="overlay-header"></div>
    <div id="custom-header"></div>
<div class="topbar">
    <div class="topbar-wrapper">
        
        <div class="js-topbar-dialog-corral">

<div class="topbar-dialog siteSwitcher-dialog dno">
    <div class="header">
        <h3><a href="//stackoverflow.com">current community</a></h3>
    </div>
    <div class="modal-content current-site-container">
        <ul class="current-site">
                <li>
                        <div class="related-links">
            <a href="http://chat.stackoverflow.com"     data-gps-track="site_switcher.click({ item_type:6 })"
>chat</a>
                    <a href="http://blog.stackoverflow.com"     data-gps-track="site_switcher.click({ item_type:7 })"
>blog</a>
            </div>




    <a href="//stackoverflow.com"
       class="current-site-link site-link js-gps-track"
       data-id="1"
       data-gps-track="
        site_switcher.click({ item_type:3 })">
        <div class="site-icon favicon favicon-stackoverflow" title="Stack Overflow"></div>
        Stack Overflow
    </a>

                </li>
                <li class="related-site">
                        <div class="L-shaped-icon-container">
        <span class="L-shaped-icon"></span>
    </div>

                    



    <a href="http://meta.stackoverflow.com"
       class="site-link js-gps-track"
       data-id="552"
       data-gps-track="
            site.switch({ target_site:552, item_type:3 }),
        site_switcher.click({ item_type:4 })">
        <div class="site-icon favicon favicon-stackoverflowmeta" title="Meta Stack Overflow"></div>
        Meta Stack Overflow
    </a>

                </li>
                            <li class="related-site">
                        <div class="L-shaped-icon-container">
        <span class="L-shaped-icon"></span>
    </div>

                    <a class="site-link"
                       href="//careers.stackoverflow.com"
                            data-gps-track="site_switcher.click({ item_type:9 })"
>
                        <div class="site-icon favicon favicon-careers" title="Stack Overflow Careers"></div>
                        Careers 2.0
                    </a>
                </li>
        </ul>
    </div>
    
    <div class="header" id="your-communities-header">
        <h3>
your communities        </h3>
            
    </div>
    <div class="modal-content" id="your-communities-section">
            
            <div class="call-to-login">
                        <a href="https://stackoverflow.com/users/signup?returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f1853243%2fc-do-you-really-write-exception-safe-code%2f1853769" class="js-gps-track"     data-gps-track="site_switcher.click({ item_type:10 })"
>Sign up</a>
                    or
                    <a href="https://stackoverflow.com/users/login?returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f1853243%2fc-do-you-really-write-exception-safe-code%2f1853769" class="js-gps-track"     data-gps-track="site_switcher.click({ item_type:11 })"
>log in</a>

                    to customize your list.
            </div>
    </div>
    
    <div class="header">
        <h3><a href="//stackexchange.com/sites">more stack exchange communities</a></h3>
    </div>
    <div class="modal-content">
            <div class="child-content"></div>
    </div>
</div>
        </div>

        <div class="network-items">
            
            <a href="//stackexchange.com" 
               class="topbar-icon icon-site-switcher yes-hover js-site-switcher-button js-gps-track"
               data-gps-track="site_switcher.show"
               title="A list of all 128 Stack Exchange sites">
                <span class="hidden-text">Stack Exchange</span>
            </a>
            
        </div>

        <div class="topbar-links">
            
                <div class="links-container">
                    <span class="topbar-menu-links">
                            <a href="https://stackoverflow.com/users/signup?returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f1853243%2fc-do-you-really-write-exception-safe-code%2f1853769" class="login-link">sign up</a>
                            <a href="https://stackoverflow.com/users/login?returnurl=http%3a%2f%2fstackoverflow.com%2fquestions%2f1853243%2fc-do-you-really-write-exception-safe-code%2f1853769" class="login-link">log in</a>
                            <a href="/tour">tour</a>

                            <a href="#" class="icon-help js-help-button" title="Help Center and other resources">
        help
        <span class="triangle"></span>
    </a>
    <div class="topbar-dialog help-dialog js-help-dialog dno">
        <div class="modal-content">
            <ul>
                                    <li>
                        <a href="/tour"     class="js-gps-track" data-gps-track="help_popup.click({ item_type:1 })"
>
                            Tour
                            <span class="item-summary">
                                Start here for a quick overview of the site
                            </span>
                        </a>
                    </li>
                <li>
                    <a href="/help"     class="js-gps-track" data-gps-track="help_popup.click({ item_type:4 })"
>
                        Help Center
                        <span class="item-summary">
                            Detailed answers to any questions you might have
                        </span>
                    </a>
                </li>
                    <li>
                        <a href="//meta.stackoverflow.com"     class="js-gps-track" data-gps-track="help_popup.click({ item_type:2 })"
>
                            Meta
                            <span class="item-summary">
                                Discuss the workings and policies of this site
                            </span>
                        </a>
                    </li>
            </ul>
        </div>
    </div>

                            <a href="//careers.stackoverflow.com">careers 2.0</a>
                    </span>
                </div>

			<div class="search-container">
                <form id="search" action="/search" method="get" autocomplete="off">
                    <input name="q" type="text" placeholder="search" value="" tabindex="1" autocomplete="off" maxlength="240" />
                </form>
			</div>
            	
        </div>      
    </div> 
</div>
<script>
    StackExchange.ready(function () { StackExchange.topbar.init(); });
</script>
    <div class="container">
        <div id="header" class=headeranon>
            <br class="cbt">
            <div id="hlogo">
                <a href="/">
                    Stack Overflow
                </a>
            </div>
            <div id="hmenus">
                <div class="nav mainnavs mainnavsanon">
                    <ul>
                        <li class="youarehere"><a id="nav-questions" href="/questions">Questions</a></li>
                        <li><a id="nav-tags" href="/tags">Tags</a></li>
                        <li><a id="nav-users" href="/users">Users</a></li>
                        <li><a id="nav-badges" href="/help/badges">Badges</a></li>
                        <li><a id="nav-unanswered" href="/unanswered">Unanswered</a></li>
                    </ul>
                </div>
                <div class="nav askquestion">
                    <ul>
                        <li>
                            <a id="nav-askquestion"  href="/questions/ask">Ask Question</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        



        <div id="content">
            

<div itemscope itemtype="http://schema.org/Article">
	<link itemprop="image" href="//cdn.sstatic.net/stackoverflow/img/apple-touch-icon.png">
			<!--googleoff: all-->

<div id="herobox-mini">
    <div id="hero-content">
        <span id="controls">
            <a href="/tour" id="tell-me-more" class="button">Take the 2-minute tour</a>
            <span id="close"><a title="click to dismiss">&times;</a></span>
        </span>
        <div id="blurb">
            Stack Overflow is a question and answer site for professional and enthusiast programmers. It&#39;s 100% free, no registration required.
        </div>        
    </div>
    <script>
        $('#tell-me-more').click(function () {
            var clickSource = $("body").attr("class") + '-mini';
            if ($("body").hasClass("questions-page")) {
                clickSource = 'questionpagemini';
            } else if ($("body").hasClass("question-page")) {
                clickSource = 'questionpagemini';
            } else if ($("body").hasClass("home-page")) {
                clickSource = 'homepagemini';
            }

            StackExchange.using("gps", function () {
                StackExchange.gps.track("aboutpage.click", { aboutclick_location: clickSource } , true);
            });
        });
        $('#herobox-mini #close').click(function () {
            StackExchange.using("gps", function () {
                StackExchange.gps.track("hero.action", { hero_action_type: "close" }, true);
            });
            $.cookie("hero", "none", { path: "/" });
            var $hero = $("#herobox-mini");
            $hero.slideUp('fast', function () { $hero.remove(); });
            return false;
        });
    </script>
</div>
			<!--googleon: all-->
			<div id="question-header">
			<h1 itemprop="name"><a href="/questions/1853243/c-do-you-really-write-exception-safe-code" class="question-hyperlink">C++: do you (really) write exception safe code? [closed]</a></h1>
		</div>
			<div id="mainbar">

			

<div class="question" data-questionid="1853243"  id="question">

    <script>
                var ados = ados || {};ados.run = ados.run || [];
                ados.run.push(function() { ados_add_placement(22,8277,"adzerk2140770083",4).setZone(43) ; });                    
            </script>
            <div class="everyonelovesstackoverflow" id="adzerk2140770083">
            </div>    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853243">
    <a class="vote-up-off" title="This question shows research effort; it is useful and clear">up vote</a>
    <span class="vote-count-post ">179</span>
    <a class="vote-down-off" title="This question does not show any research effort; it is unclear or not useful">down vote</a>
    
    <a class="star-off" href="#" title="This is a favorite question (click again to undo)">favorite</a>
    <div class="favoritecount"><b>259</b></div>   

</div>

            </td>
            
<td class="postcell">
<div>
    <div class="post-text" itemprop="description">

        <p>Exception handling (EH) seems to be the current standard, and by searching the web, I can not find any novel ideas or methods that try to improve or replace it (well, some variations exist, but nothing novel).</p>

<p>Though most people seem to ignore it or just accept it, EH <strong>has</strong> some huge drawbacks: exceptions are invisible to the code and it creates many, many possible exit points. Joel on software wrote an <a href="http://www.joelonsoftware.com/items/2003/10/13.html">article about it</a>. The comparison to <code>goto</code> fits perfect, it made me think again about EH.</p>

<p>I try to avoid EH and just use return values, callbacks or whatever fits the purpose. But <strong>when you have to write reliable code, you just can't ignore EH these days</strong>: It starts with the <code>new</code>, which may throw an exception, instead of just returning 0 (like in the old days). This makes about any line of C++ code <em>vulnerable</em> to an exception. And then more places in the C++ foundational code throw exceptions... std lib does it, and so on.</p>

<p>This feels like <strong>walking on shaky grounds</strong>.. So, now we are forced to take care about exceptions!</p>

<p>But its hard, its really hard. You have to learn to write exception safe code, and even if you have some experience with it, it will still be required to double check any single line of code to be safe! Or you start to put try/catch blocks everywhere, which clutters the code until it reaches a state of unreadability.</p>

<p>EH replaced the old clean deterministical approach (return values..), which had just a few but understandable and easily solveable drawbacks with an approach that creates many possible exit points in your code, and if you start writing code that catches exceptions (what you are forced to do at some point), then it even creates a multitude of paths through your code (code in the catch blocks, think about a server program where you need logging facilities other than std::cerr ..). EH has advantages, but that's not the point.</p>

<p>My actual questions:</p>

<ul>
<li>Do you really write exception safe code?</li>
<li>Are you sure your last "production ready" code is exception safe?</li>
<li>Can you even be sure, that it is?</li>
<li>Do you know and/or actually use alternatives that work?</li>
</ul>

<p>Pro EH arguments like "but its just in exceptional cases" or "usually you will just exit the application anyway" or "do not use exceptions for anything other than exceptional cases" or "do not use them to change program flow" will be ignored or even down-voted ;-)</p>

<p><strong>EDIT</strong>: replaced "SEH" with "EH" (exception handling) to avoid confusion.</p>

<p><strong>EDIT 2</strong>: Also, please don't write answers like "it worked for XX number of years...". This doesn't help, and its not the point. Newton's laws also worked and are still valid, though we know that they may not be the right thing.</p>

<p><strong>EDIT 3</strong>: I'd like to add another question: Who invented the "throw/try/catch exception handling" kind of error handling, and when and for which language? Any sources known?</p>

    </div>
    <div class="post-taglist">
        <a href="/questions/tagged/c%2b%2b" class="post-tag" title="show questions tagged &#39;c++&#39;" rel="tag">c++</a> <a href="/questions/tagged/exception-handling" class="post-tag" title="show questions tagged &#39;exception-handling&#39;" rel="tag">exception-handling</a> 
    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/q/1853243" title="short permalink to this question" class="short-link" id="link-post-1853243">share</a><span class="lsep">|</span><a href="/posts/1853243/edit" class="suggest-edit-post" title="">improve this question</a></div>        
    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="/posts/1853243/revisions" title="show all edits to this post">edited <span title="2011-11-06 21:52:23Z" class="relativetime">Nov 6 '11 at 21:52</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
    <td class="post-signature">
        <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 19:48. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853243" href="/posts/1853243/revisions" title="show revision history for this post">
        6 revs, 3 users 97%<br><a href="/users/206247">Frunsi</a>

        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</div>
</td>
        </tr>
                    <tr>
            <td class="special-status" colspan="2">
                <div class="question-status">
        <h2>                    <b>closed</b> as not constructive by <a href="/users/189205/interjay">interjay</a>, <a href="/users/314722/nicholas-wilson">Nicholas Wilson</a>, <a href="/users/5620/peter-ritchie">Peter Ritchie</a>, <a href="/users/871665/mensi">mensi</a>, <a href="/users/3834/graviton">Graviton</a> <span title="2013-04-17 08:35:49Z" class="relativetime">Apr 17 '13 at 8:35</span>
</h2>
        <p>As it currently stands, this question is not a good fit for our Q&amp;A format. We expect answers to be supported by facts, references,   or expertise, but this question will likely solicit debate, arguments, polling, or extended discussion. If you feel that this question   can be improved and possibly reopened, <a href="http://stackoverflow.com/help/reopen-questions">visit the help center</a> for guidance.<span class="close-status-suffix">If this question can be reworded to fit the rules in the <a href="/help/closed-questions">help center</a>, please <a href="/posts/1853243/edit">edit the question</a>.</span></p>
    </div>
            </td>
        </tr>
    
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853243" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="5" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-1747886" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Alright, my fault. That does not mean I am confused, let me explain: In german it is sometimes (inaccurately) called &quot;Strukturierte Ausnahmebehandlung&quot; (translates to &quot;structured exception handling&quot;) to avoid confusion with what is usually called &quot;error handling&quot;. The term &quot;exception handling&quot; on its own is not very precise, it could mean anything ;)</span>
                &ndash;&nbsp;
                    <a href="/users/206247/frunsi"
                       title="4530 reputation"
                       class="comment-user owner">Frunsi</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 20:12:29Z" class="relativetime-clean">Dec 5 '09 at 20:12</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1748080" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="hot">21</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">&quot;EH replaced the old clean deterministical approach (return values..)&quot; What? Exceptions are just as deterministic as return codes. There&#39;s nothing random about them.</span>
                &ndash;&nbsp;
                    <a href="/users/72631/rlbond"
                       title="24004 reputation"
                       class="comment-user">rlbond</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 21:06:04Z" class="relativetime-clean">Dec 5 '09 at 21:06</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1748310" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">4</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Is &quot;EH&quot; an established abbreviation for exception handling? I&#39;ve never seen it before.</span>
                &ndash;&nbsp;
                    <a href="/users/15727/thomas-padron-mccarthy"
                       title="12791 reputation"
                       class="comment-user">Thomas Padron-McCarthy</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 22:09:29Z" class="relativetime-clean">Dec 5 '09 at 22:09</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1749145" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Newton&#39;s laws are applicable today for most things.  The fact that they have predicted a very wide range of phenomena for centuries is significant.</span>
                &ndash;&nbsp;
                    <a href="/users/14148/david-thornley"
                       title="38900 reputation"
                       class="comment-user">David Thornley</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-06 04:43:06Z" class="relativetime-clean">Dec 6 '09 at 4:43</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1769754" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@frunsi: Heh, sorry for confusing you! But I think that, if anything, a strange and unexplained acronym or abbreviation will discourage people more than not.</span>
                &ndash;&nbsp;
                    <a href="/users/15727/thomas-padron-mccarthy"
                       title="12791 reputation"
                       class="comment-user">Thomas Padron-McCarthy</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-09 05:16:57Z" class="relativetime-clean">Dec 9 '09 at 5:16</span></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853243" data-rep=50 data-anon=true
			   class="comments-link " 
			   title="Use comments to ask for more information or suggest improvements. Avoid answering questions in comments." 
				>show <b>5</b> more comments</a>
    </td>
</tr>        </table>
</div>


			<div id="answers">

				<a name="tab-top"></a>
				<div id="answers-header">
					<div class="subheader answers-subheader">
						<h2>
								13 Answers
						</h2>
						<div>
							<div id="tabs">
        <a href="/questions/1853243/c-do-you-really-write-exception-safe-code?answertab=active#tab-top" title="Answers with the latest activity first">active</a>
        <a href="/questions/1853243/c-do-you-really-write-exception-safe-code?answertab=oldest#tab-top" title="Answers in the order they were provided">oldest</a>
        <a class="youarehere" href="/questions/1853243/c-do-you-really-write-exception-safe-code?answertab=votes#tab-top" title="Answers with the highest score first">votes</a>
</div>
						</div>
					</div>    
				</div>    




  
<a name="1853769"></a>
<div id="answer-1853769" class="answer accepted-answer" data-answerid="1853769" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853769">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">334</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


        <span class="vote-accepted-on load-accepted-answer-date" title="loading when this answer was accepted...">accepted</span>
</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>Your question makes an assertion, that "Writing exception safe code is very hard". I will answer your questions first, and then, answer the hidden question behind them.</p>

<h2>Answering questions</h2>

<blockquote>
  <p>Do you really write exception safe code?</p>
</blockquote>

<p>Of course I do.</p>

<p>This is <b>the</b> reason Java lost a lot of its appeal to me as a C++ programmer (lack of RAII semantics), but I am digressing: This is a C++ question.</p>

<p>It is in fact necessary when you need to work with STL or Boost code. For example, C++ threads (boost::thread or std::thread) will throw an exception to exit gracefully.</p>

<blockquote>
  <p>Are you sure your last "production ready" code is exception safe?</p>
  
  <p>Can you even be sure, that it is?</p>
</blockquote>

<p>Writing exception-safe code is like writing bug-free code.</p>

<p>You can't be 100% sure your code is exception safe. But then, you strive for it, using well known patterns, and avoiding well known anti-patterns.</p>

<blockquote>
  <p>Do you know and/or actually use alternatives that work?</p>
</blockquote>

<p>There are <em>no</em> viable alternatives in C++ (i.e. you'll need to revert back to C, and avoid C++ libraries, as well as external surprises like Windows SEH).</p>

<h2>Writing exception safe code</h2>

<p>To write exception safe code, you must know <strong>first</strong> what level of exception safety each instruction you write is.</p>

<p>For example, a <code>new</code> can throw an exception, but assigning a built-in (e.g. an int, or a pointer) won't fail. A swap will never fail (don't ever write a throwing swap), a std::list::push_back can throw...</p>

<h3>Exception guarantee</h3>

<p>The first thing to understand is that you must be able to evaluate the exception guarantee offered by all of your functions:</p>

<ol>
<li><strong>none</strong> : Your code should never offer that. This code will leak everything, and break down at the very first exception thrown.</li>
<li><strong>basic</strong> : This is the guarantee you must at the very least offer, that is, if an exception is thrown, no resources are leaked, and all objects are still whole</li>
<li><strong>strong</strong> : The processing will either succeed, or throw an exception, but if it throws, then the data will be in the same state as if the processing had not started at all (this gives a transactional power to C++)</li>
<li><strong>nothrow/nofail</strong> : The processing will succeed.</li>
</ol>

<h3>Example of code</h3>

<p>The following code seems like correct C++, but in truth, offers the "none" guarantee, and thus, it is not correct:</p>

<pre><code>void doSomething(T &amp; t)
{
   if(std::numeric_limits&lt;int&gt;::max() &gt; t.integer)  // 1.   nothrow/nofail
      t.integer += 1 ;                              // 1'.  nothrow/nofail
   X * x = new X() ;                // 2. basic : can throw with new and X constructor
   t.list.push_back(x) ;            // 3. strong : can throw
   x-&gt;doSomethingThatCanThrow() ;   // 4. basic : can throw
}
</code></pre>

<p>I write all my code with this kind of analysis in mind.</p>

<p>The lowest guarantee offered is basic, but then, the ordering of each instruction makes the whole function "none", because if 3. throws, x will leak.</p>

<p>The first thing to do would be to make the function "basic", that is putting x in a smart pointer until it is safely owned by the list:</p>

<pre><code>void doSomething(T &amp; t)
{
   if(std::numeric_limits&lt;int&gt;::max() &gt; t.integer)  // 1.   nothrow/nofail
      t.integer += 1 ;                              // 1'.  nothrow/nofail
   std::auto_ptr&lt;X&gt; x(new X()) ;    // 2.  basic : can throw with new and X constructor
   X * px = x.get() ;               // 2'. nothrow/nofail
   t.list.push_back(px) ;           // 3.  strong : can throw
   x.release() ;                    // 3'. nothrow/nofail
   px-&gt;doSomethingThatCanThrow() ;  // 4.  basic : can throw
}
</code></pre>

<p>Now, our code offers a "basic" guarantee. Nothing will leak, and all objects will be in a correct state. But we could offer more, that is, the strong guarantee. This is where it <em>can</em> become costly, and this is why <strong>not all</strong> C++ code is strong. Let's try it:</p>

<pre><code>void doSomething(T &amp; t)
{
   // we create "x"
   std::auto_ptr&lt;X&gt; x(new X()) ;    // 1. basic : can throw with new and X constructor
   X * px = x.get() ;               // 2. nothrow/nofail
   px-&gt;doSomethingThatCanThrow() ;  // 3. basic : can throw

   // we copy the original container to avoid changing it
   T t2(t) ;                        // 4. strong : can throw with T copy-constructor

   // we put "x" in the copied container
   t2.list.push_back(px) ;          // 5. strong : can throw
   x.release() ;                    // 6. nothrow/nofail
   if(std::numeric_limits&lt;int&gt;::max() &gt; t2.integer)  // 7.   nothrow/nofail
      t2.integer += 1 ;                              // 7'.  nothrow/nofail

   // we swap both containers
   t.swap(t2) ;                     // 8. nothrow/nofail
}
</code></pre>

<p>We re-ordered the operations, first creating and setting X to its right value. If any operation fails, then t is not modified, so, operation 1 to 3 can be considered "strong": If something throws, t is not modified, and X will not leak because it's owned by the smart pointer.</p>

<p>Then, we create a copy t2 of t, and work on this copy from operation 4 to 7. If something throws, t2 is modified, but then, t is still the original. We still offer the strong guarantee.</p>

<p>Then, we swap t and t2. Swap operations should be nothrow in C++, so lets hope the swap you wrote for T is nothrow (if it isn't, rewrite it so it is nothrow).</p>

<p>So, if we reach the end of the function, everything succeeded (No need of a return type) and t has its excepted value. If it fails, then t has still its original value.</p>

<p>Now, offering the strong guarantee could be quite costly, so don't strive to offer the strong guarantee to all your code, but if you can do it without a cost (and C++ inlining and other optimization could make all the code above costless), then do it. The function user will thank you for it.</p>

<h3>Conclusion</h3>

<p>It takes some habit to write exception-safe code. You'll need to evaluate the guarantee offered by each instruction you'll use, and then, you'll need to evaluate the guarantee offered by a list of instructions.</p>

<p>Of course, the C++ compiler won't back up the guarantee (in my code, I offer the guarantee as a @warning doxygen tag), which is kinda sad, but it should not stop you from trying to write exception safe code.</p>

<h3>Normal failure vs. bug</h3>

<p>How can a programmer guarantee that a nofail function will always succeed? After all, the function could have a bug.</p>

<p>This is true. The exception guarantees are supposed to be offered by bug-free code. But then, in any language, calling a function supposes the function is bug-free. No sane code protects itself against the possibility of it having a bug. Write code the best you can, and then, offer the guarantee with the supposition it is bug free. And if there is a bug, correct it.</p>

<p>Exceptions are for exceptional processing failure, not for code bugs.</p>

<h3>Last words</h3>

<p>Now, the question is "Is this worth it ?".</p>

<p>Of course it is. Having a "nothrow/nofail" function knowing that the function won't fail is a great boon. The same can be said for a "strong" function, which enables you to write code with transactional semantics, like databases, with commit/rollback features, the commit being normal execution of the code, throwing exceptions being the rollback.</p>

<p>Then, the "basic" is the very least guarantee you should offer. C++ is a very strong language there, with its scopes, enabling you to avoid any resource leaks (something a garbage collector would find it difficult to offer for database, connection or file handles).</p>

<p>So, as far as I see it, it <strong>is</strong> worth it.</p>

<h3>Edit 2010-01-29: About non-throwing swap</h3>

<p>nobar made a comment that, I believe, is quite relevant, because it is part of "how do you write exception safe code":</p>

<ul>
<li>[me] A swap will never fail (don't even write a throwing swap)</li>
<li>[nobar] This is a good recommendation for custom-written swap() functions. It should be noted, however, that std::swap() can fail based on the operations that it uses internally</li>
</ul>

<p>the default std::swap will make copies and assignments, which, for some objects, can throw. Thus, the default swap could throw, either used for your classes, or even for STL classes. As far as the C++ standard is concerned, the swap operation for vector, deque, and list won't throw, whereas it could for map if the comparison functor can throw on copy construction (See <i>The C++ Programming Language, Special Edition, appendix E, E.4.3.Swap</i>).</p>

<p>Looking at Visual C++ 2008 implementation of the vector's swap, the vector's swap won't throw if the two vectors have the same allocator (i.e., the normal case), but will make copies if they have different allocators. And thus, I assume it could throw in this last case.</p>

<p>So, the original text still holds: Don't even write a throwing swap, but nobar's comment must be remembered: Be sure the objects you're swapping have a non-throwing swap.</p>

<h3>Edit 2011-11-06: Interesting article</h3>

<p><a href="https://secure.wikimedia.org/wikipedia/en/wiki/David_Abrahams_%28computer_programmer%29">Dave Abrahams</a>, who gave us the <a href="https://secure.wikimedia.org/wikipedia/en/wiki/Exception_guarantees">basic/strong/nothrow guarantees</a>, described in an article his experience about making the STL exception safe:</p>

<p><a href="http://www.boost.org/community/exception_safety.html">http://www.boost.org/community/exception_safety.html</a></p>

<p>Look at the 7th point (Automated testing for exception-safety), where he relies on automated unit testing to make sure every case is tested. I guess this part is an excellent answer to the question author's "<i>Can you even be sure, that it is?</i>".</p>

<h3>Edit 2013-05-31: Comment from <a href="http://stackoverflow.com/users/65678/dionadar">dionadar</a></h3>

<blockquote>
  <p><code>t.integer += 1;</code> is without the guarantee that overflow will not happen NOT exception safe, and in fact may technically invoke UB! (Signed overflow is UB: C++11 5/4 "If during the evaluation of an expression, the result is not mathematically defined or not in the range of representable values for its type, the behavior is undefined.") Note that unsigned integer do not overflow, but do their computations in an equivalence class modulo 2^#bits.</p>
</blockquote>

<p>Dionadar is refering to the following line, which indeed has undefined behaviour.</p>

<pre><code>   t.integer += 1 ;                 // 1. nothrow/nofail
</code></pre>

<p>The solution here is to verify if the integer is already at its max value (using <code>std::numeric_limits&lt;T&gt;::max()</code>) before doing the addition.</p>

<p>My error would go in the "Normal failure vs. bug" section, that is, a bug.
It doesn't invalidate the reasoning, and it does not mean exception safe code is useless because impossible to attain.
You can't protect yourself against the computer switching off, or compiler bugs, or even your bugs, or other errors. You can't attain perfection, but you can try to get as near as possible.</p>

<p>I corrected the code with Dionadar's comment in mind.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853769" title="short permalink to this answer" class="short-link" id="link-post-1853769">share</a><span class="lsep">|</span><a href="/posts/1853769/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        <a href="/posts/1853769/revisions" title="show all edits to this post">edited <span title="2013-05-31 09:20:23Z" class="relativetime">May 31 '13 at 9:20</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 22:59. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853769" href="/posts/1853769/revisions" title="show revision history for this post">
        10 revs, 6 users 96%<br><a href="/users/14089">paercebal</a>

        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853769" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="26" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-1748926" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">4</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Thanks a lot! I still hoped for something different. But I accept your answer for sticking to C++ and for your detailed explanation. You even disproved my &quot;This makes about any line of C++ code vulnerable to an exception&quot;-offense. This line by line analysis makes sense after all... I have to think about it.</span>
                &ndash;&nbsp;
                    <a href="/users/206247/frunsi"
                       title="4530 reputation"
                       class="comment-user owner">Frunsi</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-06 02:50:45Z" class="relativetime-clean">Dec 6 '09 at 2:50</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1788456" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@frunsi: Thanks for the comment. The try/catch block already separate the normal code and the error handling code, but I don&#39;t believe it should be more separated: error handling code must sometimes access  normal code (i.e. local variables) to retrieve useful data (perhaps to try again the processing, or try it differently, etc.). Now, of course you&#39;re right: When I wrote &quot;it&#39;s the only viable for C++&quot;, it&#39;s because it is the only viable for current C++ language specification. Research could well lead to other error handling means.</span>
                &ndash;&nbsp;
                    <a href="/users/14089/paercebal"
                       title="38281 reputation"
                       class="comment-user">paercebal</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-11 12:56:48Z" class="relativetime-clean">Dec 11 '09 at 12:56</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1788523" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@frunsi: Exception safety has funny effects. For example, when you have a function calling only nofail/nothrow code, and when you realize that as a whole, the function is nofail/nothrow, too, there is a little moment of &quot;shining&quot; that somehow makes your day brighter. The same can be said for strong functions. When you have a function that seems to do a lot, and you can offer a strong/commit/rollback guarantee, you see your code from a new viewpoint. I started wrapping SQLite3 C code into C++ code, and offering strong/nothrow guarantees to transactional concept was both fun and rewarding.</span>
                &ndash;&nbsp;
                    <a href="/users/14089/paercebal"
                       title="38281 reputation"
                       class="comment-user">paercebal</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-11 13:10:31Z" class="relativetime-clean">Dec 11 '09 at 13:10</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-2032661" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">4</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">&quot;A swap will never fail&quot;.  This is a good recommendation for custom-written swap() functions.  It should be noted, however, that std::swap() can fail based on the operations that it uses internally.</span>
                &ndash;&nbsp;
                    <a href="/users/86967/nobar"
                       title="5639 reputation"
                       class="comment-user">nobar</a>
                <span class="comment-date" dir="ltr"><span title="2010-01-20 04:47:52Z" class="relativetime-clean">Jan 20 '10 at 4:47</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-23801669" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy"><code>t.integer += 1;</code> is without the guarantee that overflow will not happen NOT exception safe, and in fact may technically invoke UB! (Signed overflow is UB: C++11 5/4 &quot;If during the evaluation of an expression, the result is not mathematically defined or not in the range of representable values for its type, the behavior is undefined.&quot;) Note that unsigned integer do not overflow, but do their computations in an equivalence class modulo 2^#bits.</span>
                &ndash;&nbsp;
                    <a href="/users/65678/gha-st"
                       title="5241 reputation"
                       class="comment-user">gha.st</a>
                <span class="comment-date" dir="ltr"><span title="2013-05-15 13:21:14Z" class="relativetime-clean">May 15 '13 at 13:21</span></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853769" data-rep=50 data-anon=true
			   class="comments-link " 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>show <b>26</b> more comments</a>
    </td>
</tr>    </table>
</div>
<script>
                var ados = ados || {};ados.run = ados.run || [];
                ados.run.push(function() { ados_add_placement(22,8277,"adzerk127169364",4).setZone(44) ; });                    
            </script>
            <div class="everyonelovesstackoverflow" id="adzerk127169364">
            </div>
  
<a name="1853383"></a>
<div id="answer-1853383" class="answer" data-answerid="1853383" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853383">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">19</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>Writing exception-safe code in C++ is not so much about using lots of try { } catch { } blocks. It's about documenting what kind of guarantees your code provides.</p>

<p>I recommend reading Herb Sutter's <a href="http://www.gotw.ca/gotw/index.htm">Guru Of The Week</a> series, in particular installments 59, 60 and 61.</p>

<p>To summarize, there are three levels of exception safety you can provide:</p>

<ul>
<li>Basic: When your code throws an exception, your code does not leak resources, and objects remain destructible.</li>
<li>Strong: When your code throws an exception, it leaves the state of the application unchanged.</li>
<li>No throw: Your code never throws exceptions.</li>
</ul>

<p>Personally, I discovered these articles quite late, so much of my C++ code is definitely not exception-safe.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853383" title="short permalink to this answer" class="short-link" id="link-post-1853383">share</a><span class="lsep">|</span><a href="/posts/1853383/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1853383/revisions" title="show all edits to this post"><span title="2009-12-05 20:37:14Z" class="relativetime">Dec 5 '09 at 20:37</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 20:37. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853383" href="/posts/1853383/revisions" title="show revision history for this post">
        Joh
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853383" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-1748026" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">His book &quot;Exceptional C++&quot; is also a good read. But I still try to question the concept of EH...</span>
                &ndash;&nbsp;
                    <a href="/users/206247/frunsi"
                       title="4530 reputation"
                       class="comment-user owner">Frunsi</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 20:50:46Z" class="relativetime-clean">Dec 5 '09 at 20:50</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-2105640" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">+1 OP conflates handling exceptions (catching them) with exception safety (usually more about RAII)</span>
                &ndash;&nbsp;
                    <a href="/users/207716/jk"
                       title="7863 reputation"
                       class="comment-user">jk.</a>
                <span class="comment-date" dir="ltr"><span title="2010-01-29 11:18:20Z" class="relativetime-clean">Jan 29 '10 at 11:18</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-6241453" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">I suspect that very little production C++ code is exception safe.</span>
                &ndash;&nbsp;
                    <a href="/users/545127/raedwald"
                       title="8468 reputation"
                       class="comment-user">Raedwald</a>
                <span class="comment-date" dir="ltr"><span title="2011-03-31 12:43:17Z" class="relativetime-clean">Mar 31 '11 at 12:43</span></span>
                    <span class="edited-yes" title="this comment was edited 1 time"></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853383" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1853281"></a>
<div id="answer-1853281" class="answer" data-answerid="1853281" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853281">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">14</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>Some of us have been using exception for over 20 years. PL/I has them, for example. The premise that they are a new and dangerous technology seems questionable to me.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853281" title="short permalink to this answer" class="short-link" id="link-post-1853281">share</a><span class="lsep">|</span><a href="/posts/1853281/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1853281/revisions" title="show all edits to this post"><span title="2009-12-05 20:03:25Z" class="relativetime">Dec 5 '09 at 20:03</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 20:03. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853281" href="/posts/1853281/revisions" title="show revision history for this post">
        bmargulies
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853281" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-1747944" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Please don&#39;t get me wrong, I am (or am trying to) questioning EH. And especially C++ EH. And I am searching for alternatives. Maybe I have to accept it (and I will if its the only way), but I think there could be better alternatives. Its not that I think that the concept is new, but yes, I think it <i>can</i> be more dangerous than explicit error handling with return codes...</span>
                &ndash;&nbsp;
                    <a href="/users/206247/frunsi"
                       title="4530 reputation"
                       class="comment-user owner">Frunsi</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 20:29:47Z" class="relativetime-clean">Dec 5 '09 at 20:29</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1747973" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">If you don&#39;t like it, don&#39;t use it. Put try blocks around things you need to call that can throw, and reinvent ye-olde-error-code, and suffer with the problems it has, which in some cases are tolerable.</span>
                &ndash;&nbsp;
                    <a href="/users/131433/bmargulies"
                       title="49199 reputation"
                       class="comment-user">bmargulies</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 20:36:26Z" class="relativetime-clean">Dec 5 '09 at 20:36</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1748003" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Ok, perfect, I will just use EH and error-codes, and live with it. I&#39;m a nitwit, I should have come to that solution on my own! ;)</span>
                &ndash;&nbsp;
                    <a href="/users/206247/frunsi"
                       title="4530 reputation"
                       class="comment-user owner">Frunsi</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 20:44:20Z" class="relativetime-clean">Dec 5 '09 at 20:44</span></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853281" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1853449"></a>
<div id="answer-1853449" class="answer" data-answerid="1853449" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853449">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">11</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>First of all (as Neil stated), SEH is Microsoft's Structured Exception Handling.  It is similar to but not identical to exception processing in C++.  In fact, you have to <a href="http://msdn.microsoft.com/en-us/library/1deeycx5%28VS.80%29.aspx">enable C++ Exception Handling</a> if you want it in Visual Studio - the default behavior does not guarantee that local objects are destroyed in all cases!  In either case, Exception Handling is not really <em>harder</em> it is just <em>different</em>.</p>

<p>Now for your actual questions.</p>

<blockquote>
  <p>Do you really write exception safe code?</p>
</blockquote>

<p>Yes. I strive for exception safe code in all cases.  I evangelize using RAII techniques for scoped access to resources (e.g., <a href="http://www.boost.org/doc/libs/1%5F41%5F0/libs/smart%5Fptr/shared%5Fptr.htm"><code>boost::shared_ptr</code></a> for memory, <a href="http://www.boost.org/doc/libs/1%5F41%5F0/doc/html/thread/synchronization.html#thread.synchronization.locks.lock%5Fguard"><code>boost::lock_guard</code></a> for locking).  In general, consistent usage of <a href="http://en.wikibooks.org/wiki/More%5FC%2B%2B%5FIdioms/Resource%5FAcquisition%5FIs%5FInitialization">RAII</a> and <a href="http://www.ddj.com/cpp/184403758">scope guarding</a> techniques will make exception safe code much easier to write.  The trick is to learn what exists and how to apply it.</p>

<blockquote>
  <p>Are you sure your last "production ready" code is exception safe?</p>
</blockquote>

<p>No.  It is as safe as it is.  I can say that I haven't seen a process fault due to an exception in several years of 24/7 activity.  I don't expect perfect code, just well-written code.  In addition to providing exception safety, the techniques above guarantee correctness in a way that is near impossible to achieve with <code>try</code>/<code>catch</code> blocks.  If you are catching everything in your top control scope (thread, process, etc.), then you can be sure that you will continue to run in the face of exceptions (<a href="http://www.parashift.com/c++-faq-lite/exceptions.html#faq-17.3">most of the time</a>).  The same techniques will also help you continue to run <em>correctly</em> in the face of exceptions <strong>without <code>try</code>/<code>catch</code> blocks everywhere</strong>.</p>

<blockquote>
  <p>Can you even be sure that it is?</p>
</blockquote>

<p>Yes.  You can be sure by a thorough code audit but no one really does that do they?  Regular code reviews and careful developers go a long way to getting there though.</p>

<blockquote>
  <p>Do you know and/or actually use alternatives that work?</p>
</blockquote>

<p>I have tried a few variations over the years such as encoding states in the upper bits (ala <a href="http://en.wikipedia.org/wiki/Hresult"><code>HRESULT</code>s</a>) or that horrible <a href="http://www.nicemice.net/cexcept/src/latest/cexcept.h"><code>setjmp() ... longjmp()</code></a> hack.  Both of these break down in practice though in completely different ways.</p>

<p><hr></p>

<p>In the end, if you get into the habit of applying a few techniques and carefully thinking about where you can actually do something in response to an exception, you will end up with very readable code that is exception safe.  You can sum this up by following these rules:</p>

<ul>
<li>You only want to see <code>try</code>/<code>catch</code> when you can do something about a specific exception</li>
<li>You almost never want to see a raw <code>new</code> or <code>delete</code> in code</li>
<li>Eschew <code>std::sprintf</code>, <code>snprintf</code>, and arrays in general - use <code>std::ostringstream</code> for formatting and replace arrays with <code>std::vector</code> and <code>std::string</code></li>
<li>When in doubt, look for functionality in Boost or STL before rolling your own</li>
</ul>

<p>I can only recommend that you learn how to use exceptions properly and forget about result codes if you plan on writing in C++.  If you want to avoid exceptions, you might want to consider writing in another language that either <a href="http://en.wikipedia.org/wiki/C%5F%28programming%5Flanguage%29">does not have them</a> or <a href="http://en.wikibooks.org/wiki/Ada%5FProgramming/Exceptions">makes them safe</a>.  If you want to really learn how to fully utilize C++, read a few books from <a href="http://en.wikipedia.org/wiki/Herb%5FSutter">Herb Sutter</a>, <a href="http://www.josuttis.com/">Nicolai Josuttis</a>, and <a href="http://en.wikipedia.org/wiki/Scott%5FMeyers">Scott Meyers</a>.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853449" title="short permalink to this answer" class="short-link" id="link-post-1853449">share</a><span class="lsep">|</span><a href="/posts/1853449/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1853449/revisions" title="show all edits to this post"><span title="2009-12-05 21:00:37Z" class="relativetime">Dec 5 '09 at 21:00</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 21:00. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853449" href="/posts/1853449/revisions" title="show revision history for this post">
        D.Shawley
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853449" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-6241489" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">&quot;the default behavior does not guarantee that local objects are destroyed in all cases&quot; You are saying that the default setting of the Visual Studio C++ compiler produces code that is <i>incorrect</i> in the face of exceptions. Is that really so?</span>
                &ndash;&nbsp;
                    <a href="/users/545127/raedwald"
                       title="8468 reputation"
                       class="comment-user">Raedwald</a>
                <span class="comment-date" dir="ltr"><span title="2011-03-31 12:45:35Z" class="relativetime-clean">Mar 31 '11 at 12:45</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-6241520" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">&quot;You almost never want to see a raw <code>new</code> or <code>delete</code> in code&quot;: by <i>raw</i> I guess you mean outside a constructor or destructor.</span>
                &ndash;&nbsp;
                    <a href="/users/545127/raedwald"
                       title="8468 reputation"
                       class="comment-user">Raedwald</a>
                <span class="comment-date" dir="ltr"><span title="2011-03-31 12:47:40Z" class="relativetime-clean">Mar 31 '11 at 12:47</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-6273433" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@Raedwald - re: VC++: the VS2005 edition of VC++ will not destroy local objects when an SEH exception is thrown.  Read the <a href="http://msdn.microsoft.com/en-us/library/1deeycx5%28VS.80%29.aspx" rel="nofollow">&quot;enable C++ Exception Handling&quot;</a>.  In VS2005, SEH exceptions do not call the destructors of C++ objects by default.  If you call Win32 functions or anything defined in a C-interface DLL, then you have to worry about this since they can (and will on occasion) throw an SEH exception your way.</span>
                &ndash;&nbsp;
                    <a href="/users/41747/d-shawley"
                       title="29973 reputation"
                       class="comment-user">D.Shawley</a>
                <span class="comment-date" dir="ltr"><span title="2011-04-02 13:10:01Z" class="relativetime-clean">Apr 2 '11 at 13:10</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-6273471" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@Raedwald: re: <i>raw</i>: basically, <code>delete</code> should never be used outside of the implementation of <code>tr1::shared_ptr</code> and the like.  <code>new</code> can be used provided that its usage is something like <code>tr1::shared_ptr&lt;X&gt; ptr(new X(arg, arg));</code>.  The important part is that the result of <code>new</code> goes directly into a managed pointer.  The <a href="http://www.boost.org/doc/libs/1_46_1/libs/smart_ptr/shared_ptr.htm#BestPractices" rel="nofollow">page on <code>boost::shared_ptr</code> Best Practices</a> describes the best.</span>
                &ndash;&nbsp;
                    <a href="/users/41747/d-shawley"
                       title="29973 reputation"
                       class="comment-user">D.Shawley</a>
                <span class="comment-date" dir="ltr"><span title="2011-04-02 13:16:02Z" class="relativetime-clean">Apr 2 '11 at 13:16</span></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853449" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1853482"></a>
<div id="answer-1853482" class="answer" data-answerid="1853482" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853482">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">7</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>It is not possible to write exception-safe code under the assumption that "any line can throw". The design of exception-safe code relies critically on certain contracts/guarantees that you are supposed to expect, observe, follow and implement in your code. It is absolutely necessary to have code that is guaranteed to <em>never</em> throw. There are other kinds of exception guarantees out there.</p>

<p>In other words, creating exception-safe code is to a large degree a matter of program <em>design</em> not just a matter of plain <em>coding</em>.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853482" title="short permalink to this answer" class="short-link" id="link-post-1853482">share</a><span class="lsep">|</span><a href="/posts/1853482/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1853482/revisions" title="show all edits to this post"><span title="2009-12-05 21:09:32Z" class="relativetime">Dec 5 '09 at 21:09</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 21:09. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853482" href="/posts/1853482/revisions" title="show revision history for this post">
        AndreyT
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853482" class="comments  dno" data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">
					    <tr><td></td><td></td></tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853482" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1853297"></a>
<div id="answer-1853297" class="answer" data-answerid="1853297" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853297">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">6</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <ul>
<li>Do you really write exception safe code?</li>
</ul>

<p>Well, I certainly intend to.</p>

<ul>
<li>Are you sure your last "production ready" code is exception safe?</li>
</ul>

<p>I'm sure that my 24/7 servers built using exceptions run 24/7 and don't leak memory.</p>

<ul>
<li>Can you even be sure, that it is?</li>
</ul>

<p>It's very difficult to be sure that any code is correct. Typically, one can only go by results</p>

<ul>
<li>Do you know and/or actually use alternatives that work?</li>
</ul>

<p>No. Using exceptions is cleaner and easier than any of the alternatives I've used over the last 30 years in programming.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853297" title="short permalink to this answer" class="short-link" id="link-post-1853297">share</a><span class="lsep">|</span><a href="/posts/1853297/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1853297/revisions" title="show all edits to this post"><span title="2009-12-05 20:09:47Z" class="relativetime">Dec 5 '09 at 20:09</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 20:09. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853297" href="/posts/1853297/revisions" title="show revision history for this post">
        anon
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853297" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-4164348" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="hot">21</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">This answer has no value.</span>
                &ndash;&nbsp;
                    <a href="/users/149482/matt-joiner"
                       title="28646 reputation"
                       class="comment-user">Matt Joiner</a>
                <span class="comment-date" dir="ltr"><span title="2010-10-11 14:46:57Z" class="relativetime-clean">Oct 11 '10 at 14:46</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-37823211" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">@MattJoiner Then the question has no value.</span>
                &ndash;&nbsp;
                    <a href="/users/575229/miles-rout"
                       title="401 reputation"
                       class="comment-user">Miles Rout</a>
                <span class="comment-date" dir="ltr"><span title="2014-06-27 03:47:45Z" class="relativetime-clean">Jun 27 at 3:47</span></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853297" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1853300"></a>
<div id="answer-1853300" class="answer" data-answerid="1853300" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853300">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">4</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>Leaving aside the confusion between SEH and C++ exceptions, you need to be aware that exceptions can be thrown at any time, and write your code with that in mind. The need for exception-safety is largely what drives the use of RAII, smart pointers, and other modern C++ techniques. </p>

<p>If you follow the well-established patterns, writing exception-safe code is not particularly hard, and in fact it's easier than writing code that handles error returns properly in all cases.    </p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853300" title="short permalink to this answer" class="short-link" id="link-post-1853300">share</a><span class="lsep">|</span><a href="/posts/1853300/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1853300/revisions" title="show all edits to this post"><span title="2009-12-05 20:10:42Z" class="relativetime">Dec 5 '09 at 20:10</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 20:10. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853300" href="/posts/1853300/revisions" title="show revision history for this post">
        Mark Bessey
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853300" class="comments  dno" data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">
					    <tr><td></td><td></td></tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853300" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="2161418"></a>
<div id="answer-2161418" class="answer" data-answerid="2161418" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="2161418">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">2</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>EH is good, generally. But C++'s implementation is not very friendly as it's really hard to tell how good your exception catching coverage is. Java for instance makes this easy, the compiler will tend to fail if you don't handle possible exceptions .</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/2161418" title="short permalink to this answer" class="short-link" id="link-post-2161418">share</a><span class="lsep">|</span><a href="/posts/2161418/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/2161418/revisions" title="show all edits to this post"><span title="2010-01-29 10:59:16Z" class="relativetime">Jan 29 '10 at 10:59</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Jan 29 &#39;10 at 10:59. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-2161418" href="/posts/2161418/revisions" title="show revision history for this post">
        John
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-2161418" class="comments  dno" data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">
					    <tr><td></td><td></td></tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-2161418" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1853302"></a>
<div id="answer-1853302" class="answer" data-answerid="1853302" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853302">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">1</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>I really like working with Eclipse and Java though (new to Java), because it throws errors in the editor if you are missing an EH handler.  That makes things a LOT harder to forget to handle an exception...</p>

<p>Plus, with the IDE tools, it adds the try / catch block or another catch block automatically.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853302" title="short permalink to this answer" class="short-link" id="link-post-1853302">share</a><span class="lsep">|</span><a href="/posts/1853302/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1853302/revisions" title="show all edits to this post"><span title="2009-12-05 20:11:10Z" class="relativetime">Dec 5 '09 at 20:11</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 20:11. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853302" href="/posts/1853302/revisions" title="show revision history for this post">
        Crowe T. Robot
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853302" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-1748345" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="warm">5</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">That is the difference between checked(Java) and unchecked(c++) exceptions (Java has a few of those too). The advantage of checked exceptions is what you wrote, but there it has its own disadvantages. Google for the difference approaches and the different problems they have.</span>
                &ndash;&nbsp;
                    <a href="/users/36565/david-rodr%c3%adguez-dribeas"
                       title="121965 reputation"
                       class="comment-user">David Rodr&#237;guez - dribeas</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 22:19:20Z" class="relativetime-clean">Dec 5 '09 at 22:19</span></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853302" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1855048"></a>
<div id="answer-1855048" class="answer" data-answerid="1855048" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1855048">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">1</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>I try my darned best to write exception-safe code, yes.</p>

<p>That means I take care to keep an eye on <em>which</em> lines can throw. Not everyone can, and it is critically important to keep that in mind. The key is really to think about, and design your code to satisfy, the exception guarantees defined in the standard.</p>

<p>Can this operation be written to provide the strong exception guarantee? Do I have to settle for the basic one? Which lines may throw exceptions, and how can I ensure that if they do, they don't corrupt the object?</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1855048" title="short permalink to this answer" class="short-link" id="link-post-1855048">share</a><span class="lsep">|</span><a href="/posts/1855048/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1855048/revisions" title="show all edits to this post"><span title="2009-12-06 10:52:51Z" class="relativetime">Dec 6 '09 at 10:52</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 6 &#39;09 at 10:52. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1855048" href="/posts/1855048/revisions" title="show revision history for this post">
        jalf
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1855048" class="comments  dno" data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">
					    <tr><td></td><td></td></tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1855048" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1853307"></a>
<div id="answer-1853307" class="answer" data-answerid="1853307" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1853307">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">0</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>Some of us prefer languages like Java which force us to declare all the exceptions thrown by methods, instead of making them invisible as in C++ and C#.</p>

<p>When done properly, exceptions are superior to error return codes, if for no other reason than you don't have to propagate failures up the call chain manually.</p>

<p>That being said, low-level API library programming should probably avoid exception handling, and stick to error return codes.</p>

<p>It's been my experience that it's difficult to write clean exception handling code in C++. I end up using <code>new(nothrow)</code> a lot.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1853307" title="short permalink to this answer" class="short-link" id="link-post-1853307">share</a><span class="lsep">|</span><a href="/posts/1853307/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1853307/revisions" title="show all edits to this post"><span title="2009-12-05 20:12:19Z" class="relativetime">Dec 5 '09 at 20:12</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 5 &#39;09 at 20:12. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1853307" href="/posts/1853307/revisions" title="show revision history for this post">
        David R Tribble
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1853307" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-1748445" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">And you&#39;re avoiding most of the standard library as well? Using <code>new(std::nothrow)</code> is not enough. By the way, it&#39;s easier to write exception-safe code in C++ than in Java: <a href="http://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization" rel="nofollow">en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization</a></span>
                &ndash;&nbsp;
                    <a href="/users/89847/avakar"
                       title="19798 reputation"
                       class="comment-user">avakar</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 22:49:55Z" class="relativetime-clean">Dec 5 '09 at 22:49</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1748523" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">3</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">The Java checked exception usability is highly exagerated. In fact, non-Java languages, they are NOT considered a success. This is why the &quot;throw&quot; statement in C++ is now considered obsolete, and C# never seriously considered implementing them (this was a design choice). For Java, the following document could be enlightning: <a href="http://googletesting.blogspot.com/2009/09/checked-exceptions-i-love-you-but-you.html" rel="nofollow">googletesting.blogspot.com/2009/09/&hellip;</a></span>
                &ndash;&nbsp;
                    <a href="/users/14089/paercebal"
                       title="38281 reputation"
                       class="comment-user">paercebal</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-05 23:13:34Z" class="relativetime-clean">Dec 5 '09 at 23:13</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1749157" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">It&#39;s my experience that writing exception-safe code in C++ is not that hard, and that it tends to lead to cleaner code in general.  Of course, you do have to learn to do it.</span>
                &ndash;&nbsp;
                    <a href="/users/14148/david-thornley"
                       title="38900 reputation"
                       class="comment-user">David Thornley</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-06 04:48:13Z" class="relativetime-clean">Dec 6 '09 at 4:48</span></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1853307" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1857461"></a>
<div id="answer-1857461" class="answer" data-answerid="1857461" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1857461">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">0</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <ul>
<li><p>Do you really write exception safe code?
[There's no such thing. Exceptions are a paper shield to errors unless you have a managed environment. This applies to first three questions.]</p></li>
<li><p>Do you know and/or actually use alternatives that work?
[Alternative to what? The problem here is people don't separate actual errors from normal program operation. If it's normal program operation (ie a file not found), it's not really error handling. If it's an actual error, there is no way to 'handle' it or it's not an actual error. Your goal here is to find out what went wrong and either stop the spreadsheet and log an error, restart the driver to your toaster, or just pray that the jetfighter can continue flying even when it's software is buggy and hope for the best.]</p></li>
</ul>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1857461" title="short permalink to this answer" class="short-link" id="link-post-1857461">share</a><span class="lsep">|</span><a href="/posts/1857461/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1857461/revisions" title="show all edits to this post"><span title="2009-12-07 02:27:21Z" class="relativetime">Dec 7 '09 at 2:27</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 7 &#39;09 at 2:27. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1857461" href="/posts/1857461/revisions" title="show revision history for this post">
        Charles Eli Cheese
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1857461" class="comments  dno" data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="0" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">
					    <tr><td></td><td></td></tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1857461" data-rep=50 data-anon=true
			   class="comments-link disabled-link" 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>add comment</a>
    </td>
</tr>    </table>
</div>

  
<a name="1856217"></a>
<div id="answer-1856217" class="answer" data-answerid="1856217" >
    <table>
        <tr>
            <td class="votecell">
                

<div class="vote">
    <input type="hidden" name="_id_" value="1856217">
    <a class="vote-up-off" title="This answer is useful">up vote</a>
    <span class="vote-count-post ">-2</span>
    <a class="vote-down-off" title="This answer is not useful">down vote</a>
    


</div>

            </td>
            


<td class="answercell">
    <div class="post-text">
            <p>A lot (I would even say most) people do.</p>

<p>What's really important about exceptions, is that if you don't write any handling code - the result is perfectly safe and well-behaved. Too eager to panic, but safe.</p>

<p>You need to <em>actively</em> make mistakes in handlers to get something unsafe, and only catch(...){} will compare to ignoring error code.</p>

    </div>
    <table class="fw">
    <tr>
    <td class="vt">
<div class="post-menu"><a href="/a/1856217" title="short permalink to this answer" class="short-link" id="link-post-1856217">share</a><span class="lsep">|</span><a href="/posts/1856217/edit" class="suggest-edit-post" title="">improve this answer</a></div>                    </td>
    <td align="right" class="post-signature">
<div class="user-info ">
    <div class="user-action-time">
        answered <a href="/posts/1856217/revisions" title="show all edits to this post"><span title="2009-12-06 18:53:24Z" class="relativetime">Dec 6 '09 at 18:53</span></a>
    </div>
    <div class="user-gravatar32">
        
    </div>
    <div class="user-details">
        <br>
        
    </div>
</div>    </td>
            


    <td align="right" class="post-signature">   
       

    <div class="user-info">
    <div class="user-details">
        <span class="community-wiki" title="This post is community owned as of Dec 6 &#39;09 at 18:53. Votes do not generate reputation, and it can be edited by users with 100 rep">
            community wiki
        </span>
    </div><br>
    <div class="user-details">
        <a id="history-1856217" href="/posts/1856217/revisions" title="show revision history for this post">
        ima
        </a>
    </div>
</div>
    </td>
    </tr>
    </table>
</td>
        </tr>
        
<tr>
    <td class="votecell"></td>
    <td>
	    <div id="comments-1856217" class="comments " data-localized="true">
		    <table>
			    <tbody data-remaining-comments-count="4" 
			           data-addlink-html="add comment" 
			           data-addlink-disabled="true">

    <tr id="comment-1751273" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">2</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Not true. It&#39;s very easy to write code that is not exception-safe. For example: <code>f = new foo(); f-&gt;doSomething(); delete f;</code> If the doSomething method throws an exception, then you have a memory leak.</span>
                &ndash;&nbsp;
                    <a href="/users/1175/kristopher-johnson"
                       title="34297 reputation"
                       class="comment-user">Kristopher Johnson</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-06 19:00:03Z" class="relativetime-clean">Dec 6 '09 at 19:00</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1751292" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">It wouldn&#39;t matter when you program terminates, right? To continue execution, you&#39;ll have to <i>actively</i> swallow exceptions.  Well, there are some specific cases where termination without clean-up is still unacceptable, but such situations needs special care in any programming language and style.</span>
                &ndash;&nbsp;
                    <a href="/users/5733/ima"
                       title="4796 reputation"
                       class="comment-user">ima</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-06 19:06:55Z" class="relativetime-clean">Dec 6 '09 at 19:06</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1751704" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">You just can&#39;t ignore exceptions (and not write handling code), neither in C++ nor in managed code. It will be unsafe, and it will not well-behave. Except for maybe some toy code.</span>
                &ndash;&nbsp;
                    <a href="/users/206247/frunsi"
                       title="4530 reputation"
                       class="comment-user owner">Frunsi</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-06 21:04:37Z" class="relativetime-clean">Dec 6 '09 at 21:04</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1751758" class="comment ">
        <td>
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                &nbsp;&nbsp;
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Did I say you can? Now read again what I wrote and try to understand.</span>
                &ndash;&nbsp;
                    <a href="/users/5733/ima"
                       title="4796 reputation"
                       class="comment-user">ima</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-06 21:20:14Z" class="relativetime-clean">Dec 6 '09 at 21:20</span></span>
                                                                            </div>
                    </td>
    </tr>
    <tr id="comment-1753424" class="comment ">
        <td class="comment-actions">
            <table>
                <tbody>
                    <tr>
                        <td class=" comment-score">
                                <span title="number of &#39;useful comment&#39; votes received"
                                      class="cool">1</span>
                        </td>
                        <td>
                                &nbsp;
                        </td>
                    </tr>
                </tbody>
            </table>
        </td>
        <td class="comment-text">
            <div style="display: block;" class="comment-body">
                <span class="comment-copy">Please, don&#39;t twist my words. I wrote &quot;if you don&#39;t write any handling code &quot; - and I meant exactly that. To ignore exceptions, you need to write code.</span>
                &ndash;&nbsp;
                    <a href="/users/5733/ima"
                       title="4796 reputation"
                       class="comment-user">ima</a>
                <span class="comment-date" dir="ltr"><span title="2009-12-07 05:37:43Z" class="relativetime-clean">Dec 7 '09 at 5:37</span></span>
                                                                            </div>
                    </td>
    </tr>
			    </tbody>
		    </table>
	    </div>
			<a id="comments-link-1856217" data-rep=50 data-anon=true
			   class="comments-link " 
			   title="Use comments to ask for more information or suggest improvements. Avoid comments like “+1” or “thanks”." 
				>show <b>4</b> more comments</a>
    </td>
</tr>    </table>
</div>
				<div class="question-status">
        <h2>                    <b>protected</b> by <a href="/users/78374/stefano-borini">Stefano Borini</a> <span title="2013-04-15 08:05:23Z" class="relativetime">Apr 15 '13 at 8:05</span>
</h2>
        <p>
Thank you for your interest in this question. 
Because it has attracted low-quality answers, posting an answer now requires 10 <a href="/help/whats-reputation">reputation</a> on this site.
<br /><br />
Would you like to answer one of these <a href="/unanswered?fromProtectedNotice=true">unanswered questions</a> instead?
</p>
    </div>


						<h2 class="bottom-notice" data-loc="1">
Not the answer you&#39;re looking for?							Browse other questions tagged <a href="/questions/tagged/c%2b%2b" class="post-tag" title="show questions tagged &#39;c++&#39;" rel="tag">c++</a> <a href="/questions/tagged/exception-handling" class="post-tag" title="show questions tagged &#39;exception-handling&#39;" rel="tag">exception-handling</a>  or <a href="/questions/ask">ask your own question</a>.						</h2>
			</div>
		</div>
				<div id="sidebar" class="show-votes">
						    <div class="module question-stats">
			        <table id="qinfo">
			            <tr>
			                <td>
			                    <p class="label-key">asked</p>
			                </td>
			                <td style="padding-left: 10px">
			                    <p class="label-key" title="2009-12-05 19:48:15Z"><b>4 years ago</b></p>
			                </td>
			            </tr>
			            <tr>
			                <td>
			                    <p class="label-key">viewed</p>
			                </td>

			                <td style="padding-left: 10px">
			                    <p class="label-key">
			                        <b>81720 times</b>
			                    </p>
			                </td>
			            </tr>
			                <tr>
			                    <td>
			                        <p class="label-key">active</p>
			                    </td>
			                    <td style="padding-left: 10px">
			                        <p class="label-key"><b><a href="?lastactivity" class="lastactivity-link" title="2013-05-31 09:20:23Z">1 year ago</a></b></p>
			                    </td>
			                </tr>
			        </table>
			    </div>
						
			<script>
                var ados = ados || {};ados.run = ados.run || [];
                ados.run.push(function() { ados_add_placement(22,8277,"adzerk632056217",17).setZone(45) ; });                    
            </script>
            <div class="everyonelovesstackoverflow" id="adzerk632056217">
            </div>  
    <div id="hireme">
        <script>
window.careers_adurl="//careers.stackoverflow.com/gethired/js",window.careers_cssurl="//cdn-careers.sstatic.net/careers/gethired/sidebar.min.css?v=88f3fd5e2263",window.careers_leaderboardcssurl="{leaderboardcssurl}",window.careers_companycssurl="//cdn-careers.sstatic.net/careers/gethired/company",window.careers_adselector="div#hireme",StackExchange.ready(function(){$.ajax({url:"//cdn-careers.sstatic.net/careers/gethired/loader.min.js?v=93d05efce50b",dataType:"script",cache:!0})});        </script>
    </div>
			<div style="margin-bottom: 10px;">
        

<style type="text/css">
#newsletter-ad {
    width: 190px;
    height: 250px;
    overflow: hidden;
    background: url('//cdn.sstatic.net/stackoverflow/img/newsletter-ad.png');
    padding: 0 15px 0 15px;
}
#newsletter-ad-header {
    margin-top: 60px;
}
#newsletter-ad ul {
    margin: 1em 0 1em 1.5em;
}
#newsletter-ad ul li {
    margin-bottom: 5px;
}
#newsletter-signup-container {
    text-align: center;
}
#newsletter-preview-container {
    margin-top: 10px;
    text-align: center;
}
#newsletter-email-input {
    width: 200px;
}
</style>

<script>
    StackExchange.ready(function () {
        StackExchange.newsletterAd.init();
    });
</script>

<div id="newsletter-ad">
    <p id="newsletter-ad-header">Get the <b>weekly newsletter!</b></p>
    <ul>
        <li>Top questions and answers</li>
        <li>Important announcements</li>
        <li>Unanswered questions</li>
    </ul>
    <div id="newsletter-signup-container"><input id="newsletter-signup" type="button" value="Sign up for the newsletter" /></div>
    <p id="newsletter-preview-container">see an <a href="http://stackexchange.com/newsletters/newsletter?site=stackoverflow.com" id="newsletter-preview">example newsletter</a></p>
    <div class="dno">
        
<p class="privacy-policy-agreement">
By subscribing, you agree to the <a href='http://stackexchange.com/legal/privacy-policy' target='_blank'>privacy policy</a> and <a href='http://stackexchange.com/legal/terms-of-service' target='_blank'>terms of service</a>.</p>
<input type="hidden" name="legalLinksShown" value="1" />
    </div>
</div>

    </div>  
    
            <div class="module sidebar-linked">
	<h4 id="h-linked">Linked</h4>
	<div class="linked" data-tracker="lq=1">
<div class="spacer">
	<a href="/q/5426708" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">5</div>
	</a>
	<a href="/questions/5426708/why-are-exceptions-so-rarely-used-in-c" class="question-hyperlink">Why are exceptions so rarely used in C++</a>
</div><div class="spacer">
	<a href="/q/194261" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">11</div>
	</a>
	<a href="/questions/194261/raii-in-java-is-resource-disposal-always-so-ugly" class="question-hyperlink">RAII in Java&hellip; is resource disposal always so ugly?</a>
</div><div class="spacer">
	<a href="/q/11606106" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">20</div>
	</a>
	<a href="/questions/11606106/which-operations-must-not-throw-an-exception-in-c" class="question-hyperlink">Which operations must not throw an exception in C++?</a>
</div><div class="spacer">
	<a href="/q/9834412" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">2</div>
	</a>
	<a href="/questions/9834412/stdlist-of-objects-efficiency" class="question-hyperlink">std::list of objects efficiency</a>
</div><div class="spacer">
	<a href="/q/22474907" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">1</div>
	</a>
	<a href="/questions/22474907/is-there-a-way-not-to-kill-an-qt-application-which-throwed-a-stdbad-alloc" class="question-hyperlink">Is there a way not to kill an Qt application which throwed a std::bad_alloc?</a>
</div><div class="spacer">
	<a href="/q/7968628" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">3</div>
	</a>
	<a href="/questions/7968628/should-i-add-exception-handling-to-existing-code-base" class="question-hyperlink">Should I add exception-handling to existing code base?</a>
</div><div class="spacer">
	<a href="/q/20344256" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes answered-accepted default">2</div>
	</a>
	<a href="/questions/20344256/is-there-a-nothrow-new-that-waits-until-memory-is-available" class="question-hyperlink">Is there a nothrow new that waits until memory is available?</a>
</div><div class="spacer">
	<a href="/q/22442046" title="Vote score (upvotes - downvotes)">
		<div class="answer-votes  default">0</div>
	</a>
	<a href="/questions/22442046/exception-safety" class="question-hyperlink">Exception safety:</a>
</div>			</div>
</div>

				<div class="module sidebar-related">
					<h4 id="h-related">Related</h4>
                    <div class="related js-gps-related-questions" data-tracker="rq=1">
                        <div class="spacer">
<a href="/q/136035" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted large">630
    </div>
</a><a href="/questions/136035/catch-multiple-exceptions-at-once" class="question-hyperlink">Catch multiple Exceptions at once?</a>
</div>
<div class="spacer">
<a href="/q/2718779" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">15
    </div>
</a><a href="/questions/2718779/correct-exceptions-in-c" class="question-hyperlink">Correct Exceptions in C++</a>
</div>
<div class="spacer">
<a href="/q/4552396" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">7
    </div>
</a><a href="/questions/4552396/is-my-use-of-c-catch-clause-families-of-exception-classes-and-destruction-sa" class="question-hyperlink">Is my use of C++ catch clause, families of exception classes, and destruction sane?</a>
</div>
<div class="spacer">
<a href="/q/9045941" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">3
    </div>
</a><a href="/questions/9045941/alternative-to-exceptions-for-methods-that-return-objects" class="question-hyperlink">Alternative to exceptions for methods that return objects</a>
</div>
<div class="spacer">
<a href="/q/9495906" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">1
    </div>
</a><a href="/questions/9495906/c-how-to-handle-with-generic-exception-object-all-types-of-exceptions" class="question-hyperlink">c++ how to handle with generic exception object all types of exceptions?</a>
</div>
<div class="spacer">
<a href="/q/10140383" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">4
    </div>
</a><a href="/questions/10140383/handling-common-parts-of-exceptions-together" class="question-hyperlink">Handling common parts of exceptions together</a>
</div>
<div class="spacer">
<a href="/q/13963834" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes default">3
    </div>
</a><a href="/questions/13963834/c-exceptions-usage-hints" class="question-hyperlink">C++ exceptions (usage hints)</a>
</div>
<div class="spacer">
<a href="/q/16133346" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">0
    </div>
</a><a href="/questions/16133346/exceptions-thrown-from-specific-parts-of-the-code-are-not-being-caught" class="question-hyperlink">Exceptions thrown from specific parts of the code are not being caught</a>
</div>
<div class="spacer">
<a href="/q/16595529" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">1
    </div>
</a><a href="/questions/16595529/how-to-fix-this-typical-exception-unsafe-code" class="question-hyperlink">How to fix this typical exception unsafe code?</a>
</div>
<div class="spacer">
<a href="/q/22854694" title="Vote score (upvotes - downvotes)">
    <div class="answer-votes answered-accepted default">0
    </div>
</a><a href="/questions/22854694/alternatives-to-exception-handling-for-releasing-resources" class="question-hyperlink">alternatives to exception handling for releasing resources</a>
</div>

                    </div>
				</div>
            
<div id="hot-network-questions" class="module">
    <h4>
        <a href="//stackexchange.com/questions?tab=hot" 
           class="js-gps-track" 
           data-gps-track="posts_hot_network.click({ item_type:1, location:11 })">
            Hot Network Questions
        </a>
    </h4>
    <ul>
            <li >
                <div class="favicon favicon-tridion" title="Tridion Stack Exchange"></div><a href="http://tridion.stackexchange.com/questions/6030/can-we-take-backup-of-tridion-user" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:485 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Can we take backup of tridion user?
                </a>

            </li>
            <li >
                <div class="favicon favicon-skeptics" title="Skeptics Stack Exchange"></div><a href="http://skeptics.stackexchange.com/questions/22180/do-european-countries-maintain-air-force-on-high-alert" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:212 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Do European countries maintain Air Force on high alert?
                </a>

            </li>
            <li >
                <div class="favicon favicon-security" title="Information Security Stack Exchange"></div><a href="http://security.stackexchange.com/questions/62185/why-do-atms-accept-any-pin" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:162 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why do ATMs accept any PIN?
                </a>

            </li>
            <li >
                <div class="favicon favicon-askubuntu" title="Ask Ubuntu"></div><a href="http://askubuntu.com/questions/490366/how-to-retain-installed-software-between-ubuntu-installations-tools-for-softwa" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:89 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to retain installed software between Ubuntu installations / Tools for software inventory?
                </a>

            </li>
            <li >
                <div class="favicon favicon-cs" title="Computer Science Stack Exchange"></div><a href="http://cs.stackexchange.com/questions/28123/returning-a-random-subset-with-length-k-of-n-strings-while-only-storing-at-most" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:419 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Returning a random subset with length k of N strings while only storing at most k of them
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-scifi" title="Science Fiction &amp; Fantasy Stack Exchange"></div><a href="http://scifi.stackexchange.com/questions/60484/story-about-an-engineer-guitar-player-with-refrain-i-ll-get-where-i-wasn-t-goin" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:186 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Story about an engineer/guitar player with refrain “I’ll get where I wasn’t going”
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-ell" title="English Language Learners Stack Exchange"></div><a href="http://ell.stackexchange.com/questions/27253/what-is-the-difference-between-thanks-much-and-thanks-a-lot" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:481 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What is the difference between &quot;Thanks much&quot; and &quot;Thanks a lot&quot;?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-mathematica" title="Mathematica Stack Exchange"></div><a href="http://mathematica.stackexchange.com/questions/51919/how-to-find-all-symbols-in-an-expression-and-perform-an-operation-on-them" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:387 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to find all symbols in an expression and perform an operation on them?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-unix" title="Unix &amp; Linux Stack Exchange"></div><a href="http://unix.stackexchange.com/questions/140185/find-and-replace-diferent-columns-using-awk" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:106 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Find and replace diferent columns using awk
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="http://math.stackexchange.com/questions/853085/is-n-1-often-a-prime" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is n! + 1 often a prime?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-gaming" title="Arqade"></div><a href="http://gaming.stackexchange.com/questions/174461/is-it-possible-to-get-your-loot-from-the-public-test-realm" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:41 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is it possible to get your loot from the Public Test Realm?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-ux" title="User Experience Stack Exchange"></div><a href="http://ux.stackexchange.com/questions/60657/do-input-box-highlights-add-any-benefit-to-user-experience" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:102 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Do input box highlights add any benefit to user experience?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-rpg" title="Role-playing Games Stack Exchange"></div><a href="http://rpg.stackexchange.com/questions/41719/why-is-magic-so-hard" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:122 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why is Magic so hard?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-cooking" title="Seasoned Advice"></div><a href="http://cooking.stackexchange.com/questions/45226/what-is-the-difference-between-a-prawn-and-a-shrimp" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:49 }); posts_hot_network.click({ item_type:2, location:11 })">
                    What is the difference between a prawn and a shrimp?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-gamedev" title="Game Development Stack Exchange"></div><a href="http://gamedev.stackexchange.com/questions/79553/how-do-action-rpgs-make-different-weapon-types-feel-unique" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:53 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How do Action RPGs make different weapon types feel unique?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-movies" title="Movies &amp; TV Stack Exchange"></div><a href="http://movies.stackexchange.com/questions/21795/why-is-spider-man-left-out-of-the-avengers" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:367 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Why is Spider-Man left out of The Avengers?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-workplace" title="The Workplace Stack Exchange"></div><a href="http://workplace.stackexchange.com/questions/27996/how-do-i-ask-my-boss-for-back-pay-when-ive-been-grossly-underpaid" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:423 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How do I ask my boss for back pay when I&#39;ve been grossly underpaid?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-math" title="Mathematics Stack Exchange"></div><a href="http://math.stackexchange.com/questions/853615/proving-an-expression-is-composite" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:69 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Proving an expression is composite
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-electronics" title="Electrical Engineering Stack Exchange"></div><a href="http://electronics.stackexchange.com/questions/117338/smd-removal-process" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:135 }); posts_hot_network.click({ item_type:2, location:11 })">
                    SMD Removal Process
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-salesforce" title="Salesforce Stack Exchange"></div><a href="http://salesforce.stackexchange.com/questions/42081/complement-result-from-function-in-rendered-attribute" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:459 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Complement result from function in rendered attribute
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-apple" title="Ask Different"></div><a href="http://apple.stackexchange.com/questions/136672/how-do-i-require-password-prompt-every-time-i-close-my-macbooks-lid" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:118 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How do I require password prompt EVERY time I close my MacBook&#39;s lid?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-academia" title="Academia Stack Exchange"></div><a href="http://academia.stackexchange.com/questions/24239/is-it-appropriate-to-ask-colleagues-opinions-when-reviewing-a-paper" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:415 }); posts_hot_network.click({ item_type:2, location:11 })">
                    Is it appropriate to ask colleagues opinions when reviewing a paper?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-workplace" title="The Workplace Stack Exchange"></div><a href="http://workplace.stackexchange.com/questions/28006/how-to-decline-a-colleagues-requests-for-a-drive-home" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:423 }); posts_hot_network.click({ item_type:2, location:11 })">
                    How to decline a colleague&#39;s requests for a drive home?
                </a>

            </li>
            <li class="dno js-hidden">
                <div class="favicon favicon-ell" title="English Language Learners Stack Exchange"></div><a href="http://ell.stackexchange.com/questions/27242/an-army-of-hackers-put-americas-power-grid-in-its-sights-meaning-of-in-its-si" class="js-gps-track" data-gps-track="site.switch({ item_type:11, target_site:481 }); posts_hot_network.click({ item_type:2, location:11 })">
                    An army of hackers put America&#39;s power grid in its sights - meaning of in its sights
                </a>

            </li>
    </ul>

        <a href="#" 
           class="show-more js-show-more js-gps-track" 
           data-gps-track="posts_hot_network.click({ item_type:3, location:11 })">
            more hot questions
        </a>
</div>
		</div>
		<script>
StackExchange.ready(function(){$.get('/posts/1853243/ivc/1393');});
</script>
<noscript>
    <div><img src="/posts/1853243/ivc/1393" class="dno" alt="" width="0" height="0"></div>
</noscript><div style="display:none" id="prettify-lang">lang-cpp</div></div>



        </div>
    </div>
    <div id="footer" class="categories">
        <div class="footerwrap">
            <div id="footer-menu">
                <div class="top-footer-links">
                        <a href="/tour">tour</a>
                    <a href="/help">help</a>
                        <a href="/help/badges">badges</a>
                    <a href="http://blog.stackoverflow.com?blb=1">blog</a>
                        <a href="http://chat.stackoverflow.com">chat</a>
                    <a href="http://data.stackexchange.com">data</a>
                    <a href="http://stackexchange.com/legal">legal</a>
                    <a href="http://stackexchange.com/legal/privacy-policy">privacy policy</a>
                    <a href="http://stackexchange.com/work-here">work here</a>
                    <a href="http://stackexchange.com/mediakit">advertising info</a>

                    <a onclick='StackExchange.switchMobile("on")'>mobile</a>
                    <b><a href="/contact">contact us</a></b>
                        <b><a href="http://meta.stackoverflow.com">feedback</a></b>
                    
                </div>
                <div id="footer-sites">
                    <table>
    <tr>
            <th colspan=3>
                Technology
            </th>
            <th >
                Life / Arts
            </th>
            <th >
                Culture / Recreation
            </th>
            <th >
                Science
            </th>
            <th >
                Other
            </th>
    </tr>
    <tr>
            <td>
                <ol>
                        <li><a href="http://stackoverflow.com" title="professional and enthusiast programmers">Stack Overflow</a></li>
                        <li><a href="http://serverfault.com" title="professional system and network administrators">Server Fault</a></li>
                        <li><a href="http://superuser.com" title="computer enthusiasts and power users">Super User</a></li>
                        <li><a href="http://webapps.stackexchange.com" title="power users of web applications">Web Applications</a></li>
                        <li><a href="http://askubuntu.com" title="Ubuntu users and developers">Ask Ubuntu</a></li>
                        <li><a href="http://webmasters.stackexchange.com" title="pro webmasters">Webmasters</a></li>
                        <li><a href="http://gamedev.stackexchange.com" title="professional and independent game developers">Game Development</a></li>
                        <li><a href="http://tex.stackexchange.com" title="users of TeX, LaTeX, ConTeXt, and related typesetting systems">TeX - LaTeX</a></li>
                            </ol></td><td><ol>
                        <li><a href="http://programmers.stackexchange.com" title="professional programmers interested in conceptual questions about software development">Programmers</a></li>
                        <li><a href="http://unix.stackexchange.com" title="users of Linux, FreeBSD and other Un*x-like operating systems.">Unix &amp; Linux</a></li>
                        <li><a href="http://apple.stackexchange.com" title="power users of Apple hardware and software">Ask Different (Apple)</a></li>
                        <li><a href="http://wordpress.stackexchange.com" title="WordPress developers and administrators">WordPress Development</a></li>
                        <li><a href="http://gis.stackexchange.com" title="cartographers, geographers and GIS professionals">Geographic Information Systems</a></li>
                        <li><a href="http://electronics.stackexchange.com" title="electronics and electrical engineering professionals, students, and enthusiasts">Electrical Engineering</a></li>
                        <li><a href="http://android.stackexchange.com" title="enthusiasts and power users of the Android operating system">Android Enthusiasts</a></li>
                        <li><a href="http://security.stackexchange.com" title="Information security professionals">Information Security</a></li>
                            </ol></td><td><ol>
                        <li><a href="http://dba.stackexchange.com" title="database professionals who wish to improve their database skills and learn from others in the community">Database Administrators</a></li>
                        <li><a href="http://drupal.stackexchange.com" title="Drupal developers and administrators">Drupal Answers</a></li>
                        <li><a href="http://sharepoint.stackexchange.com" title="SharePoint enthusiasts">SharePoint</a></li>
                        <li><a href="http://ux.stackexchange.com" title="user experience researchers and experts">User Experience</a></li>
                        <li><a href="http://mathematica.stackexchange.com" title="users of Mathematica">Mathematica</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#technology" class="more">
                                more (14)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://photo.stackexchange.com" title="professional, enthusiast and amateur photographers">Photography</a></li>
                        <li><a href="http://scifi.stackexchange.com" title="science fiction and fantasy enthusiasts">Science Fiction &amp; Fantasy</a></li>
                        <li><a href="http://graphicdesign.stackexchange.com" title="professional graphic designers and non-designers trying to do their own graphic design">Graphic Design</a></li>
                        <li><a href="http://cooking.stackexchange.com" title="professional and amateur chefs">Seasoned Advice (cooking)</a></li>
                        <li><a href="http://diy.stackexchange.com" title="contractors and serious DIYers">Home Improvement</a></li>
                        <li><a href="http://money.stackexchange.com" title="people who want to be financially literate">Personal Finance &amp; Money</a></li>
                        <li><a href="http://academia.stackexchange.com" title="academics and those enrolled in higher education">Academia</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#lifearts" class="more">
                                more (10)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://english.stackexchange.com" title="linguists, etymologists, and serious English language enthusiasts">English Language &amp; Usage</a></li>
                        <li><a href="http://skeptics.stackexchange.com" title="scientific skepticism">Skeptics</a></li>
                        <li><a href="http://judaism.stackexchange.com" title="those who base their lives on Jewish law and tradition and anyone interested in learning more">Mi Yodeya (Judaism)</a></li>
                        <li><a href="http://travel.stackexchange.com" title="road warriors and seasoned travelers">Travel</a></li>
                        <li><a href="http://christianity.stackexchange.com" title="committed Christians, experts in Christianity and those interested in learning more">Christianity</a></li>
                        <li><a href="http://gaming.stackexchange.com" title="passionate videogamers on all platforms">Arqade (gaming)</a></li>
                        <li><a href="http://bicycles.stackexchange.com" title="people who build and repair bicycles, people who train cycling, or commute on bicycles">Bicycles</a></li>
                        <li><a href="http://rpg.stackexchange.com" title="gamemasters and players of tabletop, paper-and-pencil role-playing games">Role-playing Games</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#culturerecreation" class="more">
                                more (21)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://math.stackexchange.com" title="people studying math at any level and professionals in related fields">Mathematics</a></li>
                        <li><a href="http://stats.stackexchange.com" title="people interested in statistics, machine learning, data analysis, data mining, and data visualization">Cross Validated (stats)</a></li>
                        <li><a href="http://cstheory.stackexchange.com" title="theoretical computer scientists and researchers in related fields">Theoretical Computer Science</a></li>
                        <li><a href="http://physics.stackexchange.com" title="active researchers, academics and students of physics">Physics</a></li>
                        <li><a href="http://mathoverflow.net" title="professional mathematicians">MathOverflow</a></li>
                    
                        <li>
                            <a href="http://stackexchange.com/sites#science" class="more">
                                more (7)
                            </a>
                        </li>
                </ol>
            </td>
            <td>
                <ol>
                        <li><a href="http://stackapps.com" title="apps, scripts, and development with the Stack Exchange API">Stack Apps</a></li>
                        <li><a href="http://meta.stackexchange.com" title="meta-discussion of the Stack Exchange family of Q&amp;A websites">Meta Stack Exchange</a></li>
                        <li><a href="http://area51.stackexchange.com" title="proposing new sites in the Stack Exchange network">Area 51</a></li>
                        <li><a href="http://careers.stackoverflow.com">Stack Overflow Careers</a></li>
                    
                </ol>
            </td>
    </tr>
</table>
                </div>
            </div>

            <div id="copyright">
                site design / logo &#169; 2014 stack exchange inc; user contributions licensed under <a href="http://creativecommons.org/licenses/by-sa/3.0/" rel="license">cc by-sa 3.0</a> 
                with <a href="http://blog.stackoverflow.com/2009/06/attribution-required/" rel="license">attribution required</a>
            </div>
            <div id="svnrev">
                rev 2014.6.30.1688
            </div>
            
        </div>
    </div>
    <noscript>
        <div id="noscript-warning">Stack Overflow works best with JavaScript enabled<img src="http://pixel.quantserve.com/pixel/p-c1rF4kxgLUzNc.gif" alt="" class="dno"></div>
    </noscript>
<script>var p = "http", d = "static"; if (document.location.protocol == "https:") { p += "s"; d = "engine"; } var z = document.createElement("script"); z.type = "text/javascript"; z.async = true; z.src = p + "://" + d + ".adzerk.net/ados.js"; var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(z, s);</script>
<script>
    var ados = ados || {};
    ados.run = ados.run || [];
    ados.run.push(function () { ados_setKeywords('c%2b%2b,exception-handling');; ados_load(); });         
</script>

    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () { (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m);
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');
        ga('create', 'UA-5620270-1');        
        
        ga('set', 'dimension2', '|c++|exception-handling|');         
        ga('send', 'pageview');
        var _qevents = _qevents || [],
            _comscore = _comscore || [];
        (function () {
            var ssl='https:'==document.location.protocol,
                s=document.getElementsByTagName('script')[0],
                qc=document.createElement('script');
            qc.async=true;
            qc.src=(ssl?'https://secure':'http://edge')+'.quantserve.com/quant.js';
            s.parentNode.insertBefore(qc, s);
            var sc=document.createElement('script');
            sc.async=true;
            sc.src=(ssl?'https://sb':'http://b') + '.scorecardresearch.com/beacon.js';
            s.parentNode.insertBefore(sc, s);
        })();
        _comscore.push({ c1: "2", c2: "17440561" });
        _qevents.push({ qacct: "p-c1rF4kxgLUzNc" });
    </script>        
    
    </body>
</html>