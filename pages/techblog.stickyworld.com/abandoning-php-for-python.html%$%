<!DOCTYPE html>
<html lang="en">

<head>
  <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>
  <link rel="stylesheet" type="text/css" href="./theme/css/style.css">
  <link rel="stylesheet" type="text/css" href="./theme/css/syntax.css">
  <link href="http://cdn-images.mailchimp.com/embedcode/classic-081711.css" rel="stylesheet" type="text/css">
  <style type="text/css">
    #mc_embed_signup{margin-top:64px; margin-bottom:64px; background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }
  </style>
  <script type="text/javascript" src="//use.typekit.net/llm5mlj.js"></script>
  <script type="text/javascript">try{Typekit.load();}catch(e){}</script>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width; initial-scale=1.0">
  <meta name="author" content="Stickyworld Tech Team">
  <meta name="description" content="Posts and writings by Stickyworld Tech Team">
  
  <link rel="shortcut icon" href="http://stickyworld-techteamblog.s3.amazonaws.com/favicon.png" type="image/x-icon" />

    <link href="http://techblog.stickyworld.com/feeds/all.atom.xml" type="application/atom+xml" rel="alternate" title="Stickyworld Tech Blog Full Atom Feed" />
    
  <meta name="keywords" content="">

  <title>
    Abandoning PHP for Python  </title>

  <script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-38003424-1']);
  _gaq.push(['_setSiteSpeedSampleRate', 25]);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</head>

<body>
  <aside>
    <div id="user_meta">
      <a href=".">
                <img src="http://stickyworld-techteamblog.s3.amazonaws.com/SW-logo_512x512.png" alt="logo">
              </a>
      <h2><a href=".">Stickyworld Tech Team</a></h2>
      <p>Our working practices</p>
      <ul>
                                <li><a href="http://www.stickyworld.com/" target="_blank">Stickyworld</a></li>
                      </ul>
    </div>
  </aside>

  <main>
    <header>
      <p>Posted on Mon 16 September 2013</p>
    </header>

    <article>
  <div id="article_title">
    <h3><a href="./abandoning-php-for-python.html">Abandoning PHP for Python</a></h3>
  </div>
  <div id="article_text">
    <p>I was always told to use the right tool for the job. After 12 years of working with PHP I'm still trying to understand what it's well-suited for.</p>
<p>Back in early 2011 I was working for a financial data provider in London. I was working on a large, LAMP-based, client-facing project. In any file of the codebase you could find HTML, PHP, SQL, some ORM usage, JavaScript and in some directories you'd find large amounts of files with no content at all.</p>
<p>A lot of hands had created a lot of code. The technical architecture of the code could change with a developer simply deciding to do things in a different way from the rest of the team. I quickly grew tired of cherry-picked design patterns being sprinkled over what was already very inconsistent code. With 3-4 programming languages in a single file formatting and good syntax were often thrown out the window.</p>
<p>I sat by a few developers who were into using Python in their spare time and really liked it's simplicity. At the same time I was seeing a lot of Ruby on Rails and Django projects being open-sourced. Everything had it's place and there was a place for everything. The syntax of the code was incredibly clear in both frameworks. There was magic to help remove complexity. I felt like I was missing something in life. I wanted to be able to feel like I was in control of a clean and well-thought out codebase.</p>
<p>This is the story of what key learnings I came across that helped me become a Pythonist.</p>
<div class="section" id="python-essential-reference">
<h2>Python Essential Reference</h2>
<p>The first book I picked up was <a class="reference external" href="http://www.amazon.co.uk/gp/product/B002EF2AQ6/ref=as_li_qf_sp_asin_il?ie=UTF8&amp;camp=1634&amp;creative=6738&amp;creativeASIN=B002EF2AQ6&amp;linkCode=as2&amp;tag=apertututori-21">Python Essential Reference</a>. It was written for people who already know how to write software. The content density and noise-to-signal ratio of this book is incredible. When I became a Python contractor this book sat next to my MacBook Pro every day for some time.</p>
</div>
<div class="section" id="community-wide-style-guidelines">
<h2>Community-wide style guidelines</h2>
<p>I quickly found myself reading through <a class="reference external" href="http://www.python.org/dev/peps/pep-0008/">PEP-8</a> which is a widely-adopted style guide in the Python community. I could see the effect this guide had when I attended a two-day Python conference and everyone's code looked like one another's. There wasn't a context switch every time I saw a new codebase because the styling used was consistent with the community at large.</p>
</div>
<div class="section" id="package-management">
<h2>Package Management</h2>
<p>There is package management in PHP but I never found any code bases in the wild using it to the same extent as <a class="reference external" href="http://www.pip-installer.org/en/latest/">PIP</a>. Being able to install, uninstall, upgrade and use a wide variety of sources for external and internal libraries was fantastic. When was the last time you looked at a PHP project and saw a list of all the third-party libraries and respective version numbers being used written in a single file?</p>
<p>It was around this point that I decided I'd rather be an unemployed Pythonist than an employed LAMP developer.</p>
</div>
<div class="section" id="django-s-first-tutorial">
<h2>Django's first tutorial</h2>
<p>The first <a class="reference external" href="https://docs.djangoproject.com/en/1.5/intro/tutorial01/">tutorial</a> the Django project introduces you to on their website is golden. I can't say it was very easy the first time around as I was learning a lot as I was going through it. It probably took me two separate, four-hour sessions to get the example poll app up, create an admin and re-do the process in order to reasonably understand each step. This is probably the most career-enhancing tutorial I've ever completed.</p>
</div>
<div class="section" id="restful-and-dry">
<h2>RESTful and DRY</h2>
<p>Building RESTful client libraries in Python was a real treat. Instagram came out with Python bindings around the time I was beginning to use the language. They used a very dry method of describing <a class="reference external" href="https://github.com/Instagram/python-instagram/blob/master/instagram/client.py#L29-L197">each endpoint</a> which this <a class="reference external" href="https://github.com/Instagram/python-instagram/blob/master/instagram/bind.py#L33-L153">piece of magic</a> would take as parameters. It wraps up so much complexity into simple interfaces and made their service calls feel very Pythonic.</p>
</div>
<div class="section" id="evented-codebases">
<h2>Evented Codebases</h2>
<p>I never came across anything in the evented space in PHP in the years I worked as a LAMP developer. I knew node.js did a good job in this area but when I came across <a class="reference external" href="http://www.tornadoweb.org/en/stable/httpclient.html">Tornado's Asynchronous HTTP client</a> and <a class="reference external" href="https://github.com/leporo/tornado-redis">Redis bindings for tornado</a> I knew I could build some very low-latency, low-line count backends in Python that worked in an asynchronous fashion.</p>
<p>I've built backends that do authentication, query a few million rows in Solr and return JSON in a couple of milliseconds thanks to Python.</p>
</div>
<div class="section" id="get-started-and-get-code-out-the-door">
<h2>Get started and get code out the door</h2>
<p>If you're getting started with Django today I'd recommend building your first project on <a class="reference external" href="https://c9.io/">Cloud9</a>. They've done a good job of putting together an online text editor, command line and virtual environment. It'll save you a lot of time doing installs and setups on your own machine.</p>
<p>Once your project is ready to go out <a class="reference external" href="http://www.linode.com/?r=809d49d06eaeaf519113f598517d7884393d26c2">Linode</a> and <a class="reference external" href="https://www.digitalocean.com/?refcode=074ce6598105">Digital Ocean</a> are pretty solid places to host your code. You can spin up an Ubuntu 13 instance and run the following to get your environment up:</p>
<div class="highlight"><pre><span class="nv">$ </span>sudo apt-get update
<span class="nv">$ </span>sudo apt-get install build-essential curl git-core <span class="se">\</span>
  libevent-2.0-5 libevent-dev libmysqlclient-dev libssl-dev <span class="se">\</span>
  libtool libxslt-dev linux-kernel-headers lsof mysql-server <span class="se">\</span>
  nginx python-dev python-pip python-virtualenv rabbitmq-server <span class="se">\</span>
  redis-server s3cmd screen supervisor unzip uuid-dev <span class="se">\</span>
  virtualenvwrapper zip zlib1g-dev
</pre></div>
<p>The details around deployments, configuration and security settings I'll save for another blog post.</p>
<p>If any of the above resonates please do <a class="reference external" href="http://uk.linkedin.com/in/marklitwintschik">get in touch</a>, we're always on the lookout for passionate Pythonists.</p>
</div>

  </div>
  
  <div id="mc_embed_signup">
      <form action="http://stickyworld.us2.list-manage.com/subscribe/post?u=f799fee76b9848ce0a48364e1&amp;id=f4c8a73209" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
          <h2>Signup for our low-traffic newsletter:</h2>
          <div class="mc-field-group">
              <label for="mce-EMAIL">Email Address </label>
              <input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
          </div>
          <p>Powered by <a href="http://eepurl.com/BGM_X" title="MailChimp - email marketing made easy and fun">MailChimp</a></p>
          <div id="mce-responses" class="clear">
              <div class="response" id="mce-error-response" style="display:none"></div>
              <div class="response" id="mce-success-response" style="display:none"></div>
          </div>
          <div class="clear"><input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button"></div>
      </form>
  </div>
  
    <div class="comments">
      <div id="disqus_thread"></div>
      <script type="text/javascript">
	var disqus_url = "http://techblog.stickyworld.com";
	var disqus_identifier = "abandoning-php-for-python.html";
         (function() {
         var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
         dsq.src = 'http://stickyworldtechblog.disqus.com/embed.js';
         (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
      </script>
  </div>
  </article>

    <footer>
      <p><a href="./" class="button_accent">&larr; Back to Index</a></p>
    </footer>

    <div id="ending_message">
      <p>&copy Giulio Fidente. Built using <a href="http://getpelican.com" target="_blank">Pelican</a>. You can fork the theme on <a href="https://github.com/giulivo/pelican-svbhack" target="_blank">github</a>. .</p>
    </div>
  </main>
  </body>
</html>