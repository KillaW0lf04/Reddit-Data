<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

  <html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
    <head>
      
      <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
      <title>blist 1.3.6 : Python Package Index</title>
      <meta content="blist list b+tree btree fast copy-on-write sparse array sortedlist sorted sortedset weak weaksortedlist weaksortedset sorteddict btuple"/>
      <meta content="a list-like type with better asymptotic performance and similar performance on small lists"/>
       <link rel="alternate" type="application/rss+xml" title="RSS: 40 latest updates" href="https://pypi.python.org/pypi?:action=rss"/>
       <link rel="alternate" type="application/rss+xml" title="RSS: 40 newest packages" href="https://pypi.python.org/pypi?:action=packages_rss"/>
       <link rel="stylesheet" media="screen" href="/static/styles/screen-switcher-default.css" type="text/css"/>
       <link media="screen" href="/static/styles/netscape4.css" type="text/css" rel="stylesheet"/>
       <link media="print" href="/static/styles/print.css" type="text/css" rel="stylesheet"/>
       <link media="screen" href="/static/styles/largestyles.css" type="text/css" rel="alternate stylesheet" title="large text"/>
       <link media="screen" href="/static/styles/defaultfonts.css" type="text/css" rel="alternate stylesheet" title="default fonts"/>
       <link rel="stylesheet" media="screen" href="/static/css/docutils.css" type="text/css"/>
       <link rel="stylesheet" media="screen" href="/static/css/pygments.css" type="text/css"/>

       <!-- allow pypi to override the standard pydotorg/docutils/etc. styles -->
       <link rel="stylesheet" href="/static/css/pypi.css" type="text/css"/>
       <link media="screen" rel="stylesheet" href="/static/css/pypi-screen.css" type="text/css"/>

       
 <meta name="keywords" content="blist list b+tree btree fast copy-on-write sparse array sortedlist sorted sortedset weak weaksortedlist weaksortedset sorteddict btuple"/>
 <meta name="description" content="a list-like type with better asymptotic performance and similar performance on small lists"/>
 <link rel="meta" title="DOAP" type="application/rdf+xml" href="/pypi?:action=doap&amp;name=blist&amp;version=1.3.6"/>
 <style type="text/css">
  table.form th {white-space: pre;}
 </style>


       <style type="text/css">
       </style>
    </head>
    <body>
     

      <!--  Logo  -->
      <h1 id="logoheader">
       <a accesskey="1" href="http://www.python.org" id="logolink">
          <img src="/static/images/python-logo.png" alt="homepage" border="0" id="logo"/>
       </a>
      </h1>
      <!--  Skip to Navigation  -->
      <div class="skiptonav"><a accesskey="2" href="#left-hand-navigation"><img src="/static/images/trans.gif" alt="skip to navigation" border="0" id="skiptonav"/></a></div>
      <div class="skiptonav"><a accesskey="3" href="#content-body"><img src="/static/images/trans.gif" alt="skip to content" border="0" id="skiptocontent"/></a></div>
      <!--  Utility Menu  -->

      <div id="utility-menu">
        <!--  Search Box  -->
        <div id="searchbox">
          <form id="searchform" method="get" name="searchform" action="/pypi">
            <input type="hidden" name=":action" value="search"/>
            <div id="search">
              <input class="input-text" id="term" name="term" autofocus="autofocus"/>
              <input class="input-button" type="submit" name="submit" value="search" id="submit"/>
            </div>
          </form>
        </div>
<!-- XXX: reinstate this       <div id="screen-switcher"></div> -->
      </div>
      <div id="left-hand-navigation">

        <!--  Main Menu NEED LEVEL TWO HEADER AND FOOTER -->
        <div id="menu">
          <ul class="level-one">
            <li class="selected">
              <a class="selected" href="/pypi">Package Index</a>

              <ul class="level-two">

                
                  <li class=""><a class="" href="/pypi?%3Aaction=browse">Browse&nbsp;packages</a></li>
                
                
                  <li class=""><a class="" href="/pypi?%3Aaction=submit_form">Package&nbsp;submission</a></li>
                
                
                  <li class=""><a class="" href="/pypi?%3Aaction=list_classifiers">List&nbsp;trove&nbsp;classifiers</a></li>
                
                
                  <li class=""><a class="" href="/pypi?%3Aaction=index">List&nbsp;packages</a></li>
                
                
                  <li class=""><a class="" href="/pypi?%3Aaction=rss">RSS&nbsp;(latest&nbsp;40&nbsp;updates)</a></li>
                
                
                  <li class=""><a class="" href="/pypi?%3Aaction=packages_rss">RSS&nbsp;(newest&nbsp;40&nbsp;packages)</a></li>
                
		<li><a href="/pypi?:action=browse&amp;c=533&amp;show=all">Python 3 Packages</a></li>
        <li><a href="http://wiki.python.org/moin/CheeseShopTutorial">PyPI Tutorial</a></li>
        <li><a href="/security">PyPI Security</a></li>
        <li><a href="http://sourceforge.net/tracker/?group_id=66150&amp;atid=513504">PyPI Support</a></li>
        <li><a href="https://bitbucket.org/pypa/pypi/issues">PyPI Bug Reports</a></li>
        <li><a href="http://www.python.org/sigs/distutils-sig/">PyPI Discussion</a></li>
        <li><a href="http://wiki.python.org/moin/CheeseShopDev">PyPI Developer Info</a></li>
       </ul>

            </li>




            <li class=""><a href="http://www.python.org/about" class="" title="About The Python Language">About</a>
            </li><li class=""><a href="http://www.python.org/news" class="" title="">News</a>
            </li><li class=""><a href="http://www.python.org/doc" class="" title="">Documentation</a>
            </li><li class=""><a href="http://www.python.org/download" title="">Download</a>


            </li><li class=""><a href="http://www.python.org/community" class="" title="">Community</a>
            </li><li class=""><a href="http://www.python.org/psf" class="" title="Python Software Foundation">Foundation</a>
            </li><li class=""><a href="http://www.python.org/dev" class="" title="Python Core Language Development">Core Development</a>
            </li><li class=""><a href="http://www.python.org/links" class="" title="">Links</a>
          </li>
          </ul>
        </div>

      </div>
      <div id="content-body">
        <div id="body-main">
          <div id="content">

            <div id="breadcrumb">
              <a href="/pypi">Package Index</a>
              
                <span class="breadcrumb-separator">&gt;</span>
                <a href="/pypi/blist">blist</a>
              
              
                <span class="breadcrumb-separator">&gt;</span>
                <a href="/pypi/blist/1.3.6">1.3.6</a>
              

            </div>

            <div id="document-floating">

            <div id="document-navigation" style="overflow-y: auto; max-height: 15em; overflow-x: hidden;">
		
                  <h4>Not Logged In</h4>

                  <ul>
		    
                    <li><a href="/pypi?%3Aaction=login">Login</a></li>
                    <li><a href="/pypi?%3Aaction=register_form">Register</a></li>
                    <li><a href="/pypi?%3Aaction=forgotten_password_form">Lost Login?</a></li>
		    <li>Use <a href="/pypi?:action=openid">OpenID</a>
                      
                        <a style="border: none;" href="/pypi?:action=login&amp;provider=Google"><img width="16" height="16" src="https://www.google.com/favicon.ico" alt="Google" title="Google"/></a>
                      
                      
                        <a style="border: none;" href="/pypi?:action=login&amp;provider=myOpenID"><img width="16" height="16" src="https://www.myopenid.com/favicon.ico" alt="myOpenID" title="myOpenID"/></a>
                      
                      
                        <a style="border: none;" href="/pypi?:action=login&amp;provider=Launchpad"><img width="16" height="16" src="https://launchpad.net/@@/launchpad.png" alt="Launchpad" title="Launchpad"/></a>
                      
                    </li>
                  </ul>

		

		

                <div id="statusdiv">
                </div>
            </div>
        </div>
        


            <div class="section">
              <h1>blist 1.3.6</h1>

              
<div id="download-button">
 
  <a class="button green" style="float:right;" href="https://pypi.python.org/packages/source/b/blist/blist-1.3.6.tar.gz">Download<br/>
    <span style="font-size: 75%">blist-1.3.6.tar.gz</span>
  </a>
 
 
</div>

<p style="font-style: italic">a list-like type with better asymptotic performance and similar performance on small lists</p>








<p>The <tt class="docutils literal">blist</tt> is a drop-in replacement for the Python list that provides
better performance when modifying large lists.  The blist package also
provides <tt class="docutils literal">sortedlist</tt>, <tt class="docutils literal">sortedset</tt>, <tt class="docutils literal">weaksortedlist</tt>,
<tt class="docutils literal">weaksortedset</tt>, <tt class="docutils literal">sorteddict</tt>, and <tt class="docutils literal">btuple</tt> types.</p>
<p>Full documentation is at the link below:</p>
<p><a class="reference external" href="http://stutzbachenterprises.com/blist-doc/">http://stutzbachenterprises.com/blist-doc/</a></p>
<p>Python's built-in list is a dynamically-sized array; to insert or
remove an item from the beginning or middle of the list, it has to
move most of the list in memory, i.e., O(n) operations.  The blist
uses a flexible, hybrid array/tree structure and only needs to move a
small portion of items in memory, specifically using O(log n)
operations.</p>
<p>For small lists, the blist and the built-in list have virtually
identical performance.</p>
<p>To use the blist, you simply change code like this:</p>
<pre class="doctest-block">
&gt;&gt;&gt; items = [5, 6, 2]
&gt;&gt;&gt; more_items = function_that_returns_a_list()
</pre>
<p>to:</p>
<pre class="doctest-block">
&gt;&gt;&gt; from blist import blist
&gt;&gt;&gt; items = blist([5, 6, 2])
&gt;&gt;&gt; more_items = blist(function_that_returns_a_list())
</pre>
<p>Here are some of the use cases where the blist asymptotically
outperforms the built-in list:</p>
<table border="1" class="docutils">
<colgroup>
<col width="63%" />
<col width="24%" />
<col width="13%" />
</colgroup>
<thead valign="bottom">
<tr><th class="head">Use Case</th>
<th class="head">blist</th>
<th class="head">list</th>
</tr>
</thead>
<tbody valign="top">
<tr><td>Insertion into or removal from a list</td>
<td>O(log n)</td>
<td>O(n)</td>
</tr>
<tr><td>Taking slices of lists</td>
<td>O(log n)</td>
<td>O(n)</td>
</tr>
<tr><td>Making shallow copies of lists</td>
<td>O(1)</td>
<td>O(n)</td>
</tr>
<tr><td>Changing slices of lists</td>
<td>O(log n + log k)</td>
<td>O(n+k)</td>
</tr>
<tr><td>Multiplying a list to make a sparse list</td>
<td>O(log k)</td>
<td>O(kn)</td>
</tr>
<tr><td>Maintain a sorted lists with bisect.insort</td>
<td>O(log**2 n)</td>
<td>O(n)</td>
</tr>
</tbody>
</table>
<p>So you can see the performance of the blist in more detail, several
performance graphs available at the following link:
<a class="reference external" href="http://stutzbachenterprises.com/blist/">http://stutzbachenterprises.com/blist/</a></p>
<p>Example usage:</p>
<pre class="doctest-block">
&gt;&gt;&gt; from blist import *
&gt;&gt;&gt; x = blist([0])             # x is a blist with one element
&gt;&gt;&gt; x *= 2**29                 # x is a blist with &gt; 500 million elements
&gt;&gt;&gt; x.append(5)                # append to x
&gt;&gt;&gt; y = x[4:-234234]           # Take a 500 million element slice from x
&gt;&gt;&gt; del x[3:1024]              # Delete a few thousand elements from x
</pre>
<div class="section" id="other-data-structures">
<h1>Other data structures</h1>
<p>The blist package provides other data structures based on the blist:</p>
<ul class="simple">
<li>sortedlist</li>
<li>sortedset</li>
<li>weaksortedlist</li>
<li>weaksortedset</li>
<li>sorteddict</li>
<li>btuple</li>
</ul>
<p>These additional data structures are only available in Python 2.6 or
higher, as they make use of Abstract Base Classes.</p>
<p>The sortedlist is a list that's always sorted.  It's iterable and
indexable like a Python list, but to modify a sortedlist the same
methods you would use on a Python set (add, discard, or remove).</p>
<pre class="doctest-block">
&gt;&gt;&gt; from blist import sortedlist
&gt;&gt;&gt; my_list = sortedlist([3,7,2,1])
&gt;&gt;&gt; my_list
sortedlist([1, 2, 3, 7])
&gt;&gt;&gt; my_list.add(5)
&gt;&gt;&gt; my_list[3]
5
&gt;&gt;&gt;
</pre>
<p>The sortedlist constructor takes an optional &quot;key&quot; argument, which may
be used to change the sort order just like the sorted() function.</p>
<pre class="doctest-block">
&gt;&gt;&gt; from blist import sortedlist
&gt;&gt;&gt; my_list = sortedlist([3,7,2,1], key=lambda i: -i)
sortedlist([7, 3, 2, 1]
&gt;&gt;&gt;
</pre>
<p>The sortedset is a set that's always sorted.  It's iterable and
indexable like a Python list, but modified like a set.  Essentially,
it's just like a sortedlist except that duplicates are ignored.</p>
<pre class="doctest-block">
&gt;&gt;&gt; from blist import sortedset
&gt;&gt;&gt; my_set = sortedset([3,7,2,2])
sortedset([2, 3, 7]
&gt;&gt;&gt;
</pre>
<p>The weaksortedlist and weaksortedset are weakref variations of the
sortedlist and sortedset.</p>
<p>The sorteddict works just like a regular dict, except the keys are
always sorted.  The sorteddict should not be confused with Python
2.7's OrderedDict type, which remembers the insertion order of the
keys.</p>
<pre class="doctest-block">
&gt;&gt;&gt; from blist import sorteddict
&gt;&gt;&gt; my_dict = sorteddict({1: 5, 6: 8, -5: 9})
&gt;&gt;&gt; my_dict.keys()
[-5, 1, 6]
&gt;&gt;&gt;
</pre>
<p>The btuple is a drop-in replacement for the built-in tuple.  Compared
to the built-in tuple, the btuple offers the following advantages:</p>
<ul class="simple">
<li>Constructing a btuple from a blist takes O(1) time.</li>
<li>Taking a slice of a btuple takes O(n) time, where n is the size of
the original tuple.  The size of the slice does not matter.</li>
</ul>
<pre class="doctest-block">
&gt;&gt;&gt; from blist import blist, btuple
&gt;&gt;&gt; x = blist([0])             # x is a blist with one element
&gt;&gt;&gt; x *= 2**29                 # x is a blist with &gt; 500 million elements
&gt;&gt;&gt; y = btuple(x)              # y is a btuple with &gt; 500 million elements
</pre>
</div>
<div class="section" id="installation-instructions">
<h1>Installation instructions</h1>
<p>Python 2.5 or higher is required.  If building from the source
distribution, the Python header files are also required.  In either
case, just run:</p>
<blockquote>
python setup.py install</blockquote>
<p>If you're running Linux and see a bunch of compilation errors from
GCC, you probably do not have the Python header files installed.
They're usually located in a package called something like
&quot;python2.6-dev&quot;.</p>
<p>The blist package will be installed in the 'site-packages' directory of
your Python installation.  (Unless directed elsewhere; see the
&quot;Installing Python Modules&quot; section of the Python manuals for details
on customizing installation locations, etc.).</p>
<p>If you downloaded the source distribution and wish to run the
associated test suite, you can also run:</p>
<blockquote>
python setup.py test</blockquote>
<p>which will verify the correct installation and functioning of the
package.  The tests require Python 2.6 or higher.</p>
</div>
<div class="section" id="feedback">
<h1>Feedback</h1>
<p>We're eager to hear about your experiences with the blist.  You can
email me at <a class="reference external" href="mailto:daniel&#64;stutzbachenterprises.com">daniel&#64;stutzbachenterprises.com</a>.  Alternately, bug reports
and feature requests may be reported on our bug tracker at:
<a class="reference external" href="http://github.com/DanielStutzbach/blist/issues">http://github.com/DanielStutzbach/blist/issues</a></p>
</div>
<div class="section" id="how-we-test">
<h1>How we test</h1>
<p>In addition to the tests include in the source distribution, we
perform the following to add extra rigor to our testing process:</p>
<blockquote>
<ol class="arabic simple">
<li>We use a &quot;fuzzer&quot;: a program that randomly generates list
operations, performs them using both the blist and the built-in
list, and compares the results.</li>
<li>We use a modified Python interpreter where we have replaced the
array-based built-in list with the blist.  Then, we run all of
the regular Python unit tests.</li>
</ol>
</blockquote>
</div>


<a name="downloads">&nbsp;</a>
<table class="list" style="margin-bottom: 10px;">
<tr>
  <th>File</th>
  <th>Type</th>
  <th>Py Version</th>
  <th>Uploaded on</th>
  <th style="text-align: right;">Size</th>
</tr>

<tr class="odd">

    <td>
    <span style="white-space: nowrap;">
      <a href="https://pypi.python.org/packages/source/b/blist/blist-1.3.6.tar.gz#md5=a538f1a24b9191e3c40252e9397408a9">blist-1.3.6.tar.gz</a>
      (<a title="MD5 Digest" href="/pypi?:action=show_md5&amp;digest=a538f1a24b9191e3c40252e9397408a9">md5</a>)
    </span>
    
        </td>
  <td style="white-space: nowrap;">
    Source
  </td>
  <td>
    
  </td>
  <td>2014-03-13</td>
  <td style="text-align: right;">119KB</td>

</tr>

<tr><td id="last" colspan="6"/></tr>
  </table>

<ul class="nodot">
  <li><strong>Downloads (All Versions):</strong></li>
  <li>
    <span>873</span> downloads in the last day
  </li>
  <li>
    <span>7673</span> downloads in the last week
  </li>
  <li>
    <span>25699</span> downloads in the last month
  </li>
</ul>



<ul class="nodot">
 <li>
  <strong>Author:</strong>
  <span>Stutzbach Enterprises, LLC</span>
 </li>

 

 

<!-- The <th> elements below are a terrible terrible hack for setuptools -->
 <li>
  <strong>Home Page:</strong>
  <!-- <th>Home Page -->
  <a href="http://stutzbachenterprises.com/blist/">http://stutzbachenterprises.com/blist/</a>
 </li>


 

 


 <li>
  <strong>Keywords:</strong>
  <span>blist list b+tree btree fast copy-on-write sparse array sortedlist sorted sortedset weak weaksortedlist weaksortedset sorteddict btuple</span>
 </li>

 <li>
  <strong>License:</strong>
  
  
  <span>BSD</span>
  
 </li>

 

<!-- TODO: add link to products in follow dependencies... -->
 
 <li>
  <strong>Provides</strong>
  blist
 </li>
 

 <li>
  <strong>Categories</strong>
  <ul class="nodot">
   <li>
    <a href="/pypi?:action=browse&amp;c=5">Development Status :: 5 - Production/Stable</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=30">Intended Audience :: Developers</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=40">Intended Audience :: Science/Research</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=60">License :: OSI Approved :: BSD License</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=181">Programming Language :: C</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=530">Programming Language :: Python :: 2.5</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=531">Programming Language :: Python :: 2.6</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=532">Programming Language :: Python :: 2.7</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=533">Programming Language :: Python :: 3</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=535">Programming Language :: Python :: 3.1</a>
   </li>
   <li>
    <a href="/pypi?:action=browse&amp;c=538">Programming Language :: Python :: 3.2</a>
   </li>
  </ul>
 </li>



 

 

 

 

 


 <li>
  <strong>Package Index Owner:</strong>
  <span>stutzbach</span>
 </li>

 

 <li>
  <strong><a href="http://usefulinc.com/doap">DOAP</a> record:</strong>
  <a href="/pypi?:action=doap&amp;name=blist&amp;version=1.3.6">blist-1.3.6.xml</a>
 </li>

</ul>





            </div>


          </div>
          <div id="footer"><div id="credits">
            <a href="http://www.python.org/about/website">Website maintained by the Python community</a><br/>
            <a href="https://www.fastly.com/" title="Real-time CDN services provided by Fastly">Real-time CDN by Fastly</a> /
            <a href="http://developer.rackspace.com/" title="Server hosting by Rackspace Open Source support">hosting by Rackspace</a> /
            <a href="http://www.timparkin.co.uk/" title="Design by Tim Parkin, Yorkshire man, photographer and developer">design by Tim Parkin</a>
          </div>
          Copyright © 1990-2014, <a href="http://www.python.org/psf">Python Software Foundation</a><br/>
          <a href="http://www.python.org/about/legal">Legal Statements</a>

          </div>
        </div>
      </div>

      <script type="text/javascript">
        // <![CDATA[
            var _gauges = _gauges || [];
            (function() {
              var t   = document.createElement('script');
              t.type  = 'text/javascript';
              t.async = true;
              t.id    = 'gauges-tracker';
              t.setAttribute('data-site-id', '5255e08ef5a1f57520000004');
              t.src = '//secure.gaug.es/track.js';
              var s = document.getElementsByTagName('script')[0];
              s.parentNode.insertBefore(t, s);
            })();
        // ]]>
      </script>

      <script type="text/javascript" src="//statuspage-production.s3.amazonaws.com/se.js">
      </script>
      <script type="text/javascript">
        window.fetchStatusPage({
          pageId: '2p66nmmycsj3',
          // <![CDATA[
          successCallback: function(data) {
            if (data.incidents.length > 0) {
              var div = document.getElementById('statusdiv');
              var reports = "</br><h4 id='statusbox'>Status</h4>\n";
              var outage = 0;
              var maintenance = 0;
              for (i in data.incidents) {
                var incident = data.incidents[i];
                var message, status = incident.status;
                if (status === 'scheduled') {
                  message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' scheduled.</a></li>\n';
                  reports += message;
                  maintenance += 1;
                } else if (status === 'in_progress') {
                  message = '<li><a href="' + incident.shortlink + '">' + incident.name + ' is currently in progress.' + '</a></li>\n';
                  reports += message;
                  maintenance += 1;
                } else if (status !== 'resolved' && status !== 'postmortem' && status !== 'completed') {
                  message = '<li><a href="' + incident.shortlink + '">' + incident.name + ': ' + incident.status + '</a></li>\n';
                  reports += message;
                  outage += 1;
                }
              }
              if (outage + maintenance === 0) {
                reports += "<li><a href='http://status.python.org'>Nothing to report</a></li>";
              }
              div.innerHTML=reports;
              if (outage > 0) {
                var statusbox = document.getElementById("statusbox");
                statusbox.style.background = '#FC234A';
              }
            }
          }
          // ]]>
        });
      </script>

    </body>
  </html>

