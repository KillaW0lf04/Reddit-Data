<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Organizational Skills Beat Algorithmic Wizardry</title>
<link rel="stylesheet" type="text/css" href="p21.css"/>
<link rel="alternate" type="application/atom+xml" title="Atom feed" href="atom.xml"/>
</head>
<body>
<div id="top"><div id="header">
<a href="/" id="home">programming in the<br/>twenty-first century</a>
<p id="tag">It's not about technology for its own sake. It's about being able to implement your ideas.</p>
</div></div>
<div id="main">
<div id="right">
<p class="stuff">
<a href="index.html">Newest Entry</a><br/>
<a href="archives.html">Complete Archives</a><br/>
<p class="about">I'm a <a href="56.html">recovering programmer</a> who has been designing video games since the 1980s, doing things that seem baroquely hardcore in retrospect, like writing Super Nintendo games entirely in assembly language. These days I use whatever tools are the most fun and give me the biggest advantage.</p>
<p><b>james.hague @ gmail.com</b></p>
<p>Where are <a href="57.html">the comments</a>?</p>
<p><a href="atom.xml">atom feed (for news readers)</a></p>
</div>
<div id="left">
<h1>Organizational Skills Beat Algorithmic Wizardry</h1>I've seen a number of blog entries about technical interviews at high-end companies that make me glad I'm not looking for work as a programmer. The ability to implement oddball variants of heaps and trees on the spot. Puzzles with difficult constraints. Numeric problems that would take ten billion years to complete unless you can cleverly analyze and rephrase the math. My first reaction is wow, how do they manage to hire anyone?
<br/><br/>My second reaction is that the vast majority of programming doesn't involve this kind of algorithmic wizardry.
<br/><br/>When it comes to writing code, the number one most important skill is how to keep a tangle of features from collapsing under the weight of its own complexity. I've worked on large telecommunications systems, console games, blogging software, a bunch of personal tools, and very rarely is there some tricky data structure or algorithm that casts a looming shadow over everything else. But there's always lots of state to keep track of, rearranging of values, handling special cases, and carefully working out how all the pieces of a system interact. To a great extent the act of coding is one of organization. Refactoring. Simplifying. Figuring out how to remove extraneous manipulations here and there.
<br/><br/>This is the reason there are so many accidental programmers. You don't see people casually become neurosurgeons in their spare time--the necessary training is specific and intense--but lots of people pick up enough coding skills to build things on their own. When I learned to program on an 8-bit home computer, I didn't even know what an algorithm was. I had no idea how to sort data, and fortunately for the little games I was designing I didn't need to. The code I wrote was all about timers and counters and state management. I was an organizer, not a genius.
<br/><br/>I built a custom a tool a few years ago that combines images into rectangular textures. It's not a big program--maybe 1500 lines of Erlang and C. There's one little twenty line snippet that does the rectangle packing, and while it wasn't hard to write, I doubt I could have made it up in an interview. The rest of the code is for loading files, generating output, dealing with image properties (such as origins), and handling the data flow between different parts of the program. This is also the code I tweak whenever I need a new feature, better error handling, or improved usability.
<br/><br/>That's representative of most software development.
<br/><br/>(If you liked this, you might enjoy <a href="149.html">Hopefully More Controversial Programming Opinions</a>.)
<div id="footer"><a href="177.html" id="permalink">permalink</a> June 19, 2013</div><div id="prev"><h1>Previously</h1><a href="176.html">Tips for Writing Functional Programming Tutorials</a><br/><a href="175.html">Getting Comfortable with the Softer Side of Development</a><br/><a href="174.html">Flickr's Redesign is a Series of Evolutionary Changes</a><br/><a href="173.html">Stumbling Into the Cold Expanse of Real Programming</a><br/><a href="172.html">A Short Quiz About Language Design</a><br/></div></div></div></body></html>