<!DOCTYPE html><!--[if IE 7]><html class="layout-wrapper ie ie7 lte9 lte8 lte7"><![endif]--><!--[if IE 8]><html class="layout-wrapper ie ie8 lte9 lte8"><![endif]--><!--[if IE 9]><html class="layout-wrapper ie ie9 lte9"><![endif]--><!--[if (gte IE 9)|!(IE)]<!--><html class="layout-wrapper"><head><title>Python Developers: Optimize Video Streaming 20x with Python and C | Toptal</title><meta content="Porn is a  big industry. There aren’t many sites on the Internet that can rival the traffic of its biggest players. And juggling this immense traffic is tough. To make things even harder, much of the content served from porn sites is made up of low latency live streams rather than simple static video content. But for all of the challenges involved, rarely have I read about the developers who take them on. So I decided to write about my own experience on the job." name="description" /><meta charset="utf-8" /><meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible" />
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"beacon-6.newrelic.com","errorBeacon":"bam.nr-data.net","licenseKey":"e3359cee6b","applicationID":"2530279","transactionName":"JV0NEUYJCQkARxgVEwReCgYbFgoWEUYYFg4JRQ==","queueTime":0,"applicationTime":23,"ttGuid":"","agentToken":null,"agent":"js-agent.newrelic.com/nr-411.min.js","extra":""}</script>
<script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o?o:n)},o,o.exports)}return n[e].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({D5DuLP:[function(t,n){function e(t,n){var e=r[t];return e?e.apply(this,n):(o[t]||(o[t]=[]),void o[t].push(n))}var r={},o={};n.exports=e,e.queues=o,e.handlers=r},{}],handle:[function(t,n){n.exports=t("D5DuLP")},{}],G9z0Bl:[function(t,n){function e(){var t=l.info=NREUM.info;if(t&&t.agent&&t.licenseKey&&t.applicationID&&p&&p.body){l.proto="https"===f.split(":")[0]||t.sslForHttp?"https://":"http://",i("mark",["onload",a()]);var n=p.createElement("script");n.src=l.proto+t.agent,p.body.appendChild(n)}}function r(){"complete"===p.readyState&&o()}function o(){i("mark",["domContent",a()])}function a(){return(new Date).getTime()}var i=t("handle"),u=window,p=u.document,s="addEventListener",c="attachEvent",f=(""+location).split("?")[0],l=n.exports={offset:a(),origin:f,features:[]};p[s]?(p[s]("DOMContentLoaded",o,!1),u[s]("load",e,!1)):(p[c]("onreadystatechange",r),u[c]("onload",e)),i("mark",["firstbyte",a()])},{handle:"D5DuLP"}],loader:[function(t,n){n.exports=t("G9z0Bl")},{}]},{},["G9z0Bl"]);</script><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" /><meta content="authenticity_token" name="csrf-param" />
<meta content="GLpFQLEqx+FgiwXfcUHK2Kj7/+s/+HW/LMaoN+3wLcA=" name="csrf-token" /><meta content="How I Made Porn 20x More Efficient with Python" property="og:title" /><meta content="http://www.toptal.com/uploads/blog/post_image/26/toptal-blog-image-1373357390334.png" property="og:image" /><meta content="Toptal Engineering Blog" property="og:site_name" /><meta content="Porn is a  big industry. There aren’t many sites on the Internet that can rival the traffic of its biggest players. And juggling this immense traffic is tough. To make things even harder, much of the content served from porn sites is made up of low latency live streams rather than simple static video content. But for all of the challenges involved, rarely have I read about the developers who take them on. So I decided to write about my own experience on the job." property="og:description" /><link href="https://plus.google.com/114587739636351996016" rel="author" /><link href="/assets/favicons/favicon-a5173aa0a5d20de36b536216059b41ac.png" rel="icon" /><!--[if IE]><link href="/assets/favicons/favicon-df902fdb5f2fad2e38c444084cd2dcd5.ico" rel="shortcut icon" /><![endif]--><link href="/assets/favicons/touch_x57-b7bbea2ab94e028d8763d877ea57e003.png" rel="apple-touch-icon-precomposed" sizes="57x57" /><link href="/assets/favicons/touch_x72-d31b8e9543a50369f67a979121acefc6.png" rel="apple-touch-icon-precomposed" sizes="72x72" /><link href="/assets/favicons/touch_x114-d888198306815f26972b3c5bb6d1cbf2.png" rel="apple-touch-icon-precomposed" sizes="114x114" /><link href="/assets/favicons/touch_x57-b7bbea2ab94e028d8763d877ea57e003.png" rel="apple-touch-icon-precomposed" /><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" /><link href="/blog.rss" rel="alternate" title="Toptal Engineering Blog" type="application/rss+xml" /><meta content="authenticity_token" name="csrf-param" />
<meta content="GLpFQLEqx+FgiwXfcUHK2Kj7/+s/+HW/LMaoN+3wLcA=" name="csrf-token" /><script src="//cdnjs.cloudflare.com/ajax/libs/modernizr/2.7.1/modernizr.min.js" type="text/javascript"></script><script type="text/javascript">// TODO: Figure out how to override Modernizr test
(function () {
  var isIE, noFlexboxClassName;
  isIE = /MSIE/.test(navigator.userAgent) && !/Opera/.test(navigator.userAgent);
  isIE11 = !!window.MSInputMethodContext
  if (Modernizr && (Modernizr.flexbox && (isIE || isIE11))) {
    noFlexboxClassName = document.documentElement.className.replace('flexbox', 'no-flexbox');
    document.documentElement.className = noFlexboxClassName;
  }
})();</script><!--[if (lte IE 8)]><script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7/html5shiv.js" type="text/javascript"></script><![endif]--><script type="text/javascript">
//<![CDATA[
window.gon = {};gon.flash={};
//]]>
</script><link href="/assets/public-71ddce1b200b3e1daedf2dfab32d02b9.css" media="all" rel="stylesheet" type="text/css" /><link href="/assets/portal-7359598eefa899e625755b9ae507105b.css" media="all" rel="stylesheet" type="text/css" /><link href="/assets/blog-4949a22537f77758c6d2e10caa877229.css" media="all" rel="stylesheet" type="text/css" /><!--[if (lte IE 8)]><script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js" type="text/javascript"></script><![endif]--><!--[if (gte IE 9)|(!IE)]><!--><script src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js" type="text/javascript"></script><![endif]--><script src="//cdn.optimizely.com/js/186204918.js" type="text/javascript"></script><script type="text/javascript">window.optimizely = window.optimizely || [];</script></head><body class="layout" id="top"><div class="layout_layer" data-view="layout#layout"><header class="page_header" data-role="fixed-header"><div class="page_header_line"></div><div class="page_header" data-view="layout#menu"><div class="grid-row is-light_gray"><div class="grid-row-inner is-wide has-padding page_header_top"><div class="page_header_top-logotype_wrapper"><div class="page_header_top-logotype"><a class="logo is-big is-link" href="http://www.toptal.com/">Toptal</a></div></div><a class="page_header_top-expand" data-role="expand_menu" href="#"><span class="page_header_top-expand_icon"></span></a><nav class="page_header_top-nav_wrapper"><ul class="page_header_top-nav"><li class="page_header_top-nav_item">Join <span class="page_header_top-label_chunk is-toptal">Toptal </span>as a</li><li class="page_header_top-nav_item"><a class="button is-green_candy is-small page_header_top-nav_link is-button" href="https://www.toptal.com/companies/apply">Company</a></li><li class="page_header_top-nav_item has-right_border"><a class="button is-green_candy is-small page_header_top-nav_link is-button" href="/developers">Developer</a></li><li class="page_header_top-nav_item"><a class="button is-small is-light page_header_top-nav_link is-button" href="https://www.toptal.com/users/login">Login</a></li></ul></nav></div></div><nav class="grid-row has-top_border is-light_gray page_header_menu-wrapper" data-role="menu_wrapper"><div class="grid-row-inner is-wide has-small_padding page_header_menu"><div class="page_header_menu-items-wrapper"><ul class="page_header_menu-items" data-role="menu"><li class="page_header_menu-item is-home"><a class="page_header_menu-link" href="http://www.toptal.com/"></a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/why">Why</a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/how">How</a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/what">What</a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/clients">Clients</a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/team">Team</a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/community">Community</a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/blog">Blog</a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/contact">Contact</a></li><li class="page_header_menu-item"><a class="page_header_menu-link" href="/faq">FAQ</a></li><li class="page_header_menu-item is-join"><a class="button is-green_candy is-small page_hader_menu-button" href="https://www.toptal.com/companies/apply">Hire a developer</a></li><li class="page_header_menu-item is-join"><a class="button is-green_candy is-small page_hader_menu-button" href="/developers">Apply as a developer</a></li><li class="page_header_menu-item is-login"><a class="button is-light is-small page_hader_menu-button is-login" href="https://www.toptal.com/users/login">Login</a></li><li class="page_header_menu-item is-contacts"><ul class="page_header_menu-contact-items is-replacable"><li class="page_header_menu-contact-item">Call us:</li><li class="page_header_menu-contact-item"><a class="link is-dark page_header_menu-contact-link" href="tel:8886043188">888.604.3188</a></li><li class="page_header_menu-contact-item"><a class="page_header_menu-contact-link is-social is-facebook" href="https://www.facebook.com/pages/toptal/141928212544793"><span class="page_header_menu-contact-link-icon"></span></a></li><li class="page_header_menu-contact-item"><a class="page_header_menu-contact-link is-social is-twitter" href="https://twitter.com/toptalllc"><span class="page_header_menu-contact-link-icon"></span></a></li><li class="page_header_menu-contact-item"><a class="page_header_menu-contact-link is-social is-google_plus" href="https://plus.google.com/+Toptalllc/"><span class="page_header_menu-contact-link-icon"></span></a></li></ul></li></ul></div><a class="button is-green_candy is-tiny page_header_menu-hire" href="https://www.toptal.com/companies/apply">Hire a developer</a><ul class="page_header_menu-contact-items is-replacable"><li class="page_header_menu-contact-item">Call us:</li><li class="page_header_menu-contact-item"><a class="link is-dark page_header_menu-contact-link" href="tel:8886043188">888.604.3188</a></li><li class="page_header_menu-contact-item"><a class="page_header_menu-contact-link is-social is-facebook" href="https://www.facebook.com/pages/toptal/141928212544793"><span class="page_header_menu-contact-link-icon"></span></a></li><li class="page_header_menu-contact-item"><a class="page_header_menu-contact-link is-social is-twitter" href="https://twitter.com/toptalllc"><span class="page_header_menu-contact-link-icon"></span></a></li><li class="page_header_menu-contact-item"><a class="page_header_menu-contact-link is-social is-google_plus" href="https://plus.google.com/+Toptalllc/"><span class="page_header_menu-contact-link-icon"></span></a></li></ul></div></nav></div></header><main class="layout-main"><div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1&appId=565054136848482";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<header class="grid-row has-top_border has-bottom_border post_cover is-post"><div class="grid-row-inner is-wide has-big_padding blog_title for-show"></div></header><article class="grid-row is-transparent"><div class="grid-row-inner is-wide"><div class="post_title"><h1 class="post_title-text">How I Made Porn 20x More Efficient with Python</h1><a class="post_title-back" href="/blog">View all articles</a></div></div></article><section class="grid-row has-top_border is-transparent has-no_border" id="main_content"><div class="grid-row-inner has-medium_padding two_columns_layout is-wide"><div class="two_columns_layout-content"><div class="post is-full"><div class="post-meta-wrapper post_header"><div class="post_header-triangle"></div><div class="post_avatar post-meta-avatar"><img alt="Small_django" class="post_avatar-image" src="/uploads/user/photo/863/small_django.png" width="50" /></div><div class="post-meta is-full"><div class="post-meta-author"><p>by <strong><a href="/resume/gergely-kalman" class="link is-blue" target="_blank">Gergely Kalman</a></strong> - Recruiting Engineer
@ <a href="http://www.toptal.com" class="link is-blue" target="_blank">Toptal</a>
</p>
</div><div class="post-meta-tags"><a href="/blog#python-posts">#Python</a> <a href="/blog#c-posts">#C</a> <a href="/blog#epoll-posts">#epoll</a> <a href="/blog#rtmp-posts">#RTMP</a> <a href="/blog#flv-posts">#FLV</a> </div></div><div class="post-meta-extra"><div class="post-meta-extra-row"><div class="post-meta-extra-icon"><div class="post-meta-extra-icon-image is-share"></div></div><div class="post-share"><ul class="social_share"><li class="social_share-item is-facebook"><div class="fb-like" data-href="http://www.toptal.com/python/how-i-made-porn-20x-more-efficient-with-python" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false"></div>
</li><li class="social_share-item is-google_plus"><!-- Place this tag where you want the share button to render. -->
<div class="g-plus" data-action="share" data-annotation="bubble" data-href="http://www.toptal.com/python/how-i-made-porn-20x-more-efficient-with-python"></div>

<!-- Place this tag after the last share tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</li><li class="social_share-item is-linkedin"><script src="//platform.linkedin.com/in.js" type="text/javascript"> lang: en_US</script><script type="IN/Share" data-url="http://www.toptal.com/python/how-i-made-porn-20x-more-efficient-with-python" data-counter="right"></script>
</li><li class="social_share-item is-twitter"><a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.toptal.com/python/how-i-made-porn-20x-more-efficient-with-python" data-text="" data-via="toptalllc">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</li></ul></div></div></div></div><div class="content_body" data-subscribe="true" data-view="content#body"><h2 id="intro">Intro</h2>

<p>Porn is a <a href="http://www.extremetech.com/computing/123929-just-how-big-are-porn-sites">big industry</a>. There aren’t many sites on the Internet that can rival the traffic of its biggest players.</p>

<p>And juggling this immense traffic is tough. To make things even harder, much of the content served from porn sites is made up of low latency live streams rather than simple static video content. But for all of the challenges involved, rarely have I read about the developers who take them on. So I decided to write about my own experience on the job.</p>

<h2 id="whats-the-problem">What’s the problem?</h2>

<p>A few years ago, I was working for the 26th (at the time) most visited website in the world—not just the porn industry: the world.</p>

<p>At the time, the site served up porn streaming requests with the Real Time Messaging protocol (RTMP). More specifically, it used a Flash Media Server (FMS) solution, built by Adobe, to provide users with live streams. The basic process was as follows:</p>

<ol>
  <li>The user requests access to some live stream</li>
  <li>The server replies with an RTMP session playing the desired footage</li>
</ol>

<p>For a couple reasons, FMS wasn’t a good choice for us, starting with its costs, which included the purchasing of both:</p>

<ol>
  <li>Windows licenses for every machine on which we ran FMS.</li>
  <li>~$4k <a href="http://www.adobe.com/products/adobe-media-server-family/buying-guide-pricing.html">FMS-specific licenses</a>, of which we had to purchase several hundred (and more every day) due to our scale.</li>
</ol>

<p>All of these fees began to rack up. And costs aside, FMS was a lacking product, especially in its functionality (more on this in a bit). So I decided to scrap FMS and write my own RTMP parser from scratch.</p>

<p>In the end, I managed to make our service roughly 20x more efficient.</p>

<h2 id="getting-started">Getting started</h2>

<p>There were two core problems involved: firstly, RTMP and other Adobe protocols and formats were not open (i.e., publically available), which made them hard to work with. How can you reverse or parse files in a format about which you know nothing? Luckily, there were some reversing efforts available in the public sphere (not produced by Adobe, but rather by <a href="http://osflash.org'">osflash.org</a> who’ve since taken them down) on which we based our work.</p>

<p>Note: Adobe later released “<a href="http://wwwimages.adobe.com/www.adobe.com/content/dam/Adobe/en/devnet/rtmp/pdf/rtmp_specification_1.0.pdf">specifications</a>” which contained no more information than what was already disclosed in the non-Adobe-produced reversing wiki and documents. Their (Adobe’s) specifications were of an absurdly low quality and made it <a href="http://japanesesoapbox.blogspot.com/2009/11/information-that-is-missing-from-adobe.html">near impossible to actually use their libraries</a>.  Moreover, the protocol itself seemed intentionally misleading at times. For example:</p>

<ol>
  <li>They used 29-bit integers.</li>
  <li>They included protocol headers with big endian formatting everywhere—except for a specific (yet unmarked) field, which was little endian.</li>
  <li>They squeezed data into less space at the cost of computational power when transporting 9k video frames, which made little to no sense, because they were earning back bits or bytes at a time—insignificant gains for such a file size.</li>
</ol>

<p>And secondly: RTMP is highly session oriented, which made it virtually impossible to multicast an incoming stream. Ideally, if multiple users wanted to watch the same live stream, we could just pass them back pointers to a single session in which that stream is being aired (this would be multicasting). But with RTMP, we had to create an entirely new instance of the stream for every user that wanted access. This was a complete waste.</p>

<p class="is-centered is-centered"><img src="/uploads/blog/image/17/toptal-blog-image-1373388723952.png" alt="file" /></p>

<h2 id="my-solution">My solution</h2>

<p>With that in mind, I decided to re-package/parse the typical response stream into <a href="http://en.wikipedia.org/wiki/Flash_Video#FLV_File_Structure">FLV ‘tags’</a> (where a ‘tag’ is just some video, audio, or meta data). These FLV tags could travel within the RTMP with little issue.</p>

<p>The benefits of such an approach:</p>

<ol>
  <li>We only needed to repackage a stream once (repackaging was a nightmare due to the lack of specifications and protocol quirks outlined above).</li>
  <li>We could re-use any stream between clients with very few problems by providing them simply with an FLV header, while an internal pointer to FLV tags (along with some sort of offset to indicate where they’re at in the stream) allowed access to the content.</li>
</ol>

<p>I began development in the language I knew best at the time: C. Over time, this choice became cumbersome; so I started learning Python while porting over my C code. The development process sped up, but after a few demos, I quickly ran into the problem of exhausting resources. Python’s socket handling was not meant to handle these types of situations: specifically, in Python we found ourselves making multiple system calls and context switches per action, adding a huge amount of overhead.</p>

<h2 id="improving-performance-mixing-python-and-c">Improving performance: mixing Python and C</h2>

<p>After profiling the code, I chose to move the performance-critical functions into a Python module written entirely in C. This was fairly low-level stuff: specifically, it made use of the kernel’s <a href="http://linux.die.net/man/4/epoll">epoll</a> mechanism to provide a logarithmic order-of-growth.</p>

<div class="pop_out_box is-full_width">
<p>
In asynchronous socket programming there are facilities that can provide you with info whether a given socket is readable/writable/error-filled. In the past, developers have used the select() system call to get this information, which scales badly. Poll() is a better version of select, but it's still not that great as you have to pass in a bunch of socket descriptors at every call. 
</p>
<p>
Epoll is amazing as all you have to do is register a socket and the system will remember that distinct socket, handling all the gritty details internally. So there's no argument-passing overhead with each call. It also scales far better and returns only the sockets that you care about, which is way better than running through a list of 100k socket descriptors to see if they had events with bitmasks--which you need to do if you use the other solutions.
</p>
</div>

<p>But for the increase in performance, we paid a price: this approach followed a completely different design pattern than before. The site’s previous approach was (if I recall correctly) one monolithic process which blocked on receiving and sending; I was developing an event-driven solution, so I had to refactor the rest of the code as well to fit this new model.</p>

<p>Specifically, in our new approach, we had a main loop, which handled receiving and sending as follows:</p>

<p class="is-centered is-centered"><img src="/uploads/blog/image/16/toptal-blog-image-1373388683696.png" alt="file" /></p>

<ol>
  <li>The received data was passed (as messages) up to the RTMP layer.</li>
  <li>The RTMP was dissected and FLV tags were extracted.</li>
  <li>The FLV data was sent to the buffering and multicasting layer, which organized the streams and filled the low-level buffers of the sender.</li>
  <li>The sender kept a struct for every client, with a last-sent index, and tried to send as much data as possible to the client.</li>
</ol>

<p>This was a rolling window of data, and included some heuristics to drop frames when the client was too slow to receive. Things worked pretty well.</p>

<h2 id="systems-level-architectural-and-hardware-issues">Systems-level, architectural, and hardware issues</h2>

<p>But we ran into another problem: the kernel’s <a href="http://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html">context switches</a> were becoming a burden. As a result, we chose to write only every 100 milliseconds, rather than instantaneously. This aggregated the smaller packets and prevented a burst of context switches.</p>

<p>Perhaps a larger problem lied in the realm of server architectures: we needed a load-balancing and failover-capable cluster—losing users due to server malfunctions is not fun. At first, we went with a separate-director approach, in which a designated ‘director’ would try to create and destroy broadcaster feeds by predicting demand. This failed spectacularly. In fact, everything we tried failed pretty substantially. In the end, we opted for a relatively brute-force approach of sharing broadcasters among the cluster’s nodes randomly, equaling out the traffic.</p>

<p>This worked, but with one drawback: although the general case was handled pretty well, we saw terrible performance when everyone on the site (or a disproportionate number of users) watched a single broadcaster. The good news: this never happens outside a marketing campaign. We implemented a separate cluster to handle this scenario, but in truth we reasoned that jeopardizing the paying user’s experience for a marketing effort was senseless—in fact, this wasn’t really a genuine scenario (although it would have been nice to handle every imaginable case).</p>

<h2 id="conclusion">Conclusion</h2>

<p>Some statistics from the end-result: Daily traffic on the cluster was about a 100k users at peak (60% load), ~50k on average. I managed two clusters (HUN and US); each of them handled about 40 machines to share the load. The aggregated bandwidth of the clusters was around 50 Gbps, from which they used around 10 Gbps while at peak load. In the end, I managed to push out 10 Gbps/machine easily; theoretically<span class="footnote_number">1</span>, this number could’ve gone as high as 30 Gbps/machine, which translates to about 300k users watching streams concurrently from one server.</p>

<blockquote>
  <p>The existing FMS cluster contained more than 200 machines, which could’ve been replaced by my 15—only 10 of which would do any real work. This gave us roughly a 200/10 = 20x improvement.</p>
</blockquote>

<p>Probably my greatest take-away from the project was that I shouldn’t let myself be stopped by the prospect of having to learn a new skill set. In particular, Python, transcoding, and object-oriented programming, were all concepts with which I had very sub-professional experience before taking on this project.</p>

<p>That, and that rolling your own solution can pay big.</p>

<p class="footnote">
<span class="footnote_number">1</span>
Later, when we put the code into production, we ran into hardware issues, as we used older sr2500 Intel servers which could not handle 10 Gbit Ethernet cards because of their low PCI bandwidths. Instead, we used them in 1-4x1 Gbit Ethernet bonds (aggregating the performance of several network interface cards into a virtual card). Eventually, we got some of the newer sr2600 i7 Intels, which served 10 Gbps over optics without any performance kinks. All the projected calculations refer to this hardware.
</p>
<div class="post-join"><a class="button is-white_and_green is-default is-full_width" href="/python">Looking to hire top engineers? Check out Toptal's Python developers!</a></div><div class="template" data-role="subscribe_template"><form action="/blog/subscribe" class="blog_subscribe for-post" data-placement="post" data-remote="" data-type="text" data-view="blog_subscribe#subscribe" method="post"><div class="blog_subscribe-row"><div class="blog_subscribe-label">Editor&#39;s note: want posts just like this delivered straight to your inbox? Subscribe below to receive our latest engineering articles.</div></div><div class="blog_subscribe-row"><input class="input is-medium" data-role="email" name="email" placeholder="Enter your email address..." /></div><div class="blog_subscribe-row-wrapper is-footer"><div class="blog_subscribe-row is-submit"><input class="button is-green_candy is-default is-full_width" data-role="submit" type="submit" value="Subscribe Now" /></div><div class="blog_subscribe-row is-privacy"><div class="blog_subscribe-privacy"><div class="blog_subscribe-privacy-icon"></div><div class="blog_subscribe-privacy_text">We will never share your email with any 3rd party or spam you</div></div></div></div><div class="blog_subscribe-template" data-role="success_template" style="display:none"><div class="blog_subscribe-row"><div class="blog_subscribe-label">Subscribe to Engineering Articles by Email</div></div><div class="blog_subscribe-row"><div class="blog_subscribe-label is-header">Thank you for subscribing!</div></div><div class="blog_subscribe-row"><div class="blog_subscribe-done"><ul class="blog_follow_us"><li class="blog_follow_us-source"><div class="fb-like" data-href="http://www.toptal.com/blog" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false"></div</li><li class="blog_follow_us-source is-twitter"><a href="https://twitter.com/toptalllc" class="twitter-follow-button" data-show-count="true">Follow @toptalllc</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script></li><li class="blog_follow_us-source"><div class="g-follow" data-annotation="bubble" data-height="20" data-href="https://plus.google.com/109028009576318848424" data-rel="publisher"></div>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/platform.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></li></ul></div></div></div></form></div></div><form action="/blog/subscribe" class="blog_subscribe for-below" data-placement="below" data-remote="" data-type="text" data-view="blog_subscribe#subscribe" method="post"><div class="blog_subscribe-row"><div class="blog_subscribe-label">Subscribe to our engineering blog for the latest tips</div></div><div class="blog_subscribe-row"><input class="input is-medium" data-role="email" name="email" placeholder="Enter your email address..." /></div><div class="blog_subscribe-row-wrapper is-footer"><div class="blog_subscribe-row is-submit"><input class="button is-green_candy is-default is-full_width" data-role="submit" type="submit" value="Subscribe Now" /></div><div class="blog_subscribe-row is-privacy"><div class="blog_subscribe-privacy"><div class="blog_subscribe-privacy-icon"></div><div class="blog_subscribe-privacy_text">We will never share your email with any 3rd party or spam you</div></div></div></div><div class="blog_subscribe-template" data-role="success_template" style="display:none"><div class="blog_subscribe-row"><div class="blog_subscribe-label">Subscribe to Engineering Articles by Email</div></div><div class="blog_subscribe-row"><div class="blog_subscribe-label is-header">Thank you for subscribing!</div></div><div class="blog_subscribe-row"><div class="blog_subscribe-done"><ul class="blog_follow_us"><li class="blog_follow_us-source"><div class="fb-like" data-href="http://www.toptal.com/blog" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false"></div</li><li class="blog_follow_us-source is-twitter"><a href="https://twitter.com/toptalllc" class="twitter-follow-button" data-show-count="true">Follow @toptalllc</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script></li><li class="blog_follow_us-source"><div class="g-follow" data-annotation="bubble" data-height="20" data-href="https://plus.google.com/109028009576318848424" data-rel="publisher"></div>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/platform.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></li></ul></div></div></div></form><div class="post_comments"><div id="disqus_thread_container"><div id="disqus_thread"><div class="d-noscript-comments"><h3>Comments</h3><div class="post-comment"><div class="post-comment-author">Jordan Fried</div><div class="post-comment-body">Nice post Gergely!</div></div><div class="post-comment"><div class="post-comment-author">Vlad Shvedov</div><div class="post-comment-body">Interesting and very close to problems i had, when i was involved into VoD business. Of course we had smaller traffic, but as one of good decisions we made on the route to performance increase, was switching to Wowza&#39;s reverse-engineered RTMPE implementation.</div></div><div class="post-comment"><div class="post-comment-author">Michael Sparks</div><div class="post-comment-body">You&#39;re everywhere I look Jordan. Quit it!</div></div><div class="post-comment"><div class="post-comment-author">Gergely Kalman</div><div class="post-comment-body">Thanks buddy!</div></div><div class="post-comment"><div class="post-comment-author">Bradley Barrows</div><div class="post-comment-body">I feel your pain I was just working on a P2P live streaming solution which takes one RTMP stream as input and broadcasts it to all the other peers watching that stream. We actually had to deal with exactly the same issue. Saving the initial Header packets and re sending them to new peers was our solution as well.. There were also a number of other technical issues we ran into related to using this format in ways it wasnt meant to be used and the lack of technical documentation but with the help of one of the creators of an awesome python RTMP server we figured most everything out..</div></div><div class="post-comment"><div class="post-comment-author">obeattie</div><div class="post-comment-body">Very interesting post. As an aside, what tool did you use to make those nice diagrams? Photoshop?</div></div><div class="post-comment"><div class="post-comment-author">Norman Timmler</div><div class="post-comment-body">I&#39;m wondering if you used FLVTool2 as a reference for the crappy FLV format? The time I wrote FLVTool2, I was probably the first who reverse engineered the FLV protocol. I remember all the hours railing against the Adobe engineers ;)</div></div><div class="post-comment"><div class="post-comment-author">Luboš Volkov</div><div class="post-comment-body">Very glad you like those diagrams, all of them are done in the Photoshop.</div></div><div class="post-comment"><div class="post-comment-author">João Magalhães</div><div class="post-comment-body">Loved the post. Couldn&#39;t agree more... reinventing the wheel is not always a bad idea.</div></div><div class="post-comment"><div class="post-comment-author">juarezbochi</div><div class="post-comment-body">Nice post! Are you planning to open source your solution?</div></div><div class="post-comment"><div class="post-comment-author">Chris</div><div class="post-comment-body">What tool you&#39;ve used to make the graphs of the post ? Thanks !</div></div><div class="post-comment"><div class="post-comment-author">Luboš Volkov</div><div class="post-comment-body">We have used Adobe Photoshop. You welcome. </div></div><div class="post-comment"><div class="post-comment-author">Luis Martinho</div><div class="post-comment-body">Top notch post. Thanks for sharing.</div></div><div class="post-comment"><div class="post-comment-author">Luke™</div><div class="post-comment-body">Excellent writeup, thanks for sharing. I worked on reverse engineering RTMP back in the day and can understand your frustration with the protocol. It make absolutely no sense for video streaming and was quite frustrating to work with. I think the idiosyncrasies stem from its roots. The story I heard is that one of the macromedia employees built it while on holiday as a side project. I imagine the guy got a perverse kick out of using 29bit ints. It was never intended for video, it was initially designed for shared objects. Video came later and was clearly shoe horned into the protocol. If you wanted an example of how not to design a video streaming protocol RTMP would be a good candidate. That said I guess its design unintentionally made Adobe more money. :-)</div></div><div class="post-comment"><div class="post-comment-author">Martin Woo</div><div class="post-comment-body">Read the title again &quot;How I made Porn 20x more efficient with Python&quot;
kinky stuff, huhh :D
Nice post, btw :)</div></div><div class="post-comment"><div class="post-comment-author">Nicolas Noirbent</div><div class="post-comment-body">Since you switched to an entirely home-made solution, any reason you kept using RTMP as the transport protocol, instead of switching to HTTP ? I know RTMP offers more options since it is a 2-way protocol compared to HTTP request/response model, but for massive broadcasting of live video content I&#39;m not sure you need anything more.

Not to mention using HTTP frees you of the eldritch abomination that is RTMP, and fits much more nicely into any conventional website stack.</div></div><div class="post-comment"><div class="post-comment-author">Tom</div><div class="post-comment-body">It&#39;s 2013 and I still can&#39;t watch porn with html5 on firefox, please fix .. I don&#39;t use flash and getting off by watching pictures instead movies is too much of a task. Thank, customer.</div></div><div class="post-comment"><div class="post-comment-author">Gergely Kalman</div><div class="post-comment-body">Unfortunately no, it&#39;s the IP of the company I worked for. The software would be a bit dated nowadays anyway.</div></div><div class="post-comment"><div class="post-comment-author">Gergely Kalman</div><div class="post-comment-body">Thank you, I did actually use it to look up the format along with other implementations like ffmpeg.


Adobe engineers are a peach. One day a guy from them came to fix stuff and we were chatting away and I mentioned that swf verification did not mean squat. He said that it&#39;s impossible to bypass it. I did it in front of his eyes in 5 minutes (not that difficult to copy a few bytes actually). He was in awe of what I did. That was an eye-opening experience of the talent involved.</div></div><div class="post-comment"><div class="post-comment-author">Gergely Kalman</div><div class="post-comment-body">I&#39;d rephrase that as: Throwing out proprietary protocols in favour of open and more flexible solutions. But reinventing is a good idea sometimes as well.</div></div><div class="post-comment"><div class="post-comment-author">Gergely Kalman</div><div class="post-comment-body">Unfortunately flash was only capable of broadcasting the stream using RTMP only, os we had to keep it on the broadcaster side. Also a lot of RPCing was involved, and we wanted our business logic to stay on the FMSs. Since streaming was the most resource-consuming task we could make this step with little to no hassle as far as business logic is concerned.</div></div><div class="post-comment"><div class="post-comment-author">Gergely Kalman</div><div class="post-comment-body">I think in part the protocol was obfuscated by design. While your explanation makes perfect sense, they could&#39;ve just easily introduced a new type of packet in RTMP and got rid of the byte-shifting crazyness when transmitting fat packets.</div></div><div class="post-comment"><div class="post-comment-author">neurofuzzy</div><div class="post-comment-body">Your icon for users in these graphs made me giggle, considering the kind of video they would be watching.</div></div><div class="post-comment"><div class="post-comment-author">Jordan Fried</div><div class="post-comment-body">Haha good to hear!</div></div><div class="post-comment"><div class="post-comment-author">randfb</div><div class="post-comment-body">Pornography destroys lives and puts people in bondage.
Accept Jesus as your Lord and Savior and He will show you how to use your talents to bless the world.</div></div><div class="post-comment"><div class="post-comment-author">杨 一航</div><div class="post-comment-body">Your post makes me surprised. I study the part of code of &quot;rtmpd&quot; and understand that how difficult to handle 10 Gbps per machine.  As you known, the video quality is very important. I find that some online chat websites use a plugin in to inhance their video quality. It seems that they change the encode type of video and audio while they also use flash. And the plugin is IE only. Can you guess what  technique they use?</div></div><div class="post-comment"><div class="post-comment-author">Cristian</div><div class="post-comment-body">Gonzo is the best way ! :) http://perutops.com/b/humillacion-extrema-una-nueva-tendencia-porno_1002667.html</div></div><div class="post-comment"><div class="post-comment-author">marconijr</div><div class="post-comment-body">Great post, what book/resources would you recommend when learning transcoding or the overall process of how video streaming works?</div></div><div class="post-comment"><div class="post-comment-author">Enrique Conci</div><div class="post-comment-body">The wheel seems to be the same.. but flexible, open and faster. Great work!</div></div><div class="post-comment"><div class="post-comment-author">Gergely Kalman</div><div class="post-comment-body">Well, I&#39;ve analyzed ffmpeg&#39;s source and read wikipedia. At the time I knew almost nothing about that, even though I had the advantage of having seen lots of network protocols and file formats. Generally though, it&#39;s not really hard if you&#39;re not going extremely deep. Wikipedia can be inaccurate though, but looking at the code always helps.</div></div><div class="post-comment"><div class="post-comment-author">Gergely Kalman</div><div class="post-comment-body">I&#39;m not sure. In house we used flash to try and measure the bandwidth and cpu availability and choose the format and encoding accordingly.</div></div><div class="post-comment"><div class="post-comment-author">javier</div><div class="post-comment-body">Hi sir , i am making a website porn with 200 video streaming. But i have problems . The videos are slow to load and I have hired a good server. The videos are in mp4 .. flv is not possible because I use wowza and does not. What can be the problem?


best regards</div></div></div></div></div><script type="text/javascript">function isIos() {
  return /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
}

function adjustHeightInIos() {
  if (isIos()) {
    var height = $('#disqus_thread').outerHeight();
    $('#disqus_thread_container').height(height);
  }
}

if (isIos()) {
  var el = document.getElementById('disqus_thread_container');
  el.style.height = '1px';
  el.style.overflow = 'hidden';
  el.style.width = '100%';
}

function disqus_config() {
  this.callbacks.onNewComment = [function() {
    $.post('/blog/comments/on_create');
    adjustHeightInIos();
  }];

  this.callbacks.onReady = [adjustHeightInIos];
}

var disqus_shortname = 'toptal';
var disqus_identifier = undefined;

(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();</script><noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript><a class="dsq-brlink" href="http://disqus.com">comments powered by <span class="logo-disqus">Disqus</span></a></div></div></div><div class="two_columns_layout-extra"><div class="blog-block-wrapper"><div class="blog-block-header">Subscribe</div><div class="blog-block"><div class="blog-block-row"><form action="/blog/subscribe" class="blog_subscribe for-extra" data-placement="extra" data-remote="" data-type="text" data-view="blog_subscribe#subscribe" method="post"><div class="blog_subscribe-row"><div class="blog_subscribe-label">Subscribe to Engineering Articles by Email</div></div><div class="blog_subscribe-row"><input class="input is-medium" data-role="email" name="email" placeholder="Enter your email address..." /></div><div class="blog_subscribe-row-wrapper is-footer"><div class="blog_subscribe-row is-submit"><input class="button is-green_candy is-default is-full_width" data-role="submit" type="submit" value="Subscribe Now" /></div><div class="blog_subscribe-row is-privacy"><div class="blog_subscribe-privacy"><div class="blog_subscribe-privacy-icon"></div><div class="blog_subscribe-privacy_text">We will never share your email with any 3rd party or spam you</div></div></div></div><div class="blog_subscribe-template" data-role="success_template" style="display:none"><div class="blog_subscribe-row"><div class="blog_subscribe-label">Subscribe to Engineering Articles by Email</div></div><div class="blog_subscribe-row"><div class="blog_subscribe-label is-header">Thank you for subscribing!</div></div><div class="blog_subscribe-row"><div class="blog_subscribe-done"><ul class="blog_follow_us"><li class="blog_follow_us-source"><div class="fb-like" data-href="http://www.toptal.com/blog" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false"></div</li><li class="blog_follow_us-source is-twitter"><a href="https://twitter.com/toptalllc" class="twitter-follow-button" data-show-count="true">Follow @toptalllc</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script></li><li class="blog_follow_us-source"><div class="g-follow" data-annotation="bubble" data-height="20" data-href="https://plus.google.com/109028009576318848424" data-rel="publisher"></div>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/platform.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script></li></ul></div></div></div></form></div></div><div class="blog-block-header">Trending articles</div><div class="blog-block"><nav class="blog-trending"><a class="post is-preview blog-trending-item" href="/emberjs/a-thorough-guide-to-ember-data"><span class="post_cover is-preview for-technology"><span class="post_cover-image" style="background-image: url(&#39;/uploads/blog/cover_image/77/side_list_cover-cover.png&#39;);"></span></span><span class="post-preview"><span class="post-title">A Thorough Guide to Ember Data</span><span class="post-meta"><span class="post-meta-date">12 days ago</span></span></span></a><a class="post is-preview blog-trending-item" href="/python/top-10-mistakes-that-python-programmers-make"><span class="post_cover is-preview for-technology"><span class="post_cover-image" style="background-image: url(&#39;/uploads/blog/cover_image/69/side_list_cover-cover.png&#39;);"></span></span><span class="post-preview"><span class="post-title">10 Most Common Mistakes that Python Programmers Make</span><span class="post-meta"><span class="post-meta-date">about 1 month ago</span></span></span></a><a class="post is-preview blog-trending-item" href="/ruby-on-rails/top-10-mistakes-that-rails-programmers-make"><span class="post_cover is-preview for-technology"><span class="post_cover-image" style="background-image: url(&#39;/uploads/blog/cover_image/74/side_list_cover-cover.png&#39;);"></span></span><span class="post-preview"><span class="post-title">10 Most Common Mistakes that Rails Programmers Make</span><span class="post-meta"><span class="post-meta-date">27 days ago</span></span></span></a><a class="post is-preview blog-trending-item" href="/c-sharp/top-10-mistakes-that-c-sharp-programmers-make"><span class="post_cover is-preview for-technology"><span class="post_cover-image" style="background-image: url(&#39;/uploads/blog/cover_image/67/side_list_cover-cover.png&#39;);"></span></span><span class="post-preview"><span class="post-title">10 Most Common Mistakes that C# Programmers Make</span><span class="post-meta"><span class="post-meta-date">2 months ago</span></span></span></a><a class="post is-preview blog-trending-item" href="/api-developers/5-golden-rules-for-designing-a-great-web-api"><span class="post_cover is-preview for-technology"><span class="post_cover-image" style="background-image: url(&#39;/uploads/blog/cover_image/75/side_list_cover-cover.png&#39;);"></span></span><span class="post-preview"><span class="post-title">5 Golden Rules for Designing a Great Web API</span><span class="post-meta"><span class="post-meta-date">20 days ago</span></span></span></a><a class="post is-preview blog-trending-item" href="/ruby/the-many-shades-of-the-ruby-programming-language"><span class="post_cover is-preview for-technology"><span class="post_cover-image" style="background-image: url(&#39;/uploads/blog/cover_image/76/side_list_cover-cover.png&#39;);"></span></span><span class="post-preview"><span class="post-title">The Many Shades of the Ruby Programming Language</span><span class="post-meta"><span class="post-meta-date">18 days ago</span></span></span></a></nav></div><div class="blog-block-header">Relevant technologies</div><div class="blog-block"><div class="blog-block-row"><ul class="blog-relevant"><li class="blog-relevant-item"><a class="link is-blue" href="/python">Python</a></li><li class="blog-relevant-item"><a class="link is-blue" href="/c">C</a></li><li class="blog-relevant-item"><a class="link is-blue" href="/sys-admin">Sys Admin</a></li><li class="blog-relevant-item"><a class="link is-blue" href="/flash">Flash</a></li></ul></div></div></div></div></div></section></main><footer><section class="grid-row page_footer_map-wrapper"><div class="grid-row-inner has-huge_padding page_footer_map"><p>At <strong>Toptal</strong>, we connect the best developers all over the world.</p>
</div></section><section class="grid-row has-top_border"><div class="grid-row-inner has-padding page_footer_join"><h2 class="page_footer_join-header">Join the Toptal community.</h2><nav class="page_footer_join-actions"><div class="page_footer_join-item"><a class="button is-green_candy is-big is-fixed page_footer_join-button" href="https://www.toptal.com/companies/apply">Hire a Developer</a></div><div class="page_footer_join-item is-or">or</div><div class="page_footer_join-item"><a class="button is-green_candy is-big is-fixed page_footer_join-button" href="/developers">Apply as a Developer</a></div></nav></div></section><section class="grid-row page_footer_links-wrapper"><div class="grid-row-inner is-wide has-big_padding"><nav class="page_footer_links"><section class="page_footer_links-column is-1"><h3 class="page_footer_links-column-header">Trending on blog</h3><ul class="page_footer_links-list is-trending"><li class="page_footer_links-item"><a class="page_footer_links-link" href="/emberjs/a-thorough-guide-to-ember-data">A Thorough Guide to Ember Data</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/python/top-10-mistakes-that-python-programmers-make">10 Most Common Mistakes that Python Programmers Make</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/ruby-on-rails/top-10-mistakes-that-rails-programmers-make">10 Most Common Mistakes that Rails Programmers Make</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/c-sharp/top-10-mistakes-that-c-sharp-programmers-make">10 Most Common Mistakes that C# Programmers Make</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/api-developers/5-golden-rules-for-designing-a-great-web-api">5 Golden Rules for Designing a Great Web API</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/ruby/the-many-shades-of-the-ruby-programming-language">The Many Shades of the Ruby Programming Language</a></li></ul></section><section class="page_footer_links-column is-2"><h3 class="page_footer_links-column-header">Navigation</h3><ul class="page_footer_links-list is-main"><li class="page_footer_links-item"><a class="page_footer_links-link" href="/why">Why</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/how">How</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/what">What</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/clients">Clients</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/team">Team</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/community">Community</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/blog">Blog</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/contact">Contact</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/faq">FAQ</a></li></ul></section><section class="page_footer_links-column is-3"><h3 class="page_footer_links-column-header">Contact</h3><ul class="page_footer_links-list"><li class="page_footer_links-item"><a class="page_footer_links-link" href="/developers">Apply for work</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/talent_partners">Become a partner</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="/contact">Send us an email</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="tel:8886043188">Call 888.604.3188</a></li></ul></section><section class="page_footer_links-column is-4"><h3 class="page_footer_links-column-header">Social</h3><ul class="page_footer_links-list"><li class="page_footer_links-item"><a class="page_footer_links-link" href="https://www.facebook.com/pages/toptal/141928212544793" target="_blank">Facebook</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="https://twitter.com/toptalllc" target="_blank">Twitter</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="https://plus.google.com/+Toptalllc/" target="_blank">Google+</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="https://github.com/toptal" target="_blank">GitHub</a></li><li class="page_footer_links-item"><a class="page_footer_links-link" href="http://dribbble.com/toptal" target="_blank">Dribbble</a></li></ul></section></nav></div></section><section class="grid-row page_footer_legal-wrapper"><div class="grid-row-inner is-wide has-medium_padding page_footer_legal"><div class="logo-wrapper page_footer_legal-logotype"><a class="logo is-mini is-link" href="/">Toptal</a><p class="logo-motto is-mini">Exclusive access to top developers</p></div><ul class="page_footer_legal-links"><li class="page_footer_legal-links_item is-copyright"><p class="page_footer_legal-copyright">© Copyright 2010 - 2014 Toptal, LLC</p></li><li class="page_footer_legal-links_item"><a class="page_footer_legal-link" href="/privacy">Privacy Policy</a>,</li><li class="page_footer_legal-links_item"><a class="page_footer_legal-link" href="/developers/tos">Terms of Service</a></li></ul></div></section></footer></div><div class="layout-overlay" data-view="layout#overlay"></div><div class="notification-container" data-view="notifications#service"></div><script type="text/javascript">setTimeout(function () {
  classNameWithFont = document.documentElement.className + ' wf-active'
  document.documentElement.className = classNameWithFont
}, 0);</script><script src="/assets/public-2a61b67bebbcdc9a4b67d266ce9e7055.js" type="text/javascript"></script><script src="/assets/blog-636ea15588c60c125b834ec87204def9.js" type="text/javascript"></script><div class="layout-counters"><script type="text/javascript">window.googleAnalytics = new Widgets.GoogleAnalytics('UA-21104039-1', 'auto');
window.googleAnalytics.trackPageview();
window.googleAnalytics.track15secondsRead();</script><script type="text/javascript">(function(d) {
  var e = d.createElement('script');
  e.src = d.location.protocol + '//bounceexchange.com/tag/929/i.js';
  e.async = true;
  d.getElementsByTagName("head")[0].appendChild(e);
}(document));</script><!-- begin olark code --><script type='text/javascript'>/*{literal}<![CDATA[*/window.olark||(function(i){var e=window,h=document,a=e.location.protocol=="https:"?"https:":"http:",g=i.name,b="load";(function(){e[g]=function(){(c.s=c.s||[]).push(arguments)};var c=e[g]._={},f=i.methods.length; while(f--){(function(j){e[g][j]=function(){e[g]("call",j,arguments)}})(i.methods[f])} c.l=i.loader;c.i=arguments.callee;c.f=setTimeout(function(){if(c.f){(new Image).src=a+"//"+c.l.replace(".js",".png")+"&"+escape(e.location.href)}c.f=null},20000);c.p={0:+new Date};c.P=function(j){c.p[j]=new Date-c.p[0]};function d(){c.P(b);e[g](b)}e.addEventListener?e.addEventListener(b,d,false):e.attachEvent("on"+b,d); (function(){function l(j){j="head";return["<",j,"></",j,"><",z,' onl'+'oad="var d=',B,";d.getElementsByTagName('head')[0].",y,"(d.",A,"('script')).",u,"='",a,"//",c.l,"'",'"',"></",z,">"].join("")}var z="body",s=h[z];if(!s){return setTimeout(arguments.callee,100)}c.P(1);var y="appendChild",A="createElement",u="src",r=h[A]("div"),G=r[y](h[A](g)),D=h[A]("iframe"),B="document",C="domain",q;r.style.display="none";s.insertBefore(r,s.firstChild).id=g;D.frameBorder="0";D.id=g+"-loader";if(/MSIE[ ]+6/.test(navigator.userAgent)){D.src="javascript:false"} D.allowTransparency="true";G[y](D);try{D.contentWindow[B].open()}catch(F){i[C]=h[C];q="javascript:var d="+B+".open();d.domain='"+h.domain+"';";D[u]=q+"void(0);"}try{var H=D.contentWindow[B];H.write(l());H.close()}catch(E){D[u]=q+'d.write("'+l().replace(/"/g,String.fromCharCode(92)+'"')+'");d.close();'}c.P(2)})()})()})({loader:(function(a){return "static.olark.com/jsclient/loader0.js?ts="+(a?a[1]:(+new Date))})(document.cookie.match(/olarkld=([0-9]+)/)),name:"olark",methods:["configure","extend","declare","identify"]});
/* custom configuration goes here (www.olark.com/documentation) */
olark.identify('5230-809-10-4522');/*]]>{/literal}*/</script>
<!-- end olark code --><script type="text/javascript">
adroll_adv_id = "6ZOMR2QLHZBEFEIMAJHJ4K";
adroll_pix_id = "FBQUGOS3RRAI3PZP2HVOYG";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script><img src="//ib.adnxs.com/seg?add=308219&t=2" width="1" height="1" /></div></body></html>