<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en-US" class="no-js"> <!--<![endif]-->
<!--<![endif]-->
<head>
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width" />
<title>Reddit&#8217;s database has two tables | Kevin Burke</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="pingback" href="https://kev.inburke.com/xmlrpc.php" />
<!--[if lt IE 9]>
<script src="https://kev.inburke.com/wp-content/themes/twentytwelve/js/html5.js" type="text/javascript"></script>
<![endif]-->
<link rel="alternate" type="application/rss+xml" title="Kevin Burke &raquo; Feed" href="https://kev.inburke.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Kevin Burke &raquo; Comments Feed" href="https://kev.inburke.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Kevin Burke &raquo; Reddit&#8217;s database has two tables Comments Feed" href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/feed/" />
<link rel='stylesheet' id='flatui-bootstrap.css-css'  href='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.1/css/bootstrap.min.css' type='text/css' media='all' />
<link rel='stylesheet' id='flatui-bootstrap-responsive.css-css'  href='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.1/css/bootstrap-responsive.min.css' type='text/css' media='all' />
<link rel='stylesheet' id='flatui-oxygen.css-css'  href='//fonts.googleapis.com/css?family=Oxygen%3A400%2C300%2C700&#038;ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='twentytwelve-style-css'  href='https://kev.inburke.com/wp-content/themes/flat-ui/style.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='flatui-blog.css-css'  href='https://kev.inburke.com/wp-content/themes/flat-ui/css/blog.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='twentytwelve-fonts-css'  href='https://fonts.googleapis.com/css?family=Open+Sans:400italic,700italic,400,700&#038;subset=latin,latin-ext' type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='twentytwelve-ie-css'  href='https://kev.inburke.com/wp-content/themes/twentytwelve/css/ie.css?ver=20121010' type='text/css' media='all' />
<![endif]-->
<script type='text/javascript' src='https://kev.inburke.com/wp-content/themes/flat-ui/js/vendor/modernizr-2.6.2.min.js?ver=1.0'></script>
<script type='text/javascript' src='https://kev.inburke.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='https://kev.inburke.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://kev.inburke.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://kev.inburke.com/wp-includes/wlwmanifest.xml" />
<link rel='prev' title='Bash user? Try Zsh, the more usable terminal shell' href='https://kev.inburke.com/kevin/bash-vs-zsh/' />
<link rel='next' title='Virgin Mobile fails web security 101, leaves six million subscriber accounts wide open' href='https://kev.inburke.com/kevin/open-season-on-virgin-mobile-customer-data/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='https://kev.inburke.com/kevin/reddits-database-has-two-tables/' />
<link rel='shortlink' href='https://kev.inburke.com/?p=2910' />
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<meta id="syntaxhighlighteranchor" name="syntaxhighlighter-version" content="3.1.5" />
<!-- Google Analytics Tracking by Google Analyticator 6.4.7.3: http://www.videousermanuals.com/google-analyticator/ -->
<script type="text/javascript">
                var analyticsFileTypes = [''];
                            var analyticsSnippet = 'enabled';
                var analyticsEventTracking = 'enabled';
            </script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-566397-2']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
	            _gaq.push(['_setSiteSpeedSampleRate', 100]);
	_gaq.push(['_trackPageview']);
	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>
<body class="single single-post postid-2910 single-format-standard custom-font-enabled">
<!--[if lt IE 7]>
	<p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> or <a href="http://www.google.com/chromeframe/?redirect=true">activate Google Chrome Frame</a> to improve your experience.</p>
<![endif]-->
<div id="page" class="container hfeed site">
<h1 id="title"><a href="/" title="Back to the homepage">KEVIN BURKE</a></h1>
<div class="row">
<div class="span3 sidebar">
	<div id="blurb" class="clearfix">
    <div>
        <a href="/" title="Back to the homepage">
            <img id="logo"
                src="https://kev.inburke.com/wp-content/themes/flat-ui/img/kevin-mask-blue.png" alt="Kevin Burke" />
        </a>
    </div>
    <div  id="blurb-text">
        Hey, I'm Kevin. I build great experiences. Currently I work at <a
        href="https://www.twilio.com">Twilio</a>. <a href="/about">More
        about me</a>
    </div>
</div>
	<ul class="link-menu hidden-phone">
		<li class="red"><a href="https://twitter.com/ekrubnivek"><div class="genericon genericon-twitter"></div>Twitter</a>
		<li class="purple"><a href="https://github.com/kevinburke"><div class="genericon genericon-github"></div>Github</a>
		<li class="yellow"><a href="http://feeds.feedburner.com/kburke"><div class="genericon genericon-feed"></div>Subscribe</a>
		<li class="turquoise"><a href="mailto:kev@inburke.com"><div class="genericon genericon-mail"></div>Contact Me</a>
	</ul>
	<a class="hidden-phone" href="/">&#8592; Back to the homepage</a>
</div>
<div class="span8 offset1 blog-content">
	<div id="primary" class="site-content">
		<div id="content" role="main">
	<article id="post-2910" class="post-2910 post type-post status-publish format-standard hentry category-code-2">
				<header class="entry-header">
									<h1 class="entry-title">Reddit&#8217;s database has two tables</h1>
						<div class="entry-meta">
				<span class="sep">Posted on </span><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/"
title="1:48 pm" rel="bookmark"><time class="entry-date" datetime="2012-09-02T13:48:31+00:00"
pubdate>September 2, 2012</time></a>			</div>
		</header><!-- .entry-header -->
				<div class="entry-content">
			<p>Steve Huffman talks about <a href="http://highscalability.com/blog/2010/5/17/7-lessons-learned-while-building-reddit-to-270-million-page.html" title="Reddit's architecture - High Scalability">Reddit&#8217;s approach to data storage</a> in a High Scalability post from 2010. I was surprised to learn that they only have two tables in their database.</p>
<blockquote><p><strong>Lesson: Don&#8217;t worry about the schema.</strong></p>
<p>[Reddit] used to spend a lot of time worrying about the database, keeping everthing nice and normalized. You shouldn&#8217;t have to worry about the database. Schema updates are very slow when you get bigger. Adding a column to 10 million rows takes locks and doesn’t work. They used replication for backup and for scaling. Schema updates and maintaining replication is a pain. They would have to restart replication and could go a day without backups. Deployments are a pain because you have to orchestrate how new software and new database upgrades happen together.</p>
<p>Instead, they keep a Thing Table and a Data Table. Everything in Reddit is a Thing: users, links, comments, subreddits, awards, etc. Things keep common attribute like up/down votes, a type, and creation date. The Data table has three columns: thing id, key, value. There’s a row for every attribute. There’s a row for title, url, author, spam votes, etc. When they add new features they didn’t have to worry about the database anymore. They didn’t have to add new tables for new things or worry about upgrades. Easier for development, deployment, maintenance.  </p>
<p>The price is you can’t use cool relational features. There are no joins in the database and you must manually enforce consistency. No joins means it’s really easy to distribute data to different machines. You don’t have to worry about foreign keys are doing joins or how to split the data up. Worked out really well. Worries of using a relational database are a thing of the past.</p></blockquote>
<p>This fits with a piece I read the other day about how MongoDB has high adoption for small projects because it lets you just start storing things, without worrying about what the schema or indexes need to be. Reddit&#8217;s approach lets them easily add more data to existing objects, without the pain of schema updates or database pivots. Of course, your mileage is going to vary, and you should think closely about your data model and what relationships you need.</p>
<p><b>Update, 10:05AM PDT:</b> It&#8217;s worth reading <a href="http://www.reddit.com/user/kemitche">the comments from a current Reddit engineer</a> on this post. Particularly <a title="Reddit engineer comment on using RDBMS as a key/value store" href="http://www.reddit.com/r/programming/comments/z9sm8/reddits_database_has_only_two_tables/c62uq3a?context=3">this one</a>: </p>
<blockquote><p>
I&#8217;m personally not a fan of using an RDBMS as a key-value store &#8211; but take a look at, say, line 60 of the accounts code. Each item in that _defaults dictionary corresponds to an attribute on an account. For pretty much all of those (1) we don&#8217;t need to join on it and (2) we don&#8217;t want to do database maintenance just to add a new preference toggle. Those points are particularly more important when you&#8217;ve got a staff of 2-3 engineers. Sure, reddit has more now &#8211; but we&#8217;ve also now got a lot of data to migrate if we wanted to change, a lot of code to rewrite, and a lot of more important problems.
</p></blockquote>
<p>The data architecture made sense for Reddit as a small company that had to optimize for engineering man hours. Now they are much bigger and can afford a saner structure. He/she mentions that they are <a href="http://www.reddit.com/r/programming/comments/z9sm8/reddits_database_has_only_two_tables/c62u7gw?context=3">in the process of migrating their Postgres data over to Cassandra</a>, but slowly.</p>
<p><b>Update, 11:31PM PDT:</b> A former engineer at reddit adds this comment.</p>
<blockquote><p>There isn&#8217;t a &#8220;table&#8221; for a subreddit. There is a thing/data pair that stores metadata about a subreddit, and there is a thing/data pair for storing links. One of the properties of a link is the subreddit that it is in. Same with the comments. There is one thing/data pair for comments and the subreddit it is in is a property.</p>
<p>Still today I tell people that even if you want to do key/value, postgres is faster than any NoSQL product currently available for doing key/value.</p></blockquote>
<p><b>Update, 7:11PM PDT:</b> From <a href="http://news.ycombinator.com/item?id=4468265">Hacker News</a>, it looks like they use two tables for each &#8220;thing&#8221;, so a thing/data pair for accounts, a thing/data pair for links, etc. </p>
					</div><!-- .entry-content -->
				<footer class="entry-meta">
			<span class="cat-links">
			<span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> <a href="https://kev.inburke.com/category/code-2/" title="View all posts in Code" rel="category tag">Code</a>.			</span>
					</footer><!-- .entry-meta -->
	</article><!-- #post -->
<div id="comments" class="comments-area">
			<h2 class="comments-title">
			36 thoughts on &ldquo;<span>Reddit&#8217;s database has two tables</span>&rdquo;		</h2>
		<ol class="commentlist">
				<li class="comment even thread-even depth-1" id="li-comment-1596">
		<article id="comment-1596" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/3f636024423fa84bb73267bea82c8b5a?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Fact Checker </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1596"><time datetime="2012-09-02T14:26:37+00:00">September 2, 2012 at 2:26 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>That article is from 2010.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1596#respond' onclick='return addComment.moveForm("comment-1596", "1596", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	<ol class="children">
	<li class="comment byuser comment-author-kevin bypostauthor odd alt depth-2" id="li-comment-1597">
		<article id="comment-1597" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/4998db4ee0a7afdcd1f5d92658af63b4?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">kevin <span> Post author</span></cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1597"><time datetime="2012-09-02T14:32:20+00:00">September 2, 2012 at 2:32 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Thanks, I&#8217;ve updated the post to make that point clear.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1597#respond' onclick='return addComment.moveForm("comment-1597", "1597", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1598">
		<article id="comment-1598" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/ec08e3b8c8e05228655ef38ca6e95760?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://www.sabletopia.co.uk' rel='external nofollow' class='url'>Darren Douglas</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1598"><time datetime="2012-09-02T14:48:46+00:00">September 2, 2012 at 2:48 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>That&#8217;s a good approach, and one that&#8217;s similar (although more extreme) to the wordpress approach.  A posts table and a post_meta table.</p>
<p>Every plugin I&#8217;ve used that tries to add its own tables causes me issues when I want to use it with other plugins&#8230;.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1598#respond' onclick='return addComment.moveForm("comment-1598", "1598", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1599">
		<article id="comment-1599" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/159cd33667611645164e8623de42f67e?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://cbcg.net' rel='external nofollow' class='url'>Toby DiPasquale</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1599"><time datetime="2012-09-02T16:30:54+00:00">September 2, 2012 at 4:30 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Very similar to the schema FriendFeed used back before they were bought by Facebook (and probably still to this day since it seems to be exactly the same).</p>
<p><a href="http://backchannel.org/blog/friendfeed-schemaless-mysql" rel="nofollow">http://backchannel.org/blog/friendfeed-schemaless-mysql</a></p>
<p>There was a Ruby library inspired by that post called Friendly ORM that was being used to power fetlife.com for a while there, too. I don&#8217;t know if that&#8217;s being actively maintained anymore, though.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1599#respond' onclick='return addComment.moveForm("comment-1599", "1599", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1600">
		<article id="comment-1600" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/159cd33667611645164e8623de42f67e?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://cbcg.net' rel='external nofollow' class='url'>Toby DiPasquale</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1600"><time datetime="2012-09-02T16:38:24+00:00">September 2, 2012 at 4:38 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>I also find it very strange that people keep re-inventing ISAM in these large web services but no one ever seems to give that concept credit. FriendFeed, Reddit, Google App Engine&#8217;s Datastore&#8230; does IBM have some kind of lockdown on that term or do they all just think they were the first to think of it?</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1600#respond' onclick='return addComment.moveForm("comment-1600", "1600", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1601">
		<article id="comment-1601" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/d87753f3ec5d7a414b905f124fbe5909?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Joe DiMaggio </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1601"><time datetime="2012-09-02T17:26:21+00:00">September 2, 2012 at 5:26 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>@Toby: Neither. Nobody remembers IBM&#8217;s contributions, so they don&#8217;t mention it.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1601#respond' onclick='return addComment.moveForm("comment-1601", "1601", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1602">
		<article id="comment-1602" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/b3510884a8a37e168b76e45af99c035c?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Jonathan deWerd </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1602"><time datetime="2012-09-02T17:36:24+00:00">September 2, 2012 at 5:36 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>@Toby You could &#8220;go deeper&#8221; and say that ISAM re-invents the concept of a memory address, which goes back to the dawn of computing. In this form, the database is essentially a blob of binary data with some convenience functions on top (replication / backup / serialization / virtual-memory like aliasing). If computing had a proverbial wheel to re-invent, this would be it. I think it&#8217;s ok to not use IBM&#8217;s term for this, especially if they&#8217;ve patented it or  their lawyers think they were the first to think of it :)</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1602#respond' onclick='return addComment.moveForm("comment-1602", "1602", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1603">
		<article id="comment-1603" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/7990602e61db28d2dbad25cc49dab2aa?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">SD </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1603"><time datetime="2012-09-02T17:42:11+00:00">September 2, 2012 at 5:42 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>That is stupid, Use a key value object store, there are hundreds pick any. </p>
<p>Lets have all the management and development overhead of a RDBMS and use none of the benefits.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1603#respond' onclick='return addComment.moveForm("comment-1603", "1603", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1604">
		<article id="comment-1604" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/3b6aed4b5e55cb50473d2b00b3a70cc2?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Noah Yetter </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1604"><time datetime="2012-09-02T17:48:07+00:00">September 2, 2012 at 5:48 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>What a load of crap from total amateurs.</p>
<p>Adding a column to a 10 million row table takes ZERO SECONDS in Oracle or PostgreSQL.  Friends don&#8217;t let friends use MySQL!</p>
<p>Data in this idiotic format has absolutely no structure, no integrity. Maybe that&#8217;s fine if you run a glorified forum but if you actually transact business the relational model gives you a lot and asks little in return. What&#8217;s that phrase about re-inventing wheels? Don&#8217;t build joins and transactions in your application when an RDBMS can do them for you better, faster, correctly. Don&#8217;t build an unstructured mess that can&#8217;t be reported on or analyzed, and requires custom code to do even the tiniest data migration.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1604#respond' onclick='return addComment.moveForm("comment-1604", "1604", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	<ol class="children">
	<li class="comment odd alt depth-2" id="li-comment-1608">
		<article id="comment-1608" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/911fea3401c3d2c40742180adf6ba6de?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Csaba </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1608"><time datetime="2012-09-02T22:11:55+00:00">September 2, 2012 at 10:11 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Zero seconds? Except if you have default value. Then it takes ages.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1608#respond' onclick='return addComment.moveForm("comment-1608", "1608", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	<ol class="children">
	<li class="comment even depth-3" id="li-comment-1611">
		<article id="comment-1611" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/1590042b390fc3464252f76b59a8a000?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Adam </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1611"><time datetime="2012-09-03T02:39:52+00:00">September 3, 2012 at 2:39 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Indeed. Or take a minute to add it with no default, then run an update to put the default value in all rows, then save the table again with the default value in. It won&#8217;t bother locking as there&#8217;s nothing to update now.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1611#respond' onclick='return addComment.moveForm("comment-1611", "1611", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt depth-3" id="li-comment-1619">
		<article id="comment-1619" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/73537dd4e18e0ac1ad954ccba06273e3?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">dbaderf </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1619"><time datetime="2012-09-03T18:43:33+00:00">September 3, 2012 at 6:43 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Umm.  Not in Oracle.  Default values are stored in the data dictionary.  Still 0 seconds.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1619#respond' onclick='return addComment.moveForm("comment-1619", "1619", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even depth-2" id="li-comment-1622">
		<article id="comment-1622" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/f65f19140499bdce208f0bf23b0dcc8c?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://typicalprogrammer.com' rel='external nofollow' class='url'>Greg Jorgensen</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1622"><time datetime="2012-09-03T22:55:04+00:00">September 3, 2012 at 10:55 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>My thoughts exactly, thank you. This article describes both MySQL-induced ignorance of RDBMSs and ignorance of the benefits of ACID. The programmers have moved all of the problems of data integrity and management into the application layer, throwing away all of the benefits of an RDBMS without even knowing why that&#8217;s a terrible idea. If your car doesn&#8217;t run you don&#8217;t conclude that cars suck and ride a Big Wheel to work &#8212; you get a car that works or learn to fix the one you have.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1622#respond' onclick='return addComment.moveForm("comment-1622", "1622", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	<ol class="children">
	<li class="comment odd alt depth-3" id="li-comment-1635">
		<article id="comment-1635" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/93d81f304dd98d305b33bd3c089727f6?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://DrCoddWasRight.blogspot.com' rel='external nofollow' class='url'>Robert Young</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1635"><time datetime="2012-09-08T05:22:27+00:00">September 8, 2012 at 5:22 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>&#8211; The programmers have moved all of the problems of data integrity and management into the application layer, throwing away all of the benefits of an RDBMS without even knowing why that’s a terrible idea</p>
<p>Having spent many years with such coders, never pleasantly, they know it&#8217;s *not* a terrible idea.  From their point of view.  CS graduates still leave school with a language centric mind.  Not a data centric mind.  As such, they view app dev just the way their COBOL wielding grandpappies did:  I gots me a bunch o dumb bytes, so I gots to write some smart code to wrangle them bytes.  Ergo:  they gets to write lots more code.  More employment for them.  Never mind the collateral damage; they never do.  They aren&#8217;t being stupid, only smart in their limited view sort of way.  It&#8217;s intentional.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1635#respond' onclick='return addComment.moveForm("comment-1635", "1635", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even depth-2" id="li-comment-1624">
		<article id="comment-1624" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/6f6f22658c768b1162200786e3407890?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">michel </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1624"><time datetime="2012-09-03T23:18:09+00:00">September 3, 2012 at 11:18 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>I agree Noah. This concept of two tables sounds so logical when explained, but when implemented it is a real nightmare as a developer. Only collections of attributes to work with, and getting 600 rows for 30 objects with 20 properties, no integrity check, and reporting made people jump out of the window.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1624#respond' onclick='return addComment.moveForm("comment-1624", "1624", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt depth-2" id="li-comment-1626">
		<article id="comment-1626" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/4394664fe51fea07aa44e4d5b897909c?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Chris Rueber </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1626"><time datetime="2012-09-04T07:43:49+00:00">September 4, 2012 at 7:43 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Righteous fury, much? Also, you should look up the definition of the word &#8216;amateur&#8217;. </p>
<p>It&#8217;s not entirely a load of total crap, either. Fact is, there are many cases RDBMS systems don&#8217;t shine. As a document store, for instance. Postgres is pretty good at storing arbitrary files, but why would you muddy the waters? It can store JSON data, but you&#8217;ve lost the purpose of an RDB at that point. Just because you can do something with an RDB does not mean you should.</p>
<p>Not sure I like the thing/data store concept, with stores like Riak, Mongo, and Cassandra hanging around, but I can see the value in keeping data this way. Particularly if you don&#8217;t have a bunch of DBAs hanging around to help in discovery of whether or not your database supports certain features.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1626#respond' onclick='return addComment.moveForm("comment-1626", "1626", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	<ol class="children">
	<li class="comment even depth-3" id="li-comment-1629">
		<article id="comment-1629" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/0741565888b683dd8a8b170c42208bda?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Dennis Decker Jensen </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1629"><time datetime="2012-09-04T16:08:24+00:00">September 4, 2012 at 4:08 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Actually PostgreSQL is a fine document-store or key-value-store. You should look into the hdata-type. The relational model doesn&#8217;t put any constraints on the types you can use. Any RDBMS is fine for any information requiring structure. You might also want to check out presentations from Instagram to see how they were able to scale massively with PostgreSQL. Relational databases do shine for just about all cases, it&#8217;s just that many people are not educated to use them properly, or even allowed to do so otherwise.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1629#respond' onclick='return addComment.moveForm("comment-1629", "1629", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt depth-2" id="li-comment-1637">
		<article id="comment-1637" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/5f212cb19ca6c0aeeb0370559fbf0bb9?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Mike Blaszczak </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1637"><time datetime="2012-09-08T17:39:37+00:00">September 8, 2012 at 5:39 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Indeed, Noah &#8212; it seems like this structure was chosen to work around an RDBMs that was flawed in taking a long time to do metadata updates.  Adding a column with no valu should take no time at all, needing only a schema lock and not any kind of data locks. The code accessing the data can remember that the NULLs in the new columns are not set and enact its own default, or write back a default as the records are accessed anyay.</p>
<p>Mixing types of entities in the same table ends up causing the table to be hot for contention and necessitates extra indexing to find the subset rows of each logical entity that&#8217;s been lumped into the same table. Inefficient for storage and caching, this also becomes na issue for locking because the sequential nature of th scans over the localized entities ends up being likely to promote small locks (rows, pages) to larger locks (pages, extents, the whole table).</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1637#respond' onclick='return addComment.moveForm("comment-1637", "1637", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1605">
		<article id="comment-1605" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/cbcc2d771ccda9c860ec6401bf9b206f?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Roy </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1605"><time datetime="2012-09-02T18:07:46+00:00">September 2, 2012 at 6:07 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Well, sure anyone can only own 2 tables. You&#8217;ve just pushed all your database work back on the programming staff. Six of one half-dozen of another. You&#8217;ve eliminated time consuming database functions at the expense of programming. Either is OK. Just depends on where you want your expenses.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1605#respond' onclick='return addComment.moveForm("comment-1605", "1605", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	<ol class="children">
	<li class="comment odd alt depth-2" id="li-comment-1729">
		<article id="comment-1729" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/3f4a1073df397d894cf3ae596988b687?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">rdp </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1729"><time datetime="2012-09-18T08:41:11+00:00">September 18, 2012 at 8:41 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>First, it&#8217;s worth noting that six 20-something-year-old programmers are WAY cheaper than a half-dozen DBA experts.  </p>
<p>This has got me thinking about what some people would call a &#8220;fad&#8221; in noSQL: while full ACID compliance and 3NF has its place, to completely dismiss noSQL is akin Bethlehem Steel dismissing mini-mills in the 1980s (cue Christiansen&#8217;s &#8220;Innovator&#8217;s Dilemma&#8221;): the cost structure of noSQL is much lower, the technology will improve and will eventually take over many applications currently served by full SQL databases.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1729#respond' onclick='return addComment.moveForm("comment-1729", "1729", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1606">
		<article id="comment-1606" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/5955c683278cbb3d452db47a46b0aa16?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://linksto.re' rel='external nofollow' class='url'>lazyload</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1606"><time datetime="2012-09-02T19:08:21+00:00">September 2, 2012 at 7:08 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>We are also using this design in our office. We have about 10 billion rows of data. Imagine adding an index to each column used in a traditional way.</p>
<p>Here you only have to add index on key and value column. Eases the maintenance part and results are extremely fast.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1606#respond' onclick='return addComment.moveForm("comment-1606", "1606", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	<ol class="children">
	<li class="comment odd alt depth-2" id="li-comment-1617">
		<article id="comment-1617" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/63e105e892884a412104a76b92d102f2?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Chris </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1617"><time datetime="2012-09-03T11:11:49+00:00">September 3, 2012 at 11:11 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>You have a two column table, with a two column index? So, the index is essentially a clone of the table? How is this useful?</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1617#respond' onclick='return addComment.moveForm("comment-1617", "1617", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
</ol><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1607">
		<article id="comment-1607" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/03c738a97e4f7e8dd46a846224fb275b?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://floatboth.com' rel='external nofollow' class='url'>Greg</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1607"><time datetime="2012-09-02T19:50:57+00:00">September 2, 2012 at 7:50 pm</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>PostgreSQL has an extension called hstore. This is what they should use.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1607#respond' onclick='return addComment.moveForm("comment-1607", "1607", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1609">
		<article id="comment-1609" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/caa0ee22a59ee7a4fc261281940ccb54?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://blog.serverdensity.com' rel='external nofollow' class='url'>David Mytton</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1609"><time datetime="2012-09-03T01:14:41+00:00">September 3, 2012 at 1:14 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Schemaless design is one of the advantages of MongoDB which makes it great for development. You just download the binary then run it, and you have a database ready to go. That doesn&#8217;t mean you don&#8217;t have to thing about the structure though because it&#8217;s not really &#8220;schemaless&#8221; &#8211; every document has fields and you need to be aware of them for creating the right indexes. It&#8217;s also easy for a typo to be a major bug.</p>
<p>In production the advantages are that you don&#8217;t need to alter the table structure &#8211; you just do it in code. That avoids long running ALTER queries&#8230;but you still have to create indexes on new fields (even though they can be run in the background).</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1609#respond' onclick='return addComment.moveForm("comment-1609", "1609", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-1612">
		<p>Pingback: <a href='http://cwyalpha.wordpress.com/2012/09/03/thought-this-was-cool-reddits-database-has-two-tables-kevin-burke/' rel='external nofollow' class='url'>Thought this was cool: Reddit’s database has two tables | Kevin Burke &laquo; CWYAlpha</a> </p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1613">
		<article id="comment-1613" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/556a0f33da43777690ec95fbf8ab2be7?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Evi1M4chine </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1613"><time datetime="2012-09-03T08:55:32+00:00">September 3, 2012 at 8:55 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>So it’s a MapReduce solution, done in SQL.</p>
<p>Why not go directly to a noSQL solution then?</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1613#respond' onclick='return addComment.moveForm("comment-1613", "1613", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1614">
		<article id="comment-1614" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/3d428cf0fa52acd125ec2e2c44a057d0?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn"><a href='http://nekocm.blogspot.com' rel='external nofollow' class='url'>Federico Ramírez</a> </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1614"><time datetime="2012-09-03T09:05:58+00:00">September 3, 2012 at 9:05 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>That&#8217;s quite interesting&#8230; You DO have a lot of manual work to do, but also the advantages are huge.<br />
And I&#8217;m surprised about Postgres beeing faster for key / value than NoSQL. I guess I&#8217;ll have some fun this weekend.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1614#respond' onclick='return addComment.moveForm("comment-1614", "1614", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-1623">
		<p>Pingback: <a href='http://ngerakines.me/2012/09/today-in-bookmarks-for-august-31st/' rel='external nofollow' class='url'>Today in bookmarks for August 31st. | ngerakines.me</a> </p>
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-1625">
		<p>Pingback: <a href='http://alexdong.com/what-wrong-with-university-database-prepare-for-future/' rel='external nofollow' class='url'>What&#8217;s wrong with universities database class and how to prepare for the future? | Raw thoughts from Alex Dong</a> </p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1628">
		<article id="comment-1628" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/09ab9696ff673467e6d85be940a08b1b?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Anton </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1628"><time datetime="2012-09-04T09:42:17+00:00">September 4, 2012 at 9:42 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>There also was an article on the architecture of friendfeed.com, or some other similar social site. They were employing similar but slightly different technique: <a href="http://backchannel.org/blog/friendfeed-schemaless-mysql" rel="nofollow">http://backchannel.org/blog/friendfeed-schemaless-mysql</a></p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1628#respond' onclick='return addComment.moveForm("comment-1628", "1628", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1630">
		<article id="comment-1630" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/cc82db94d96bfb86748e2f22208826c0?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Alex </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1630"><time datetime="2012-09-05T08:39:08+00:00">September 5, 2012 at 8:39 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Looks very similar to Entity-Attribute-Value (EAV) concept, but it completely fails if you need to do selections based on attributes.</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1630#respond' onclick='return addComment.moveForm("comment-1630", "1630", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-1631">
		<p>Pingback: <a href='http://techzinglive.com/page/1164/205-tz-discussion-check-your-egometer' rel='external nofollow' class='url'>205: TZ Discussion &#8211; Check Your Egometer</a> </p>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1634">
		<article id="comment-1634" class="comment">
			<header class="comment-meta comment-author vcard">
				<img alt='' src='https://secure.gravatar.com/avatar/ef30340e41cdcebf2316ba8ee6ee123d?s=44&amp;d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D44&amp;r=G' class='avatar avatar-44 photo' height='44' width='44' /><cite class="fn">Konstantin isaev </cite><a href="https://kev.inburke.com/kevin/reddits-database-has-two-tables/comment-page-1/#comment-1634"><time datetime="2012-09-08T03:57:33+00:00">September 8, 2012 at 3:57 am</time></a>			</header><!-- .comment-meta -->
			<section class="comment-content comment">
				<p>Hey, why 2 tables? why not 1?<br />
a single ocean of key-value pairs, where keys are have a kind of convention like this:<br />
o_{objectid}_{attributeid} &#8211; key [with two guids] for value<br />
o_{objectid}_type &#8211; key for id of type the {objectid} belongs to<br />
t_{typeid} &#8211; name of type {typeid}<br />
a_{typeid}_{attributeid} &#8211; name of attribute that contains name of attribute {attributeid} of {typeid}<br />
a_{typeid}_{attributeid}_type &#8211; attribute with values type of the {attributeid}<br />
and more blah blah blah.<br />
There is only one problem with this. If you need key-value pairs storage, you may be don&#8217;t need RDBMS at all for a task? Preparing coffee in a microwave oven is not a good idea, is it?</p>
							</section><!-- .comment-content -->
			<div class="reply">
				<a class='comment-reply-link' href='/kevin/reddits-database-has-two-tables/?replytocom=1634#respond' onclick='return addComment.moveForm("comment-1634", "1634", "respond", "2910")'>Reply</a> <span>&darr;</span>			</div><!-- .reply -->
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-1640">
		<p>Pingback: <a href='http://labnotes.org/2012/09/09/rounded-corners-343-worked-fine-in-dev/' rel='external nofollow' class='url'>Rounded Corners 343 — Worked fine in dev | Labnotes</a> </p>
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-1652">
		<p>Pingback: <a href='http://doctordata.wordpress.com/2012/09/14/state-of-data-116/' rel='external nofollow' class='url'>State of Data #116 &laquo; Dr Data&#039;s Blog</a> </p>
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-2118">
		<p>Pingback: <a href='http://tech.dchang.me/2012/10/30/facebook-multifeed/' rel='external nofollow' class='url'>Facebook Multifeed &laquo; Missional Code</a> </p>
	</li><!-- #comment-## -->
		</ol><!-- .commentlist -->
	<div class='hidden-phone'>
									<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/kevin/reddits-database-has-two-tables/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="https://kev.inburke.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='2910' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="ee09750cb4" /></p>					</form>
							</div><!-- #respond -->
				</div>
</div><!-- #comments .comments-area -->
		</div><!-- #content -->
	</div><!-- #primary -->
</div>
</div>
	<footer id="colophon" role="contentinfo">
      &copy; 2006 - 2014 Kevin Burke. <br />
      <a href="http://github.com/kevinburke/2013">source code</a>
	</footer><!-- #colophon -->
</div><!-- #page -->
<script type='text/javascript' src='https://kev.inburke.com/wp-content/themes/flat-ui/js/main.js?ver=1.0'></script>
<script type='text/javascript' src='https://kev.inburke.com/wp-includes/js/comment-reply.min.js?ver=3.9.1'></script>
<script type='text/javascript' src='https://kev.inburke.com/wp-content/themes/twentytwelve/js/navigation.js?ver=1.0'></script>
</body>
</html>

<!-- Dynamic page generated in 0.356 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-06-03 17:25:48 -->

<!-- super cache -->