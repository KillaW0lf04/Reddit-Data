<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8" />
<title>How to be Minimally Redundant (or &#8220;A Splitting Headache&#8221;) | A Blog by Richard Kiss</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://blog.richardkiss.com/wp-content/themes/twentyten/style.css" />
<link rel="pingback" href="http://blog.richardkiss.com/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="A Blog by Richard Kiss &raquo; Feed" href="http://blog.richardkiss.com/?feed=rss2" />
<link rel="alternate" type="application/rss+xml" title="A Blog by Richard Kiss &raquo; Comments Feed" href="http://blog.richardkiss.com/?feed=comments-rss2" />
<link rel="alternate" type="application/rss+xml" title="A Blog by Richard Kiss &raquo; How to be Minimally Redundant (or &#8220;A Splitting Headache&#8221;) Comments Feed" href="http://blog.richardkiss.com/?feed=rss2&#038;p=264" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blog.richardkiss.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://blog.richardkiss.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Good-bye App Engine' href='http://blog.richardkiss.com/?p=247' />
<link rel='next' title='On BIP0032 and Bitcoin Deterministic Wallets' href='http://blog.richardkiss.com/?p=313' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://blog.richardkiss.com/?p=264' />
<link rel='shortlink' href='http://blog.richardkiss.com/?p=264' />
</head>

<body class="single single-post postid-264 single-format-standard custom-background">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://blog.richardkiss.com/" title="A Blog by Richard Kiss" rel="home">A Blog by Richard Kiss</a>
					</span>
				</div>
				<div id="site-description">Taste the Excitement™</div>

										<img src="http://blog.richardkiss.com/wp-content/themes/twentyten/images/headers/path.jpg" width="940" height="198" alt="" />
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu"><ul><li ><a href="http://blog.richardkiss.com/">Home</a></li><li class="page_item page-item-2"><a href="http://blog.richardkiss.com/?page_id=2">About</a></li></ul></div>
			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">

			

				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://blog.richardkiss.com/?p=247" rel="prev"><span class="meta-nav">&larr;</span> Good-bye App Engine</a></div>
					<div class="nav-next"><a href="http://blog.richardkiss.com/?p=313" rel="next">On BIP0032 and Bitcoin Deterministic Wallets <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-264" class="post-264 post type-post status-publish format-standard hentry category-computers">
					<h1 class="entry-title">How to be Minimally Redundant (or &#8220;A Splitting Headache&#8221;)</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://blog.richardkiss.com/?p=264" title="11:43 am" rel="bookmark"><span class="entry-date">June 11, 2013</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://blog.richardkiss.com/?author=2" title="View all posts by Richard">Richard</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<p>I&#8217;ve recently been investigating the command-line utility <a href="https://github.com/richardkiss/py-zfec">zfec</a>, which is a lot like the UNIX &#8220;split&#8221; utility, except, using a technique called <a href="http://en.wikipedia.org/wiki/Erasure_code">erasure coding</a>, you can choose to split your file into M pieces, any K of which are enough to recreate the file using the complimentary [sic] zunfec command.</p>
<p>Concrete example: a 100K file can be split into 10 (or more) pieces, each just over 25K long, and zunfec can recreate the original from any 4 of them.</p>
<p><strong>Any</strong> 4. You might expect this to incur a lot of overhead in each piece, but it turns out it&#8217;s just a header of four bytes or less. Pretty much the same as cutting the file into pieces.</p>
<p>This amazed me. How could this possible work? How can you split data into M pieces so that any K of them is enough to reconstruct them? Linear algebra to the rescue!</p>
<p>Suppose we want to encode a twelve character text string into a bunch of arrays, each with four values, any three of which are sufficient to reconstruct the original. Let&#8217;s use the string &#8220;Lovefromdawn&#8221;. Here&#8217;s what you do:</p>
<p><a href="http://blog.richardkiss.com/wp-content/uploads/2013/06/fig1.gif"><img src="http://blog.richardkiss.com/wp-content/uploads/2013/06/fig1.gif" alt="Figure 1" width="661" height="131" class="alignnone size-full wp-image-302" /></a></p>
<p>The matrix furthest to the left is a <a href="http://en.wikipedia.org/wiki/Vandermonde_matrix">Vandermonde matrix</a>, which is a matrix where each row forms a geometric series starting with 1. A square Vandermonde matrix has the special property that as long as the second column has no repeated elements, the matrix is invertible (and in fact, there is a special algorithm to invert it quickly).</p>
<p>The split pieces correspond to rows of the matrix on the right. Choose any three of them; let&#8217;s say row 1, 2 and 4. Once we know what row numbers they are (and this explains the tiny header), we get the following system of equations:</p>
<p><a href="http://blog.richardkiss.com/wp-content/uploads/2013/06/fig2.gif"><img src="http://blog.richardkiss.com/wp-content/uploads/2013/06/fig2.gif" alt="Figure 2" width="560" height="61" class="alignnone size-full wp-image-303" /></a></p>
<p>We know the leftmost matrix is invertible, so multiply both sides by the inverse, and we solve for X, recovering &#8220;Lovefromdawn&#8221;. Wowza!</p>
<p>But wait! One problem remains: if we use standard integer arithmetic, the matrix on the right ends up with a lot of values larger than 255, and we can&#8217;t store it in a byte array. That ain&#8217;t no good.</p>
<p>Luckily, it turns out that most theorems dealing with matrices and invertibility only assume we are operating over an arbitrary <a href="http://en.wikipedia.org/wiki/Field_(mathematics)">field</a>, a mathematical structure that has addition, a 0, multiplication, a 1, and a reciprocal for every non-0 element.</p>
<p>Abstract algebra to the rescue! (Math seems to rescue computer science a lot.) It turns out that there is a field with 256 elements known as <a href="http://en.wikipedia.org/wiki/Finite_field_arithmetic">GF(2**8)</a>. In this field, 0 is the 0, 1 is the 1 (surprise!), addition is bitwise exclusive-or (so every number is its own additive inverse!), and multiplication is a weird, and seemingly unpredictable beast, that is best calculated by pre-populating a table of logarithms and exponents, then creating a 256&#215;256 array containing the multiplication table (since each number fits in a byte, the whole table only takes 64K).</p>
<p>[There are actually lots of ways to define multiplication that still meets the requirements of a field, but we have to pick one by defining what's called the <a href="http://en.wikipedia.org/wiki/Irreducible_polynomial">irreducible polynomial</a> for the field.]</p>
<p>Once we operate over this field, all matrix values are guaranteed to be in the range [0, 255], and our method for bytewise encoding and decoding becomes easy.</p>
<p>One more aside: zfec actually piles the 3&#215;3 (well, KxK) identity matrix on top of the Vandermonde matrix, so the first K pieces are exactly what you&#8217;d get by cutting the file into K pieces in the obvious way and putting the tiny header in front. Even though our matrix is no longer a Vandermonde matrix, submatrices are still guaranteed to be invertible and it still works.</p>
											</div><!-- .entry-content -->

					<div id="entry-author-info">
						<div id="author-avatar">
							<img alt='' src='http://0.gravatar.com/avatar/e4e42bdc5807522c2ca8f03420c257db?s=60&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />						</div><!-- #author-avatar -->
						<div id="author-description">
							<h2>About Richard</h2>
							Richard Kiss was born and raised in Canada. In 1991, he moved to California, ultimately receiving an (or is it "a") M.A. in mathematics. This goes a long way to explaining his obsession with numbers, structure and literalism. His personality is tempered with a heavy dose of wit and opinion. He enjoys donuts and writing in the third person. He also performs stand-up comedy.							<div id="author-link">
								<a href="http://blog.richardkiss.com/?author=2" rel="author">
									View all posts by Richard <span class="meta-nav">&rarr;</span>								</a>
							</div><!-- #author-link	-->
						</div><!-- #author-description -->
					</div><!-- #entry-author-info -->

					<div class="entry-utility">
						This entry was posted in <a href="http://blog.richardkiss.com/?cat=4" title="View all posts in Computers" rel="category">Computers</a>. Bookmark the <a href="http://blog.richardkiss.com/?p=264" title="Permalink to How to be Minimally Redundant (or &#8220;A Splitting Headache&#8221;)" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://blog.richardkiss.com/?p=247" rel="prev"><span class="meta-nav">&larr;</span> Good-bye App Engine</a></div>
					<div class="nav-next"><a href="http://blog.richardkiss.com/?p=313" rel="next">On BIP0032 and Bitcoin Deterministic Wallets <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">7 Responses to <em>How to be Minimally Redundant (or &#8220;A Splitting Headache&#8221;)</em></h3>


			<ol class="commentlist">
					<li class="comment even thread-even depth-1" id="li-comment-79400">
		<div id="comment-79400">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/7679abbef89efb83b29b6692aaf45c68?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Andrew</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://blog.richardkiss.com/?p=264&#038;cpage=1#comment-79400">
			June 28, 2013 at 5:01 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I ❤ math.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-79442">
		<div id="comment-79442">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/b240aaab5e1897421d7a1933d0c510f4?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.gwern.net' rel='external nofollow' class='url'>gwern</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://blog.richardkiss.com/?p=264&#038;cpage=1#comment-79442">
			June 29, 2013 at 7:55 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>&gt; I’ve recently been investigating the command-line utility zfec, which is a lot like the UNIX “split” utility, except, using a technique called erasure coding, you can choose to split your file into M pieces, any K of which are enough to recreate the file using the complimentary zunfec command.</p>
<p>par2 is insanely useful for backups onto optical disks. One file was corrupted? No problem! We&#8217;ll just recover using the par2 FEC we made back when we did the original backup&#8230;</p>
<p>(I use par2 rather than zfec because, even though it&#8217;s way slower, it&#8217;s already been around for like a decade and I&#8217;m not sure how maintained or robust zfec is.)</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-79447">
		<div id="comment-79447">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/d0f7cd202132d499592ffbbd3d23d0a4?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://blog.richardkiss.com/?p=264&#038;cpage=1#comment-79447">
			June 29, 2013 at 9:56 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Any specific reason for using ordinary Reed-Solomon over Cauchy Reed-Solomon? The latter is generally considered to be much faster for several reason, one being that multiplication is reduced to a series of XOR-operations.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-79450">
		<div id="comment-79450">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/44f47adfcff58848fd96e055c04437d0?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Jae</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://blog.richardkiss.com/?p=264&#038;cpage=1#comment-79450">
			June 29, 2013 at 10:13 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>This is cool. Each offset (a byte in the chunk) is composed of multiple bytes from the original string with a stride of said offset, and you use matrix inversions to reconstruct the original.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-79458">
		<div id="comment-79458">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c3729f8d1ff2cd26ebf02119bb608c86?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">furikuretsu</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://blog.richardkiss.com/?p=264&#038;cpage=1#comment-79458">
			June 29, 2013 at 2:35 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Great! What a nice math breeze in the CS world.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://frenchcoding.com/2013/07/01/les-liens-de-la-semaine-edition-36-2/' rel='external nofollow' class='url'>Les liens de la semaine – Édition #36 | French Coding</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-81461">
		<div id="comment-81461">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/eccd133b9e23b027091f3acdf3b1d135?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.chrisdew.com/' rel='external nofollow' class='url'>Chris Dew</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://blog.richardkiss.com/?p=264&#038;cpage=1#comment-81461">
			August 20, 2013 at 11:11 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi, I&#8217;ve invented an algorithm which fulfils a similar purpose to zfec (I did not know about zfec, erasure codes or fountain codes at the time).</p>
<p><a href="http://www.reddit.com/r/programming/comments/1kq70k/holographic_views_of_data/" rel="nofollow">http://www.reddit.com/r/programming/comments/1kq70k/holographic_views_of_data/</a></p>
<p>If you would like to talk about this, please feel free to email me.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
			</ol>



								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/?p=264#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://blog.richardkiss.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='264' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="18109cac19" /></p><script type='text/javascript' src='http://blog.richardkiss.com/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://blog.richardkiss.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://blog.richardkiss.com/wp-content/plugins/akismet/_inc/form.js?ver=3.0.0'></script>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="21"/></p>					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">


			<li id="search" class="widget-container widget_search">
				<form role="search" method="get" id="searchform" class="searchform" action="http://blog.richardkiss.com/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form>			</li>

			<li id="archives" class="widget-container">
				<h3 class="widget-title">Archives</h3>
				<ul>
						<li><a href='http://blog.richardkiss.com/?m=201312'>December 2013</a></li>
	<li><a href='http://blog.richardkiss.com/?m=201310'>October 2013</a></li>
	<li><a href='http://blog.richardkiss.com/?m=201307'>July 2013</a></li>
	<li><a href='http://blog.richardkiss.com/?m=201306'>June 2013</a></li>
	<li><a href='http://blog.richardkiss.com/?m=201302'>February 2013</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200908'>August 2009</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200907'>July 2009</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200906'>June 2009</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200905'>May 2009</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200904'>April 2009</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200903'>March 2009</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200902'>February 2009</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200901'>January 2009</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200812'>December 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200811'>November 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200810'>October 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200809'>September 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200808'>August 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200807'>July 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200806'>June 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200805'>May 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200804'>April 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200803'>March 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200801'>January 2008</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200712'>December 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200711'>November 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200710'>October 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200708'>August 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200707'>July 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200706'>June 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200705'>May 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200704'>April 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200703'>March 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200702'>February 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200701'>January 2007</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200612'>December 2006</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200611'>November 2006</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200610'>October 2006</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200609'>September 2006</a></li>
	<li><a href='http://blog.richardkiss.com/?m=200608'>August 2006</a></li>
				</ul>
			</li>

			<li id="meta" class="widget-container">
				<h3 class="widget-title">Meta</h3>
				<ul>
										<li><a href="http://blog.richardkiss.com/wp-login.php">Log in</a></li>
									</ul>
			</li>

					</ul>
		</div><!-- #primary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://blog.richardkiss.com/" title="A Blog by Richard Kiss" rel="home">
					A Blog by Richard Kiss				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantic Personal Publishing Platform" rel="generator">Proudly powered by WordPress.</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

<!-- MathJax Latex Plugin installed: Disabled as no shortcodes on this page --><script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-4702953-1']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</body>
</html>
