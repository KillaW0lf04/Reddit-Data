
<!DOCTYPE html>
<html>
  <head>    
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" >
    <title>The Codist: Your Progress As A Programmer Is All Up To You</title>
    
    <xscript src="/js/modernizr-1.7.js"></xscript>
    <script src="/js/m.js"></script>

    <style type="text/css">
      body { background-image: url("/images/tiny.png") !important;}
    </style>

    <link rel="stylesheet" href="/styles/new.css">
    <link rel="alternate" type="application/rss+xml" title="The Codist Posts Feed" href="/rss.php"/>
 
    <script type="text/javascript">

      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-489872-6']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();

    </script>
   </head>
  
  <body>
    <header id="hd">
      <img src="/images/top.png" width="960" height="80" alt="the codist - programmerthink"/>
    </header>
    
    <div id="main">
      <section id="content">
<script type="text/javascript">
  encodedURI = encodeURIComponent(window.location);
  encodedTitle = encodeURIComponent('Your Progress As A Programmer Is All Up To You');
</script>
          <article>
            <h1>Your Progress As A Programmer Is All Up To You </h1>
            <h5><span>Published: 02/04/2014</span> </h5>
            <p>I read a comment on a post on Hacker News where a young programmer said they didn't want to work at a place where older obsolete programmers were let go instead of being retrained, as they would be there some day.</p>

<p>This person meant well, but still managed to irritate me no end. Firstly just because a programmer is older doesn't mean they are obsolete (and just because someone is young doesn't mean they are up to date either). The biggest issue I had with that comment is: its your responsibility as a programmer to keep yourself educated and up to date, not some employer's.</p>

<p>I've been a programmer for 32 years now and I've always tried to keep ahead of the <a href="http://thecodist.com/article/the_programming_steamroller_waits_for_no_one">technology steamroller</a>. A lot of people I knew my age who got a BS in Computer Science never learned anything new after school and did eventually become obsolete. I spent 6 years studying chemistry but once I got started as a programmer I found I needed to know what was going on outside of my job, and had a desire to continuously learn and try out all sorts of programming. Of course things were a lot slower back then and reading was a challenge (no internet, you had to read stuff on actual paper!).</p>

<p>By my third year I saw the microcomputers were going to be the future and <a href="http://thecodist.com/article/my_first_programming_job_in_1981_and_how_it_shaped_my_career">wiggled my way into the group that worked with them</a>. Once I was in there I read about a new language called C and convinced my manager it was worth buying. Turned out that knowing C meant my first startup app could be written in C instead of Pascal.</p>

<p>Later I read about OO programming and it clicked again, I added some hacky objects to C so I could take advantage. Eventually when C++ appeared I was ready to take advantage of that.</p>

<p>After my sojourn at Apple when it sucked, I figured out I need to work on the web and went to work for consulting firm that used NeXT WebObjects, written in some obscure language called Objective-C. Once Java J2EE appeared I convinced the company to start working in that technology, and did the first project. Coincidentally that project was at a company that is now my employer's parent company, and it was their first completed Java project.</p>

<p>That's what happens when you pay attention to what is going on in the industry instead of just focusing on what you are doing. You never know what might become the "next big thing" but you can always make yourself aware of everything, even if you can't actually try everything.</p>

<p>I remember a coworker in the mid 2000's who was a C++ lead, where I suggested he try Firefox when he had some issue with IE. He looked at me like I was nuts: he had no idea that there was another browser other than IE. Even then he had no interest in even trying it as it didn't affect his job. I can't understand that attitude. You never know where the next big thing will come from, refusing to even acknowledge that the world is changing is not going to keep it from doing so.</p>

<p>My friends who got the BS degree and eventually lost their jobs when the mainframes were retired and found they could no longer work as programmers complained how they should have taken the time to learn something else. But once you discover you are obsolete it's too late. Assuming your employer will retrain you is a fool's pipe dream. These days employers may drop you, your job, your projects, or even the whole company without much notice, and then you have to find a new job. Expecting them instead to retrain you is not going to happen. Maybe if you are an automobile assembly line worker but not a programmer.</p>

<p>It's up to you to keep up, to try new things even if they might not be important. Learning anything is useful because the more programming technologies and tools you try and play with the easier others will be. You might learn useless stuff. But learning is never itself useless. It doesn't matter if you write open source projects, volunteer to code something, or even just work on stuff at home no one will ever see. It's training your brain to accept new things. Even just knowing what is going on in the programming world is going to help as you never know what a future employer might inquire about.</p>

<p>I was writing web applications when I first heard of Ajax (a few months after the term was coined) and I started using it; again I wound up teaching my teammates about the new thing first. Sadly it scared the architecture team who thought I had bought some new technology without approval and wondered if it was supported. None of them had heard of it (since they didn't pay much attention) and when I told them it was just Javascript they were only barely mollified. I was on the architecture team and it was my job to keep up with new stuff and it was still a pain.</p>

<p>When the iPhone first came out, but without any development Kit yet, I still thought <a href="http://thecodist.com/article/the-real-revolution-in-the-iphone-is-the-fully-programmable-user-interface">it represented the future</a>. Amazingly enough my Objective-C knowledge turned out to be useful again!</p>

<p>Today keeping up is a ridiculous job sometimes. People who do web apps today in Javascript have a constant stream of the next big thing every week; you can't learn anything fast enough before it gets crushed by another framework. I don't work in that area these days (just iOS) but I still keep up as again, you never know where things will go or you will wind up.</p>

<p>What few classes I've taken at employers, usually pointless ones that I already knew or some new technology I would use once, haven't ever been all that important to my future. But like anything you never know what might be useful in the unseen future.</p>

<p>In graduate school studying chemistry I learned APL. I never used it for anything other than play but it formed a basis for my first startup's product Trapeze. I forgot about Objective-C after 1999 yet today it's my primary language. You never know the connections that might prove helpful in the future.</p>

<p>What irritates me no end is when programmers ignore everything outside of their work area. I worked with some folks once who used a 4GL tool that generated RPG code. They bragged that their tool was the best thing in the world and that they would never need to know anything else. I can just imagine the day when most of them are laid off and wonder why they can't get a job. Technology rarely vanishes, but your job might diminish, you might do nothing but horrible maintenance, you might become superfluous and chucked out the door. Today no one will help you become re-useful besides yourself. If you wait until it's too late that steamroller will flatten your career.</p>

<p>So don't procrastinate today, learn about something new, or even better learn something new. Keep an eye open, you might see that future coming at you. Then when it shows up it's no big deal. So far I've been lucky to pay attention and it's kept me still programming after three decades and still working on modern stuff.</p>

<p>So keep your eyes peeled and don't expect anyone will help you keep up. Like Baseball pitcher Satchel Page said "Don't look back. Something might be gaining on you." In programming you need to look forward because the only thing behind you is that nasty steamroller.</p>
            <p>Tag: <a href='/tag/programming' rel="tag">programming</a></p>
            <a class="plain" href="http://www.reddit.com/submit" onclick="window.location = 'http://www.reddit.com/submit?url=' + encodedURI+'&amp;title='+encodedTitle; return false"> <img src="/images/reddit.png" alt="submit to reddit" /> </a>
            <a class="plain" href="http://news.ycombinator.com/submitlink" onclick="window.location='http://news.ycombinator.com/submitlink?u='+encodedURI+'&amp;t='+encodedTitle; return false;"><img src="/images/hackernews.png" alt="submit to hackernews" /></a>
          </article>
      </section>
      <section id="sidebar">
<nav>
  <h1>Site</h1>
  <ul>
    <li><a href='/'>Home</a></li>
    <li><a href='/all'>All Articles</a></li>
    <li>RSS <a href="http://thecodist.com/rss.php"><img src="/images/rss.png" width="16" height="16" alt="the codist-programmerthink-rss"/> Feed </a></li>
    <li class="twitbutton">
      <a href="http://twitter.com/imthecodist" class="twitter-follow-button" data-show-count="false">Follow @imthecodist</a>
      <script src="http://platform.twitter.com/widgets.js" type="text/javascript"></script>
    </li>
  </ul>
</nav>

<nav>
  <h1>Latest Posts</h1>
  <ul>
    <li><a href='/article/programming_is_a_dead_end_job'>Programming Is a Dead End Job</a></li>
    <li><a href='/article/what_writing_and_selling_software_was_like_in_the_80_39_s'>What Writing - And Selling - Software Was Like In The 80&#39;s</a></li>
    <li><a href='/article/the_education_of_a_programmer'>The Education of a Programmer</a></li>
    <li><a href='/article/resurrecting_the_dead'>Resurrecting The Dead</a></li>
    <li><a href='/article/why_do_i_blog'>Why Do I Blog?</a></li>
  </ul>
</nav>

<nav>
  <h1>Most Popular Posts</h1>
  <ul>
    <li><a href='/article/yes_i_still_want_to_be_doing_this_at_56'>Yes I Still Want To Be Doing This at 56</a></li>
    <li><a href='/article/why_i_don_39_t_do_unpaid_overtime_and_neither_should_you'>Why I Don't Do Unpaid Overtime and Neither Should You</a></li>
    <li><a href='/article/all-i-need-to-know-to-be-a-better-programmer-i-learned-in-kindergarten'>All I Need To Know To Be A Better Programmer I Learned In Kindergarten</a></li>
    <li><a href='/article/your_progress_as_a_programmer_is_all_up_to_you'>Your Progress As A Programmer Is All Up To You</a></li>
    <li><a href='/article/programming_is_a_dead_end_job'>Programming Is a Dead End Job</a></li>
    <li><a href='/article/writing-multithreaded-code-is-like-juggling-chainsaws'>Writing Multithreaded Code Is Like Juggling Chainsaws</a></li>
    <li><a href='/article/the-absolute-need-to-understand'>The Absolute Need To Understand</a></li>
    <li><a href='/article/how_hotel_reservations_work'>How Hotel Reservations Work</a></li>
    <li><a href='/article/interviews_can_be_a_terrible_way_to_identify_good_programmers'>Interviews Can Be a Terrible Way to Identify Good Programmers</a></li>
    <li><a href='/article/resumes_are_mostly_useless'>Resumes Are Mostly Useless</a></li>
  </ul>
</nav>

<nav class="googtrans">
  <div id="google_translate_element"></div><script>
  function googleTranslateElementInit() {
    new google.translate.TranslateElement({
      pageLanguage: 'en'
    }, 'google_translate_element');
  }
  </script><script src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
</nav>

<nav>
  <div id="search">
  <form method="get" action="http://www.google.com/search">
    <div>
      <p>
        <input type="text" name="q" size="15" maxlength="255" value="" />
        <input type="submit" value="Google Search" />
        <input type="checkbox" name="sitesearch" value="thecodist.com" checked /> search thecodist.com only
      </p>
    </div>
  </form>
</div>
</nav>

<nav>
  <h1>Links</h1>
  <ul>
    <li><a href='http://idlediversions.com/'>My iOS Game Company</a></li>
  </ul>
</nav>
      </section>
    </div>
    
    <footer>
      <p>Copyright &copy; 2006-2013 Andrew Wulf <span>
    <script type="text/javascript">
    var at = "@";
    var mt = "mailto:";
    document.write("<a href='"+mt+"im.the.codist"+at+"gmail.com"+"'>Mail<\/a>");
    </script>
<noscript>im. the. codist @t gmail. com</noscript></span>
    </footer>
  </body>

  <!--[if !(lt IE 8)]><!-->
   <script type="text/javascript">
     (function(){var e=document.createElement("script");e.type="text/javascript";e.async=true;e.src=document.location.protocol+"//d1agz031tafz8n.cloudfront.net/thedaywefightback.js/widget.min.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)})()
   </script>
<!--<![endif]-->
  
</html>

