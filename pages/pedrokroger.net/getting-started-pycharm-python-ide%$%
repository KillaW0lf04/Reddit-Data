<!DOCTYPE html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head><link rel="stylesheet" type="text/css" href="http://pedrokroger.net/wp-content/cache/minify/000000/jY9LDsJQCEU3VIKNcR9ugVLUJhReCk_t7k2tn4EdOONycjmhxaROBfwE7JZiGVC0BgZPIta0ONJ5YCDOwQ06vyNFSAZyxA-DyFkltlorwV5OVDXX2NzK24q1qFMfG7rnuBw_tPu_GlwjfYSuZrpFs0Mmu1K8nJ-4PKA0e83vbjDW2ssKyySZ8_Hi6Q8.css" media="all" />
<link rel="stylesheet" type="text/css" href="http://pedrokroger.net/wp-content/cache/minify/000000/M9BPTswrSyzWTyvNSy7JzM8r1k8uLtYvzsgvKknOT0ktBgA.css" media="all" />
<link rel="stylesheet" type="text/css" href="http://pedrokroger.net/wp-content/cache/minify/000000/M9BPTswrSyzWTy4tLsnPBQA.css" media="all" />

<meta charset="UTF-8" />

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="pingback" href="http://pedrokroger.net/xmlrpc.php" />

<!-- This site is optimized with the Yoast WordPress SEO plugin v1.5.3.3 - https://yoast.com/wordpress/plugins/seo/ -->
<title>How to Get Started with PyCharm and Have a Productive Python IDE - Pedro Kroger</title>
<meta name="description" content="I will show you how to get started with PyCharm quickly to have a productive and modern Python IDE."/>
<link rel="canonical" href="http://pedrokroger.net/getting-started-pycharm-python-ide/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="How to Get Started with PyCharm and Have a Productive Python IDE - Pedro Kroger" />
<meta property="og:description" content="I will show you how to get started with PyCharm quickly to have a productive and modern Python IDE." />
<meta property="og:url" content="http://pedrokroger.net/getting-started-pycharm-python-ide/" />
<meta property="og:site_name" content="Pedro Kroger" />
<meta property="article:section" content="Emacs" />
<meta property="article:section" content="Programming" />
<meta property="article:section" content="PyCharm" />
<meta property="article:section" content="Python" />
<meta property="article:published_time" content="2014-01-28T17:55:05+00:00" />
<meta property="article:modified_time" content="2014-02-06T10:39:46+00:00" />
<meta property="og:updated_time" content="2014-02-06T10:39:46+00:00" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-initial-screen.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-quick-start.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-config-appearance.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-colors.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-appearance2.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-new-project.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-interpreters.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-new-virtualenv.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-background-tasks.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-background-tasks2.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-virtualenv-installed.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-keymap.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-mac-options.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/palua.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-external-tools.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-new-shortcut.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-select-keybinding.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-external-tool-menu.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode1.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-run-file.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode2.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-completion.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-console.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-execute-selection.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-scratch.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-list-macro.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-macro-menu.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-debug.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-ipython.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-find-action.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-default.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-power-save.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-simple.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-simple2.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-expand1.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-expand2.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-expand.gif" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-debug.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-documentation1.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-documentation2.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-documentation3.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-documentation4.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-pep8.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-navigate.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-jump-class.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-jump-file.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-find-symbol.gif" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-goto-symbol.gif" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-jump-regions.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-new-test-config.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-tests.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-run-tests.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-run-all-tests1.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-tabs1.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-switch-tab.gif" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-split-windows.png" />
<meta property="og:image" content="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-split-shortcuts.png" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel="alternate" type="application/rss+xml" title="Pedro Kroger &raquo; Feed" href="http://feeds.feedburner.com/pedrokroger" />
<link rel="alternate" type="application/rss+xml" title="Pedro Kroger &raquo; Comments Feed" href="http://pedrokroger.net/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Pedro Kroger &raquo; How to Get Started with PyCharm and Have a Productive Python IDE Comments Feed" href="http://pedrokroger.net/getting-started-pycharm-python-ide/feed/" />
<style type="text/css">
@media only screen and (min-width: 768px) {
body.two-col-left-960 #main-sidebar-container { width: 100%; }
body.two-col-left-960 #main-sidebar-container #sidebar { width: 28.385%; }
body.two-col-left-960 #main-sidebar-container #main { width: 68.385%; }
}
</style>
<link rel='stylesheet' id='mailchimpSF_main_css-css'  href='http://pedrokroger.net/?mcsf_action=main_css&#038;ver=3.9.1' type='text/css' media='all' />
<!--[if IE]>
<link rel='stylesheet' id='mailchimpSF_ie_css-css'  href='http://pedrokroger.net/wp-content/plugins/mailchimp/css/ie.css?ver=3.9.1' type='text/css' media='all' />
<![endif]-->








<!--[if lt IE 9]>
<link href="http://pedrokroger.net/wp-content/themes/canvas/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 960px; max-width: 960px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 960px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]-->
<script type="text/javascript" src="http://pedrokroger.net/wp-content/cache/minify/000000/dY5LDsIwDAUvlNSgXoQrmMRKXeWH4yDC6akoSCzK7mk0T5oZ1lsnGWb-DJs4CCpNibM5Q8LAzqJTLtleywOwNdIGa4MdbswuFCuJOYHDfMcGnF3snt6WLizeVhQdx0IqniTz889_r5qqkOq4LEXLsRcok2DckrF7LrZGHCTf3F_2Ag.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://pedrokroger.net/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://pedrokroger.net/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='shortlink' href='http://pedrokroger.net/?p=364' />
<script type="text/javascript">AudioPlayer.setup("http://pedrokroger.net/wp-content/plugins/audio-player/assets/player.swf?ver=2.0.4.6", {width:"290",animation:"yes",encode:"yes",initialvolume:"60",remaining:"no",noinfo:"no",buffer:"5",checkpolicy:"no",rtl:"no",bg:"E5E5E5",text:"333333",leftbg:"CCCCCC",lefticon:"333333",volslider:"666666",voltrack:"FFFFFF",rightbg:"B4B4B4",rightbghover:"999999",righticon:"333333",righticonhover:"FFFFFF",track:"FFFFFF",loader:"009900",border:"CCCCCC",tracker:"DDDDDD",skip:"666666",pagebg:"FFFFFF",transparentpagebg:"yes"});</script>
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-5758275-2']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<style type="text/css">div#toc_container ul li {font-size: 80%;}</style><style>.gist table { margin-bottom: 0; }</style>
<!-- Theme version -->
<meta name="generator" content="Canvas 5.5.1" />
<meta name="generator" content="WooFramework 5.5.6" />

<!-- Custom CSS Styling -->
<style type="text/css">
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:40px;padding-bottom:40px;border:0px solid ;}
#logo .site-title a {font:bold 40px/1em 'Cabin', arial, sans-serif;color:#222222;}
#logo .site-description {font:300 13px/1em 'Cabin', arial, sans-serif;color:#999999;}
body, p { font:300 14px/1.5em 'Lora', arial, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em 'Cabin', arial, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em 'Cabin', arial, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em 'Cabin', arial, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em 'Cabin', arial, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em 'Cabin', arial, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em 'Cabin', arial, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 28px/1.1em 'Cabin', arial, sans-serif;color:#222222;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#222222}
.post-meta { font:300 14px/1.5em 'Cabin', arial, sans-serif;color:#999999; }
.entry, .entry p{ font:300 18px/1.5em 'Lora', arial, sans-serif;color:#555555; }
.post-more {font:300 22px/1.5em Cabin;color:;border-top:1px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:300 13px/1em 'Cabin', arial, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 20px/1.2em Cabin;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:300 14px/1.5em 'Cabin', arial, sans-serif;color:#555555; }
.widget {font:300 14px/1.5em Cabin;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 14px/1.5em 'Cabin', arial, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em 'Cabin', arial, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em 'Cabin', arial, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation .cart-contents, #navigation ul.rss, #navigation ul.cart .cart_list a{ font:300 18px/1.2em 'Cabin', arial, sans-serif;color:#666666; } #navigation ul.rss li a:before { color:#666666;}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li > ul  { left: 0; }
#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {border-top:0px solid #dbdbdb;border-bottom:1px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:300 12px/1.6em 'Cabin', arial, sans-serif;color:#ddd; }
}
#footer, #footer p { font:300 13px/1.4em 'Cabin', arial, sans-serif;color:#999999; }
#footer {border-top:1px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title, .magazine .block .post .title a { font:bold 18px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em 'Cabin', arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
</style>
<!-- Options Panel Custom CSS -->
<style type="text/css">
.post-meta { display:none; }

.pycharm-sidebar {
    font-size: 120%;
}

#header {
    display: none;
}

#navigation {
    margin-top: 24px;
}

.post-comments {
    display:none
}

.mab-aside img {
background: transparent;
border: 0px;
}

.mabstyle-default.magic-action-box form input[type="submit"] {
background: #F2924F !important;
color: #080808 !important;
text-shadow: none !important;
font-size: 1em !important;
font-weight: bold !important;
}

.mabstyle-default.magic-action-box form input[type="submit"]:hover {
background: #D75F5F !important;
text-shadow: none !important;
}
</style>


<!-- Woo Shortcodes CSS -->


<!-- Custom Stylesheet -->


<!-- Google Webfonts -->
<link href="http://fonts.googleapis.com/css?family=Cabin:400,400italic,700,700italic,|Lora" rel="stylesheet" type="text/css" />

<!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame -->
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

<!--  Mobile viewport scale -->
<meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport"/>
</head>
<body class="single single-post postid-364 single-format-standard chrome alt-style-default has-lightbox two-col-left width-960 two-col-left-960">
<div id="wrapper">

	<div id="inner-wrapper">

	<h3 class="nav-toggle icon"><a href="#navigation">Navigation</a></h3>

	<header id="header" class="col-full">

		<div id="logo">
<span class="site-title"><a href="http://pedrokroger.net/">Pedro Kroger</a></span>
<span class="site-description">Programming, Music, and Bootstrapping</span>
</div>

	</header>
	<nav id="navigation" class="col-full" role="navigation">

	<section class="menus">

		<a href="http://pedrokroger.net" class="nav-home"><span>Home</span></a>

	<h3>Main Menu</h3><ul id="main-nav" class="nav fl"><li id="menu-item-567" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-567"><a href="/">Home</a></li>
<li id="menu-item-464" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-464"><a href="http://pedrokroger.net/compositions/">Compositions</a></li>
<li id="menu-item-463" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-463"><a href="http://pedrokroger.net/publications/">Publications</a></li>
<li id="menu-item-462" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-462"><a href="http://pedrokroger.net/python-quick-reference/">Python Quick Reference</a></li>
<li id="menu-item-537" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-537"><a href="http://musicforgeeksandnerds.com">Music for Geeks &#038; Nerds</a></li>
<li id="menu-item-564" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-564"><a href="http://pedrokroger.net/about/">About</a></li>
</ul>	<ul class="rss fr">
						<li class="sub-rss"><a href="http://feeds.feedburner.com/pedrokroger"></a></li>
			</ul>
	
	</section><!-- /.menus -->

	<a href="#top" class="nav-close"><span>Return to Content</span></a>

</nav>
       
    <!-- #content Starts -->
	    <div id="content" class="col-full">
    
    	<div id="main-sidebar-container">    

            <!-- #main Starts -->
                        <section id="main">                       
<article class="post-364 post type-post status-publish format-standard hentry category-emacs category-programming category-pycharm category-python">
	<header>
	<h1 class="title">How to Get Started with PyCharm and Have a Productive Python IDE</h1>	</header>
<div class="post-meta"><span class="small">By</span> <span class="author vcard"><span class="fn"><a href="http://pedrokroger.net/author/kroger/" title="Posts by Pedro Kroger" rel="author">Pedro Kroger</a></span></span> <span class="small">on</span> <abbr class="date time published" title="2014-01-28T17:55:05-0400">January 28, 2014</abbr>  <span class="small">in</span> <span class="categories"><a href="http://pedrokroger.net/category/emacs/" title="View all items in Emacs">Emacs</a>, <a href="http://pedrokroger.net/category/programming/" title="View all items in Programming">Programming</a>, <a href="http://pedrokroger.net/category/pycharm/" title="View all items in PyCharm">PyCharm</a>, <a href="http://pedrokroger.net/category/python/" title="View all items in Python">Python</a></span>  </div>
	<section class="entry">
<div id="toc_container" class="toc_wrap_right no_bullets"><p class="toc_title">Contents</p><ul class="toc_list"><li><a href="#Initial_Customization"><span class="toc_number toc_depth_1">1</span> Initial Customization</a></li><li><a href="#Virtualenv_and_the_Python_Interpreter"><span class="toc_number toc_depth_1">2</span> Virtualenv and the Python Interpreter</a></li><li><a href="#Shortcuts"><span class="toc_number toc_depth_1">3</span> Shortcuts</a></li><li><a href="#External_Editor"><span class="toc_number toc_depth_1">4</span> External Editor</a></li><li><a href="#Running_Code_and_the_REPL"><span class="toc_number toc_depth_1">5</span> Running Code and the REPL</a></li><li><a href="#Finding_Commands"><span class="toc_number toc_depth_1">6</span> Finding Commands</a></li><li><a href="#Code_completion"><span class="toc_number toc_depth_1">7</span> Code completion</a></li><li><a href="#Access_to_documentation"><span class="toc_number toc_depth_1">8</span> Access to documentation</a></li><li><a href="#Code_quality"><span class="toc_number toc_depth_1">9</span> Code quality</a></li><li><a href="#Finding_your_way_in_the_source_code"><span class="toc_number toc_depth_1">10</span> Finding your way in the source code</a></li><li><a href="#Unit_tests"><span class="toc_number toc_depth_1">11</span> Unit tests</a></li><li><a href="#Dealing_with_multiple_files"><span class="toc_number toc_depth_1">12</span> Dealing with multiple files</a></li><li><a href="#Split_Windows"><span class="toc_number toc_depth_1">13</span> Split Windows</a></li><li><a href="#Conclusion"><span class="toc_number toc_depth_1">14</span> Conclusion</a></li></ul></div>

<p>The whole Editors versus IDEs debate is getting old and boring, especially because it is not a zero sum game. Iâve been using Emacs for 15+ years and at one point I used it to read my <a href="http://www.gnus.org">email</a>, <a href="http://emacs-w3m.namazu.org">browse the web</a>, and <a href="http://www.emacswiki.org/emacs/CoffeeMode">make coffee</a> (havenât we all?). But today I find that Iâm more productive by using the right tool for the right job.</p>
<p>Powerful editors like Emacs and Vim are fantastic. I find it puzzling that some editors or IDEs perform basic operations such as search and replace clunkily while Vim and Emacs get it just right.</p>
<p>And yet a search for terms like âVim as a Python IDEâ or &#8220;Emacs as a Python IDE returns hundreds of thousands of links, which shows that people want features such as smart completion, code navigation, and project support. To give you one data point, one of my most popular posts is <a href="http://pedrokroger.net/configuring-emacs-python-ide/">how to configure Emacs as a Python IDE</a>, even if itâs three years old and out-of-date.</p>
<p>PyCharm is one of the most popular IDEs for Python and itâs packed with great features. In this post I will show how to get started with PyCharm quickly to have a productive Python development environment. Iâm using PyCharm 3.0.2 Professional Edition on the Mac (they have an <a href="http://www.jetbrains.com/pycharm/download/">open-source</a> version as well). I use a heavily modified default keymap (it also has Emacs and Vim keymaps). I suggest you check the official <a href="http://www.jetbrains.com/pycharm/docs/PyCharm_ReferenceCard_Mac.pdf">Mac</a> and the <a href="http://www.jetbrains.com/pycharm/docs/PyCharm_ReferenceCard.pdf">Windows/Linux</a> reference cards for the default shortcuts.</p>
<h1><span id="Initial_Customization">Initial Customization</span></h1>
<p>When you start PyCharm for the first time it asks what keymap and theme you want to use. I donât like its Emacs keymap, so I use the default Mac OS X keymap and customize the shortcuts I want:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-initial-screen.png" width="435" height="277" /></p>
<p>If this is the first time you are using PyCharm and donât have a configuration to import you may want to click on âConfigureâ in the welcome screen to set some basic things:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-quick-start.png" /></p>
<p>I like to show the line numbers and method separators (EditorâAppearanceâShow method separators, Show line numbers):</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-config-appearance.png"><img class="alignnone size-full wp-image-376" alt="pycharm-config-appearance" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-config-appearance.png" width="857" height="474" /></a></p>
<p>Also, I like the <a href="https://github.com/jkaving/intellij-colors-solarized">Solarized</a> theme. I install it by following the instructions and select it as the default theme in EditorâColors &amp; Fonts. Solarized light for IntelliJ has some weird colors choices (for instance, it uses gray for the default text instead of a crisper black), so I change it on EditorâColors &amp; FontsâGeneral. My advice is not to be afraid to change the colors to something you like. You can export your settings in case you need to re-install PyCharm.</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-colors.png"><img class="alignnone size-full wp-image-371" alt="pycharm-colors" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-colors.png" width="808" height="318" /></a></p>
<p>Compared to some IDEs, I find PyCharm visually clean, and if you want an even cleaner UI, you can hide the toolbar, the tool buttons, the navigation bar, and the status bar (on the View menu):</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-appearance2.png"><img class="alignnone size-full wp-image-368" alt="pycharm-appearance2" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-appearance2.png" width="730" height="466" /></a></p>
<h1><span id="Virtualenv_and_the_Python_Interpreter">Virtualenv and the Python Interpreter</span></h1>
<p>You can create new projects with FileâNew Project or open an existing project with FileâOpen Directory. PyCharm supports many types of Python projects such as Django or Flask out-of-the-box. For this post Iâll create a simple project to test the <a href="https://pypi.python.org/pypi/pyquery">pyquery</a> library (Iâll choose the âEmpty projectâ).</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-new-project.png" /></p>
<p>You need to tell PyCharm what Python interpreter you want to use since it can use a different interpreter for each project. It will use this information to index all available libraries. A good practice is to have one <a href="http://www.virtualenv.org/en/latest/">virtualenv</a> for each project. You can either use an existing virtualenv or create a new one from PyCharm (SettingsâProject InterpreterâPython Interpreters).</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-interpreters.png"><img class="alignnone size-full wp-image-391" alt="pycharm-interpreters" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-interpreters.png" width="828" height="366" /></a></p>
<p>For this project Iâll create a new virtualenv and make it available to all projects:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-new-virtualenv.png" /></p>
<p>You can quickly search, read the description, and install packages from PyCharm. This is nothing you couldnât do on the terminal, but itâs very convenient to be able to search for packages without leaving your IDE.</p>
<p><iframe src="//www.youtube.com/embed/1YCQIlxLV80?rel=0" height="360" width="640" allowfullscreen="" frameborder="0"></iframe></p>
<p>Some packages may take a while to install, especially if they need to be compiled. PyCharm runs the installation in background and you can see what is happening by clicking on the status bar:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-background-tasks.png" /></p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-background-tasks2.png" /></p>
<p>As we can see, it installed not only <code>pyquery</code>, but its dependencies as well, such as lxml (as we would expect):</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-virtualenv-installed.png" /></p>
<h1><span id="Shortcuts">Shortcuts</span></h1>
<p>PyCharm is no Vim, but you can do a lot by using only the keyboard. You can assign shortcuts to dozens (if not hundreds) of actions in SettingsâKeymap. I change the default keymap pretty heavily since I like to have shortcuts like Control-a, Control-e, Control-k, and Control-y that are default in any Cocoa text box but are not setup by default in the âMac OS Xâ keymap. You can also define mouse shortcuts. For instance, I changed Quick Documentation to use Option-Click. If you are a Vim user you may want tot try <a href="http://plugins.jetbrains.com/plugin/164">IdeaVim</a>, a Vim emulator plugin. I heard good things about it, but I didnât have the chance to try it yet.</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-keymap.png"><img class="alignnone size-full wp-image-395" alt="pycharm-keymap" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-keymap.png" width="820" height="388" /></a></p>
<p>I use the Dvorak keyboard layout, and annoyingly, thereâs a <a href="http://youtrack.jetbrains.com/issue/IDEABKL-6493">bug</a> where the wrong keys are used. People have reported this problem with French Canadian and German layouts as well. This means that I have to rebind quite a few shortcuts just to avoid this problem.</p>
<p>PyCharm uses function keys such as F1 and F2 a lot. As you probably know, on the Mac the top keys work as âmultimediaâ keys by default and as function keys by pressing the Fn key. We can swap this behavior in System PreferencesâKeyboard.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-mac-options.png" /></p>
<p>I like to be able control the sound volume and change the brightness without having to reach for the Fn key, but I also like to use the function keys while programming without reaching for the Fn key (Iâm lazy, what can I say?). I use <a href="http://www.molowa.com/mac-os-x/palua/palua-3-0/">Palua</a> to switch between the âmultimediaâ and function keys. You can switch with a global key or you can configure Palua to switch automatically when using a specific application. I use the multimedia keys for all applications (the default) and configure Palua to use the Function keys for Xcode and PyCharm.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/palua.png" width="377" height="301" /></p>
<h1><span id="External_Editor">External Editor</span></h1>
<p>PyCharm can launch any external tool, so I configure it to open Emacs with the current file. This is useful when you want to do some quick editing that is faster with your favorite editor (Emacs, Vim, TextMate, etc).</p>
<p>Go to SettingsâExternal Tools, make sure âOpen consoleâ is unchecked and insert the path to the Program, the Parameters (in this case we can get the full file name with <code>$FilePath$</code>) and the Working directory (<code>$ProjectFileDir$/$FileRelativeDir$/</code>).</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-external-tools.png" /></p>
<p>You can assign it to a shortcut:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-new-shortcut.png" /><br />
<img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-select-keybinding.png" /></p>
<p>And now itâs available from the menu as well.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-external-tool-menu.png" /></p>
<h1><span id="Running_Code_and_the_REPL">Running Code and the REPL</span></h1>
<p>There are many ways to run our code with PyCharm. We can use the venerable print function (or statement, depending on your Python version), import code on the REPL, send code to the console, use the debugger, or use IPython on a terminal.</p>
<h2>The Venerable Print</h2>
<p>Using <code>print</code> to display values is a useful and widely used technique, but it can lead to messy code if not used carefully.</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode1.png"><img class="alignnone size-full wp-image-415" alt="pycharm-runcode1" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode1.png" width="935" height="727" /></a></p>
<p>We can run the code by clicking on the âplayâ button or with Control-R if the file is already selected to run.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-run-file.png" /></p>
<p>If the file is not selected to run, with can select and run it with Control-Option-R or by right clicking and selecting from the context menu. PyCharm will remember your choice and you can use Control-R the next time. It sounds complicated but it is really simple. Check the <a href="http://www.jetbrains.com/pycharm/webhelp/running.html">manual</a> for more information.</p>
<h2>Console and REPL</h2>
<p>My favorite way is to run the code on the REPL. You can open a Python console inside PyCharm on ToolsâRun Python Console (Iâve assigned it to Control-C Control-C). Itâll use <a href="http://ipython.org">IPython</a> if available (I recommend you install IPython inside the virtualenv) and will add the path of the current file to Pythonâs path. On the console you can import the functions you want to execute as usual.</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode2.png"><img class="alignnone size-full wp-image-416" alt="pycharm-runcode2" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode2.png" width="800" height="379" /></a></p>
<p>Completion is available in the console as well:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-completion.png" /></p>
<p>Having imported the function, we can run it as usual. And we can toggle the console visibility easily with ââ4.</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-console.png"><img class="alignnone size-full wp-image-411" alt="pycharm-runcode-console" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-console.png" width="797" height="422" /></a></p>
<h2>Execute Selection in Console</h2>
<p>If the code I want to run is more than a couple of one-liners and not formal enough to write unit tests (I may be playing with data, for instance) I may save it in a scratch file. We can select the code we want to run (usually I just select the whole file with â-A) and pick âExecute Selection in Consoleâ from the context menu (or, even better, use the keyboard shortcut). [I omitted some menu items in the screenshot to make it shorter].</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-execute-selection.png" /></p>
<p>In the following example the <code>headlines</code> variable is available in the console since we have selected the whole <code>scratch</code> file to be executed in the console:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-scratch.png" /></p>
<h2>Macros</h2>
<p>It would be nice if we could send the whole file to the console in one operation. Fortunately, we can record a macro. Select EditâMacrosâStart Macro Recording and perform the operations as before (select the whole file, send the selection to console, switch to the console). As you can see, my macro has only four actions (I press the down arrow key to remove the selection):</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-list-macro.png" /></p>
<p>After you record the macro itâs available in the Macros menu and you can assign a shortcut to it (I use Control-C Control-E, but for some reason PyCharm only shows the first half of shortcuts with two strokes).</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-macro-menu.png" /></p>
<h2>Debugger</h2>
<p>Many people like to use the debugger to inspect data. Even if I prefer to use the REPL, sometimes the debugger is just more efficient, especially when inspecting complex objects. PyCharm doesnât allow you to set a breakpoint on an empty line, so in this short example I had to add an extra line (I used <code>print</code>, but I could have used <code>pass</code>) since I wanted the debug to stop after setting the <code>headlines</code> variable. In real-life code this is seldom necessary.</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-debug.png"><img class="alignnone size-full wp-image-412" alt="pycharm-runcode-debug" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-debug.png" width="936" height="728" /></a></p>
<h2>Vanilla IPython</h2>
<p>Finally, thereâs nothing wrong with running an external terminal with IPython and using features such as <code>%run</code> and <a href="http://ipython.org/ipython-doc/rel-1.1.0/config/extensions/autoreload.html">autoreload</a>.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-runcode-ipython.png" /></p>
<h1><span id="Finding_Commands">Finding Commands</span></h1>
<p>Itâs easy to get overwhelmed with so many commands. If you use PyCharm on the Mac you can use HelpâSearch as usual, or you can use HelpâFind Action in any platform. It allows you to search for any PyCharm command, including the ones not available from the menu. (Emacs addicts will note this is somewhat similar to Emacsâ M-x). This is very useful and powerful and I use it all the time.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-find-action.png" /></p>
<h1><span id="Code_completion">Code completion</span></h1>
<p>Completion in PyCharm is top notch. By default PyCharm will suggest things while you are typing:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-default.png" /></p>
<p>Since this feature can be a little power hungry, you can disable it by selecting FileâPower Save Mode. You can still use completion by calling it explicitly with Control-Space.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-power-save.png" /></p>
<p>When completing, you can narrow the suggestion list by typing a substring:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-simple.png" /></p>
<p>Or you can type only the first letters of CammelCaseClasses or function_names_with_underscores:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-simple2.png" /></p>
<p>If you type Control-Space once PyCharm will try to list the most related items:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-expand1.png" /></p>
<p>If you type Control-Space again it will list every name it knows. This can be overwhelming, but notice it is listing the function <code>name_of_mother</code> from the unimported <code>bar.py</code> file.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-expand2.png" /></p>
<p>But often you just want to complete the name of a local variable in one of the opened buffers. This feature has been available in Emacs and Vim for ages and now itâs available in PyCharm as well. The manual calls it <a href="http://www.jetbrains.com/pycharm/webhelp/hippie-completion-expanding-words.html">Hippie Completion</a>, but the actual command name (that is, the name you will find in Find Action) is âCyclic Expand Wordâ and in my tests itâs working even inside docstrings.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-expand.gif" /></p>
<p>Completion may not work in some cases when a library doesnât have <a href="http://stackoverflow.com/questions/6318814/how-can-i-tell-pycharm-what-type-a-parameter-is-expected-to-be">type hints</a>. <a href="http://stackoverflow.com/questions/14611714/python-pycharm-ctrl-space-does-not-bring-up-code-completion">This StackOverflow</a> page suggests to set a breakpoint in pdb and list the possible attributes with <code>dir</code>. One similar solution is to create a breakpoint in PyCharm and evaluate an expression at the breakpoint by clicking on the last icon in the debug toolbar (or using the appropriate keyboard shortcut). In this case I evaluated the expression âdir(r)â.</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-debug.png"><img class="alignnone size-full wp-image-372" alt="pycharm-completion-debug" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-completion-debug.png" width="1049" height="663" /></a></p>
<h1><span id="Access_to_documentation">Access to documentation</span></h1>
<p>PyCharm has three ways to access documentation: Quick Definition, Quick Documentation, External Documentation, and Parameter Info. You can access them from the View menu or from the respective shortcuts.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-documentation1.png" /></p>
<p>Quick definition will show the whole definition (duh!) of a symbol (class, method, function, etc), including the documentation, of course. Itâs useful when you just want to take a quick look at the definition without jumping to it.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-documentation2.png" /></p>
<p>Quick documentation will show the symbolâs documentation and signature.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-documentation3.png" /></p>
<p>Finally, External Documentation, and Parameter Info are pretty straightforward. The first opens the documentation in the default browser and the second shows the parameter information for a function or method (useful to quick check the name of keyword arguments, for instance).</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-documentation4.png" /></p>
<p>The external documentation works out-of-the-box with Python (of course), PyQt4, PySide, gtk, wx, numpy, scipy, and kivy and you can add the path for external documentation in SettingsâPython External Documentation.</p>
<h1><span id="Code_quality">Code quality</span></h1>
<p>PyCharm checks if your code conforms to PEP8 while you are typing. Itâll let you know if you have too many spaces or blank lines, if you are using underscores instead of CamelCase for classes names, and so on. If you want, you can configure PyCharm to <a href="http://blog.saturnlaboratories.co.za/archive/2012/09/10/running-pylint-pycharm">run pylint as an external tool</a>, as well.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-pep8.png" /></p>
<h1><span id="Finding_your_way_in_the_source_code">Finding your way in the source code</span></h1>
<p>PyCharmâs power starts when you master its navigation commands. It can jump to classes, functions, and so on. You can jump to the definition of a class, method, function, or variable quickly with â-B or â-Click on a Mac or Ctrl-B or Control-Click on Windows and Linux.</p>
<p>The mechanism to navigate to a class, file, or symbol is pretty much the same. You are presented with a dialog where you can type a substring, include items outside your project, and filter the results if necessary. Go to the Navigate menu or use the appropriate keyboard shortcut:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-navigate.png" /></p>
<p>This is a typical dialog to navigate to a Class definition:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-jump-class.png" /></p>
<p>You can enter part of the name, including the file extension. For instance, if you want to open a JavaScript in a Django project but donât remember its name, you can search for â.jsâ.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-jump-file.png" /></p>
<p>These features allow us to navigate the source code very quickly. Letâs suppose we are studying the Django source code and we want to see how the function <code>render</code> is implemented. We donât know where itâs defined, so we go to NavigateâSymbol (â¥-â-O), type ârenderâ and pick the first option (we can see itâs defined in <code>django.shortcuts</code>). If we have hidden the navigation bar we can show it quickly with NavigateâJump to the Navigation Bar (â-â) and see where the file is located (djangoâdjangoâshortcuts.py):</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-find-symbol.gif" /></p>
<p>Sometimes itâs useful to filter the completion results to take out things you are not interested. In the following example I remove the results related to JavaScript to have a much cleaner completion list:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-goto-symbol.gif" /></p>
<p>PyCharm allows you to fold blocks such as classes, methods, and functions, but you can create your own <a href="http://www.jetbrains.com/pycharm/webhelp/folding-custom-regions-with-line-comments.html">foldable regions</a>. This is useful when it makes sense to group things (classes, methods, functions, etc) in one bigger block. These blocks can be folded allowing us to focus on particular regions of the code. You can list all regions in a file by going to NavigateâCustom Region or using the appropriate keyboard shortcut. Sadly thereâs no way to list all regions in a project.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-jump-regions.png" /></p>
<h1><span id="Unit_tests">Unit tests</span></h1>
<p>Before we can run a test we need to add a new Run/Debug configuration. We go to RunâEdit Configurations and click on the plus button on the top left corner. Then, we select âPython testsâ and the test runner. For this example Iâll use Unittests:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-new-test-config.png" /></p>
<p>Finally, we need to add the folder where the tests are and pick the right Python interpreter:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-tests.png" /></p>
<p>Now we can run our tests just like we run code: by clicking in the toolbar or by selecting RunâRun (Control-â¥-R). This will open a dialog where you can choose what you want to run (you may have other things to run). You can run all tests or only the test on the cursor.</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-run-tests.png" /></p>
<p>After you run the tests, PyCharm will remember your last choice, so you can repeat it with Control-R. This is useful if you are fixing one particular test case and want to run it multiple times without running the other tests. You donât need to have the cursor on the test file you want to run; you can run the tests from any file. You can go from the code to its test by selecting NavigateâTest (or appropriate hotkeys).</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-run-all-tests1.png"><img class="alignnone size-full wp-image-437" alt="pycharm-run-all-tests" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-run-all-tests1.png" width="1056" height="466" /></a></p>
<h1><span id="Dealing_with_multiple_files">Dealing with multiple files</span></h1>
<p>As you noticed, PyCharm uses one tab per file:</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-tabs1.png"><img class="alignnone size-full wp-image-442" alt="pycharm-tabs" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-tabs1.png" width="587" height="279" /></a></p>
<p>To switch to tabs we can use the commands Select Next Tab and Select Previous Tab. They are bound to Control-â and Control-â by default, but OS X uses these keys, so I rebind them to Control-â-N<br />
and Control-â-P (I use the same shortcuts to switch tabs in the Terminal).</p>
<p>One more direct approach to go to a tab is to use NavigateâFile as weâve seen, or ViewâRecent Files (â-E) and ViewâRecently Changed Files (â§-â-E). These last two commands will present a list of files where you can click on type a substring to narrow the selection. In the following example I only had to type ââ-Eâ, âsâ, âenterâ to go to the tab with the <code>scratch.py</code> file:</p>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-switch-tab.gif" /></p>
<h1><span id="Split_Windows">Split Windows</span></h1>
<p>PyCharm has support for split windows. Itâs not as advanced as in Emacs and Vim but itâs useful enough.</p>
<p><a href="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-split-windows.png"><img class="alignnone size-full wp-image-438" alt="pycharm-split-windows" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-split-windows.png" width="928" height="627" /></a></p>
<p>No command to deal with split windows have shortcuts assigned to them by default, so youâll have to do it yourself. These are the keys that I use:</p>
<ul>
<li>Split Vertically, Control-S</li>
<li>Split Horizontally, Control-H</li>
<li>Unsplit, Control-C Control-U</li>
<li>Unsplit All, Control-C Control-A</li>
<li>Goto Next Splitter, Control-C Control-N</li>
<li>Goto Previous Splitter, Control-C Control-P</li>
<li>Move to Opposite Group, Control-C Control-M</li>
</ul>
<p><img alt="" src="http://pedrokroger.net/wp-content/uploads/2014/01/pycharm-split-shortcuts.png" /></p>
<p>Move to Opposite Group will move a tab to another group, but it only works if we have only two panes. In this case itâs just easier to drag and drop the tab to the desired place.</p>
<h1><span id="Conclusion">Conclusion</span></h1>
<p>PyCharm can do a lot for us out-of-the-box. We saw how to use virtualenv, define shortcuts, use an external editor, run code, define macros, find commands with Find Action, be productive with code completion, access documentation, navigate the source code, run unit tests, and deal with multiple files and split windows.</p>
<p>And we are just scratching the surface. We didnât talk about editing, version control, plugins, debugging (local and remote), templates, using TextMate bundles, web development, and much more.</p>
<p>I suggest you check PyCharmâs official documentation, including the <a href="http://www.jetbrains.com/pycharm/quickstart/index.html">Quickstart Guide</a> and the <a href="http://www.jetbrains.com/pycharm/webhelp/getting-help.html">Online Help</a>. Also, Andrew Brookins wrote a very good PyCharm review from a <a href="http://andrewbrookins.com/tech/one-year-later-an-epic-review-of-pycharm-2-7-from-a-vim-users-perspective/">Vimâs user perspective</a>. I recommend it even if you donât use Vim.</p>
<p>Let me know in the comments what is your favorite PyCharm feature.</p>
<p><strong>Discuss this post on <a href="https://news.ycombinator.com/item?id=7143334">Hacker News</a></strong></p>

<div id="mab-5131" class="magic-action-box mab-type-optin mab-id-513 mabstyle-default use-mab-button-default mab-fields-layout-stacked" data-mabid="513" data-trackid="513" data-type="optin" data-track="1"  >
	<div class="mab-pad mab-wrap mab-aside-left mab-aside-type-image">
			<div class="mab-aside"><img src="http://pedrokroger.net/wp-content/uploads/2014/02/pycharm-cover.png" alt="Opt In Image" width="200"  /></div>
		<div class="mab-content">
						<div class="mab-heading">Modern Python Development with PyCharm</div>
									<div class="mab-subheading">Become more productive with the best Python IDE</div>
									<div class="mab-main-copy"><p>Signup to hear when the book launches.</p>
</div>
						<div class="mab-main-action-wrap ">
				<form method="POST" action="http://pedrokroger.us2.list-manage2.com/subscribe/post?u=add5e91c6d402f71ac2752a81&id=e935c4a01e">
	<div class="mab-field mab-field-name">
				<input type="text" id="mab-name" placeholder="First Name" name="FNAME" />
	</div>
	<div class="mab-field mab-field-email">
				<input type="email" id="mab-email" placeholder="Email" name="EMAIL" />
	</div>
	<div class="mab-field mab-field-submit">
				<input class="mab-submit" type="submit" value="Subscribe" />
			</div>
	<div class="clear"></div>
</form>
			</div>
						<div class="mab-secondary-copy"><p>I hate spam and will <strong>never</strong> share your email.</p>
</div>
					</div>
		<div class="clear" style="clear:both;"></div>	</div>

	</div>	</section><!-- /.entry -->
	<div class="fix"></div>
<div class="post-utility"></div>
</article><!-- /.post -->
	        <div class="post-entries">
	            <div class="nav-prev fl"><a href="http://pedrokroger.net/how-made-6000-7-days-with-ebook/" rel="prev"><i class="icon-angle-left"></i> How I Made $6,000 in 7 Days with my Ebook</a></div>
	            <div class="nav-next fr"><a href="http://pedrokroger.net/choosing-best-python-ide/" rel="next">Choosing the Best Python IDE <i class="icon-angle-right"></i></a></div>
	            <div class="fix"></div>
	        </div>

		
<div id="disqus_thread">
                    <div id="dsq-content">


            <ul id="dsq-comments">
                    <li class="comment even thread-even depth-1" id="dsq-comment-36">
        <div id="dsq-comment-header-36" class="dsq-comment-header">
            <cite id="dsq-cite-36">
                <span id="dsq-author-user-36">mcepl</span>
            </cite>
        </div>
        <div id="dsq-comment-body-36" class="dsq-comment-body">
            <div id="dsq-comment-message-36" class="dsq-comment-message"><p>JetBrain are people are not able (or willing) to fix their editor to run with the standard Java I have installed (OpenJDK), why should I trust them to be able to write a competent IDE?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-37">
        <div id="dsq-comment-header-37" class="dsq-comment-header">
            <cite id="dsq-cite-37">
                <span id="dsq-author-user-37">Cyph0n</span>
            </cite>
        </div>
        <div id="dsq-comment-body-37" class="dsq-comment-body">
            <div id="dsq-comment-message-37" class="dsq-comment-message"><p>Sorry, but PyCharm a competent IDE whether you like it or not. It is worth every cent.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-38">
        <div id="dsq-comment-header-38" class="dsq-comment-header">
            <cite id="dsq-cite-38">
                <span id="dsq-author-user-38">the dude</span>
            </cite>
        </div>
        <div id="dsq-comment-body-38" class="dsq-comment-body">
            <div id="dsq-comment-message-38" class="dsq-comment-message"><p>great post. have been using pycharm for a while now but was unaware of some of the things you mentioned here. great stuff.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-39">
        <div id="dsq-comment-header-39" class="dsq-comment-header">
            <cite id="dsq-cite-39">
                <span id="dsq-author-user-39">pedrokroger</span>
            </cite>
        </div>
        <div id="dsq-comment-body-39" class="dsq-comment-body">
            <div id="dsq-comment-message-39" class="dsq-comment-message"><p>Thanks!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-40">
        <div id="dsq-comment-header-40" class="dsq-comment-header">
            <cite id="dsq-cite-40">
http://bruno.adele.im/                <span id="dsq-author-user-40">jesuislibre</span>
            </cite>
        </div>
        <div id="dsq-comment-body-40" class="dsq-comment-body">
            <div id="dsq-comment-message-40" class="dsq-comment-message"><p>Thanks for your excellent post. It&#8217;s good job !</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-41">
        <div id="dsq-comment-header-41" class="dsq-comment-header">
            <cite id="dsq-cite-41">
                <span id="dsq-author-user-41">pedrokroger</span>
            </cite>
        </div>
        <div id="dsq-comment-body-41" class="dsq-comment-body">
            <div id="dsq-comment-message-41" class="dsq-comment-message"><p>Thanks! I appreciate it!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-43">
        <div id="dsq-comment-header-43" class="dsq-comment-header">
            <cite id="dsq-cite-43">
                <span id="dsq-author-user-43">Serge Boyko</span>
            </cite>
        </div>
        <div id="dsq-comment-body-43" class="dsq-comment-body">
            <div id="dsq-comment-message-43" class="dsq-comment-message"><p>Great post, Pedro with a lot of useful insights. Thank you! Just my two cents: when you configure Emacs as an external tool, your setup won&#8217;t work if you have subfolders in your projects. Your working directory should look like this: $ProjectFileDir$/$FileRelativeDir$/ to work with files in subfolders.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-44">
        <div id="dsq-comment-header-44" class="dsq-comment-header">
            <cite id="dsq-cite-44">
                <span id="dsq-author-user-44">pedrokroger</span>
            </cite>
        </div>
        <div id="dsq-comment-body-44" class="dsq-comment-body">
            <div id="dsq-comment-message-44" class="dsq-comment-message"><p>Thanks Serge! I&#8217;ve updated the text to reflect this.</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-3" id="dsq-comment-45">
        <div id="dsq-comment-header-45" class="dsq-comment-header">
            <cite id="dsq-cite-45">
                <span id="dsq-author-user-45">Serge Boyko</span>
            </cite>
        </div>
        <div id="dsq-comment-body-45" class="dsq-comment-body">
            <div id="dsq-comment-message-45" class="dsq-comment-message"><p>You are welcome!</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-even depth-1" id="dsq-comment-83">
        <div id="dsq-comment-header-83" class="dsq-comment-header">
            <cite id="dsq-cite-83">
http://InformationAnthology.net/CareerMentor                <span id="dsq-author-user-83">Peter Raeth</span>
            </cite>
        </div>
        <div id="dsq-comment-body-83" class="dsq-comment-body">
            <div id="dsq-comment-message-83" class="dsq-comment-message"><p>Will the upcoming PyCharm book discuss web development with flask?</p>
</div>
        </div>

    <ul class="children">
    <li class="comment even depth-2" id="dsq-comment-84">
        <div id="dsq-comment-header-84" class="dsq-comment-header">
            <cite id="dsq-cite-84">
                <span id="dsq-author-user-84">pedrokroger</span>
            </cite>
        </div>
        <div id="dsq-comment-body-84" class="dsq-comment-body">
            <div id="dsq-comment-message-84" class="dsq-comment-message"><p>Yes, I&#8217;m planing to include a chapter on flask.</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-98">
        <div id="dsq-comment-header-98" class="dsq-comment-header">
            <cite id="dsq-cite-98">
                <span id="dsq-author-user-98">Ionel Miu</span>
            </cite>
        </div>
        <div id="dsq-comment-body-98" class="dsq-comment-body">
            <div id="dsq-comment-message-98" class="dsq-comment-message"><p>Very good tutorial!</p>
<p>I have two questions:<br />
1. Is there a way to have multiple consoles, teminals windows in &#8220;split&#8221; mode?<br />
2. Can PyCharm detect multiprocesses and show the output in separate consoles?</p>
<p>  For example, the code bellow is all in one file but p1, p2, p3 run as separate processes.<br />
PyCharm should be able to detect them and automatically open and show the output in three different consoles.</p>
<p>  from multiprocessing import Process</p>
<p>from module1 import func1<br />
from module2 import func2<br />
from module3 import func3</p>
<p>if __name__ == &#8220;__main__&#8221;:<br />
p1 = Process(target = func1)<br />
p1.start()<br />
p2 = Process(target = func2)<br />
p2.start()<br />
p3 = Process(target = func3)<br />
p3.start()</p>
<p>p1.join()<br />
p2.join()<br />
p3.join()</p>
</div>
        </div>

    </li><!-- #comment-## -->
    <li class="comment even thread-even depth-1" id="dsq-comment-99">
        <div id="dsq-comment-header-99" class="dsq-comment-header">
            <cite id="dsq-cite-99">
                <span id="dsq-author-user-99">Profhase</span>
            </cite>
        </div>
        <div id="dsq-comment-body-99" class="dsq-comment-body">
            <div id="dsq-comment-message-99" class="dsq-comment-message"><p>There is one important question left: How do you handle small one-time scripts which aren&#8217;t large enough for a project. Would you create a project for all the one-time tasks or do you use emacs?</p>
<p>Thanks for the great post</p>
</div>
        </div>

    <ul class="children">
    <li class="comment odd alt depth-2" id="dsq-comment-100">
        <div id="dsq-comment-header-100" class="dsq-comment-header">
            <cite id="dsq-cite-100">
                <span id="dsq-author-user-100">pedrokroger</span>
            </cite>
        </div>
        <div id="dsq-comment-body-100" class="dsq-comment-body">
            <div id="dsq-comment-message-100" class="dsq-comment-message"><p>I often use emacs (or sometimes even textmate) for small one-time scripts. But, surprisingly, PyCharm can handle those as well since you don&#8217;t need to create a formal project. You can even open/create a file from the terminal with something like &#8220;charm foo.py&#8221;</p>
</div>
        </div>

    </li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
            </ul>


        </div>

    </div>

<script type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://pedrokroger.net/getting-started-pycharm-python-ide/';
    var disqus_identifier = '364 http://pedrokroger.net/?p=364';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'pedrokroger';
    var disqus_title = "How to Get Started with PyCharm and Have a Productive Python IDE";
    var disqus_config = function () {
        var config = this; // Access to the config object
        config.language = '';

        /* Add the ability to add javascript callbacks */
        
        /*
           All currently supported events:
            * preData â fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            var script = document.createElement('script');
            script.async = true;
            script.src = '?cf_action=sync_comments&post_id=364';

            var firstScript = document.getElementsByTagName( "script" )[0];
            firstScript.parentNode.insertBefore(script, firstScript);
        });
                    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
        ],
        'trackback_url': "http:\/\/pedrokroger.net\/getting-started-pycharm-python-ide\/trackback\/"    };
/* ]]> */
</script>

<script type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.' + 'disqus.com' + '/' + 'embed' + '.js' + '?pname=wordpress&pver=2.77';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</script>
     
            </section><!-- /#main -->
                
            <aside id="sidebar">
<div id="text-3" class="widget widget_text"><h3>Modern Python Development with PyCharm</h3>			<div class="textwidget"><div class="pycharm-sidebar">Become more productive with the best Python IDE. <a href="/pycharm-book/">Learn more...</a></div>
<br/>
<a href="/pycharm-book/">
<img src="http://pedrokroger.net/wp-content/uploads/2014/02/pycharm-book-cover.png">
</a>

</div>
		</div><div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo"><h3>Dr. Pedro Kroger</h3><span class="left"><img alt='' src='http://0.gravatar.com/avatar/4b4685779b80e8bd5ad33480055c2c17?s=116&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D116&amp;r=G' class='avatar avatar-116 photo' height='116' width='116' /></span>
<p>Iâm a programmer, classical composer, bootstrapper, and class clown who loves teaching and traveling. I live now in colorful Salvador (Brazil). I also lived in Austin, San Francisco (USA), Rome (Italy) and London (UK). <a href="/about/">more ...</a></p>
<div class="fix"></div>
</div>
		<div id="woo_tabs-3" class="widget widget_woo_tabs"> 		<div id="tabs">

            <ul class="wooTabs">
                                <li class="popular"><a href="#tab-pop">Popular</a></li>                <li class="latest"><a href="#tab-latest">Latest</a></li>                                            </ul>

            <div class="clear"></div>

            <div class="boxes box inside">

	            
                                <ul id="tab-pop" class="list">
                    	<li>
				<a title="Choosing the Best Python IDE" href="http://pedrokroger.net/choosing-best-python-ide/">Choosing the Best Python IDE</a>
		<span class="meta">February 5, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="How I Made $6,000 in 7 Days with my Ebook" href="http://pedrokroger.net/how-made-6000-7-days-with-ebook/">How I Made $6,000 in 7 Days with my Ebook</a>
		<span class="meta">December 16, 2013</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="How to Get Started with PyCharm and Have a Productive Python IDE" href="http://pedrokroger.net/getting-started-pycharm-python-ide/">How to Get Started with PyCharm and Have a Productive Python IDE</a>
		<span class="meta">January 28, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Using Sphinx to Write Technical Books" href="http://pedrokroger.net/using-sphinx-write-technical-books/">Using Sphinx to Write Technical Books</a>
		<span class="meta">October 10, 2012</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Django Documentation in ePub Format" href="http://pedrokroger.net/django-documentation-epub-format/">Django Documentation in ePub Format</a>
		<span class="meta">October 31, 2012</span>
		<div class="fix"></div>
	</li>
	                </ul>
                                                <ul id="tab-latest" class="list">
                    	<li>
				<a title="Choosing the Best Python IDE" href="http://pedrokroger.net/choosing-best-python-ide/">Choosing the Best Python IDE</a>
		<span class="meta">February 5, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="How to Get Started with PyCharm and Have a Productive Python IDE" href="http://pedrokroger.net/getting-started-pycharm-python-ide/">How to Get Started with PyCharm and Have a Productive Python IDE</a>
		<span class="meta">January 28, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="How I Made $6,000 in 7 Days with my Ebook" href="http://pedrokroger.net/how-made-6000-7-days-with-ebook/">How I Made $6,000 in 7 Days with my Ebook</a>
		<span class="meta">December 16, 2013</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Converting MIDI Files to MP3 on the Mac OS" href="http://pedrokroger.net/converting-midi-files-mp3-mac-os/">Converting MIDI Files to MP3 on the Mac OS</a>
		<span class="meta">August 12, 2013</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="From Mathematical Sequences to Music with Python" href="http://pedrokroger.net/pascals-triangle-sound/">From Mathematical Sequences to Music with Python</a>
		<span class="meta">May 7, 2013</span>
		<div class="fix"></div>
	</li>
	                </ul>
                                                
            </div><!-- /.boxes -->

        </div><!-- /wooTabs -->

        </div>         <div id="text-2" class="widget widget_text"><h3>Music For Geeks And Nerds</h3>			<div class="textwidget">Learn more about music with Python and a little bit of math. <a href="http://musicforgeeksandnerds.com/">Get your copy</a>

<a href="http://musicforgeeksandnerds.com"><img src="/wp-content/uploads/2013/11/cover.png"></a>

</div>
		</div></aside><!-- /#sidebar -->

		</div><!-- /#main-sidebar-container -->         

		
    </div><!-- /#content -->
	
	<footer id="footer" class="col-full">

		
		<div id="copyright" class="col-left">
			<p>&copy; 2014 Pedro Kroger. All Rights Reserved. </p>		</div>

		<div id="credit" class="col-right">
			<p><p></p></p>		</div>

	</footer>

	
	</div><!-- /#inner-wrapper -->

</div><!-- /#wrapper -->

<div class="fix"></div><!--/.fix-->

<script src="//static.getclicky.com/js" type="text/javascript"></script>
<script type="text/javascript">try{ clicky.init(100700246); }catch(e){}</script>
<noscript><p><img alt="Clicky" width="1" height="1" src="//in.getclicky.com/100700246ns.gif" /></p></noscript>

<!-- Woo Tabs Widget -->
<script type="text/javascript">
jQuery(document).ready(function(){
	// UL = .wooTabs
	// Tab contents = .inside

	var tag_cloud_class = '#tagcloud';

	//Fix for tag clouds - unexpected height before .hide()
	var tag_cloud_height = jQuery( '#tagcloud').height();

	jQuery( '.inside ul li:last-child').css( 'border-bottom','0px' ); // remove last border-bottom from list in tab content
	jQuery( '.wooTabs').each(function(){
		jQuery(this).children( 'li').children( 'a:first').addClass( 'selected' ); // Add .selected class to first tab on load
	});
	jQuery( '.inside > *').hide();
	jQuery( '.inside > *:first-child').show();

	jQuery( '.wooTabs li a').click(function(evt){ // Init Click funtion on Tabs

		var clicked_tab_ref = jQuery(this).attr( 'href' ); // Strore Href value

		jQuery(this).parent().parent().children( 'li').children( 'a').removeClass( 'selected' ); //Remove selected from all tabs
		jQuery(this).addClass( 'selected' );
		jQuery(this).parent().parent().parent().children( '.inside').children( '*').hide();

		jQuery( '.inside ' + clicked_tab_ref).fadeIn(500);

		 evt.preventDefault();

	})
})
</script>
<script type="text/javascript" src="http://pedrokroger.net/wp-content/cache/minify/000000/M9FPzs_NTc0r0S1KLcip1MvNzAMA.js"></script>
<script type='text/javascript'>
/* <![CDATA[ */
var tocplus = {"visibility_show":"show","visibility_hide":"hide","width":"Auto"};
/* ]]> */
</script>
<script type="text/javascript" src="http://pedrokroger.net/wp-content/cache/minify/000000/DcfRDYAwCAXAhSSkI9FKDUah6cPG8fX-rnBKvZSiUwtP9QSN6wH3-XcrfMthjaSlhVONlwXQBJ_gqRjhsKW0bNfABw.js"></script>
</body>
</html>
<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Minified using disk
Page Caching using disk: enhanced
Database Caching 5/25 queries in 0.006 seconds using disk
Object Caching 1564/1605 objects using disk

 Served from: pedrokroger.net @ 2014-06-30 08:33:32 by W3 Total Cache -->