<html><head><link rel="stylesheet" type="text/css" href="news.css?5whP7Mna5lhHpbvUBrVK">
<link rel="shortcut icon" href="favicon.ico">
<script type="text/javascript">
function byId(id) {
  return document.getElementById(id);
}

function vote(node) {
  var v = node.id.split(/_/);   // {'up', '123'}
  var item = v[1];

  // hide arrows
  byId('up_'   + item).style.visibility = 'hidden';
  byId('down_' + item).style.visibility = 'hidden';

  // ping server
  var ping = new Image();
  ping.src = node.href;

  return false; // cancel browser nav
} </script><title>Ask HN: Why Python over Ruby? | Hacker News</title></head><body><center><table border=0 cellpadding=0 cellspacing=0 width="85%" bgcolor=#f6f6ef><tr><td bgcolor=#ff6600><table border=0 cellpadding=0 cellspacing=0 width="100%" style="padding:2px"><tr><td style="width:18px;padding-right:4px"><a href="http://ycombinator.com"><img src="y18.gif" width=18 height=18 style="border:1px #ffffff solid;"></img></a></td><td style="line-height:12pt; height:10px;"><span class="pagetop"><b><a href="news">Hacker News</a></b><img src="s.gif" height=1 width=10><a href="newest">new</a> | <a href="newcomments">comments</a> | <a href="ask">ask</a> | <a href="jobs">jobs</a> | <a href="submit">submit</a></span></td><td style="text-align:right;padding-right:4px;"><span class="pagetop"><a href="newslogin?whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31">login</a></span></td></tr></table></td></tr><tr style="height:10px"></tr><tr><td><table border=0><tr><td><center><a id=up_682101 href="vote?for=682101&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682101></span></center></td><td class="title"><a href="item?id=682101">Ask HN: Why Python over Ruby?</a></td></tr><tr><td colspan=1></td><td class="subtext"><span id=score_682101>85 points</span> by <a href="user?id=costan">costan</a> 1825 days ago  | <a href="item?id=682101">comments</a></td></tr><tr style="height:2px"></tr><tr><td></td><td>I would like to understand why Python is so much more popular than Ruby. Much of the software I've seen supports Python for scripting (e.g. Miro, OpenMoko, XBMC/Boxee), and people don't seem to care so much for Ruby. At the same time, people agree that Ruby is great for writing DSLs.<p>I don't want a flame war or religious arguments. I would like to understand what made Python win in this space. Thanks so much for commenting!</td></tr></table><br><br>
<table border=0><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682364 href="vote?for=682364&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682364></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=zach">zach</a> 1825 days ago  | <a href="item?id=682364">link</a></span></div><br>
<span class="comment"><font color=#000000>Ruby has clever syntax.  Python has pure syntax.<p>Ruby has method aliases.  Python does not allow a string to capitalize itself.<p>Ruby uses Ruby methods within Ruby classes to extend Ruby.  Python has decorators so you can write functions that return functions that return functions to create a new function.<p>Ruby has strict object-oriented encapsulation.  Python is laid-back about objects, because you probably know what's going on inside them anyway.<p>Ruby lets you leave off parentheses so you don't miss objects having attributes too much.  Python will let you mix tabs and spaces for indentation, but passive-aggressively mess up your scoping as punishment.<p>Ruby has seven kinds of closures.  Python has one, in the unlikely case a list comprehension won't do.<p>Ruby's C implementation is a mess of support for language-level flexibility.  Python's C implementation is so clean you get the unsettling thought that you could probably write Python using C macros.<p>Ruby supports metaprogramming for cases when programmers find it more descriptive.  Python supports metaprogramming for cases when programmers find it necessary.<p>Ruby is expressive.  Python is direct.<p>Ruby is English.  Python is Esperanto.<p>Ruby is verse.  Python is prose.<p>Ruby is beautiful.  Python is useful.<p>I like Python, but coming to it after using Ruby for seven years, well, I think it's like dog people and cat people.  You can like having one species around, but you're always thinking -- why they can't be more like the other?</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_683365 href="vote?for=683365&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683365></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jmillikin">jmillikin</a> 1824 days ago  | <a href="item?id=683365">link</a></span></div><br>
<span class="comment"><font color=#000000><i>Ruby has method aliases. Python does not allow a string to capitalize itself.</i><p><pre><code>    &#62;&#62;&#62; "hello".capitalize()
    "Hello"
</code></pre>
<i>Python has decorators so you can write functions that return functions that return functions to create a new function.</i><p>Or functions that return classes, or classes that use other objects, or any possible other use for the pattern "wrap this with that and save the result"<p><i>Python will let you mix tabs and spaces for indentation, but passive-aggressively mess up your scoping as punishment.</i><p><pre><code>    $ ./mixed.py
      File "mixed.py", line 3
        print "b"
                ^
    TabError: inconsistent use of tabs and spaces in indentation</code></pre></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683423 href="vote?for=683423&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683423></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=zach">zach</a> 1824 days ago  | <a href="item?id=683423">link</a></span></div><br>
<span class="comment"><font color=#000000>I should point out that capitalize(), of course, returns a new capitalized string, just as it does in Ruby.  But in Ruby you also have String#capitalize!<p>And as for indentation, I think Guido should have followed through with making tabs a syntax error, because they are part of the syntax and are fiendish sources of error.  Let's just say you have this code, properly indented with spaces:<p><pre><code>    class X:
        def visible(self):
            pass
</code></pre>
And you open it in a non-Python-aware editor, say for Windows, which has a four-space tab length and does not convert them to spaces.  You add:<p><pre><code>        def invisible(self):
            pass
</code></pre>
at the end of the file using your tab key.  Now you have a potentially crazy-hard-to-figure-out bug.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683469 href="vote?for=683469&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683469></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jmillikin">jmillikin</a> 1824 days ago  | <a href="item?id=683469">link</a></span></div><br>
<span class="comment"><font color=#000000><i>I should point out that capitalize(), of course, returns a new capitalized string, just as it does in Ruby. But in Ruby you also have String#capitalize!</i><p>So the quote deals with mutability? I suppose that makes more sense, since Ruby tends to favor mutable objects. Of course, to my Python-based mind changing the definition of 'a' or 3 seems like a poor idea.<p><i>And as for indentation, I think Guido should have followed through with making tabs a syntax error</i><p>Surely you mean "making spaces a syntax error"? That would be much more sensible, since using spaces for indentation is absurd. Even better would be simply ignoring spaces, since that allows them to be used for pretty-printing and alignment without any potential ambiguity.<p>Also, the bug in your example will not be difficult to figure out, because Python will/should raise an exception when parsing the malformed file. Not everybody runs with -tt, but that ought to be the default behavior (and is anywhere I get to control the installation).</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683525 href="vote?for=683525&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683525></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=ketralnis">ketralnis</a> 1824 days ago  | <a href="item?id=683525">link</a></span></div><br>
<span class="comment"><font color=#000000>&#62; Even better would be simply ignoring spaces<p>Oh god no. Then you could have blocks that line up visually but execute in different scopes</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_684090 href="vote?for=684090&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684090></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=earthboundkid">earthboundkid</a> 1824 days ago  | <a href="item?id=684090">link</a></span></div><br>
<span class="comment"><font color=#000000>PEP 8 specifies 4 spaces, not 1 tab. Python people generally prefer spaces to tabs, as do I, although I agree the semantically, it's a bit weird.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683654 href="vote?for=683654&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683654></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=Freaky">Freaky</a> 1824 days ago  | <a href="item?id=683654">link</a></span></div><br>
<span class="comment"><font color=#000000>Maybe you could consider a pre-commit hook which blocks /^\s* \t/ on * .py?  Or if nothing else it's simple enough to grep/ack for.<p>I'd also recommend making indentation whitespace visible if your editor supports it - it is syntax after all.  I have vim configured to colour leading spaces green, leading tabs as blue, and tabs following anything other than a tab highlighted red.  Making inconsistent indentation ugly is quite effective, though sadly ineffective on other people.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_683064 href="vote?for=683064&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683064></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=rdouble">rdouble</a> 1824 days ago  | <a href="item?id=683064">link</a></span></div><br>
<span class="comment"><font color=#000000><i>I think it's like dog people and cat people.</i><p>Python is like being in the Netherlands. You're surprised that everything seems to work so well but at the same time something feels a bit weird.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682466 href="vote?for=682466&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682466></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=c00p3r">c00p3r</a> 1825 days ago  | <a href="item?id=682466">link</a></span></div><br>
<span class="comment"><font color=#000000><i>Python's C implementation is so clean..</i><p>just try to compile it on OpenSolaris with Sun compiler.<p>hint: Perl or Ruby were passed 100% tests.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_685670 href="vote?for=685670&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_685670></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=henryprecheur">henryprecheur</a> 1823 days ago  | <a href="item?id=685670">link</a></span></div><br>
<span class="comment"><font color=#000000>That's portability. Portable and clean code are 2 different things.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_689773 href="vote?for=689773&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_689773></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=deadwisdom">deadwisdom</a> 1819 days ago  | <a href="item?id=689773">link</a></span></div><br>
<span class="comment"><font color=#000000>And sometimes mutually exclusive.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682374 href="vote?for=682374&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682374></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=knowtheory">knowtheory</a> 1825 days ago  | <a href="item?id=682374">link</a></span></div><br>
<span class="comment"><font color=#5a5a5a>None of these are reasons why Python is more prevalent than Ruby.<p>Also, i would point out that sometimes, <i>expressiveness</i> is <i>useful</i> :P<p>So sorry sir, but this isn't just biased, but also bordering on a troll.  Bullet points like these are not justifications in themselves.  They're just a list of things to try and DDoS an argument.<p>What is your actual point?</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683042 href="vote?for=683042&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683042></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jamesbritt">jamesbritt</a> 1824 days ago  | <a href="item?id=683042">link</a></span></div><br>
<span class="comment"><font color=#000000>Sorry to see you so down-modded.<p>"So sorry sir, but this isn't just biased, but also bordering on a troll."<p>Poster is being facetious (somewhat :) ) to make a point about differences in language and community philosophies.<p>The semi-troll nature is pretty amusing, though. The "verse/prose" comparison is sure-fire flame-bait; I love it.  I will keep that one handy ...</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682371 href="vote?for=682371&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682371></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=knowtheory">knowtheory</a> 1825 days ago  | <a href="item?id=682371">link</a></span></div><br>
<span class="comment"><font color=#000000>What's clear to me reading the comments in this thread, is that there are a lot of people who like Python, and don't understand what people appreciate in Ruby.<p>None of these are reasons why people choose Python over Ruby.  Or why Python has become more popular.  It is worth noting that Python was also mentioned a lot as a teaching tool when its popularity began ramping up, and some universities have replaced Java and Scheme with Python as an introductory language.<p>Python really is not appreciably better than Ruby, in my experience.  Nor will i claim that Ruby is appreciably better than Python.  I personally use Ruby in daily life, and used to use Python prior to discovering Ruby.  Both languages support some really weird warts, inconsistencies, and baggage that they retain for the sake of backwards compatibility.<p>Instead they really do provide different philosophies on life.  To claim that Ruby is a tangled soup of options and syntactic sugar is to miss the point really.  Nor is Ruby is not trying to be all things to all people.  Matz cares about one thing, and that's the ability to let programmers get work done with as few cognitive hurdles sourced from the programming language itself.  Does that mean you have options?  Yes.  Does that mean that it would be better to only have one way to do everything?  Not necessarily.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682672 href="vote?for=682672&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682672></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=tdavis">tdavis</a> 1824 days ago  | <a href="item?id=682672">link</a></span></div><br>
<span class="comment"><font color=#000000><i>To claim that Ruby is a tangled soup of options and syntactic sugar is to miss the point really.</i><p>What <i>is</i> the point? I sincerely wish to learn, for my own intellectual curiosity. Because I have read Ruby code and I have done Ruby tutorials and talked to people who use Ruby and for the life of me, no matter how hard I meditate on the issue, I cannot understand why anyone would use Ruby over Python.<p>I don't feel Python is absolutely better than Ruby, anymore than an apple can be absolutely better than an orange, but I have yet to gain a comprehension of how Ruby is even <i>relatively</i> better. From a Python -&#62; Ruby perspective I find it particularly perplexing.<p>Ruby presented far more cognitive hurdles for me because it allows you to do things in ways that seem simultaneously mildly more convenient and completely counter-intuitive to everything I've experienced with similar styles of languages over the past 10 years.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682773 href="vote?for=682773&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682773></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=greggraham">greggraham</a> 1824 days ago  | <a href="item?id=682773">link</a></span></div><br>
<span class="comment"><font color=#000000>I currently use Python and Django for the following reasons:
1) Coworker familiar with Python
2) I had an easier time understanding the mechanics of Django than I did Rails
3) Some libraries I needed were only in Python<p>However, from a language point of view, I have a slight preference towards Ruby. Here are some things I like:
1) More consistent commitment to object paradigm, e.g. all function calls are actually method calls on an object. In Python, everything is an object, but sometimes you use methods, and sometimes you don't, e.g. list.pop() vs. len(list).
2) I think blocks are very handy.
3) I like the more Perlish regex syntax.
4) There is a cleverness to Ruby that might not be the best thing for a corporate environment, but it makes it fun.<p>So, if I was writing code just for myself, I might choose Ruby over Python, assuming performance and library support were sufficient.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683680 href="vote?for=683680&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683680></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=ubernostrum">ubernostrum</a> 1824 days ago  | <a href="item?id=683680">link</a></span></div><br>
<span class="comment"><font color=#000000>Humor me for a moment, because I've been asking this question of many people for a long time and have never yet gotten a straight answer.<p>Why is len() always the thing people pick on? Why is it always "Python uses len(obj) instead of obj.len()", and never "Python uses str(obj) instead of obj.str()", or any of  the various polymorphic built-ins like sum()? I've seen this so many times now that I'm honestly quite curious about it.<p>Also:<p>"More consistent commitment to object paradigm, e.g. all function calls are actually method calls on an object."<p>Every function call in Python is always an invocation of a method on an object, even if it doesn't look like it. len(), of course, delegates to a method on the object. But even standalone functions are method calls. Try this:<p>&#62;&#62;&#62; def add(x, y):<p>...     return x + y<p>...<p>&#62;&#62;&#62; add(3, 5)<p>8<p>&#62;&#62;&#62; import types<p>&#62;&#62;&#62; types.FunctionType.__call__(add, 3, 5)<p>8<p>The last couple lines there are what's really going on when you call the function.<p>(also, just as Ruby's "built-in" functions are really methods on Kernel which is made available globally, Python's "built-in" functions really exist in a module that's made available globally (and __builtins__ is its name)</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_690350 href="vote?for=690350&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_690350></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=bendotc">bendotc</a> 1819 days ago  | <a href="item?id=690350">link</a></span></div><br>
<span class="comment"><font color=#000000>I'm starting to feel like a broken record here, but whenever anyone wants to pick in "str" I find myself compelled to point out:<p><pre><code>  &#62;&#62;&#62; type(str)
  &#60;type 'type'&#62;
</code></pre>
That is to say, str isn't a magical function, it's a type, and "str()" is how you call that type's constructor.  How is this not somehow object oriented?<p>Of course, even if str <i>was</i> a function and not a constructor, it would be an object factory which delegates to its argument via a well defined interface (the __str__ method).  OOP doesn't have to mean everything-is-an-object.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_684094 href="vote?for=684094&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684094></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=earthboundkid">earthboundkid</a> 1824 days ago  | <a href="item?id=684094">link</a></span></div><br>
<span class="comment"><font color=#000000>Even without going to the trouble of importing types, every Python callable has an __call__ method. Including the __call__ method:<p><pre><code>    &#62;&#62;&#62; def f():
    ...  print("Helllo __call__")
    ... 
    &#62;&#62;&#62; f.__call__.__call__.__call__.__call__()
    Helllo __call__
</code></pre>
Don't use this in real life though, there's a performance penalty.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_684797 href="vote?for=684797&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684797></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=ubernostrum">ubernostrum</a> 1823 days ago  | <a href="item?id=684797">link</a></span></div><br>
<span class="comment"><font color=#000000>Of course, there's also the singleton that always returns itself:<p><pre><code>  &#62;&#62;&#62; recursive = lambda: recursive</code></pre></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683562 href="vote?for=683562&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683562></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=seanodonnell">seanodonnell</a> 1824 days ago  | <a href="item?id=683562">link</a></span></div><br>
<span class="comment"><font color=#000000>len(list) is actually a shortcut for calling list.__len__() , any object that implements the __len__ method is therefore compatible with it. So in practice, len is in fact a method call. Almost every python function that operates on objects is just a similar shorthand.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683154 href="vote?for=683154&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683154></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jamesbritt">jamesbritt</a> 1824 days ago  | <a href="item?id=683154">link</a></span></div><br>
<span class="comment"><font color=#000000>"Ruby presented far more cognitive hurdles for me because it allows you to do things in ways that seem simultaneously mildly more convenient and completely counter-intuitive to everything I've experienced with similar styles of languages over the past 10 years."<p>Don't use Ruby.<p>If it presents that much trouble, go find another language.  Use Python or C# or Haskell or whatever fits best and gets the job done.<p>Many of the things you find to be cognitive hurdles  and completely counter-intuitive are there <i>on purpose</i>.  They are never going away because many other people (and matz in particular) find them to be cognitive enhancements and completely intuitive.<p>Don't waste time fighting it.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683924 href="vote?for=683924&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683924></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=pwang">pwang</a> 1824 days ago  | <a href="item?id=683924">link</a></span></div><br>
<span class="comment"><font color=#000000>Ditto.  The syntax seems cluttered more cluttered with sigils (some optional), and much of it seems merely to support things that Python does much more readably.<p>I occasionally tangle with a friend who is a Ruby fan, and who tried Python back in the 1.4 or 1.5 days and gave up on it.  He still hasn't delivered me any solid reasons for trying out Ruby.<p>It is entirely possible that neither language presents sufficient relatively advantage compared to the other to persuade an expert in either to switch.  The only exception would be due to a 3rd party application or library that is only available in one of the languages.  (For instance, I work heavily with numpy and scipy; I'm not aware of Ruby equivalents.)</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_684163 href="vote?for=684163&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684163></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=artsrc">artsrc</a> 1824 days ago  | <a href="item?id=684163">link</a></span></div><br>
<span class="comment"><font color=#000000>Many people use Ruby because of Rails.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683370 href="vote?for=683370&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683370></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=halostatue">halostatue</a> 1824 days ago  | <a href="item?id=683370">link</a></span></div><br>
<span class="comment"><font color=#000000>Python presented me with one insurmountable cognitive hurdle, and that's what drove me to Ruby: whitespace scoping. That single misfeature in Python is enough to keep me from ever using it in my own projects.<p>The compiler/interpreter should work for <i>me</i>, not force me to work for the compiler/interpreter. (And no, there's not always preferably one way to do things, which is an attitude I can't stand.)</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683464 href="vote?for=683464&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683464></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=moe">moe</a> 1824 days ago  | <a href="item?id=683464">link</a></span></div><br>
<span class="comment"><font color=#000000>That's an ancient argument, about as old as the python language itself. The standard rebuttal for your particular argument would be:<p>You indent your code anyways, in any language. Hence there is no extra work involved for writing Python.<p>And yes, in this case that is the preferable way to do it. Unless you want to argue for non-indented or randomly indented code.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683796 href="vote?for=683796&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683796></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=halostatue">halostatue</a> 1824 days ago  | <a href="item?id=683796">link</a></span></div><br>
<span class="comment"><font color=#000000>It's not an argument: it's why I don't use Python. No argument here, and nothing anyone says will convince me that the Python way is the right way at all.<p>And yes, I can easily argue for non-indented code for certain circumstances (print-debugging outdented so that it's more obvious to the eye when you're cleaning up the binary search prints that are surrounding your bug). Python doesn't allow those circumstances; it also doesn't easily allow for nicely embedded Python in templates.<p>There are definitely cases where indentation as syntax is the wrong choice, and my use cases tend to hit those. Thus, I don't use Python. If someone else find this misfeature to be a security blanket? More power to them. But not me.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682152 href="vote?for=682152&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682152></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=paulgb">paulgb</a> 1825 days ago  | <a href="item?id=682152">link</a></span></div><br>
<span class="comment"><font color=#000000>Ruby is slightly newer and wasn't particularly popular in the United States until it was popularized by Rails.<p>Python became popular with Linux and open source developers before Ruby did, and has had slightly more time to develop a nice set of libraries to do just about anything.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682393 href="vote?for=682393&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682393></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=iamelgringo">iamelgringo</a> 1825 days ago  | <a href="item?id=682393">link</a></span></div><br>
<span class="comment"><font color=#000000>May I also add that Python works very nicely on a Windows box.  Ruby/Rails works on Windows, but when I used it, it hobbled around on one leg.  Going to PyCon this past year, I was stunned at how many Windows laptops there were.  Python itself and the Python community are really quite OS agnostic.<p>The online Python documentation tends to be pretty good.  When I picked up Ruby a year and a half ago, and I tried to find the documentation, people generally pointed to the pickaxe book as the de facto documentation.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682703 href="vote?for=682703&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682703></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=dublinclontarf">dublinclontarf</a> 1824 days ago  | <a href="item?id=682703">link</a></span></div><br>
<span class="comment"><font color=#000000>Yes, the pickaxe book or the class docs at ruby-doc.org<p>Although I've been using Ruby on windows the last few weeks with Ruby Shoes from _why(normally use for unix scripts or web-dev). It's pretty nice (although a little rough around the edges as it's under heavy developement).<p>When you install shoes (the latest version anyway) you get the GUI tools, ruby gems, and sqlite, and a ruby interpreter, all neatly packaged. And there is a whole load of items I havent looked at yet. It's fun.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_688611 href="vote?for=688611&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_688611></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=costan">costan</a> 1820 days ago  | <a href="item?id=688611">link</a></span></div><br>
<span class="comment"><font color=#000000>I think this is a very good point!<p>Come to think of it, we, ruby programmers, don't really pay our dues. 1.9.1 has been out since January/February, and nobody bothered to package it for OSX, Windows, or Ubuntu.<p>Thanks for bringing this issue into the light.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_686759 href="vote?for=686759&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_686759></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=CyberFonic">CyberFonic</a> 1822 days ago  | <a href="item?id=686759">link</a></span></div><br>
<span class="comment"><font color=#000000>It's really easy to develop portable Python applications that run equally well on *NIX, Windows and OS/X.  I mount a single share on Linux, Windows XP and OS.X systems and run the same Python program and have them run identically on all three systems, side-by-side.  I'm not saying that you can't match that with Ruby, but for me it's a way of releasing programs concurrently for all major platforms.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_685191 href="vote?for=685191&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_685191></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jamesbritt">jamesbritt</a> 1823 days ago  | <a href="item?id=685191">link</a></span></div><br>
<span class="comment"><font color=#000000>I used to do all my Rails development on XP, with no hobbling.<p>Nowadays I work on Kubuntu, and maybe things have changed, but I've no bad experiences with Ruby on Windows.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682188 href="vote?for=682188&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682188></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=tdavis">tdavis</a> 1825 days ago  | <a href="item?id=682188">link</a></span></div><br>
<span class="comment"><font color=#000000>Python is far more mature, isn't a strange ad-hoc combination of other languages, has a third-party library to do anything and everything (which is probably also reasonably mature), and doesn't have a community rife with arrogant children.<p>I'm generalizing to some extent, of course, but these are the things that I and other developers I know associate with Ruby (including many who's startups are built on it). I imagine as the language and community grow and mature they will shed these associations and hopefully create a language worth taking seriously. They haven't done that yet (strictly in my opinion).</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682283 href="vote?for=682283&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682283></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jimmyrr">jimmyrr</a> 1825 days ago  | <a href="item?id=682283">link</a></span></div><br>
<span class="comment"><font color=#000000>...strange ad-hoc combination of other languages.<p>I call bullshit, sir. Ruby is objectively less strange and more consistent than Python. Some has to do with the fact that Python is older - hence has more baggage to carry. A lot of it, though, just has to do with poor/missing design choices. Specifics?<p>- ruby 'block' passing convention is much cleaner and more powerful than python's 'for'/iterators.<p>- python's global functions are stranger and more ad-hoc than Ruby's strict object-orientation.<p>- ruby's mixins &#62; python's multiple inheritance<p>- python underscore (and double underscore) naming conventions to overcome simple language features<p>Don't get me wrong: i love python - but primarily because of the faster execution and larger community - not because of the language itself.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682413 href="vote?for=682413&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682413></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=tdavis">tdavis</a> 1825 days ago  | <a href="item?id=682413">link</a></span></div><br>
<span class="comment"><font color=#000000>Quoting an article on the topic:<p><i>Having ploughed through several tutorials, I did not find Ruby particularly "elegant", or its syntax particularly obvious. Much of it seemed ad hoc, thrown together, in particular when there were several different ways of doing something, and it seemed to be the philosophy of the language to provide all of them. I did not find its constructs as intuitive and natural as claimed, trying out simple coding examples proved as frustrating when things didn’t do what you’d suppose they’d do...</i><p>(<a href="http://www.bitwisemag.com/2/What-s-Wrong-With-Ruby" rel="nofollow">http://www.bitwisemag.com/2/What-s-Wrong-With-Ruby</a>)<p>I actually gave Ruby a shot, going through the interactive tutorial on <a href="http://tryruby.hobix.com" rel="nofollow">http://tryruby.hobix.com</a>. I couldn't do it very long, however, because it was completely ridiculous. In what world does it make sense for hash keys to double as string grep? For instance:<p><pre><code>    my_string['foo'] = 'bar'
</code></pre>
will replace the first instance of <i>foo</i> in <i>my_string</i> with <i>bar</i>?! WHY?! I can stick an exclamation point on the end of method calls... to signify mutation? WHY?! What twisted logic allows one to rationalize multiplying strings like:<p><pre><code>    "5" * 2 == "55" 
</code></pre>
yet throw an exception for:<p><pre><code>    2 * "5"
</code></pre>
It makes absolutely no sense! And why would an integer have a method for converting itself to a string? Or an array? I found so many things in Ruby that made me think, "Okay, superficially that's really convenient and sorta cool... but it makes no sense and it is absolutely counter-intuitive. And I feel dirty using it, even if everybody is doing it." Some people, I assume, find Ruby to be "elegant" for the same reasons I find it to be "an abomination."</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682489 href="vote?for=682489&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682489></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=demallien">demallien</a> 1825 days ago  | <a href="item?id=682489">link</a></span></div><br>
<span class="comment"><font color=#000000>Well, I can answer at least a few of those 'WHY?!'s.<p>Firstly starting with my_string['foo'] = 'bar', this is a syntax that is used a lot in Ruby for anytime that you wish to recover a subset of a collection - you can use it with a Dir object for example to recover a subset of directories/files, or in the case of a hash, to recover the object stored at the key.  The thing is that you need to think about it as being a subset operator, rather than an index operator.<p>The exclamation point at the end of a method name has no syntactic meaning - it is simply a naming convention used by the standard libraries to indicate when the method mutates the object or not. Same same for method names ending with a question mark, it's just a convention to indicate that the response will be a boolean.<p>As for the whole "5" * 2 vs. 2 * "5", I must admit to not understanding where you're coming from.  I don't see how you could expect any other kind of behaviour from an object orientated language.  Personally I don't like over-riding arithmetic operators for non-number types, for precisely this reason, but hey, some people like it, so why not?<p>Integers converting to strings? I think every language has that no?  I mean there's always something like:
  sprintf(myStringPtr, "%d", myInteger);
or
  cout &#60;&#60; myInteger;<p>etc etc<p>By making this a standard method on all classes (to_s), Ruby makes it really easy to dump a class to a serial format, which is very useful for debugging, as an example.<p>I get the impression that you simply didn't spend enough time with Ruby to come to understand its idioms, in which case, you're not really in a position to effectively criticise the language...</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_682701 href="vote?for=682701&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682701></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=tdavis">tdavis</a> 1824 days ago  | <a href="item?id=682701">link</a></span></div><br>
<span class="comment"><font color=#000000>I suppose these just seem <i>odd</i> to me, which was my point. Not that I find something absolutely <i>wrong</i> about them, anymore than I can find something <i>wrong</i> about a language which doesn't have mutable variables or whatever the case may be.<p>A lot of Ruby's conventions simply scream "ambiguity" to me. A "subset of a collection" is extremely ambiguous; if there is more than 1 <i>foo</i> in <i>my_string</i>, does it always get the first? How do I get the rest? <i>my_string['foo'][2]</i> or something? I can't even intuitively make something up which makes sense to me. Perhaps there isn't a way to get the others, which I suppose would be in line with Python, which doesn't supply a string method to find all occurrences at once... but how do I offset it?<p>I can see where standardized methods like <i>to_a</i> can be more convenient, but they also open up the possibility for unlimited ambiguity. What does <i>Foo.to_a</i> do for your <i>Foo</i> class? It could do anything! There's no way I could rely on these methods to do something across the board unless I know your class conforms to some Interface (do Ruby folks use/have Interfaces?). In Python, if I do<p><pre><code>  [foo]
</code></pre>
Then <i>foo</i> is now a list. I always know what I'm getting. I always know what <i>int()</i> is going to attempt to do to an object, etc.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_683677 href="vote?for=683677&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683677></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=Freaky">Freaky</a> 1824 days ago  | <a href="item?id=683677">link</a></span></div><br>
<span class="comment"><font color=#000000><i>Perhaps there isn't a way to get the others, which I suppose would be in line with Python, which doesn't supply a string method to find all occurrences at once... but how do I offset it?</i><p>Yes, there's no way to get the other matches using [] as far as I know, it's just a generalization of being able to pass various types to it; Fixnum, Range, Regexp.. I don't see the harm in doing something with String too.  If you wanted to extract multiple items, you'd use something like String#scan, or if you wanted to do a global replace, String#gsub, which can also accept a code block to perform computed replacements.<p><i>I can see where standardized methods like to_a can be more convenient, but they also open up the possibility for unlimited ambiguity. What does Foo.to_a do for your Foo class?</i><p>As of 1.9, it does this:<p><pre><code>    NoMethodError: undefined method `to_a' for Foo:Class
</code></pre>
In 1.8 it issues "warning: default `to_a' will be obsolete".<p><i>In Python, if I do `[foo]` Then foo is now a list.</i><p>You do the exact same thing in Ruby, though if you're wanting to cast your argument like the old to_a did, you use Array(), which won't turn [] into [[]].  If you want a number, Integer() or Float() will raise an exception if they can't give you one.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_684127 href="vote?for=684127&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684127></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=earthboundkid">earthboundkid</a> 1824 days ago  | <a href="item?id=684127">link</a></span></div><br>
<span class="comment"><font color=#000000>"As for the whole "5" * 2 vs. 2 * "5", I must admit to not understanding where you're coming from. I don't see how you could expect any other kind of behaviour from an object orientated language."<p>Python has a __rmult__ method. If you do A * B, first it internally calls A.__mult__(B) then if that raises TypeError, it tries B.__rmult__(A). It's pretty elegant, I think. For Ruby, it wouldn't look as nice to do A.r* though, I guess, but it would be a nice bit of functionality.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683198 href="vote?for=683198&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683198></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=Herring">Herring</a> 1824 days ago  | <a href="item?id=683198">link</a></span></div><br>
<span class="comment"><font color=#000000>&#62;<i>I get the impression that you simply didn't spend enough time with Ruby to come to understand its idioms, in which case, you're not really in a position to effectively criticise the language...</i><p>Well yeah like others have been saying, python is more attractive to new users is probably partly why it's more popular. You don't need to work as hard to understand its idioms, it's more readable by newbies (by anyone), etc.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682728 href="vote?for=682728&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682728></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=wildjim">wildjim</a> 1824 days ago  | <a href="item?id=682728">link</a></span></div><br>
<span class="comment"><font color=#000000><i>Re: "5" </i> 2 == "55" vs. 2 * "5" == Exception*<p>You need to remember that EVERYTHING is an object, there are no basic/literal types at all;  in this case, "5" is really just syntactic sugar for creating a "5" String object, 2 is syntactic sugar for creating the "2" Integer (Number?) object, and the " * " operator is syntactic sugar for the " * " method of the "5" String object == ' "5".times(2) ' (which is similar to Perl's ' "5" x 2 ' construct).<p>The String class supports a " * " method which creates n copies of it's string value, and concat's them together into a new String object, but the Integer class does not.<p>Many "basic" objects have explicit conversion methods, but will also frequently support implicit conversion where it makes sense.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_704427 href="vote?for=704427&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_704427></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=akho">akho</a> 1811 days ago  | <a href="item?id=704427">link</a></span></div><br>
<span class="comment"><font color=#000000>Why does it overload "*" on the right, but not on the left side of the string? Python has __rmult__, and it works. Please do not try to make language warts look better by spilling a bucket of architectural-astronauty crap.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682498 href="vote?for=682498&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682498></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=biaxident">biaxident</a> 1825 days ago  | <a href="item?id=682498">link</a></span></div><br>
<span class="comment"><font color=#000000>"5" * 2 == "55"<p>You're calling a method on a string, so you got the string doubled. Seems to make sense to me.<p>Obviously in this case the order of the arguments matter.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_684131 href="vote?for=684131&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684131></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=earthboundkid">earthboundkid</a> 1824 days ago  | <a href="item?id=684131">link</a></span></div><br>
<span class="comment"><font color=#000000>"Obviously in this case the order of the arguments matter."<p>It's not obvious in terms of intuitiveness, no. Why not extend the Integer class to know to call mystring's * method when their order is reversed? That would be intuitive.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_684129 href="vote?for=684129&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684129></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=earthboundkid">earthboundkid</a> 1824 days ago  | <a href="item?id=684129">link</a></span></div><br>
<span class="comment"><font color=#000000>"And why would an integer have a method for converting itself to a string? Or an array?"<p>You know that under the covers in Python str(1) works by calling (1).__str__(), right? That's why you can make str(my_custom_class) work.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683386 href="vote?for=683386&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683386></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=halostatue">halostatue</a> 1824 days ago  | <a href="item?id=683386">link</a></span></div><br>
<span class="comment"><font color=#000000>Huntbach's article was pure nonsense when it was written[1], and it remains pure nonsense now.<p>[1] As I wrote two years ago: <a href="http://www.halostatue.ca/2007/03/17/whats-wrong-with-bitwise-magazine/" rel="nofollow">http://www.halostatue.ca/2007/03/17/whats-wrong-with-bitwise...</a></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682299 href="vote?for=682299&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682299></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=yangyang">yangyang</a> 1825 days ago  | <a href="item?id=682299">link</a></span></div><br>
<span class="comment"><font color=#000000>I have used both, Python more than Ruby.<p>Python's iterators are more usable in many situations than the Ruby block system. I can return an iterator, stick it in a variable, call another function with it that returns another iterator, and so on.<p>Python's classes also seem cleaner and less magical than Ruby's. For example, a method on a class is just an attribute that happens to be a method. Much more intuitive than Ruby in my opinion.<p>I'm also fond of Python's idea that "There should be one-- and preferably only one --obvious way to do it".<p>I agree that Python does have its fair share of strangeness, but that fades away with time (you don't notice it).</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682365 href="vote?for=682365&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682365></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=wildjim">wildjim</a> 1825 days ago  | <a href="item?id=682365">link</a></span></div><br>
<span class="comment"><font color=#000000><i>Everything</i> is an object in Ruby, including the blocks.  I'm not clear how you can't pass around a block -- or is it the block + iterator metadata you're talking about?  I suspect that's just an experience problem, where Python promotes iterators over lambdas so lends itself to a different style of programming;  I'm not sure how often you'd want/need to pass a full iterator around in Ruby.<p>Personally I find blocks far more intuitive than Python's iterators and generators, but that is a subjective thing.<p>WRT Magical Classes, I'm not a fan of everything being stored in a dict.  It seems grossly under-engineered to expose the underbelly as a basic "dumb" object;  at the very least, it should've been a "Class Metadata" object with attached support methods to make it easier (safer?) to inspect or update.<p>And lastly: there is NEVER just one way to do it!!  Witness the confusion n00b's feel over the join() method:  ",".join([LIST]) where the more intuitive would probably be [LIST].join(",")...  but if you MUST have join() in the string module, why not support the latter as a redirect to the former?<p>Seriously:  this sort of dogma can make certain kinds of algorithms very messy to code.<p>However, my biggest beef with Python is that I seem to have to write a metric buttload of boilerplate and end up with something very Java-esque... &#60;sigh&#62;</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_682380 href="vote?for=682380&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682380></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=yangyang">yangyang</a> 1825 days ago  | <a href="item?id=682380">link</a></span></div><br>
<span class="comment"><font color=#000000>It might well be experience, I haven't used ruby a great deal. I wanted to do something similar to izip in Python and couldn't see a way to do that without constructing lists in Ruby.<p>I completely disagree with having to write lots of boilerplate and java-esque code. I've written huge amounts of Python, and seeing Java after that really made me wince. What does Python lack that makes you feel you need boilerplate?<p>I don't think the one-way-to-do-it thing is that dogmatic, really. It does make code nicer when you don't have to be aware of various aliased methods, and there are less ways of making identical code look different.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683928 href="vote?for=683928&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683928></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=pwang">pwang</a> 1824 days ago  | <a href="item?id=683928">link</a></span></div><br>
<span class="comment"><font color=#000000>Under what circumstances have you had to write a "metric buttload of boilerplate"?  I've not encountered this with Python in my experience.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683534 href="vote?for=683534&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683534></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=cbr">cbr</a> 1824 days ago  | <a href="item?id=683534">link</a></span></div><br>
<span class="comment"><font color=#000000>You can do ", ".join(x) on any x that you can do "for y in x" on.  If join were a method of the list (or sequence, or iterator, ...) then it would need to be defined over and over again.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_684123 href="vote?for=684123&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684123></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=earthboundkid">earthboundkid</a> 1824 days ago  | <a href="item?id=684123">link</a></span></div><br>
<span class="comment"><font color=#000000>Or it would have to inherit the method from a common iterator class. Which gets to the heart of the Ruby/Python thing: In Python inheritance just isn't as stressed, since people prefer duck-typing to isinstance. On the other hand, since you can reopen classes in Ruby, it's not as crazy to use the modification of a common base class as a means of making a method work with a wide variety of object types.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683005 href="vote?for=683005&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683005></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=sreque">sreque</a> 1824 days ago  | <a href="item?id=683005">link</a></span></div><br>
<span class="comment"><font color=#000000>Ruby 1.9 has real iterators now.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683662 href="vote?for=683662&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683662></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=Freaky">Freaky</a> 1824 days ago  | <a href="item?id=683662">link</a></span></div><br>
<span class="comment"><font color=#000000>They're in 1.8 now too:<p><pre><code>    &#62;&#62; [1,2,3].each
    =&#62; #&#60;Enumerable::Enumerator:0x801820f10&#62;
    &#62;&#62; RUBY_VERSION
    =&#62; "1.8.7"</code></pre></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_683769 href="vote?for=683769&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683769></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=stephencelis">stephencelis</a> 1824 days ago  | <a href="item?id=683769">link</a></span></div><br>
<span class="comment"><font color=#000000>They've been around for awhile<p><pre><code>    &#62;&#62; RUBY_VERSION
    =&#62; "1.8"
    &#62;&#62; require "enumerator"
    =&#62; true
    &#62;&#62; [1,2,3].each
    =&#62; #&#60;Enumerable::Enumerator:0x29326940&#62;</code></pre></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682616 href="vote?for=682616&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682616></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=rbanffy">rbanffy</a> 1824 days ago  | <a href="item?id=682616">link</a></span></div><br>
<span class="comment"><font color=#000000>"a community rife with arrogant children."<p>During FISL, a couple days ago, I witnessed something that really bothered me. It was a presentation comparing Rails with Seaside (which is, by itself, like comparing racing cars with subarines) and the arrogance of the Rails guy dismissing Seaside, Squeak and Smalltalk was very uncomfortable.<p>It seemed the room was too small to fit all the egos inside it.<p>I considered staying until the end and asking a couple questions to demolish the presenter, but I decided it would not be worth it. His belief on the inherent superiority of Ruby and Rails over any other language and framework, past, present and future, bordered on the religious.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682806 href="vote?for=682806&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682806></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=carbon8">carbon8</a> 1824 days ago  | <a href="item?id=682806">link</a></span></div><br>
<span class="comment"><font color=#000000>That's how I feel about Django at this point. A quick glance at reddit reveals how out of hand it's getting; the answer to every web programming question is "Django!" regardless of whether it's relevant or not. And every popular comment or blog post by Django developers discussing Rails contains a bunch of inaccuracies. At least with Rails there's enough of a push back that even the the annoying minority is better behaved, and Rails development these days is more wycats/merb than anything else. I've always liked Django, but in recent months I've been totally turned off of it, but these days it's tough to develop web apps with python and avoid django.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_684170 href="vote?for=684170&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684170></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=wiemersl">wiemersl</a> 1824 days ago  | <a href="item?id=684170">link</a></span></div><br>
<span class="comment"><font color=#000000>Hmmmm.  Is it 'really hard' to develop web apps with python and avoid django?  No. It isn't.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_684639 href="vote?for=684639&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684639></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=rbanffy">rbanffy</a> 1823 days ago  | <a href="item?id=684639">link</a></span></div><br>
<span class="comment"><font color=#000000>Well... You can use Zope and Plone. I have done so for a very long time (in fact, I started using Python because of Zope).<p>Zope 3.x (Plone runs on top of Zope 2.x) is a very nice application server. I wonder if it would be possible to make it work seamlessly with things like Hadoop instead of ZODB.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682683 href="vote?for=682683&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682683></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=GeoJawDguJin">GeoJawDguJin</a> 1824 days ago  | <a href="item?id=682683">link</a></span></div><br>
<span class="comment"><font color=#000000>Rails folks are like that. Even though the rest of the Ruby community is much more reasonable, the weekly Rails debacle has driven a lot of people away from Ruby, including me.<p>If Rails weren't around, it would be much easier to enjoy Ruby without having to use it in isolation. Then again, a whole lot of people wouldn't have gotten into it in the first place.<p>Ruby lived fast and died young. If you don't want to use Python, learn Haskell.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682877 href="vote?for=682877&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682877></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=skawaii">skawaii</a> 1824 days ago  | <a href="item?id=682877">link</a></span></div><br>
<span class="comment"><font color=#000000>"Ruby lived fast and died young."<p>How can you say that a language with active development and an active community has "died"? Seems like an odd conclusion to make, IMHO.<p>And it is really easy to enjoy Ruby without Rails. A friend and I have been doing it for a couple years now.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683211 href="vote?for=683211&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683211></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jamesbritt">jamesbritt</a> 1824 days ago  | <a href="item?id=683211">link</a></span></div><br>
<span class="comment"><font color=#000000>"Ruby lived fast and died young. "<p>Sweet!  I am making a living using a zombie, undead, from-beyond-the-grave programming language!<p>I better hook up that USB Ouija board and get coding.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682342 href="vote?for=682342&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682342></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=delano">delano</a> 1825 days ago  | <a href="item?id=682342">link</a></span></div><br>
<span class="comment"><font color=#000000><i>... a community rife with arrogant children</i><p>It's difficult to accept your rational argument when you include stuff like this.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682426 href="vote?for=682426&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682426></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=tdavis">tdavis</a> 1825 days ago  | <a href="item?id=682426">link</a></span></div><br>
<span class="comment"><font color=#000000>Why is that? It can easily be proven. I'm not trying to suggest that <i>everyone</i> who uses Ruby is an arrogant child as I even have friends who certainly don't fit that bill, but when you have an especially abrasive attitude like that within a community, it only takes a minority to sour the majority.<p>And while it certainly isn't a fault of the <i>language</i>, it definitely influences it usage for some people.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682562 href="vote?for=682562&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682562></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=peskytruth">peskytruth</a> 1824 days ago  | <a href="item?id=682562">link</a></span></div><br>
<span class="comment"><font color=#000000>Umm....and have you <i>ever</i> spent anytime time in #python? Some are helpful, but there are a choice few who I would describe as arrogant children.<p>In any community of size, you get good seeds and bad seeds. Python is not immune to this.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683939 href="vote?for=683939&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683939></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=pwang">pwang</a> 1824 days ago  | <a href="item?id=683939">link</a></span></div><br>
<span class="comment"><font color=#000000>Actually, for a while I was spending quite a bit of time in #python.  I didn't come across "arrogant children".<p>Looking at some of the drama and prima donna action in the Rails community (from a distance) just made me sad and grateful that my corner of Python (scientific computing) doesn't have those sorts of issues.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682504 href="vote?for=682504&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682504></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=delano">delano</a> 1825 days ago  | <a href="item?id=682504">link</a></span></div><br>
<span class="comment"><font color=#000000><i>... it only takes a minority to sour the majority.</i><p>That's a decision you make for yourself, not an absolute truth.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_682655 href="vote?for=682655&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682655></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=tdavis">tdavis</a> 1824 days ago  | <a href="item?id=682655">link</a></span></div><br>
<span class="comment"><font color=#000000>I thought I was rather clear on the fact that I wasn't speaking in absolute truths. My answers reflect my personal opinion of why I (and others like me, in some cases) choose Python over Ruby.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682605 href="vote?for=682605&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682605></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=rbanffy">rbanffy</a> 1824 days ago  | <a href="item?id=682605">link</a></span></div><br>
<span class="comment"><font color=#000000>Well.. Zed Shaw is raving about Python these days.<p>And yes, a lot of us pythonistas view him with suspicion.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682351 href="vote?for=682351&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682351></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=gaius">gaius</a> 1825 days ago  | <a href="item?id=682351">link</a></span></div><br>
<span class="comment"><font color=#000000>Check out the Ruby blog scene. It's a wonder they actually write any code in between the bragging about how awesome they are and slagging each other off.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682359 href="vote?for=682359&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682359></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=knowtheory">knowtheory</a> 1825 days ago  | <a href="item?id=682359">link</a></span></div><br>
<span class="comment"><font color=#000000>So you're going to judge the entire Ruby community by like...  5% of their bloggers? :P</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_682370 href="vote?for=682370&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682370></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=wildjim">wildjim</a> 1825 days ago  | <a href="item?id=682370">link</a></span></div><br>
<span class="comment"><font color=#000000>To be fair, "Pythonista's" were renowned for slagging-off most other languages, and in the same breath, claiming how very like LISP their Python is.  Hopefully this attitude has died off...<p>Ruby developers (Rubyons?) were renowned for typical Japanese self-effacement when it was becoming popular, which I think was some of the appeal...  I guess what goes around comes around...</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683201 href="vote?for=683201&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683201></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jamesbritt">jamesbritt</a> 1824 days ago  | <a href="item?id=683201">link</a></span></div><br>
<span class="comment"><font color=#000000>Hey, now we can judge the entire Python community by tdavis's comments.<p>:)</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_683560 href="vote?for=683560&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683560></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=tdavis">tdavis</a> 1824 days ago  | <a href="item?id=683560">link</a></span></div><br>
<span class="comment"><font color=#000000><i>shrug</i> You certainly could! Though judging any group of people by my comments would certainly do a disservice to that group.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_683191 href="vote?for=683191&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683191></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jamesbritt">jamesbritt</a> 1824 days ago  | <a href="item?id=683191">link</a></span></div><br>
<span class="comment"><font color=#000000>"Python is far more mature"<p>How so?  It's mot like Python is 10 or 20 years older, so how do you determine the "far more" part?<p>And of what value would this difference in maturity be?  COBOL is "far more" mature than Python.  Is that a big win for COBOL?<p>Once a language reaches some reasonable age and general wide-spread usage, points about maturity seem silly.<p>(On reflection, I suspect  you're just trolling.)</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683947 href="vote?for=683947&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683947></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=pwang">pwang</a> 1824 days ago  | <a href="item?id=683947">link</a></span></div><br>
<span class="comment"><font color=#000000>Speaking as a commercial Python developer, I can honestly say that there is a tremendous amount of interest in and usage of Python across a wide spectrum of commercial and enterprise applications.  This is everything from realtime high-frequency trading to oil exploration to mixing toothpaste to processing Hubble images to manufacturing SATA and PCIe driver chips.  The very active, very professional community around the language, combined with the ease of integration with legacy codebases in FORTRAN, C, and C++ makes it very popular in the commercial sector.  Consequently, there are numerous institutions and companies that have developers spending time on improving the langauge and its underlying libraries.  Guido is a sharp guy and is sensitive to all the places where Python is used, and he takes these into consideration when approving or disallowing language changes.  This understanding and the overall process makes the language "mature".<p>On the flip side, I am not aware of any significant impact of Ruby in commercial development that is not web-driven.  When we bid on projects and talk to prospective customers, we're typically making a case against Java and C++.  I can't recall a single instance where someone seriously asked us about Ruby.  (We've had more inquiries about KDB and K, that abomination of a language.)<p>So, just my $.02 as a scientific software developer.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683918 href="vote?for=683918&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683918></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jjs">jjs</a> 1824 days ago  | <a href="item?id=683918">link</a></span></div><br>
<span class="comment"><font color=#000000>In programming languages, like people, maturity is a function of more than just chronological age.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682258 href="vote?for=682258&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682258></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=Bjoern">Bjoern</a> 1825 days ago  | <a href="item?id=682258">link</a></span></div><br>
<span class="comment"><font color=#000000>"..strange ad-hoc combination.."<p>For instance?</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682190 href="vote?for=682190&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682190></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=bdr">bdr</a> 1825 days ago  | <a href="item?id=682190">link</a></span></div><br>
<span class="comment"><font color=#000000>I prefer the design of Python over Ruby. I'd be hard pressed to explain why -- something vague about Python being straightforward yet graceful -- but that aesthetic preference is enough to sway me.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682395 href="vote?for=682395&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682395></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=benhoyt">benhoyt</a> 1825 days ago  | <a href="item?id=682395">link</a></span></div><br>
<span class="comment"><font color=#000000>Me too, but I don't think it's <i>just</i> a preference. I come from a C/C++ background (I'd say the majority of people do, or C# or Java), and Python looks much more familiar and obvious to me than Ruby.<p>For example, this from Wikipedia:<p><pre><code>  (3..6).each {|num| puts num }
</code></pre>
Has some funny brackets and pipes. In Python, it's much more familiar to C-ish folks like me:<p><pre><code>  for i in range(3, 7):
      print i</code></pre></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682414 href="vote?for=682414&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682414></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=nor-and-or-not">nor-and-or-not</a> 1825 days ago  | <a href="item?id=682414">link</a></span></div><br>
<span class="comment"><font color=#000000>Ruby's syntax is flexible:<p><pre><code>  for i in 3..6 do
    puts i
  end</code></pre></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682464 href="vote?for=682464&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682464></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=johnbender">johnbender</a> 1825 days ago  | <a href="item?id=682464">link</a></span></div><br>
<span class="comment"><font color=#000000>Very flexible. Once you learn what the sytnax means the implementation of blocks and iterators is one of the best parts of the language.<p><pre><code>    3.upto(6){ |x| puts x }
</code></pre>
I don't think the uniqueness of a language is any reason not to learn it. To be honest that sounds lazy.<p>PS I'm not a Ruby zealot, and Python is a great language</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_682547 href="vote?for=682547&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682547></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=bretthoerner">bretthoerner</a> 1824 days ago  | <a href="item?id=682547">link</a></span></div><br>
<span class="comment"><font color=#000000>So I just saw 3 ways to print from 3 to 6... are those all used in the wild?<p>Zen of Python: "There should be one-- and preferably only one --obvious way to do it."<p>Sure, there are other ways to do it in Python, but it'd be frowned upon to use something like 3.upto(6) rather than a standard range() that everyone is used to.  Readability matters.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_682611 href="vote?for=682611&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682611></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=carbon8">carbon8</a> 1824 days ago  | <a href="item?id=682611">link</a></span></div><br>
<span class="comment"><font color=#000000>I'd argue 3.upto(6) is much more readable and obvious than range(3, 7). Even just on a conceptual level, Python requires a degree of translation and its stop argument is not intuitive whereas even someone who has never programmed before can understand the Ruby.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=240></td><td valign=top><center><a id=up_682839 href="vote?for=682839&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682839></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=req2">req2</a> 1824 days ago  | <a href="item?id=682839">link</a></span></div><br>
<span class="comment"><font color=#000000><a href="http://www.cs.utexas.edu/~EWD/transcriptions/EWD08xx/EWD831.html" rel="nofollow">http://www.cs.utexas.edu/~EWD/transcriptions/EWD08xx/EWD831....</a></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_682854 href="vote?for=682854&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682854></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=skawaii">skawaii</a> 1824 days ago  | <a href="item?id=682854">link</a></span></div><br>
<span class="comment"><font color=#000000>While I agree that readability matters _a lot_, the "Zen of Python" honestly bugs me. But maybe it's just the counter-culture ethos that dwells inside me. +)<p>Note: I used Python daily at work and for open source projects. I also use Ruby for open source projects. I like them both.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_683459 href="vote?for=683459&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683459></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=johnbender">johnbender</a> 1824 days ago  | <a href="item?id=683459">link</a></span></div><br>
<span class="comment"><font color=#000000>I'm sorry, did you say there's only one way to deal with each integer in a set of numbers? Admittedly I don't know very much about python, but it seems that at the very least you could do this recursively.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=240></td><td valign=top><center><a id=up_684527 href="vote?for=684527&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_684527></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=gaius">gaius</a> 1823 days ago  | <a href="item?id=684527">link</a></span></div><br>
<span class="comment"><font color=#000000>Neither Python nor Ruby AFAIK have tail-call optimization.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=200></td><td valign=top><center><a id=up_683008 href="vote?for=683008&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683008></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=JoelPM">JoelPM</a> 1824 days ago  | <a href="item?id=683008">link</a></span></div><br>
<span class="comment"><font color=#000000>I like the Zen of Python myself, but the first thought that crossed my mind was that the Python example could use xrange and save the generation of a temporary list. So there are at least two ways of doing it in Python, both of which look very similar and differ only in the underlying implementation.<p>This makes me curious how much more frequently range is used than xrange and in what situations it's preferable.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=240></td><td valign=top><center><a id=up_683921 href="vote?for=683921&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683921></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=pwang">pwang</a> 1824 days ago  | <a href="item?id=683921">link</a></span></div><br>
<span class="comment"><font color=#000000>This is an acknowledge minor "wart".  In Python 3.0, range() does the same thing as xrange().</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683387 href="vote?for=683387&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683387></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=benhoyt">benhoyt</a> 1824 days ago  | <a href="item?id=683387">link</a></span></div><br>
<span class="comment"><font color=#000000>You're right, that's pretty C/Python-like. Nice. In fact, I've often thought that Python could make the syntax "n..m" expand to "range(n, m+1)" or equivalent.<p>However, Python's TOOWTDI comes to mind. Not that it's quite true, but probably closer than with Ruby. I guess one could debate whether TOOWTDI is a good thing -- but I reckon Perl is <i>the</i> argument as to why it is a good thing.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682149 href="vote?for=682149&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682149></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=yan">yan</a> 1825 days ago  | <a href="item?id=682149">link</a></span></div><br>
<span class="comment"><font color=#000000>For me personally, it boils down to me liking the library more, the syntax more and the common programming styles. Ruby is very hard to follow me due to the (imho) overuse of meta-programming and using language constructs that obscure the actual meaning of the program. Patching objects and being overly clever with language features makes ruby code harder to read.<p>It's also, to me personally, a lot faster to whip something up in Python than in Ruby, even when I knew them at about the same level.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682159 href="vote?for=682159&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682159></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=xenophanes">xenophanes</a> 1825 days ago  | <a href="item?id=682159">link</a></span></div><br>
<span class="comment"><font color=#000000>I find ruby more intuitive. I learned python first but switched over (not due to rails, just enjoyed ruby more). It sounds like you are complaining about the meta programming in the Rails code more than any intrinsic feature of ruby the language.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682254 href="vote?for=682254&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682254></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=Bjoern">Bjoern</a> 1825 days ago  | <a href="item?id=682254">link</a></span></div><br>
<span class="comment"><font color=#000000>Why language X is better of Y makes no sense. Every language has its benefits and downsides. Python has been slighly longer around and has a bigger user community which resulted in more available library code. Ruby and Python is pretty much interchangable  in the sense of features as they often steal from each other and vice versa.<p>Ruby<p>- follows TIMTOWTDI<p>- Mutable strings etc.<p>- has a greater emphasis on code generation ("meta")<p>- VM's are much slower than Python (there is no Psycho etc.)<p>- emphasizes code clearity and readabiliy (human cycles are 
more important)<p>- Libraries are much less mature<p>- ...<p>The lists of differences could go on forever. A comparsion and "why" is difficult. I think they are too similar and the people are too polarized.<p>A language is a tool to solve a particular problem. In the case of Python you have higher momentum of the community and the switch from C/C++/Java to Python is often easier than to Ruby. (Wild statement of me with tests from a sample set of 2 test subjects ;) )<p>Probably the best characterization I can come up with is.
Python is already on this "Enterprise" trip where companies use it a lot and so forth. Ruby has some interesting companies pushing it (Twitter etc.) but is not compeletely there yet, it still has more "hacker" and "monkeypatch" feeling. Oh wait, we call that "ninjapatching" in Ruby ;)</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682361 href="vote?for=682361&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682361></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=knowtheory">knowtheory</a> 1825 days ago  | <a href="item?id=682361">link</a></span></div><br>
<span class="comment"><font color=#000000>Speed comparisons between Ruby and Python are kind of silly.  Ruby 1.9 and JRuby are (if you look at <a href="http://shootout.alioth.debian.org/u32/benchmark.php?test=all&#38;lang=yarv&#38;lang2=python&#38;box=1" rel="nofollow">http://shootout.alioth.debian.org/u32/benchmark.php?test=all...</a> ) comparably fast to Python, and obviously measure up slightly better against Python3.<p>Python is not a radically better choice in terms of speed (and hell that's true even w/ 1.8.  Sure Python's faster, but we're not talking orders of magnitude here).</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682302 href="vote?for=682302&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682302></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=nailer">nailer</a> 1825 days ago  | <a href="item?id=682302">link</a></span></div><br>
<span class="comment"><font color=#000000>Code is read more than it's written - TIMTOWTDI is a double edged sword.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682379 href="vote?for=682379&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682379></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=deno">deno</a> 1825 days ago  | <a href="item?id=682379">link</a></span></div><br>
<span class="comment"><font color=#9c9c9c>Also Twitter is lately moving to Scala because of Ruby's annoyances.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682142 href="vote?for=682142&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682142></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=ghshephard">ghshephard</a> 1825 days ago  | <a href="item?id=682142">link</a></span></div><br>
<span class="comment"><font color=#000000>Speaking purely for myself, the only reason I switched from Perl to Python is I had a great deal of difficulty understanding the perl code (because I'm a poor perl scripter) I wrote after a day or so.  That, and the language construct HashOfArrays and ArrayOfHashes is exceedingly difficult to do in perl without referencing a manual.  The only (Edit: Alternative scripting) language really out there with mindshare in 2001 was Python.  I was able to read my python code.   I never had to look at a manual to implement complex data structures.  As a bonus, I can type "help(command) or dir(command) within the python CLI.  I've never really had the need to switch to another environment.  Ruby might actually be 10x better and faster for my typical tasks than python for all I know.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=0></td><td valign=top><center><a id=up_682268 href="vote?for=682268&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682268></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=CyberFonic">CyberFonic</a> 1825 days ago  | <a href="item?id=682268">link</a></span></div><br>
<span class="comment"><font color=#000000>For me it's very simple !<p>I can READ other people's Python code with greater ease than Ruby, Java, C#, C++ or even C.  At the end of the day, the quicker I can assimilate library code the quicker I can use it well and the quicker the module gets completed and fully tested.  Of course, with Google and Eric Raymond raving about it, the confidence factor increased further.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=40></td><td valign=top><center><a id=up_682348 href="vote?for=682348&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682348></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=gaius">gaius</a> 1825 days ago  | <a href="item?id=682348">link</a></span></div><br>
<span class="comment"><font color=#000000>This is a cultural issue. In the Ruby (or Perl) community, if you use obscure language features to do a common task in a single line of code, you will be worshipped as a god. In the Python (or Tcl) community, you will be viewed with suspicion. Not that Python doesn't have one-liners (e.g. comprehensions) - just that everyone agrees which ones and when and how to use them.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_682357 href="vote?for=682357&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682357></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=knowtheory">knowtheory</a> 1825 days ago  | <a href="item?id=682357">link</a></span></div><br>
<span class="comment"><font color=#000000>I've been working in Ruby for 3 years now, and i can promise you that unclear code is very much not appreciated by not only the people i work with, but all of the open source projects i'm involved with.<p>It is true that Ruby gives you a lot of rope.  People with good design sense appreciate that your code should not be too clever.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_682431 href="vote?for=682431&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_682431></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=swombat">swombat</a> 1825 days ago  | <a href="item?id=682431">link</a></span></div><br>
<span class="comment"><font color=#000000>Agreed. The ultimate goal is clarity. Everything else is subservient to it.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683031 href="vote?for=683031&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683031></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=jamesbritt">jamesbritt</a> 1824 days ago  | <a href="item?id=683031">link</a></span></div><br>
<span class="comment"><font color=#000000>"This is a cultural issue. In the Ruby (or Perl) community, if you use obscure language features to do a common task in a single line of code, you will be worshipped as a god."<p>Just which Ruby community is this?  None that I associate with, that's for sure.<p>To the people who voted the OP up; is it because of your own first-hand experience with other Rubyists?  For all I know there <i>are</i> clusters of Ruby coders who encourage obscurantism, but I've not encountered them (though I've been part of debates over just what constitutes "obscure").</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=120></td><td valign=top><center><a id=up_683977 href="vote?for=683977&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683977></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=gaius">gaius</a> 1824 days ago  | <a href="item?id=683977">link</a></span></div><br>
<span class="comment"><font color=#5a5a5a>In Perl you have "wizards" and in Ruby you have "rockstar ninjas"... No other language communities do this.</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=160></td><td valign=top><center><a id=up_683994 href="vote?for=683994&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683994></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=carbon8">carbon8</a> 1824 days ago  | <a href="item?id=683994">link</a></span></div><br>
<span class="comment"><font color=#000000>Except for python, of course:<p><a href="http://www.google.com/search?q=python+ninja" rel="nofollow">http://www.google.com/search?q=python+ninja</a><p><a href="http://www.google.com/search?q=python+rockstar" rel="nofollow">http://www.google.com/search?q=python+rockstar</a></font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_683254 href="vote?for=683254&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_683254></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=whiskeyjack">whiskeyjack</a> 1824 days ago  | <a href="item?id=683254">link</a></span></div><br>
<span class="comment"><font color=#000000>You'll get that in a Perl Golf competition but the trend these days it towards much more readable and maintainable code. Which is why we have things like Moose (a better way to do objects).</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr><td><table border=0><tr><td><img src="s.gif" height=1 width=80></td><td valign=top><center><a id=up_688024 href="vote?for=688024&amp;dir=up&amp;whence=%69%74%65%6d%3f%69%64%3d%36%38%32%31%30%31"><div class="votearrow" title="upvote"></div></a><span id=down_688024></span></center></td><td class="default"><div style="margin-top:2px; margin-bottom:-10px; "><span class="comhead"><a href="user?id=Paddy3118">Paddy3118</a> 1821 days ago  | <a href="item?id=688024">link</a></span></div><br>
<span class="comment"><font color=#000000>Here are some stats from google on the relative use of obfuscation for perl, python and ruby:<p>&#60;pre&#62;
                                                      Weighted use of 
Search Term         Hits Search Term          Hits    obfuscation<p>"obfuscated perl"   1390 "perl programming"   164000  0.85%
"obfuscated python" 234  "python programming" 157000  0.15%
"obfuscated ruby"   269  "ruby programming"   133000  0.20%
&#60;/pre&#62;<p>If I use the word golf, I get:
&#60;pre&#62;
                                                 Weighted use of 
Search Term   Hits  Search Term          Hits    golf<p>"perl golf"   1780  "perl programming"   164000  1.09%
"python golf" 171   "python programming" 157000  0.11%
"ruby golf"   547   "ruby programming"   133000  0.41%
&#60;/pre&#62;<p>This is of ccourse, the same statistics that fueled the last financial meltdown :-)</font></span><p><font size=1><font color=#f6f6ef>-----</font></font></td></tr></table></td></tr><tr style="height:10px"></tr><tr><td class="title"><a href="/x?fnid=i1P9nRKNNhW0EyaYMmTeBj" rel="nofollow">More</a></td></tr></table><br><br>
</td></tr><tr><td><img src="s.gif" height=10 width=0><table width="100%" cellspacing=0 cellpadding=1><tr><td bgcolor=#ff6600></td></tr></table><br>
<center><span class="yclinks"><a href="lists">Lists</a> | <a href="rss">RSS</a> | <a href="http://ycombinator.com/bookmarklet.html">Bookmarklet</a> | <a href="http://ycombinator.com/newsguidelines.html">Guidelines</a> | <a href="http://ycombinator.com/newsfaq.html">FAQ</a> | <a href="dmca.html">DMCA</a> | <a href="http://ycombinator.com/newsnews.html">News News</a> | <a href="item?id=363">Feature Requests</a> | <a href="https://github.com/HackerNews/HN/issues">Bugs</a> | <a href="http://ycombinator.com">Y Combinator</a> | <a href="http://ycombinator.com/apply.html">Apply</a> | <a href="http://ycombinator.com/lib.html">Library</a></span><br><br>
<form method=get action="//hn.algolia.com/">Search: <input type=text name="q" value="" size=17></form><br>
</center></td></tr></table></center></body></html>