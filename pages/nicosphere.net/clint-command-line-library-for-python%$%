<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <title>Clint, Command Line Library for Python</title>
  <meta name="author" content="Nicolas Paris" />
  <link rel="alternate" type="application/rss+xml" href="http://www.nicosphere.net/feed/" />
  <link rel="stylesheet" href="/css/styles.min.css" type="text/css" media="screen, projection" />
  <script type="text/javascript">var _gaq=_gaq||[];_gaq.push(['_setAccount','UA-10115036-1']);_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src=('https:'==document.location.protocol?'https://ssl':'http://www')+'.google-analytics.com/ga.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})();</script>
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
  <script type="text/javascript">
    $(document).ready(function() {
      
    });
  </script>
</head>
<body>

<div id="header">
  <ul id="title">
    <li id="title"><a href="http://www.nicosphere.net" title="Linux Blog">Nic0's Sphere</a></li>
    <li id="slogan"><a href="/">Linux and Programming Blog</a></li>
  </ul>
  <div id="social">
    <a href="http://twitter.com/nic0sphere"  rel="nofollow" title="Follow sur twitter"><img src="/images/twitter.png" width="24" height="24" alt="twitter"></a>
    <a href="https://github.com/Nic0" rel="nofollow" title="Github"><img src="/images/github.png" width="24" height="24" alt="github"></a>
    <a href="http://www.nicosphere.net/feed" rel="nofollow" title="Flux RSS"><img src="/images/rss.png" width="24" height="24" alt="RSS"></a>
    <a href="https://plus.google.com/118358247588796366003/posts"
        rel="nofollow" title="google plus"><img src="/images/google.png" width="24" height="24" alt="google+"></a>
</div>
  <div id="nav">
    <ul>
    </ul>
  </div>
</div>


<div class="content">
  <div id="post">
    <h1>
  <a href="/clint-command-line-library-for-python/">Clint, Command Line Library for Python</a>
</h1>
<div class="authoring">
  January  5, 2012
</div>

    <p>This library is the kind I like, the kind which make your life easier,
perfect for someone like me, who uses Python all the time. So, what can
<a href="https://github.com/kennethreitz/clint">Clint</a> do for you? Well, there are a bunch of tools that might come handy when
you do some command line based programming, especially quick scripts. If you use
Python as your primary langage, CLI stuff is always useful.</p>

<h3>Colors</h3>

<p>Having some colored output can be nice, but I don&rsquo;t want to use some ncurses
interface to have a nice display. A common request is for text color to be
green for an expected result, and red otherwise. The highest ranked answer from
<a href="http://stackoverflow.com/questions/287871/print-in-terminal-with-colors-using-python">this stackoverflow&rsquo;s question</a> gives some<code>'\033[93m'</code>, which it does the
works, but isn&rsquo;t lovely, or even <em>pythonic</em>.</p>

<p>Let&rsquo;s see the simplest example possible:</p>

<div class="highlight"><pre><code class="python"><span class="kn">from</span> <span class="nn">clint.textui</span> <span class="kn">import</span> <span class="n">colored</span>

<span class="k">print</span> <span class="n">colored</span><span class="o">.</span><span class="n">red</span><span class="p">(</span><span class="s">&#39;some warning message&#39;</span><span class="p">)</span>
<span class="k">print</span> <span class="n">colored</span><span class="o">.</span><span class="n">green</span><span class="p">(</span><span class="s">&#39;nicely done!&#39;</span><span class="p">)</span>
</code></pre></div>


<p>How intuitive was that! At least, I don&rsquo;t need to check on the documentation
every time I want a red message!</p>

<p>If you only need one word in different color, it&rsquo;s as simple as a
concatenation, here&rsquo;s a quick example:</p>

<div class="highlight"><pre><code class="python"><span class="kn">from</span> <span class="nn">clint.textui</span> <span class="kn">import</span> <span class="n">colored</span>

<span class="k">print</span> <span class="s">&#39;I love &#39;</span> <span class="o">+</span> <span class="n">colored</span><span class="o">.</span><span class="n">yellow</span><span class="p">(</span><span class="s">&#39;pyt&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="n">colored</span><span class="o">.</span><span class="n">blue</span><span class="p">(</span><span class="s">&#39;hon&#39;</span><span class="p">)</span>
</code></pre></div>


<h3>Indentation</h3>

<p>One of the main feature of Clint, is to handle nicely indentations. It even
managed nested indentation, a <em>quote</em> system, allow you to set some prefix
chars, like quotes in emails for example. Here a quick example:</p>

<div class="highlight"><pre><code class="python"><span class="kn">from</span> <span class="nn">clint.textui</span> <span class="kn">import</span> <span class="n">colored</span><span class="p">,</span> <span class="n">indent</span><span class="p">,</span> <span class="n">puts</span>

<span class="k">with</span> <span class="n">indent</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">quote</span><span class="o">=</span><span class="n">colored</span><span class="o">.</span><span class="n">red</span><span class="p">(</span><span class="s">&#39; &gt;&#39;</span><span class="p">)):</span>
    <span class="n">puts</span> <span class="p">(</span><span class="s">&#39;some random text&#39;</span><span class="p">)</span>
    <span class="n">puts</span> <span class="p">(</span><span class="s">&#39;another text&#39;</span><span class="p">)</span>
    <span class="k">with</span> <span class="n">indent</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="n">quote</span><span class="o">=</span><span class="n">colored</span><span class="o">.</span><span class="n">green</span><span class="p">(</span><span class="s">&#39; |&#39;</span><span class="p">)):</span>
        <span class="n">puts</span><span class="p">(</span><span class="s">&#39;some more nested identation&#39;</span><span class="p">)</span>
        <span class="n">puts</span><span class="p">(</span><span class="s">&#39;cool isn</span><span class="se">\&#39;</span><span class="s">t?&#39;</span><span class="p">)</span>
</code></pre></div>


<p>Once executed, the output gives:</p>

<pre><code>&gt; some random text
&gt; another text
&gt;  | some more nested identation
&gt;  | cool isn't?
</code></pre>

<p>Looks good without breaking a sweat!</p>

<h3>Arguments</h3>

<p>There are ways to handle arguments, like the module <code>argparse</code>, or
even <code>sys.args</code>. However, Clint wants to be as simple and useful as
possible. It allows you to make distinction between the arguments passed:</p>

<ul>
<li><code>args.all</code> a simple list of every arguments passed.</li>
<li><code>args.flags</code> list only flags, meaning with <code>--foo</code> or <code>-f</code> passed, excluding
everything else that doesn&rsquo;t contain a dash.</li>
<li><code>args.files</code> this one could be very useful, it detects files in the arguments
line, even with <code>*</code> wildcard. So for example you have in the directory
<code>foo.py</code> and <code>bar.py</code>, entering something like <code>*.py</code> will return in the
<code>args.files</code> a list with those two files.</li>
<li><code>args.not_files</code> is every thing that wasn&rsquo;t detected by the above argument.</li>
<li><code>args.grouped</code> help you to managed grouped arguments.</li>
</ul>


<p>For a redistributed program that I take time over, I would probably use
<code>argparse</code>, as it&rsquo;s more common, and gives you a nice help output. But for a quick
homemade script, that only need to take few arguments, I really think this
could be an alternative. Either way, it worth having a look at.</p>

<h3>Progress bar, files and pipes</h3>

<p>Clint comes with more tools, which are easy to use. Let&rsquo;s look at a progress bar with Clint:</p>

<div class="highlight"><pre><code class="python"><span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span>
<span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">random</span>
<span class="kn">from</span> <span class="nn">clint.textui</span> <span class="kn">import</span> <span class="n">progress</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">progress</span><span class="o">.</span><span class="n">bar</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">)):</span>
        <span class="n">sleep</span><span class="p">(</span><span class="n">random</span><span class="p">()</span> <span class="o">*</span> <span class="mf">0.2</span><span class="p">)</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">progress</span><span class="o">.</span><span class="n">dots</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">)):</span>
        <span class="n">sleep</span><span class="p">(</span><span class="n">random</span><span class="p">()</span> <span class="o">*</span> <span class="mf">0.2</span><span class="p">)</span>
</code></pre></div>


<pre><code>[########################        ] 75/100
</code></pre>

<p>Clint handles pipes, eg. <code>cat foo.txt | bar.py</code>, or resources like handling files IO.</p>

<h3>Documentation and Conclusion</h3>

<p>This post is not a review of every possible utility that Clint has to offer,
but more of a quick overview, and memo for myself. I really think Clint could
come in handy from time to time. Unfortunately, there is a lack of documentation, not
much more than the <a href="https://github.com/kennethreitz/clint/tree/develop/examples">README</a> from the github repository, as the <code>/doc/</code>
directory doesn&rsquo;t contain much. The best place to start is to directly check
<a href="https://github.com/kennethreitz/clint/tree/develop/examples">example</a> codes provides with the library.</p>

<p>Another thing that could bother you is, so far, Clint only works with python
2.x.  Python 3 compatibility is include in the todo list, as is
documentations.<br/>
<strong>Edit about Python3</strong>: Not true anymore, thanks to Kenneth
Reitz, whose done a release today with Python3 support!</p>

<p>I hope you enjoyed this quick review of <a href="https://github.com/kennethreitz/clint">Clint</a>. Anyway, it&rsquo;s in my toolbox now.</p>

  </div>


  <!--
  <div class="fb-like" data-send="false" data-layout="button_count" data-width="40" data-show-faces="true"></div>
  <g:plusone size="medium"></g:plusone>
  -->
  <a href="https://twitter.com/share" class="twitter-share-button" data-via="nic0sphere">Tweet</a>
  <div id="related-post">
    <h3>Related-ish Posts</h3>
    <ul>
      
        <li><a href="/about-firemonkey-styles-for-android/">About FireMonkey Styles for Android</a></li>
      
        <li><a href="/jekyll-is-nice-but-missing-my-wordpress/">Jekyll is nice, but I sometime miss my old Wordpress</a></li>
      
        <li><a href="/code-snippet-for-delphi/">Code Snippets For Delphi</a></li>
      
        <li><a href="/whats-next-here-php-delphi-and-more/">What's Next Here? PHP, Delphi and More...</a></li>
      
    </ul>
  </div>

  <div class="whoring">
    <h3>About</h3>
    <div class="copy">
      <a href="https://twitter.com/Nic0sphere"><img src="/images/avatar.jpg" height="50" width="50" /></a>

      <p>
        <div itemscope itemtype="http://data-vocabulary.org/Person"> 
            I'm <span itemprop="name">Nicolas Paris</span>, aka <span
                itemprop="nickname">Nic0</span>, I like to share about
            programming and Linux tricks. Follow me <a
                href="https://twitter.com/Nic0sphere">on Twitter</a>, where the
            content is pretty much like here, mainly programming stuff. Or
            visite my website<a href="http://www.nicosphere.net"
                itemprop="url"> about Linux and programming.</a>
    </div>
        </p>

      


    </div>
  </div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'nicosphere'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
</div>


<footer>
  <ul>
    <li>&copy; 2009-2013 Nic0&#039;s Sphere. Some Rights Reserved, Licence CC-By.
    </li>
    <li><a href="http://www.nicosphere.net" title="Linux">Linux</a>
  </ul>
  
    <script type="text/javascript" src="/javascript/socials.js"></script>
  
</footer>

</body>
</html>
