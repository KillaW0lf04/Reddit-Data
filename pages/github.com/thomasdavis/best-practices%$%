




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>thomasdavis/best-practices Â· GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="thomasdavis/best-practices" name="twitter:title" /><meta content="best-practices - This is a fork of timoxley - Tidbits of best practices information from around the web" name="twitter:description" /><meta content="https://avatars0.githubusercontent.com/u/416209?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars0.githubusercontent.com/u/416209?s=400" property="og:image" /><meta content="thomasdavis/best-practices" property="og:title" /><meta content="https://github.com/thomasdavis/best-practices" property="og:url" /><meta content="best-practices - This is a fork of timoxley - Tidbits of best practices information from around the web" property="og:description" />

    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    

    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="1FDCC856:24BF:2B3FA3E:53B32164" name="octolytics-dimension-request_id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico" />


    <meta content="authenticity_token" name="csrf-param" />
<meta content="J4RfwRKneFTiivYYiJiSI1JY1pKLJCFKCz4NZI85Zb4o1z8ik8ugTx9RiT1Sf0wsWtNpSESYTOFwIHoA1yErqA==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-f239997d7009d1e4377f373da23a05a9d696dbaa.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-bb63b855e5e18db898c33c27a431a6f17937a7cf.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="587390d8d846251b3c2d347cc83d0af5">

      
  <meta name="description" content="best-practices - This is a fork of timoxley - Tidbits of best practices information from around the web" />


  <meta content="416209" name="octolytics-dimension-user_id" /><meta content="thomasdavis" name="octolytics-dimension-user_login" /><meta content="4689178" name="octolytics-dimension-repository_id" /><meta content="thomasdavis/best-practices" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="true" name="octolytics-dimension-repository_is_fork" /><meta content="3038538" name="octolytics-dimension-repository_parent_id" /><meta content="timoxley/best-practices" name="octolytics-dimension-repository_parent_nwo" /><meta content="3038538" name="octolytics-dimension-repository_network_root_id" /><meta content="timoxley/best-practices" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/thomasdavis/best-practices/commits/master.atom" rel="alternate" title="Recent Commits to best-practices:master" type="application/atom+xml" />

  </head>


  <body class="logged_out  env-production  vis-public fork">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/join">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Fthomasdavis%2Fbest-practices">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">

      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
          <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s, /" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="thomasdavis/best-practices"
      data-branch="master"
      data-sha="cd0bbf1864ecb2b26abff1f0ab4879a3449ee2b3"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="thomasdavis/best-practices" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
      <a href="/login?return_to=%2Fthomasdavis%2Fbest-practices"
    class="minibutton with-count star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>
    Star
  </a>

    <a class="social-count js-social-count" href="/thomasdavis/best-practices/stargazers">
      1,234
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Fthomasdavis%2Fbest-practices"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-repo-forked"></span>
        Fork
      </a>
      <a href="/thomasdavis/best-practices/network" class="social-count">
        181
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/thomasdavis" class="url fn" itemprop="url" rel="author"><span itemprop="title">thomasdavis</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/thomasdavis/best-practices" class="js-current-repository js-repo-home-link">best-practices</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

            <span class="fork-flag">
              <span class="text">forked from <a href="/timoxley/best-practices">timoxley/best-practices</a></span>
            </span>
        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline with-full-navigation ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/thomasdavis/best-practices" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /thomasdavis/best-practices">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/thomasdavis/best-practices/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /thomasdavis/best-practices/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/thomasdavis/best-practices/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /thomasdavis/best-practices/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/thomasdavis/best-practices/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /thomasdavis/best-practices/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/thomasdavis/best-practices/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /thomasdavis/best-practices/network">
          <span class="octicon octicon-repo-forked"></span> <span class="full-word">Network</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/thomasdavis/best-practices.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/thomasdavis/best-practices.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/thomasdavis/best-practices" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/thomasdavis/best-practices" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>



                <a href="/thomasdavis/best-practices/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download thomasdavis/best-practices as a zip file"
                   title="Download thomasdavis/best-practices as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<span id="js-show-full-navigation"></span>

<div class="repository-meta js-details-container ">
    <div class="repository-description js-details-show">
      <p>This is a fork of timoxley - Tidbits of best practices information from around the web</p>
    </div>

    <div class="repository-website js-details-show">
      <p><a href="https://github.com/timoxley/best-practices" rel="nofollow">https://github.com/timoxley/best-practices</a></p>
    </div>


</div>

<div class="capped-box overall-summary without-lang-stats">

  <div class="stats-switcher-viewport js-stats-switcher-viewport">
    <div class="stats-switcher-wrapper">
    <ul class="numbers-summary">
      <li class="commits">
        <a data-pjax href="/thomasdavis/best-practices/commits/master">
            <span class="num">
              <span class="octicon octicon-history"></span>
              55
            </span>
            commits
        </a>
      </li>
      <li>
        <a data-pjax href="/thomasdavis/best-practices/branches">
          <span class="num">
            <span class="octicon octicon-git-branch"></span>
            1
          </span>
          branch
        </a>
      </li>

      <li>
        <a data-pjax href="/thomasdavis/best-practices/releases">
          <span class="num">
            <span class="octicon octicon-tag"></span>
            0
          </span>
          releases
        </a>
      </li>

      <li>
        
  <a href="/thomasdavis/best-practices/graphs/contributors">
    <span class="num">
      <span class="octicon octicon-organization"></span>
      12
    </span>
    contributors
  </a>
      </li>
    </ul>

    </div>
  </div>

</div>




<div class="file-navigation in-mid-page">
  <a href="/thomasdavis/best-practices/find/master"
        class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s right"
        data-pjax
        data-hotkey="t"
        aria-label="Quickly jump between files">
    <span class="octicon octicon-list-unordered"></span>
  </a>
    <a href="/thomasdavis/best-practices/compare" aria-label="Compare, review, create a pull request" class="minibutton compact primary tooltipped tooltipped-s" aria-label="Compare &amp; review" data-pjax>
      <span class="octicon octicon-git-compare"></span>
    </a>

  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/thomasdavis/best-practices/tree/master"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->



  <div class="breadcrumb"><span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/thomasdavis/best-practices" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">best-practices</span></a></span></span><span class="separator"> / </span><form action="/login?return_to=%2Fthomasdavis%2Fbest-practices" aria-label="Sign in to make or propose changes" class="js-new-blob-form tooltipped tooltipped-e new-file-link" method="post"><span aria-label="Sign in to make or propose changes" class="js-new-blob-submit octicon octicon-plus" data-test-id="create-new-git-file" role="button"></span></form></div>
</div>



    <div class="branch-infobar clearfix">
      <p>
          This branch is
          0 commits ahead and
          0 commits behind master
      </p>

      <ul class="lightweight-actions">
        <li>
            <a href="/thomasdavis/best-practices/pull/new/master">
              <span class="octicon octicon-git-pull-request"></span>
              Pull Request
            </a>
        </li>
        <!--
        <li>
          <a href="#">
            <span class="octicon octicon-comment-discussion"></span>
            Branch discussion
          </a>
        </li>
        -->
        <li>
          <a href="/thomasdavis/best-practices/compare">
            <span class="octicon octicon-diff"></span>
            Compare
          </a>
        </li>
      </ul>

    </div>

  
  <div class="commit commit-tease js-details-container" >
    <p class="commit-title ">
        <a href="/thomasdavis/best-practices/commit/3149bd4167ad746d6c0dbaa011a52c164d8fb8bf" class="message" data-pjax="true" title="Merge pull request #7 from spruce/patch-1

Update README.md">Merge pull request</a> <a href="https://github.com/thomasdavis/best-practices/pull/7" class="issue-link" title="Update README.md">#7</a> <a href="/thomasdavis/best-practices/commit/3149bd4167ad746d6c0dbaa011a52c164d8fb8bf" class="message" data-pjax="true" title="Merge pull request #7 from spruce/patch-1

Update README.md">from spruce/patch-1</a>
        <span class="hidden-text-expander inline"><a href="#" class="js-details-target">â¦</a></span>
    </p>
      <div class="commit-desc"><pre>Update README.md</pre></div>
    <div class="commit-meta">
      <button aria-label="Copy SHA" class="js-zeroclipboard zeroclipboard-link" data-clipboard-text="3149bd4167ad746d6c0dbaa011a52c164d8fb8bf" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
      <a href="/thomasdavis/best-practices/commit/3149bd4167ad746d6c0dbaa011a52c164d8fb8bf" class="sha-block" data-pjax>latest commit <span class="sha">3149bd4167</span></a>

      <div class="authorship">
        <img alt="Thomas Davis" class="gravatar js-avatar" data-user="416209" height="20" src="https://avatars3.githubusercontent.com/u/416209?s=140" width="20" />
        <span class="author-name"><a href="/thomasdavis" data-skip-pjax="true" rel="author">thomasdavis</a></span>
        authored <time class="updated" datetime="2013-06-27T20:22:41-07:00" is="relative-time">June 27, 2013</time>

      </div>
    </div>
  </div>

  <div class="file-wrap">
    <table class="files" data-pjax>

      
<tbody class=""
  data-url="/thomasdavis/best-practices/file-list/master"
  data-deferred-content-error="Failed to load latest commit information.">

    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="/thomasdavis/best-practices/blob/master/README.es.md" class="js-directory-link" id="793029c5b5a688c46f1b95e979e6a4d2-352d29ad369f18371c1a602d1d7dfb35a956ece4" title="README.es.md">README.es.md</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="/thomasdavis/best-practices/commit/9f69f8d8d3260fa4d1dd3fea972009931859bd96" class="message" data-pjax="true" title="Corrects the translation of the section header &quot;Don&#39;t Write Code&quot;">Corrects the translation of the section header "Don't Write Code"</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time datetime="2013-05-02T17:58:25Z" is="time-ago">May 02, 2013</time></span>
      </td>
    </tr>
    <tr>
      <td class="icon">
        <span class="octicon octicon-file-text"></span>
        <img alt="" class="spinner" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
      </td>
      <td class="content">
        <span class="css-truncate css-truncate-target"><a href="/thomasdavis/best-practices/blob/master/README.md" class="js-directory-link" id="04c6e90faac2675aa89e2176d2eec7d8-b3eb654e32a16251348e173641087b8ac09678ab" title="README.md">README.md</a></span>
      </td>
      <td class="message">
        <span class="css-truncate css-truncate-target ">
          <a href="/thomasdavis/best-practices/commit/3149bd4167ad746d6c0dbaa011a52c164d8fb8bf" class="message" data-pjax="true" title="Merge pull request #7 from spruce/patch-1

Update README.md">Merge pull request</a> <a href="https://github.com/thomasdavis/best-practices/pull/7" class="issue-link" title="Update README.md">#7</a> <a href="/thomasdavis/best-practices/commit/3149bd4167ad746d6c0dbaa011a52c164d8fb8bf" class="message" data-pjax="true" title="Merge pull request #7 from spruce/patch-1

Update README.md">from spruce/patch-1</a>
        </span>
      </td>
      <td class="age">
        <span class="css-truncate css-truncate-target"><time datetime="2013-06-28T03:22:41Z" is="time-ago">June 27, 2013</time></span>
      </td>
    </tr>
</tbody>

    </table>
  </div>


  <div id="readme" class="clearfix announce instapaper_body md">
    <span class="name">
      <span class="octicon octicon-book"></span>
      README.md
    </span>

    <article class="markdown-body entry-content" itemprop="mainContentOfPage"><h1>
<a name="user-content-programming-best-practices-tidbits" class="anchor" href="#programming-best-practices-tidbits" aria-hidden="true"><span class="octicon octicon-link"></span></a>Programming Best Practices Tidbits</h1>

<h3>
<a name="user-content-a-collection-of-quotes-and-paraphrases-for-developers-from-around-the-web" class="anchor" href="#a-collection-of-quotes-and-paraphrases-for-developers-from-around-the-web" aria-hidden="true"><span class="octicon octicon-link"></span></a>A Collection of quotes and paraphrases for developers from around the web.</h3>

<p>Use your own judgment in their application<a href="http://www.reddit.com/r/programming/comments/1bcebh/programming_best_practices/c95y6la">.</a></p>

<hr><h2>
<a name="user-content-unix-philosophy" class="anchor" href="#unix-philosophy" aria-hidden="true"><span class="octicon octicon-link"></span></a>Unix philosophy</h2>

<ul class="task-list">
<li>Make each program do one thing well. To do a new job, build afresh rather than complicate old programs by adding new features.</li>
<li>Expect the output of every program to become the input to another, as yet unknown, program. Donât clutter output with extraneous information. Avoid stringently columnar or binary input formats. Donât insist on interactive input.</li>
<li>Design and build software, even operating systems, to be tried early, ideally within weeks. Donât hesitate to throw away the clumsy parts and rebuild them.</li>
<li>Use tools in preference to unskilled help to lighten a programming task, even if you have to detour to build the tools and expect to throw some of them out after youâve finished using them.</li>
</ul><p>â Doug McIlroy</p>

<p><a href="http://blog.izs.me/post/48281998870/unix-philosophy-and-node-js">Source</a></p>

<h2>
<a name="user-content-focus-on-data-structures" class="anchor" href="#focus-on-data-structures" aria-hidden="true"><span class="octicon octicon-link"></span></a>Focus on data structures</h2>

<blockquote>
<p>Bad programmers worry about the code. Good programmers worry about data structures and their relationships</p>
</blockquote>

<p>â Linus Torvalds</p>

<p><a href="http://www.to-string.com/2013/04/20/the-backbonejs-way-of-thinking/">Source</a></p>

<h2>
<a name="user-content-never-build-large-apps" class="anchor" href="#never-build-large-apps" aria-hidden="true"><span class="octicon octicon-link"></span></a>Never build Large Apps</h2>

<p>The secret to building large apps is never build large apps. Break your applications into small pieces. Then, assemble those testable, bite-sized pieces into your big application.</p>

<p>â Justin Meyer, author JavaScript MVC</p>

<p><a href="http://bitovi.com/blog/2010/11/organizing-a-jquery-application.html">Source</a></p>

<h2>
<a name="user-content-accept-that-you-have-no-idea-how-this-will-grow" class="anchor" href="#accept-that-you-have-no-idea-how-this-will-grow" aria-hidden="true"><span class="octicon octicon-link"></span></a>Accept that you have no idea how this will grow</h2>

<p>The key is to acknowledge from the start that you have no idea how this will grow. When you accept that you don't know everything, you begin to design the system defensively... You should spend most of your time thinking about interfaces rather than implementations.</p>

<p>â Nicholas Zakas, author "High-performance JavaScript websites"</p>

<p><a href="http://radar.oreilly.com/2011/06/big-javascript-apps-teams.html">Source</a></p>

<p><a href="http://addyosmani.com/largescalejavascript/">Acknowledgement to Addy Osmani</a></p>

<h2>
<a name="user-content-follow-the-principles-of-x" class="anchor" href="#follow-the-principles-of-x" aria-hidden="true"><span class="octicon octicon-link"></span></a>Follow the principles of X</h2>

<p>In 1984, Bob Scheifler and Jim Gettys set out the early principles of X:</p>

<ul class="task-list">
<li>Do not add new functionality unless an implementor cannot complete a real application without it.</li>
<li>It is as important to decide what a system is not as to decide what it is. Do not serve all the world's needs; rather, make the system extensible so that additional needs can be met in an upwardly compatible fashion.</li>
<li>The only thing worse than generalizing from one example is generalizing from no examples at all.</li>
<li>If a problem is not completely understood, it is probably best to provide no solution at all.</li>
<li>If you can get 90 percent of the desired effect for 10 percent of the work, use the simpler solution. (See also Worse is better.)</li>
<li>Isolate complexity as much as possible.</li>
<li>Provide mechanism rather than policy. In particular, place user interface policy in the clients' hands.</li>
</ul><p>The first principle was modified during the design of X11 to: "Do not add new functionality unless you know of some real application that will require it."</p>

<p><a href="http://en.wikipedia.org/wiki/X_Window_System_protocols_and_architecture#Design_principles">Source</a></p>

<h2>
<a name="user-content-quality-matters" class="anchor" href="#quality-matters" aria-hidden="true"><span class="octicon octicon-link"></span></a>Quality Matters</h2>

<p>When I hear "JUST BANG OUT CODE THAT WORKS" I think of all the apps I don't use anymore because they gradually lost the ability to iterate.</p>

<p>â Avdi Grimm</p>

<p><a href="https://twitter.com/#!/avdi/status/180747721852985344">Source</a></p>

<h2>
<a name="user-content-dont-do-hard-things-do-easy-things" class="anchor" href="#dont-do-hard-things-do-easy-things" aria-hidden="true"><span class="octicon octicon-link"></span></a>Don't do hard things, do easy things.</h2>

<ul class="task-list">
<li>Simple is better than complex.</li>
<li>Complex is better than complicated.</li>
<li>Flat is better than nested.</li>
<li>Readability counts.</li>
<li>If the implementation is hard to explain, it's a bad idea.</li>
<li>If the implementation is easy to explain, it may be a good idea.</li>
</ul><p>â The Zen of Python</p>

<p><a href="http://www.python.org/dev/peps/pep-0020/">Source</a></p>

<p>Shortlist cut from <a href="http://pyvideo.org/video/880/stop-writing-classes">Jack Diederich's "Stop Writing Classes" talk</a></p>

<h2>
<a name="user-content-dont-write-code" class="anchor" href="#dont-write-code" aria-hidden="true"><span class="octicon octicon-link"></span></a>Don't Write Code</h2>

<p>Donât write code (write new code only when everything else fails) is the single most important lesson every developer needs to learn. The amount of duplicate, crappy code (across projects) that exists today is overwhelming. In a lot of cases developers donât even bother to look around. They just want to write code.</p>

<p><a href="http://blogs.agilefaqs.com/2009/10/19/biggest-stinkers/">Source</a></p>

<h4>
<a name="user-content-reducing-the-amount-of-code-in-your-product-should-be-a-goal" class="anchor" href="#reducing-the-amount-of-code-in-your-product-should-be-a-goal" aria-hidden="true"><span class="octicon octicon-link"></span></a>Reducing the amount of code in your product should be a goal.</h4>

<p>"I hate code, and I want as little of it as possible in our product."
â Jack Diederich</p>

<p><a href="http://pyvideo.org/video/880/stop-writing-classes">Source</a></p>

<h4>
<a name="user-content-keep-lean-dependencies" class="anchor" href="#keep-lean-dependencies" aria-hidden="true"><span class="octicon octicon-link"></span></a>Keep Lean Dependencies</h4>

<p>The old adage "don't reinvent the wheel" doesn't apply when the wheel comes attached to a locomotive engine.</p>

<p><a href="http://www.reddit.com/r/programming/comments/1bcebh/programming_best_practices/c9616mn">Source</a></p>

<h2>
<a name="user-content-stop-writing-classes" class="anchor" href="#stop-writing-classes" aria-hidden="true"><span class="octicon octicon-link"></span></a>Stop Writing Classes</h2>

<p>The signature of "this shouldn't be a class" is when the class has two methods, and one of them is the constructor.
Any time you see these signs, you probably should have just written a function.</p>

<p>â Jack Diederich</p>

<p><a href="http://pyvideo.org/video/880/stop-writing-classes">Source</a></p>

<h2>
<a name="user-content-reinvent-the-wheel" class="anchor" href="#reinvent-the-wheel" aria-hidden="true"><span class="octicon octicon-link"></span></a>Reinvent the Wheel</h2>

<p>Inventing your own wheels gives you a deep appreciation and understanding of how wheels work and what makes a good one.</p>

<p><a href="http://nodejs.debuggable.com/2011-02-26.txt">Source</a></p>

<h2>
<a name="user-content-refactoring--rewriting" class="anchor" href="#refactoring--rewriting" aria-hidden="true"><span class="octicon octicon-link"></span></a>Refactoring &gt; Rewriting</h2>

<h4>
<a name="user-content-common-excuses-for-a-software-rewrite" class="anchor" href="#common-excuses-for-a-software-rewrite" aria-hidden="true"><span class="octicon octicon-link"></span></a>Common Excuses For A Software Rewrite</h4>

<ol class="task-list">
<li>The Code Sucks</li>
<li>"We're So Much Smarter Now"</li>
<li>We Picked The Wrong Platform/Language</li>
</ol><h4>
<a name="user-content-why-rewriting-is-almost-never-a-good-idea" class="anchor" href="#why-rewriting-is-almost-never-a-good-idea" aria-hidden="true"><span class="octicon octicon-link"></span></a>Why Rewriting Is (Almost) Never A Good Idea</h4>

<ol class="task-list">
<li><a href="http://en.wikipedia.org/wiki/Hofstadter's_law">It Always Takes Longer Than You Expect</a></li>
<li>Markets Change</li>
<li>Existing Customers Become Frustrated</li>
<li>Refactoring Can Cleanup The Code</li>
<li>You Don't Control The Rewrite, It Controls You</li>
</ol><p><a href="http://onstartups.com/tabid/3339/bid/2596/Why-You-Should-Almost-Never-Rewrite-Your-Software.aspx">Source</a></p>

<h2>
<a name="user-content-rewriting--patching" class="anchor" href="#rewriting--patching" aria-hidden="true"><span class="octicon octicon-link"></span></a>Rewriting &gt; Patching</h2>

<p>If you are changing more than 25% of a class or method, consider simply rewriting it. You will write the code more cleanly.</p>

<h2>
<a name="user-content-forget-new-features-just-do-the-same-stuff-better" class="anchor" href="#forget-new-features-just-do-the-same-stuff-better" aria-hidden="true"><span class="octicon octicon-link"></span></a>Forget new features, Just do the same stuff better.</h2>

<p>The problem: it is too easy to lose sight of what users often care about more, which is the performance and usability of the applications and features they already use most often.</p>

<p>â Tim Anderson</p>

<p><a href="http://www.itjoblog.co.uk/2011/06/making-better-software.html">Source</a></p>

<h2>
<a name="user-content-write-unit-tests" class="anchor" href="#write-unit-tests" aria-hidden="true"><span class="octicon octicon-link"></span></a>Write unit tests.</h2>

<p>Every programmer knows they should write tests for
their code. Few do. The universal response to "Why not?" is "I'm
in too much of a hurry." This quickly becomes a vicious cycle- the more pressure you feel, the fewer tests you write. The fewer tests you write, the less productive you are and the less stable your code becomes. The less productive and accurate you are, the more pressure you feel.
Programmers burn out from just such cycles.
Breaking out requires an outside influence. We found the outside influence we needed in a simple testing framework that lets us do a little testing that
makes a big difference.</p>

<p><a href="http://junit.sourceforge.net/doc/testinfected/testing.htm">Source</a></p>

<h4>
<a name="user-content-without-unit-tests-youre-not-refactoring-youre-just-changing-shit--hamlet-darcy" class="anchor" href="#without-unit-tests-youre-not-refactoring-youre-just-changing-shit--hamlet-darcy" aria-hidden="true"><span class="octicon octicon-link"></span></a>[Without unit tests] You're not refactoring, you're just changing shit. â Hamlet D'Arcy</h4>

<h2>
<a name="user-content-to-write-effective-unit-tests-you-need-to-write-testable-code" class="anchor" href="#to-write-effective-unit-tests-you-need-to-write-testable-code" aria-hidden="true"><span class="octicon octicon-link"></span></a>To write effective unit tests, you need to write testable code</h2>

<h3>
<a name="user-content-flaw-1-constructor-does-real-work" class="anchor" href="#flaw-1-constructor-does-real-work" aria-hidden="true"><span class="octicon octicon-link"></span></a>Flaw #1: Constructor does Real Work</h3>

<h4>
<a name="user-content-warning-signs" class="anchor" href="#warning-signs" aria-hidden="true"><span class="octicon octicon-link"></span></a>Warning Signs</h4>

<ul class="task-list">
<li>new keyword in a constructor or at field declaration</li>
<li>Static method calls in a constructor or at field declaration</li>
<li>Anything more than field assignment in constructors</li>
<li>Object not fully initialized after the constructor finishes (watch out for initialize methods)</li>
<li>Control flow (conditional or looping logic) in a constructor</li>
<li>Code does complex object graph construction inside a constructor rather than using a factory or builder</li>
<li>Adding or using an initialization block</li>
</ul><h3>
<a name="user-content-flaw-2-digging-into-collaborators" class="anchor" href="#flaw-2-digging-into-collaborators" aria-hidden="true"><span class="octicon octicon-link"></span></a>Flaw #2: Digging into Collaborators</h3>

<h4>
<a name="user-content-warning-signs-1" class="anchor" href="#warning-signs-1" aria-hidden="true"><span class="octicon octicon-link"></span></a>Warning Signs</h4>

<ul class="task-list">
<li>Objects are passed in but never used directly (only used to get access to other objects)</li>
<li>Law of Demeter violation: method call chain walks an object graph with more than one dot (.)</li>
<li>Suspicious names: context, environment, principal, container, or manager</li>
</ul><h3>
<a name="user-content-flaw-3-brittle-global-state--singletons" class="anchor" href="#flaw-3-brittle-global-state--singletons" aria-hidden="true"><span class="octicon octicon-link"></span></a>Flaw #3: Brittle Global State &amp; Singletons</h3>

<h4>
<a name="user-content-warning-signs-2" class="anchor" href="#warning-signs-2" aria-hidden="true"><span class="octicon octicon-link"></span></a>Warning Signs</h4>

<ul class="task-list">
<li>Adding or using singletons</li>
<li>Adding or using static fields or static methods</li>
<li>Adding or using static initialization blocks</li>
<li>Adding or using registries</li>
<li>Adding or using service locators</li>
</ul><h3>
<a name="user-content-flaw-4-class-does-too-much" class="anchor" href="#flaw-4-class-does-too-much" aria-hidden="true"><span class="octicon octicon-link"></span></a>Flaw #4: Class Does Too Much</h3>

<h4>
<a name="user-content-warning-signs-3" class="anchor" href="#warning-signs-3" aria-hidden="true"><span class="octicon octicon-link"></span></a>Warning Signs</h4>

<ul class="task-list">
<li>Summing up what the class does includes the word âandâ</li>
<li>Class would be challenging for new team members to read and quickly âget itâ</li>
<li>Class has fields that are only used in some methods</li>
<li>Class has static methods that only operate on parameters</li>
</ul><p><a href="http://misko.hevery.com/code-reviewers-guide/">Source</a></p>

<p><a href="http://misko.hevery.com/presentations/">Source</a></p>

<h2>
<a name="user-content-test-driven-development-with-inversion-of-control" class="anchor" href="#test-driven-development-with-inversion-of-control" aria-hidden="true"><span class="octicon octicon-link"></span></a>Test-Driven Development with Inversion of Control.</h2>

<p>Even if you aren't testing your code, you should write testable code. IoC enables testable code. Inject test-friendly dependencies or mocks at test time, to isolate the unit-under-test.</p>

<h2>
<a name="user-content-avoid-mixing-object-creation-with-application-logic" class="anchor" href="#avoid-mixing-object-creation-with-application-logic" aria-hidden="true"><span class="octicon octicon-link"></span></a>Avoid mixing Object Creation with Application Logic</h2>

<p><a href="http://misko.hevery.com/2008/09/30/2008/07/08/how-to-think-about-the-new-operator/">Source</a></p>

<h2>
<a name="user-content-avoid-code-smells" class="anchor" href="#avoid-code-smells" aria-hidden="true"><span class="octicon octicon-link"></span></a>Avoid Code Smells</h2>

<p><a href="http://www.codinghorror.com/blog/2006/05/code-smells.html">Source</a></p>

<h2>
<a name="user-content-avoid-creating-technical-debt" class="anchor" href="#avoid-creating-technical-debt" aria-hidden="true"><span class="octicon octicon-link"></span></a>Avoid creating technical debt.</h2>

<p>"Although immature code may work fine and be completely acceptable to the customer, excess quantities will make a program unmasterable, leading to extreme specialization of programmers and finally an inflexible product. ... A little debt speeds development so long as it is paid back promptly with a rewrite ... <em>Every minute spent on not-quite-right code counts as interest on that <a href="http://en.wikipedia.org/wiki/Technical_debt">debt</a>.</em> Entire engineering organizations can be brought to a stand-still under the debt load of an unconsolidated implementation ...â
(Emphasis mine)</p>

<p><a href="http://c2.com/doc/oopsla92.html">Source</a></p>

<h2>
<a name="user-content-premature-optimisation-is-the-root-of-all-evil" class="anchor" href="#premature-optimisation-is-the-root-of-all-evil" aria-hidden="true"><span class="octicon octicon-link"></span></a>Premature optimisation is the root of all evil</h2>

<p>"Programmers waste enormous amounts of time thinking about, or worrying about, the speed of noncritical parts of their programs, and these attempts at efficiency actually have a strong negative impact when debugging and maintenance are considered. We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%."</p>

<p><a href="http://c2.com/cgi/wiki?PrematureOptimization">Source</a></p>

<h2>
<a name="user-content-plan-plan-plan" class="anchor" href="#plan-plan-plan" aria-hidden="true"><span class="octicon octicon-link"></span></a>Plan, Plan, Plan.</h2>

<p>It is much cheaper to do it correctly the first time than to redo it later on.
The sooner a problem is identified and fixed, the cheaper it is to do so.</p>

<p>"The general who wins a battle makes many calculations in his temple before the battle is fought. The general who loses a battle makes but few calculations beforehand. Thus do many calculations lead to victory,
and few calculations to defeat: how much more no calculation at all! It is by attention to this point that I can foresee who is likely to win or lose."</p>

<h4>
<a name="user-content-plans-are-worthless-planning-is-invaluable--sir-winston-churchill" class="anchor" href="#plans-are-worthless-planning-is-invaluable--sir-winston-churchill" aria-hidden="true"><span class="octicon octicon-link"></span></a>"Plans are worthless, planning is invaluable."- Sir Winston Churchill</h4>

<p>For this to work, everyone involved has to listen, everyone has to be open, everyone has to be responsive. Or we could keep flailing away with the fucked up attitude that âit has to be this wayâ because the sacred project plan says itâs this way. Because that really is a lot of fun, isnât it?</p>

<h2>
<a name="user-content-programming-is-also-teaching-your-team" class="anchor" href="#programming-is-also-teaching-your-team" aria-hidden="true"><span class="octicon octicon-link"></span></a>Programming is also Teaching your team</h2>

<p>... a team of mediocre, inexperienced coders who work together and write for the benefit of the team has the capability to become a great team, and they can take that learning approach to create other great teams. <em>It all comes down to whether the team sees its work as simply writing code... or writing with the goal of both code and learning</em>"
(Emphasis mine)</p>

<p>â Reginald Braithwaite</p>

<p><a href="http://www.theserverside.com/tt/articles/article.tss?l=ProgrammingisAlsoTeachingYourTeam">Source</a></p>

<h3>
<a name="user-content-the-most-important-element-of-successful-software-development-is-learning" class="anchor" href="#the-most-important-element-of-successful-software-development-is-learning" aria-hidden="true"><span class="octicon octicon-link"></span></a>"The most important element of successful software development is learning."</h3>

<p>When the entire team meets a certain standard for competence, there is a very large learning surface exposed and the team is able to absorb more information.</p>

<p><a href="http://weblog.raganwald.com/2007/06/which-theory-first-evidence.html">Source</a></p>

<h2>
<a name="user-content-there-are-lies-damned-lies-and-software-development-estimates" class="anchor" href="#there-are-lies-damned-lies-and-software-development-estimates" aria-hidden="true"><span class="octicon octicon-link"></span></a>"...there are lies, damned lies, and software development estimates."</h2>

<p>Software can only partially be designed in advance. ... requirements suffer from observation, that the act of building software causes the requirements to change. ...technical factors cannot be perfectly understood, that only the act of trying to build something with specific components will reveal all of the gotchas and who-knews associated with a chosen technology strategy. ...software design is an iterative process, starting with a best guess that is continually refined with experience.
the normal case for software projects is that tasks are rarely completed exactly as estimated, but that as a project progresses, the aggregate variance from estimates falls.</p>

<p><a href="http://weblog.raganwald.com/2007/06/which-theory-first-evidence.html">Source</a></p>

<p>Nobody likes to look stupid. If youâre a professional and someone puts you on the spot to answer âhow long will this take?â itâs only human to want to provide an answer. Whether you call it professional pride or ego, itâs a powerful driver.
Good IT workers really donât like saying âI donât know.â If they say it, they probably mean it. So stop pushing for a definitive answer when one doesnât exist.Itâs perfectly reasonable to want some sort of plan up front. Iâm actually one of those funny types who believe up front planning is a necessity. So long as everyone understands an estimate is just that: an estimate. You learn as you go along and discover more detail. So you revise the estimate accordingly.</p>

<h2>
<a name="user-content-your-architecture-should-resemble-your-domain" class="anchor" href="#your-architecture-should-resemble-your-domain" aria-hidden="true"><span class="octicon octicon-link"></span></a>Your architecture should resemble your domain</h2>

<p>So what does the architecture of your application scream? When you look at the top level directory structure, and the source files in the highest level package; do they scream: health care system, or accounting system, or inventory management system? Or do they scream: rails, or spring/hibernate, or asp?</p>

<p>Architectures should not be supplied by frameworks. Frameworks are tools to be used, not architectures to be conformed to. If your architecture is based on frameworks, then it cannot be based on your use cases.</p>

<p>â Uncle Bob Martin, "Screaming Architecture"</p>

<p><a href="http://blog.8thlight.com/uncle-bob/2011/09/30/Screaming-Architecture.html">Source</a></p>

<h2>
<a name="user-content-unix-philosophy-1" class="anchor" href="#unix-philosophy-1" aria-hidden="true"><span class="octicon octicon-link"></span></a>Unix Philosophy</h2>

<p>"This is the Unix philosophy: Write programs that do one thing and do it well. Write programs to work together. Write programs to handle text streams, because that is a universal interface" - Doug McIlroy, quoted in A Quarter Century of Unix [Salus]. Addison-Wesley. 1994. ISBN 0-201-54777-5.</p>

<ul class="task-list">
<li>Rule of Modularity: Write simple parts connected by clean interfaces.</li>
<li>Rule of Clarity: Clarity is better than cleverness.</li>
<li>Rule of Composition: Design programs to be connected to other programs.</li>
<li>Rule of Separation: Separate policy from mechanism; separate interfaces from engines.</li>
<li>Rule of Simplicity: Design for simplicity; add complexity only where you must.</li>
<li>Rule of Parsimony: Write a big program only when it is clear by demonstration that nothing else will do.</li>
<li>Rule of Transparency: Design for visibility to make inspection and debugging easier.</li>
<li>Rule of Robustness: Robustness is the child of transparency and simplicity.</li>
<li>Rule of Representation: Fold knowledge into data so program logic can be stupid and robust.</li>
<li>Rule of Least Surprise: In interface design, always do the least surprising thing.</li>
<li>Rule of Silence: When a program has nothing surprising to say, it should say nothing.</li>
<li>Rule of Repair: When you must fail, fail noisily and as soon as possible.</li>
<li>Rule of Economy: Programmer time is expensive; conserve it in preference to machine time.</li>
<li>Rule of Generation: Avoid hand-hacking; write programs to write programs when you can.</li>
<li>Rule of Optimization: Prototype before polishing. Get it working before you optimize it.</li>
<li>Rule of Diversity: Distrust all claims for âone true wayâ.</li>
<li>Rule of Extensibility: Design for the future, because it will be here sooner than you think.</li>
</ul><p>â Eric S. Raymond, "The Art of Unix Programming"</p>

<p><a href="http://www.catb.org/esr/writings/taoup/html/ch01s06.html">Source</a></p></article>
  </div>


        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.05653s from github-fe138-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-87e1861095e3a50a45990ef150813264dab0ab52.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-040fe8b89a4441eaff9e4636fa2bbe9ca34fd0d2.js" type="text/javascript"></script>
      
      
        <script async src="https://www.google-analytics.com/analytics.js"></script>
  </body>
</html>

