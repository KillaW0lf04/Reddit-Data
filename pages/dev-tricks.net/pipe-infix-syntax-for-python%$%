<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8" />
<title>Pipe: Infix syntax for Python | {Dev Tricks}</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://dev-tricks.net/wp-content/themes/twentyten/style.css" />
<link rel="pingback" href="http://dev-tricks.net/xmlrpc.php" />
<link rel="alternate" type="application/rss+xml" title="{Dev Tricks} &raquo; Feed" href="http://dev-tricks.net/feed" />
<link rel="alternate" type="application/rss+xml" title="{Dev Tricks} &raquo; Comments Feed" href="http://dev-tricks.net/comments/feed" />
<link rel="alternate" type="application/rss+xml" title="{Dev Tricks} &raquo; Pipe: Infix syntax for Python Comments Feed" href="http://dev-tricks.net/pipe-infix-syntax-for-python/feed" />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://dev-tricks.net/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='really_simple_share_style-css'  href='http://dev-tricks.net/wp-content/plugins/really-simple-facebook-twitter-share-buttons/style.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='http://dev-tricks.net/wp-includes/js/jquery/jquery.js?ver=1.11.0'></script>
<script type='text/javascript' src='http://dev-tricks.net/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://dev-tricks.net/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.4.7.3'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://dev-tricks.net/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://dev-tricks.net/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Yauib : Yet another useless IRC Bot !' href='http://dev-tricks.net/yauib-yet-another-useless-irc-bot' />
<link rel='next' title='[BASHISM] How to generate random number without $RANDOM ?' href='http://dev-tricks.net/bashism-how-to-generate-random-number-without-random' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://dev-tricks.net/pipe-infix-syntax-for-python' />
<link rel='shortlink' href='http://dev-tricks.net/?p=286' />
<script type="text/javascript">
        //<![CDATA[
        
      !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
      
        //]]>
  		</script><!-- Google Analytics Tracking by Google Analyticator 6.4.7.3: http://www.videousermanuals.com/google-analyticator/ -->
<script type="text/javascript">
                var analyticsFileTypes = [''];
                            var analyticsSnippet = 'enabled';
                var analyticsEventTracking = 'enabled';
            </script>
<script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-5297884-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>

<body class="single single-post postid-286 single-format-standard">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://dev-tricks.net/" title="{Dev Tricks}" rel="home">{Dev Tricks}</a>
					</span>
				</div>
				<div id="site-description">Blogging developper tips and tricks</div>

							</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu-header"><ul id="menu-about-me" class="menu"><li id="menu-item-302" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-302"><a href="http://julien.palard.fr">About Julien</a></li>
<li id="menu-item-304" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-304"><a href="http://dev-tricks.net/about-antoine">About Antoine</a></li>
<li id="menu-item-303" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-303"><a href="http://twitter.com/sizeof">Follow me on Twitter</a></li>
</ul></div>			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">

			

				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://dev-tricks.net/yauib-yet-another-useless-irc-bot" rel="prev"><span class="meta-nav">&larr;</span> Yauib : Yet another useless IRC Bot !</a></div>
					<div class="nav-next"><a href="http://dev-tricks.net/bashism-how-to-generate-random-number-without-random" rel="next">[BASHISM] How to generate random number without $RANDOM ? <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-286" class="post-286 post type-post status-publish format-standard hentry category-code category-python">
					<h1 class="entry-title">Pipe: Infix syntax for Python</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://dev-tricks.net/pipe-infix-syntax-for-python" title="20:18" rel="bookmark"><span class="entry-date">March 28, 2011</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://dev-tricks.net/author/mandark" title="View all posts by Julien Palard">Julien Palard</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<p>Pipe is a Python module enabling infix syntax in Python.<br />
For those asking &#8220;Why ?&#8221; let&#8217;s take an example :</p>
<p>Compare the readability of the classical prefix syntax :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;"><span style="color: #008000;">sum</span><span style="color: black;">&#40;</span><span style="color: #dc143c;">select</span><span style="color: black;">&#40;</span>where<span style="color: black;">&#40;</span>take_while<span style="color: black;">&#40;</span>fib<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff7700;font-weight:bold;">lambda</span> x: x <span style="color: #66cc66;">&lt;</span> <span style="color: #ff4500;">1000000</span><span style="color: black;">&#41;</span> <span style="color: #ff7700;font-weight:bold;">lambda</span> x: x % <span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span><span style="color: #66cc66;">,</span> <span style="color: #ff7700;font-weight:bold;">lambda</span> x: x * x<span style="color: black;">&#41;</span><span style="color: black;">&#41;</span></pre></td></tr></table></div>

<p>And the infix syntax :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;">fib<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span> | take_while<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x <span style="color: #66cc66;">&lt;</span> <span style="color: #ff4500;">1000000</span><span style="color: black;">&#41;</span> \
      | where<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x % <span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span> \
      | <span style="color: #dc143c;">select</span><span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x * x<span style="color: black;">&#41;</span> \
      | <span style="color: #008000;">sum</span><span style="color: black;">&#40;</span><span style="color: black;">&#41;</span></pre></td></tr></table></div>

<p>Isn&#8217;t the infix syntax more readable ?</p>
<p>The base class of Pipe is kept simple (7 lines of python) and is usable as a decorator permitting you to create new &#8216;pipeable&#8217; functions easily. The module provides ~30 prepared pipes functions like &#8216;where&#8217;, &#8216;group_by&#8217;, &#8216;sort&#8217;, &#8216;take_while&#8217; &#8230; A pipeable function takes an iterable (tuple, list, generator) and yields to be itself an iterator, so pipeable function can be piped together.</p>
<p>Let me introduce the basic usage of the Pipe module, then I&#8217;ll write some bits on how to build new ones :</p>
<p>To start, get it from PyPI http://pypi.python.org/pypi/pipe/1.3 and install it, open a REPL, import pipe, and play :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;">Python 2.6.6 <span style="color: black;">&#40;</span>r266:<span style="color: #ff4500;">84292</span><span style="color: #66cc66;">,</span> Dec <span style="color: #ff4500;">26</span> <span style="color: #ff4500;">2010</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">22</span>:<span style="color: #ff4500;">31</span>:<span style="color: #ff4500;">48</span><span style="color: black;">&#41;</span> 
<span style="color: black;">&#91;</span>GCC 4.4.5<span style="color: black;">&#93;</span> on linux2
Type <span style="color: #483d8b;">&quot;help&quot;</span><span style="color: #66cc66;">,</span> <span style="color: #483d8b;">&quot;copyright&quot;</span><span style="color: #66cc66;">,</span> <span style="color: #483d8b;">&quot;credits&quot;</span> <span style="color: #ff7700;font-weight:bold;">or</span> <span style="color: #483d8b;">&quot;license&quot;</span> <span style="color: #ff7700;font-weight:bold;">for</span> more information.
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: #ff7700;font-weight:bold;">from</span> pipe <span style="color: #ff7700;font-weight:bold;">import</span> *
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: black;">&#91;</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">4</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">5</span><span style="color: black;">&#93;</span> | add
<span style="color: #ff4500;">15</span>
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: black;">&#91;</span><span style="color: #ff4500;">5</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">4</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">1</span><span style="color: black;">&#93;</span> | sort
<span style="color: black;">&#91;</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">4</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">5</span><span style="color: black;">&#93;</span></pre></td></tr></table></div>

<p>Until here it&#8217;s easy, to know more about available pipes, just read the help(pipe) in the REPL, all are explained with an example as a doctest </p>
<p>Now as we know that pipeable functions use iterables, we can try to pipe together two or more pipeables :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;"><span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: black;">&#91;</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">4</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">5</span><span style="color: black;">&#93;</span> | where<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x % <span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span> | concat
<span style="color: #483d8b;">'1, 3, 5'</span>
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: black;">&#91;</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">4</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">5</span><span style="color: black;">&#93;</span> | where<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x % <span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span> | tail<span style="color: black;">&#40;</span><span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span> | concat
<span style="color: #483d8b;">'3, 5'</span>
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: black;">&#91;</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">4</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">5</span><span style="color: black;">&#93;</span> | where<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x % <span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span> | tail<span style="color: black;">&#40;</span><span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span> | <span style="color: #dc143c;">select</span><span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x * x<span style="color: black;">&#41;</span> | concat
<span style="color: #483d8b;">'9, 25'</span>
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: black;">&#91;</span><span style="color: #ff4500;">1</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">2</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">3</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">4</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">5</span><span style="color: black;">&#93;</span> | where<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x % <span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span> | tail<span style="color: black;">&#40;</span><span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span> | <span style="color: #dc143c;">select</span><span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x * x<span style="color: black;">&#41;</span> | add
<span style="color: #ff4500;">34</span></pre></td></tr></table></div>

<p>Now, a bit about lazyness, as Pipe use iterables, the evaluation of a whole Pipe is lazy, so we can play with infinite generators like this one :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;"><span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: #ff7700;font-weight:bold;">def</span> fib<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span>:
...    <span style="color: black;">a</span><span style="color: #66cc66;">,</span> b <span style="color: #66cc66;">=</span> <span style="color: #ff4500;">0</span><span style="color: #66cc66;">,</span> <span style="color: #ff4500;">1</span>
...    <span style="color: #ff7700;font-weight:bold;">while</span> <span style="color: #008000;">True</span>:
...        <span style="color: #ff7700;font-weight:bold;">yield</span> a
...        <span style="color: black;">a</span><span style="color: #66cc66;">,</span> b <span style="color: #66cc66;">=</span> b<span style="color: #66cc66;">,</span> a + b</pre></td></tr></table></div>

<p>Now we can do every kind of stuff into the fibonacci sequence, like solving the 2nd problem of http://projecteuler.net in a readable one liner :</p>
<blockquote><p>Find the sum of all the even-valued terms in Fibonacci which do not exceed four million.</p></blockquote>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;"><span style="color: #66cc66;">&gt;&gt;&gt;</span> euler2 <span style="color: #66cc66;">=</span> fib<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span> | where<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x % <span style="color: #ff4500;">2</span> <span style="color: #66cc66;">==</span> <span style="color: #ff4500;">0</span><span style="color: black;">&#41;</span> | take_while<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x <span style="color: #66cc66;">&lt;</span> <span style="color: #ff4500;">4000000</span><span style="color: black;">&#41;</span> | add
<span style="color: #66cc66;">&gt;&gt;&gt;</span> <span style="color: #ff7700;font-weight:bold;">assert</span> euler2 <span style="color: #66cc66;">==</span> <span style="color: #ff4500;">4613732</span></pre></td></tr></table></div>

<p>Isn it pretty ?</p>
<p>Let now see how to create new pipeable functions using the @pipe decorator :<br />
You want to create a function that yields the first x elements from its input<br />
You want its usage to be (1, 2, 3, 4, 5) | take(2) to take the fist 2 elements.<br />
I know that you are thinking about a basic implementation like :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;"><span style="color: #ff7700;font-weight:bold;">def</span> take<span style="color: black;">&#40;</span>iterable<span style="color: #66cc66;">,</span> qte<span style="color: black;">&#41;</span>:
    <span style="color: #ff7700;font-weight:bold;">for</span> item <span style="color: #ff7700;font-weight:bold;">in</span> iterable:
        <span style="color: #ff7700;font-weight:bold;">if</span> qte <span style="color: #66cc66;">&gt;</span> <span style="color: #ff4500;">0</span>:
            qte -<span style="color: #66cc66;">=</span> <span style="color: #ff4500;">1</span>
            <span style="color: #ff7700;font-weight:bold;">yield</span> item
        <span style="color: #ff7700;font-weight:bold;">else</span>:
            <span style="color: #ff7700;font-weight:bold;">return</span></pre></td></tr></table></div>

<p>Right ? You take an iterable, a qantity, and while the quantity is not reached, you just have to yield ?<br />
OK, just add @pipe to you take function and it&#8217;s pipeable :-)</p>
<div style="min-height:33px;" class="really_simple_share really_simple_share_button robots-nocontent snap_nopreview"><div class="really_simple_share_facebook_like" style="width:100px;"><div class="fb-like" data-href="http://dev-tricks.net/pipe-infix-syntax-for-python" data-layout="button_count" data-width="100" ></div></div><div class="really_simple_share_twitter" style="width:100px;"><a href="https://twitter.com/share" class="twitter-share-button" data-count="horizontal"  data-text="Pipe: Infix syntax for Python" data-url="http://dev-tricks.net/pipe-infix-syntax-for-python"  data-via=""   ></a></div></div>
		<div class="really_simple_share_clearfix"></div>											</div><!-- .entry-content -->


					<div class="entry-utility">
						This entry was posted in <a href="http://dev-tricks.net/category/code" title="View all posts in Code" rel="category tag">Code</a>, <a href="http://dev-tricks.net/category/code/python" title="View all posts in Python" rel="category tag">Python</a>. Bookmark the <a href="http://dev-tricks.net/pipe-infix-syntax-for-python" title="Permalink to Pipe: Infix syntax for Python" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://dev-tricks.net/yauib-yet-another-useless-irc-bot" rel="prev"><span class="meta-nav">&larr;</span> Yauib : Yet another useless IRC Bot !</a></div>
					<div class="nav-next"><a href="http://dev-tricks.net/bashism-how-to-generate-random-number-without-random" rel="next">[BASHISM] How to generate random number without $RANDOM ? <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">41 Responses to <em>Pipe: Infix syntax for Python</em></h3>


			<ol class="commentlist">
					<li class="comment even thread-even depth-1" id="li-comment-380">
		<div id="comment-380">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/abc66ea88dfdf7ab4b52f1d41a7727fd?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Matt Pettis</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-380">
				March 28, 2011 at 23:46</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>This is a great idea, and is one of the niceties of Haskell (where they use &#8216;.&#8217; for &#8216;|&#8217;, and I think you even give an implicit not to it with the &#8216;take_from&#8217; function).  I&#8217;ve just been reading up on some other languages, and just came across this in Haskell, and was wondering if this concept would be used in another language where it wasn&#8217;t primary, and now I have this serendipitous post!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=380#respond' onclick='return addComment.moveForm("comment-380", "380", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-381">
		<div id="comment-381">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/abc66ea88dfdf7ab4b52f1d41a7727fd?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Matt Pettis</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-381">
				March 28, 2011 at 23:52</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Ooops, I should add that Haskell &#8216;.&#8217; does function composition, vs. pipe, which is, err, piping.  The difference being that in Haskell you&#8217;d read inner to outer as right-to-left, where here, piping makes it a more natural left-to-right reading.  I got thrown by the &#8216;take_from&#8217; function and immediately went &#8216;Aha!  Haskell!&#8217;</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=381#respond' onclick='return addComment.moveForm("comment-381", "381", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-382">
		<div id="comment-382">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/f3ba3ecffd20251d73749afbfa636786?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://www.boredomandlaziness.org' rel='external nofollow' class='url'>Nick Coghlan</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-382">
				March 29, 2011 at 00:13</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>For a fairer comparison, though, the &#8220;where&#8221; and &#8220;select&#8221; clauses should be rolled into a generator expression in the non-infix version:</p>
<p>from itertools import takewhile<br />
x = sum(takewhile(lambda x: x &lt; 10000, (x*x for x in fib() if x % 2))</p>
<p>Which would become:</p>
<p>x = (x*x for x in fib() if x % 2) | take_while(lambda x: x &lt; 1000) | sum()</p>
<p>I&#039;d also compare it with a version that names the intermediate steps:</p>
<p>all_elements = (x*x for x in fib() if x % 2)<br />
selected = takewhile(lambda x: x &lt; 10000, all_elements)<br />
x = sum(selected)</p>
<p>In general, quite an interesting approach &#8211; certainly makes iterator pipelines more decomposable within a single expression.</p>
<p>If you wanted to explore a more &quot;real world&quot; example, I suggest looking through <a href="http://www.dabeaz.com/generators/" rel="nofollow">http://www.dabeaz.com/generators/</a> and seeing how the examples in that presentation would change if using the pipeline model of iterator composition.</p>
<p>(Note: your PyPI metadata has a typo in the URLs &#8211; it should be &quot;pipe&quot;, not &quot;Pype&quot;).<br />
(In looking for the presentation linked above, I came across another project similar to yours: <a href="http://code.google.com/p/python-pipeline/" rel="nofollow">http://code.google.com/p/python-pipeline/</a>)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=382#respond' onclick='return addComment.moveForm("comment-382", "382", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mandark bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-383">
		<div id="comment-383">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Julien Palard</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-383">
				March 29, 2011 at 01:52</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Thanks :)<br />
My inspirations was sh, LINQ, and my needs solving project euler problems, I have a friend writing in Haskell and took a look for this language but never tried to write a single line :p</p>
<p>Bests</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=383#respond' onclick='return addComment.moveForm("comment-383", "383", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-386">
		<div id="comment-386">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/345fd2a0955fbab272da7ee594cbe7c1?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Bernardo</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-386">
				March 29, 2011 at 04:59</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Amazing and simple!</p>
<p>The function call returns another pipe object, just like that.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=386#respond' onclick='return addComment.moveForm("comment-386", "386", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-388">
		<div id="comment-388">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/bf3f8fbc1e9a8bd8b2305ce54335037f?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://jeanserge.com' rel='external nofollow' class='url'>Benjamin Sergeant</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-388">
				March 29, 2011 at 06:54</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>I was looking forward to play with pipe (I&#8217;m a sh fan and miss the expressiveness of pipes in python) but I failed to install with easy_insall.</p>
<p>panzani pipe$ easy_install pipe<br />
Searching for pipe<br />
Reading <a href="http://pypi.python.org/simple/pipe/" rel="nofollow">http://pypi.python.org/simple/pipe/</a><br />
Reading <a href="https://github.com/JulienPalard/Pipe" rel="nofollow">https://github.com/JulienPalard/Pipe</a><br />
Reading <a href="https://github.com/JulienPalard/Pipe/tarball/master" rel="nofollow">https://github.com/JulienPalard/Pipe/tarball/master</a><br />
No local packages or download links found for pipe<br />
Best match: None<br />
Traceback (most recent call last):</p>
<p>&#8230; then a looooong traceback. Any ideas ?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=388#respond' onclick='return addComment.moveForm("comment-388", "388", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mandark bypostauthor even thread-even depth-1" id="li-comment-389">
		<div id="comment-389">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://julien.palard.fr' rel='external nofollow' class='url'>Julien Palard</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-389">
				March 29, 2011 at 08:00</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Oops i was missing the upload in setup.py, for developers who found this page googling for &#8216;No local packages or download links found&#8217; try :<br />
./setup.py register sdist upload -r pypi</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=389#respond' onclick='return addComment.moveForm("comment-389", "389", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-391">
		<div id="comment-391">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/8655af306af892b159b576979134b70b?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://gamr7.com' rel='external nofollow' class='url'>Lionel Barret</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-391">
				March 29, 2011 at 10:23</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Interesting&#8230;</p>
<p>I just miss tee&#8230;(from bash). Could you add it ?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=391#respond' onclick='return addComment.moveForm("comment-391", "391", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-392">
		<div id="comment-392">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/9a64a08f7c1de9a2814367a90dab04a2?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">BOb</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-392">
				March 29, 2011 at 12:16</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>slight typo in article:  readeable -&gt;readable<br />
(no need to publish this comment!)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=392#respond' onclick='return addComment.moveForm("comment-392", "392", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-393">
		<div id="comment-393">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/102cc57c6d3e3d0dfcfd44d1812ac792?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://00f.net' rel='external nofollow' class='url'>Frank Denis</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-393">
				March 29, 2011 at 12:33</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>If you&#8217;re looking for something similar for Javascript, take a look at Kaffeine: <a href="http://weepy.github.com/kaffeine/" rel="nofollow">http://weepy.github.com/kaffeine/</a></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=393#respond' onclick='return addComment.moveForm("comment-393", "393", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mandark bypostauthor even thread-even depth-1" id="li-comment-394">
		<div id="comment-394">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://julien.palard.fr' rel='external nofollow' class='url'>Julien Palard</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-394">
				March 29, 2011 at 12:38</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Lionel : I just added tee, pushed it to github &#038;&#038; PyPI :-)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=394#respond' onclick='return addComment.moveForm("comment-394", "394", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-396">
		<div id="comment-396">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/040b73282faf88b2eea3dc64507339c0?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Ilya Kasnacheev</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-396">
				March 29, 2011 at 13:15</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>In Haskell, $ does piping and it&#8217;s my favourite combinator.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=396#respond' onclick='return addComment.moveForm("comment-396", "396", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-398">
		<div id="comment-398">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/946dbc66d19ba815ffec20d05f138f73?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://blog.linjunhalida.com' rel='external nofollow' class='url'>halida</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-398">
				March 29, 2011 at 13:30</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>it is a great tool!<br />
clear and pythonic!<br />
maybe one day it will be a default module in python?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=398#respond' onclick='return addComment.moveForm("comment-398", "398", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-399">
		<div id="comment-399">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/887cfcb9982003cfbbb073323407235f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://geophile.com/osh' rel='external nofollow' class='url'>Jack Orenstein</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-399">
				March 29, 2011 at 13:51</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>I have built something similar, coming at the problem from a different direction. I wanted a Unix-style shell, but piping objects instead of strings. For example, to sum x^2 from the command line, x = 0-9:</p>
<blockquote><p>
    bash$ osh gen 10 ^ f &#8216;x: x**2&#8242; ^ red + $
</p></blockquote>
<p>^ is the pipe symbol, red means &#8220;reduce&#8221;, $ means output, and f means apply the given function.</p>
<p>The same capabilities are available as a Python library:</p>
<blockquote><p>
    from osh.api import *<br />
    osh(gen(10), f(lambda x: x**2), red(lambda x, y: x + y), out())
</p></blockquote>
<p>or </p>
<blockquote><p>
    from osh.api import *<br />
    osh(gen(10), f(lambda x: x**2), red(&#8216;+&#8217;), out())
</p></blockquote>
<p>Osh can also run results on multiple hosts at once, in parallel, combining the results in various ways; and integrates database access, piping tuples to and from sql commands.</p>
<p><a href="http://geophile.com/osh" rel="nofollow">http://geophile.com/osh</a></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=399#respond' onclick='return addComment.moveForm("comment-399", "399", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mandark bypostauthor even thread-even depth-1" id="li-comment-400">
		<div id="comment-400">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://julien.palard.fr' rel='external nofollow' class='url'>Julien Palard</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-400">
				March 29, 2011 at 14:02</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Yeah osh seems like pipe, but I prefer limiting the use of useless parenthesis :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;">    <span style="color: #ff7700;font-weight:bold;">from</span> osh.<span style="color: black;">api</span> <span style="color: #ff7700;font-weight:bold;">import</span> *
    osh<span style="color: black;">&#40;</span>gen<span style="color: black;">&#40;</span><span style="color: #ff4500;">10</span><span style="color: black;">&#41;</span><span style="color: #66cc66;">,</span> f<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x**<span style="color: #ff4500;">2</span><span style="color: black;">&#41;</span><span style="color: #66cc66;">,</span> red<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x<span style="color: #66cc66;">,</span> y: x + y<span style="color: black;">&#41;</span><span style="color: #66cc66;">,</span> out<span style="color: black;">&#40;</span><span style="color: black;">&#41;</span><span style="color: black;">&#41;</span></pre></td></tr></table></div>

<p>gives :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;">    <span style="color: #ff7700;font-weight:bold;">from</span> pipe <span style="color: #ff7700;font-weight:bold;">import</span> *
    <span style="color: #008000;">xrange</span><span style="color: black;">&#40;</span><span style="color: #ff4500;">10</span><span style="color: black;">&#41;</span> | <span style="color: #dc143c;">select</span><span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x ** x<span style="color: black;">&#41;</span> | aggregate<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x<span style="color: #66cc66;">,</span> y: x + y<span style="color: black;">&#41;</span></pre></td></tr></table></div>

<p>And you can more easily indent it :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;">    <span style="color: #ff7700;font-weight:bold;">from</span> pipe <span style="color: #ff7700;font-weight:bold;">import</span> *
    <span style="color: #008000;">xrange</span><span style="color: black;">&#40;</span><span style="color: #ff4500;">10</span><span style="color: black;">&#41;</span> | <span style="color: #dc143c;">select</span><span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x ** x<span style="color: black;">&#41;</span>
               | aggregate<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x<span style="color: #66cc66;">,</span> y: x + y<span style="color: black;">&#41;</span></pre></td></tr></table></div>

</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=400#respond' onclick='return addComment.moveForm("comment-400", "400", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-401">
		<div id="comment-401">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/5fd4318900fae7968c1fbccfc556ee16?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Fred</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-401">
				March 29, 2011 at 14:37</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>I like the idea but I&#8217;m not sure that all those lambdas are very readable &#8211; also they are impacting the execution speed &#8211; each lambda is a function call.</p>
<p>Take a look at <a href="http://ipython.scipy.org/moin/UsingIPipe" rel="nofollow">http://ipython.scipy.org/moin/UsingIPipe</a></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=401#respond' onclick='return addComment.moveForm("comment-401", "401", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-402">
		<div id="comment-402">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/887cfcb9982003cfbbb073323407235f?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://geophile.com/osh' rel='external nofollow' class='url'>Jack Orenstein</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-402">
				March 29, 2011 at 14:44</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Julien, what happens in your example with xrange(0)? Does aggregate have an optional initial value? Otherwise I don&#8217;t see how aggregate can emit the right answer.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=402#respond' onclick='return addComment.moveForm("comment-402", "402", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mandark bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-403">
		<div id="comment-403">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://julien.palard.fr' rel='external nofollow' class='url'>Julien Palard</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-403">
				March 29, 2011 at 15:01</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Jack, as expected, it throw: reduce() of empty sequence with no initial value.<br />
So I just added the optional &#8216;initializer&#8217; argument of &#8216;reduce&#8217; to my &#8216;aggregate&#8217; giving :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;"><span style="color: #008000;">xrange</span><span style="color: black;">&#40;</span><span style="color: #ff4500;">0</span><span style="color: black;">&#41;</span> | <span style="color: #dc143c;">select</span><span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x: x ** x<span style="color: black;">&#41;</span>
          | aggregate<span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> x<span style="color: #66cc66;">,</span> y: x + y<span style="color: #66cc66;">,</span> initializer<span style="color: #66cc66;">=</span><span style="color: #ff4500;">0</span><span style="color: black;">&#41;</span>
<span style="color: #ff4500;">0</span></pre></td></tr></table></div>

</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=403#respond' onclick='return addComment.moveForm("comment-403", "403", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-407">
		<div id="comment-407">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/d4dac6b6689c44cc6bdc4a59813ebaae?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Anthony</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-407">
				March 29, 2011 at 16:25</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>You have to love LINQ and monads! This is Just Great!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=407#respond' onclick='return addComment.moveForm("comment-407", "407", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-408">
		<div id="comment-408">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/208e4a03a5e5ac5dda83c6b685d399f5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://pythonrs.wordpress.com' rel='external nofollow' class='url'>Sérgio Berlotto</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-408">
				March 29, 2011 at 17:07</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Great trick !<br />
I didnt know this&#8230;<br />
Tks</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=408#respond' onclick='return addComment.moveForm("comment-408", "408", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-409">
		<div id="comment-409">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/6e77c59937bb455535e97c5aad6b01ae?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">mf</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-409">
				March 29, 2011 at 17:08</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>For the people offering Haskell as a solution: It&#8217;s not quite the (.) operator, which is function composition, nor the ($) operator, which is application. It&#8217;s much closer to ($) though; in fact, it&#8217;s the reverse of it. Given that, writing a `pipe&#8217; operator isn&#8217;t terribly difficult. But, the pipe character is reserved so we&#8217;ll use .|. instead.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="haskell" style="font-family:monospace;"><span style="color: green;">&#40;</span><span style="color: #339933; font-weight: bold;">.|.</span><span style="color: green;">&#41;</span> <span style="color: #339933; font-weight: bold;">=</span> <span style="font-weight: bold;">flip</span> <span style="color: green;">&#40;</span><span style="color: #339933; font-weight: bold;">$</span><span style="color: green;">&#41;</span></pre></td></tr></table></div>

<p>This can then be used as described in the blog post</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="haskell" style="font-family:monospace;">&amp;gt; <span style="color: green;">&#91;</span><span style="color: red;">5</span><span style="color: #339933; font-weight: bold;">,</span> <span style="color: red;">4</span><span style="color: #339933; font-weight: bold;">,</span> <span style="color: red;">4</span><span style="color: #339933; font-weight: bold;">,</span> <span style="color: red;">3</span><span style="color: #339933; font-weight: bold;">,</span> <span style="color: red;">4</span><span style="color: #339933; font-weight: bold;">,</span> <span style="color: red;">2</span><span style="color: green;">&#93;</span> <span style="color: #339933; font-weight: bold;">.|.</span> sort <span style="color: #339933; font-weight: bold;">.|.</span> <span style="font-weight: bold;">take</span> <span style="color: red;">5</span>
<span style="color: green;">&#91;</span><span style="color: red;">2</span><span style="color: #339933; font-weight: bold;">,</span><span style="color: red;">3</span><span style="color: #339933; font-weight: bold;">,</span><span style="color: red;">4</span><span style="color: #339933; font-weight: bold;">,</span><span style="color: red;">4</span><span style="color: #339933; font-weight: bold;">,</span><span style="color: red;">4</span><span style="color: green;">&#93;</span></pre></td></tr></table></div>

</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=409#respond' onclick='return addComment.moveForm("comment-409", "409", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-410">
		<div id="comment-410">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/b194ea4b539316d739b79cf8e79519cc?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Fred Jones</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-410">
				March 29, 2011 at 17:12</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Keep working on this great Python syntax, but steal ideas from many years of CMS Pipelines research and development.</p>
<p><a href="http://en.wikipedia.org/wiki/Hartmann_pipeline" rel="nofollow">Wikipedia</a></p>
<p><a href="http://vm.marist.edu/~pipeline/pipjarg.pdf" rel="nofollow">from John Hartmann</a></p>
<p><a href="http://vm.marist.edu/~pipeline/" rel="nofollow">tons more info</a></p>
<p>Search for <i>cms pipelines windows</i> for various ports of it.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=410#respond' onclick='return addComment.moveForm("comment-410", "410", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mandark bypostauthor even thread-even depth-1" id="li-comment-411">
		<div id="comment-411">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://julien.palard.fr' rel='external nofollow' class='url'>Julien Palard</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-411">
				March 29, 2011 at 17:21</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Fred Jones: I only heard about <a href="http://en.wikipedia.org/wiki/Douglas_McIlroy" rel="nofollow">http://en.wikipedia.org/wiki/Douglas_McIlroy</a> , however documents about CMS Pipelines seems interesting, I&#8217;ll try to read them (if I found some free time) :-)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=411#respond' onclick='return addComment.moveForm("comment-411", "411", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-413">
		<div id="comment-413">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/f9edf141570be78631565a8c8883bde5?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">CJ</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-413">
				March 29, 2011 at 18:07</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>I&#8217;ve been playing with a similar idea for a while: <a href="https://github.com/perimosocordiae/plumbum" rel="nofollow">https://github.com/perimosocordiae/plumbum</a></p>
<p>It&#8217;s certainly a compelling style.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=413#respond' onclick='return addComment.moveForm("comment-413", "413", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-415">
		<div id="comment-415">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/49de3af41258a5772a1bad5c1533191d?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Robert</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-415">
				March 29, 2011 at 19:12</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Why not call it &#8220;infix&#8221;? Maybe a whole class of Haskell type functional ideas can be put together and eventually added to core as &#8220;functools&#8221; or something to make functional programming in Python better?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=415#respond' onclick='return addComment.moveForm("comment-415", "415", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-416">
		<div id="comment-416">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/49de3af41258a5772a1bad5c1533191d?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Robert</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-416">
				March 29, 2011 at 19:19</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Ooops&#8230;already is a functools.  lol</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=416#respond' onclick='return addComment.moveForm("comment-416", "416", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-417">
		<div id="comment-417">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/5115bb51a0f3404a6cb5c50259e2ee84?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Alex</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-417">
				March 29, 2011 at 21:06</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Seems close to one of my experiments, see <a href="http://honeyman.livejournal.com/122675.html" rel="nofollow">http://honeyman.livejournal.com/122675.html</a> (on Russian and Python, but I believe there is more Python there than Russian). Except in my case, every predicate could&#8217;ve been used, as long as the chain/pipe started with a special call.</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=417#respond' onclick='return addComment.moveForm("comment-417", "417", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-418">
		<div id="comment-418">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/db050f597b908de56677c9e95faa6b17?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Alain</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-418">
				March 29, 2011 at 21:53</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Your &#8216;tee&#8217; function is wrongly named. You should call it &#8216;trace&#8217;.<br />
In the same vein, &#8216;select&#8217; should be named &#8216;apply&#8217;</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=418#respond' onclick='return addComment.moveForm("comment-418", "418", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-419">
		<div id="comment-419">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/638b777d94ebb3dab767e9fced8a95c5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Iowa Hansen</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-419">
				March 29, 2011 at 22:08</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Cool library! Is there something similar for Ruby?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=419#respond' onclick='return addComment.moveForm("comment-419", "419", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-423">
		<div id="comment-423">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/16be06b16d37545f788c64f48955ce47?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Andrey Tarantsov</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-423">
				March 30, 2011 at 03:53</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>@Iowa Hansen</p>
<p>Yes, there is something similar for Ruby — just define methods on Enumerable and use . instead of | :)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=423#respond' onclick='return addComment.moveForm("comment-423", "423", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-424">
		<div id="comment-424">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/647bdd327b24597c169bdf89aa465981?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Dave Riggs</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-424">
				March 30, 2011 at 04:02</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Since the expected use is `from pipe import *`, would you please consider using `__all__` so <em>your</em> imports don&#8217;t pollute users&#8217; namespaces?</p>
<p>Cool project, makes for very expressive code!</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=424#respond' onclick='return addComment.moveForm("comment-424", "424", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-425">
		<div id="comment-425">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/ea4776c7b52421a55566eb2a23925c1e?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">John</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-425">
				March 30, 2011 at 07:04</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>I added support for __all__:</p>
<p><a href="https://github.com/mrjbq7/Pipe/commit/e52df7d0764db6651f5b9879ff86d081ff8575b5" rel="nofollow">https://github.com/mrjbq7/Pipe/commit/e52df7d0764db6651f5b9879ff86d081ff8575b5</a></p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=425#respond' onclick='return addComment.moveForm("comment-425", "425", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-427">
		<div id="comment-427">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/b418773a2c51fb9777a1648346fa7394?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn">Andreas</cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-427">
				March 30, 2011 at 09:23</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>I like that! I have only two issues:</p>
<p>- What about debugging? Is there any support imaginable that uncovers the piped values?</p>
<p>- How efficient is piping compared to not piping? Any numbers on that?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=427#respond' onclick='return addComment.moveForm("comment-427", "427", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mandark bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-428">
		<div id="comment-428">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://julien.palard.fr' rel='external nofollow' class='url'>Julien Palard</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-428">
				March 30, 2011 at 09:33</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>John: I merged your commit, thanks :)<br />
Andreas: For debugging purpose, you can insert a &#8216;tee&#8217; in your pipe to dump every item while passed to standard output.</p>
<p>I don&#8217;t ran any benchmark to compare a code using pipe and a code don&#8217;t using it cause I wrote it for readability, (for performance, I write in C <a href="http://www.youtube.com/watch?v=1S1fISh-pag" rel="nofollow">http://www.youtube.com/watch?v=1S1fISh-pag</a> :-p )</p>
<p>Dave Riggs: Thanks to the commit of John, __all__ is now present :)</p>
<p>Alain: I called my tee like the unix command, i&#8217;ll meditate on the best name to choose :)<br />
Alain: For select, i&#8217;ll keep using select as the standard use is not to apply a lambda to each items but to select some items from the input, typically :</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="python" style="font-family:monospace;"><span style="color: #66cc66;">&gt;&gt;&gt;</span> employees | <span style="color: #dc143c;">select</span><span style="color: black;">&#40;</span><span style="color: #ff7700;font-weight:bold;">lambda</span> employee: employee.<span style="color: black;">salary</span><span style="color: black;">&#41;</span> | average</pre></td></tr></table></div>

</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=428#respond' onclick='return addComment.moveForm("comment-428", "428", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://gr3p.com/2011/03/pipes-en-python/' rel='external nofollow' class='url'>Pipes y sintaxis infija en Python | gr3p</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-436">
		<div id="comment-436">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/d6369e8a8a3a00e79bba94ce88d22503?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://tungwaiyip.info/' rel='external nofollow' class='url'>Wai Yip Tung</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-436">
				March 30, 2011 at 23:53</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>In the second code example fib(), don&#8217;t you need to add the Python line continuation character \ in order to spread the expression on multiple lines?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=436#respond' onclick='return addComment.moveForm("comment-436", "436", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-mandark bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-441">
		<div id="comment-441">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://julien.palard.fr' rel='external nofollow' class='url'>Julien Palard</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-441">
				March 31, 2011 at 09:33</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Wai Yip Tung: You&#8217;re right, I fixed it. I missed the \ cause I was writing more a sample than pure python ^^ but it have to be right to not confuse people so it fixed now, thanks :)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=441#respond' onclick='return addComment.moveForm("comment-441", "441", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://dev-tricks.net/python-introducing-ppipe-parallel-pipe' rel='external nofollow' class='url'>Python: Introducing ppipe : Parallel Pipe | {Dev Tricks}</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://rentageekit.com/blog4/2011/03/pipes-in-python-infix-syntax-for-function-calls/' rel='external nofollow' class='url'>Pipes in Python &#8211; Infix Syntax for Function Calls &laquo; Blog 4</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-4435">
		<div id="comment-4435">
			<div class="comment-author vcard">
				<img alt='' src='http://1.gravatar.com/avatar/babe5dbb70c69b308c34d5e13189de30?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://kredythipoteczny.webnode.com/rss/all.xml' rel='external nofollow' class='url'>kalkulator zdolno?ci kredytowej</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-4435">
				April 12, 2012 at 20:15</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>Remarkable issues here. I am very glad to see your post. Thank you so much and I&#8217;m taking a look ahead to contact you. Will you kindly drop me a e-mail?</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=4435#respond' onclick='return addComment.moveForm("comment-4435", "4435", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-mandark bypostauthor odd alt depth-2" id="li-comment-4463">
		<div id="comment-4463">
			<div class="comment-author vcard">
				<img alt='' src='http://0.gravatar.com/avatar/0ba7dc034c0d94c90b4a34da090cc389?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />				<cite class="fn"><a href='http://julien.palard.fr' rel='external nofollow' class='url'>Julien Palard</a></cite> <span class="says">says:</span>			</div><!-- .comment-author .vcard -->
			
			<div class="comment-meta commentmetadata"><a href="http://dev-tricks.net/pipe-infix-syntax-for-python/comment-page-1#comment-4463">
				April 15, 2012 at 20:01</a>			</div><!-- .comment-meta .commentmetadata -->

			<div class="comment-body"><p>My email is very easy, it&#8217;s <a href="mailto:myfirstname@mylastname.fr">myfirstname@mylastname.fr</a> ;-)</p>
</div>

			<div class="reply">
				<a class='comment-reply-link' href='/pipe-infix-syntax-for-python?replytocom=4463#respond' onclick='return addComment.moveForm("comment-4463", "4463", "respond", "286")'>Reply</a>			</div><!-- .reply -->
		</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>


	

								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/pipe-infix-syntax-for-python#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://dev-tricks.net/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='286' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="ae47a79dce" /></p><script type='text/javascript' src='http://dev-tricks.net/wp-content/plugins/akismet/_inc/form.js?ver=3.0.0'></script>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="86"/></p>					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">

<li id="categories-362489592" class="widget-container widget_categories"><h3 class="widget-title">Categories</h3>		<ul>
	<li class="cat-item cat-item-3"><a href="http://dev-tricks.net/category/code" title="View all posts filed under Code">Code</a> (32)
<ul class='children'>
	<li class="cat-item cat-item-9"><a href="http://dev-tricks.net/category/code/c" title="View all posts filed under C#">C#</a> (4)
</li>
	<li class="cat-item cat-item-34"><a href="http://dev-tricks.net/category/code/emacs" title="View all posts filed under emacs">emacs</a> (4)
</li>
	<li class="cat-item cat-item-2"><a href="http://dev-tricks.net/category/code/javascript" title="View all posts filed under Javascript">Javascript</a> (1)
</li>
	<li class="cat-item cat-item-14"><a href="http://dev-tricks.net/category/code/php" title="View all posts filed under PHP">PHP</a> (1)
</li>
	<li class="cat-item cat-item-30"><a href="http://dev-tricks.net/category/code/python" title="View all posts filed under Python">Python</a> (6)
</li>
	<li class="cat-item cat-item-33"><a href="http://dev-tricks.net/category/code/shell-script" title="View all posts filed under Shell Script">Shell Script</a> (2)
</li>
	<li class="cat-item cat-item-5"><a href="http://dev-tricks.net/category/code/silverlight" title="View all posts filed under silverlight">silverlight</a> (4)
	<ul class='children'>
	<li class="cat-item cat-item-25"><a href="http://dev-tricks.net/category/code/silverlight/blend-silverlight-code" title="View all posts filed under Blend">Blend</a> (2)
</li>
	</ul>
</li>
</ul>
</li>
	<li class="cat-item cat-item-32"><a href="http://dev-tricks.net/category/sysadmin" title="View all posts filed under Sysadmin">Sysadmin</a> (3)
</li>
	<li class="cat-item cat-item-11"><a href="http://dev-tricks.net/category/unix" title="View all posts filed under unix">unix</a> (4)
</li>
		</ul>
</li><li id="meta-3" class="widget-container widget_meta"><h3 class="widget-title">Meta</h3>			<ul>
						<li><a href="http://dev-tricks.net/wp-login.php">Log in</a></li>
			<li><a href="http://dev-tricks.net/feed" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://dev-tricks.net/comments/feed" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
<li><a href="https://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>			</ul>
</li><li id="advman-3" class="widget-container Advman_Widget"><h3 class="widget-title">ad</h3><script type="text/javascript"><!--
google_ad_client = "ca-pub-6113965509346698";
/* dev-tricks-1 */
google_ad_slot = "5615092771";
google_ad_width = 120;
google_ad_height = 600;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></li>			</ul>
		</div><!-- #primary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://dev-tricks.net/" title="{Dev Tricks}" rel="home">
					{Dev Tricks}				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/" title="Semantic Personal Publishing Platform">Proudly powered by WordPress.</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->


		<div id="fb-root"></div>
		<script>(function(d, s, id) {
		  var js, fjs = d.getElementsByTagName(s)[0];
		  if (d.getElementById(id)) return;
		  js = d.createElement(s); js.id = id;
		  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&version=v2.0";
		  fjs.parentNode.insertBefore(js, fjs);
		}(document, 'script', 'facebook-jssdk'));</script>		<!-- Advertising Manager v3.4.19 (0.291 seconds.) -->
<!-- Powered by WPtouch: 3.3.3 --><script type='text/javascript' src='http://dev-tricks.net/wp-includes/js/comment-reply.min.js?ver=3.9.1'></script>
</body>
</html>

<!-- Dynamic page generated in 0.284 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-06-30 14:38:59 -->

<!-- super cache -->