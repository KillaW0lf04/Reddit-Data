<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Python String Format Cookbook | </title>
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="http://mkaz.com/xmlrpc.php">

<link rel="alternate" type="application/rss+xml" title="mkaz.com &raquo; Feed" href="http://mkaz.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="mkaz.com &raquo; Comments Feed" href="http://mkaz.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="mkaz.com &raquo; Python String Format Cookbook Comments Feed" href="http://mkaz.com/2012/10/10/python-string-format/feed/" />
<link rel='stylesheet' id='jetpack-subscriptions-css'  href='http://mkaz.com/wp-content/plugins/jetpack/modules/subscriptions/subscriptions.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='jetpack-widgets-css'  href='http://mkaz.com/wp-content/plugins/jetpack/modules/widgets/widgets.css?ver=20121003' type='text/css' media='all' />
<link rel='stylesheet' id='risa-style-css'  href='http://mkaz.com/wp-content/themes/risa/style.css?ver=3.9.1' type='text/css' media='all' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://mkaz.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://mkaz.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Sunbeam Tiger' href='http://mkaz.com/2012/10/01/sunbeam-tiger/' />
<link rel='next' title='Python Dates' href='http://mkaz.com/2012/10/27/python-dates/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='canonical' href='http://mkaz.com/2012/10/10/python-string-format/' />
<link rel='shortlink' href='http://wp.me/p2XZxB-aV' />

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="Python String Format Cookbook" />
<meta property="og:url" content="http://mkaz.com/2012/10/10/python-string-format/" />
<meta property="og:description" content="Every time I use Python&#039;s string formatter, version 2.7 and up, I get it wrong and for the life of me I can&#039;t figure out their documentation format. I got very used to the older % method. So I star..." />
<meta property="article:published_time" content="2012-10-10T13:10:22+00:00" />
<meta property="article:modified_time" content="2012-10-10T13:10:22+00:00" />
<meta property="article:author" content="http://mkaz.com/author/mkaz/" />
<meta property="og:site_name" content="mkaz.com" />
<meta property="og:image" content="http://wordpress.com/i/blank.jpg" />
<meta name="twitter:site" content="@jetpack" />
<meta name="twitter:card" content="summary" />
<style type="text/css" id="syntaxhighlighteranchor"></style>
</head>

<body class="single single-post postid-677 single-format-standard custom-background">
<div id="page" class="hfeed site">
	
	<header id="masthead" class="site-header" role="banner">

		<div class="site-branding">
			<div class="cell-block"><div class="gravatar-photo"></div></div>
			<div class="cell-block"><h3 class="site-title"><a href="http://mkaz.com/" rel="home">mkaz.com</a></h3></div>
		</div>

		<nav id="site-navigation" class="main-navigation" role="navigation">
			<h1 class="menu-toggle">Menu</h1>
			<a class="skip-link screen-reader-text" href="#content">Skip to content</a>

			<div class="menu-header-menu-container"><ul id="menu-header-menu" class="menu"><li id="menu-item-1119" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1119"><a href="/">Home</a></li>
<li id="menu-item-1120" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1120"><a href="https://twitter.com/mkaz">@mkaz</a></li>
<li id="menu-item-1118" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1118"><a href="https://github.com/mkaz">Github</a></li>
<li id="menu-item-3295" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3295"><a href="http://mkaz.com/about/">about</a></li>
</ul></div>		</nav>
		
	</header>
		
	<div id="content" class="site-content">

	<div id="primary" class="content-area">
		<main id="main" class="site-main" role="main">

		
			
<article id="post-677" class="post-677 post type-post status-publish format-standard hentry category-solutions-log tag-python tag-string-format">
		<header class="entry-header">
					<h1 class="entry-title">Python String Format Cookbook</h1>
		
		<div class="entry-meta">
			<span class="posted-on">Posted on <a href="http://mkaz.com/2012/10/10/python-string-format/" rel="bookmark"><time class="entry-date published" datetime="2012-10-10T06:10:22+00:00">October 10, 2012</time></a></span><span class="byline"> by <span class="author vcard"><a class="url fn n" href="http://mkaz.com/author/mkaz/">Marcus Kazmierczak</a></span></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

			<div class="entry-content">
			<p>Every time I use Python&#8217;s string formatter, version 2.7 and up,  I get it wrong and for the life of me I can&#8217;t figure out their documentation format. I got very used to the older % method. So I started to create my own string format cookbook. Let me know in the comments of any other good example to include.</p>
<h2>String Formatting Cookbook</h2>
<h3>Number Formatting</h3>
<p>The following table shows various ways to format numbers using python&#8217;s <i>newish</i> str.format(), examples for both float formatting and integers.</p>
<p>To run examples use <code> print("FORMAT".format(NUMBER)); </code><br />
So to get the output of the first example, you would run: <code> print("{:.2f}".format(3.1415926));</code></p>
<table>
<tr>
<th>Number </th>
<th> Format </th>
<th> Output </th>
<th> Description </th>
</tr>
<tr>
<td> 3.1415926 </td>
<td> {:.2f} </td>
<td> 3.14 </td>
<td> 2 decimal places </td>
</tr>
<tr>
<td> 3.1415926 </td>
<td> {:+.2f} </td>
<td> +3.14 </td>
<td> 2 decimal places with sign </td>
</tr>
<tr>
<td> -1 </td>
<td> {:+.2f} </td>
<td> -1.00 </td>
<td>  2 decimal places with sign </td>
</tr>
<tr>
<td> 2.71828 </td>
<td> {:.0f} </td>
<td> 3 </td>
<td> No decimal places </td>
</tr>
<tr>
<td> 5 </td>
<td> {:0&gt;2d} </td>
<td> 05 </td>
<td> Pad number with zeros (left padding, width 2) </td>
</tr>
<tr>
<td> 5 </td>
<td> {:x&lt;4d} </td>
<td> 5xxx </td>
<td> Pad number with x's (right padding, width 4) </td>
</tr>
<tr>
<td> 10 </td>
<td> {:x&lt;4d} </td>
<td> 10xx </td>
<td> Pad number with x's (right padding, width 4) </td>
</tr>
<tr>
<td> 1000000 </td>
<td> {:,} </td>
<td> 1,000,000 </td>
<td> Number format with comma separator </td>
</tr>
<tr>
<td> 0.25 </td>
<td> {:.2%} </td>
<td> 25.00% </td>
<td> Format percentage </td>
</tr>
<tr>
<td> 1000000000 </td>
<td> {:.2e} </td>
<td> 1.00e+09 </td>
<td> Exponent notation </td>
</tr>
<tr>
<td> 13 </td>
<td> {:10d} </td>
<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13</td>
<td> Right aligned (default, width 10) </td>
</tr>
<tr>
<td> 13 </td>
<td> {:&lt;10d} </td>
<td> 13 </td>
<td> Left aligned (width 10)</td>
</tr>
<tr>
<td> 13 </td>
<td> {:^10d} </td>
<td> &nbsp;&nbsp;&nbsp;&nbsp;13 </td>
<td> Center aligned (width 10) </td>
</tr>
</table>
<h2>string.format() basics</h2>
<p>Here are a couple of example of basic string substitution, the <code>{}</code> is the placeholder for the substituted variables. If no format is specified, it will insert and format as a string.</p>
<pre><code class="python">s1 = "so much depends upon {}".format("a red wheel barrow")
s2 = "glazed with {} water beside the {} chickens".format("rain", "white")
</code></pre>
<p>You can also use the numeric position of the variables and change them in the strings, this gives some flexibility when doing the formatting, if you made a mistake in the order you can easily correct without shuffling all variables around.</p>
<pre><code class="python">s1 = " {0} is better than {1} ".format("emacs", "vim")
s2 = " {1} is better than {0} ".format("emacs", "vim")
</code></pre>
<h2>Older "%" string formatter</h2>
<p>Prior to python 2.6, the way to format strings tended to be a bit simpler, though limited with the number of arguments it can receive. These methods still work as of Python 3.3, but there are veiled threats of deprecating them completely though no time table. [<a href="http://www.python.org/dev/peps/pep-3101/">PEP-3101</a>]</p>
<h3>Formating a floating point number:</h3>
<pre><code class="python">pi = 3.14159
print(" pi = %1.2f " % pi)
</code></pre>
<h3>Multiple Substitution Values</h3>
<pre><code class="python">s1 = "cats"
s2 = "dogs"
s3 = " %s and %s living together" % (s1, s2)
</code></pre>
<h3>Not Enough Arguments</h3>
<p>Using the older format method, I would often get the error "TypeError: not enough arguments for format string" because I miscounted my substitution, do something like the following made it easy to miss a variable.</p>
<pre><code class="python">set = " (%s, %s, %s, %s, %s, %s, %s, %s) " % (a,b,c,d,e,f,g,h,i)
</code></pre>
<p>The new python string formatter you can use numbered parameters so you don't have to count how many you have, at least on half of it.</p>
<pre><code class="python">set = " ({0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}) ".format(a,b,c,d,e,f,g)
</code></pre>
<h2>More String Formatting with .format()</h2>
<p>The format() function offers a fair amount of additional features and capabilities, here are a few useful tips and tricks using .format()</p>
<h3>Named Arguments</h3>
<p>You can use the new string format as a templating engine and use named arguments, instead of requiring a strict order.</p>
<pre><code class="python">madlib = " I {verb} the {object} off the {place} ".format(verb="took", object="cheese", place="table")
&gt;&gt;&gt; I took the cheese off the table
</code></pre>
<h3>Reuse Same Variable Multiple Times</h3>
<p>Using the % formatter, requires a strict ordering of variables, the .format() method allows you to put them in any order as we saw above in the basics, but also allows for reuse.</p>
<pre><code class="python">str = "Oh {0}, {0}! wherefore art thou {0}?".format("Romeo")
&gt;&gt;&gt; Oh Romeo, Romeo! wherefore art thou Romeo?
</code></pre>
<h3>Convert Values to different Bases</h3>
<p>You can use the following letters to convert a number to their bases, <b>d</b>ecimal, he<b>x</b>, <b>o</b>ctal, <b>b</b>inary</p>
<pre><code class="python">print("{0:d} - {0:x} - {0:o} - {0:b} ".format(21))
&gt;&gt;&gt; 21 - 15 - 25 - 10101
</code></pre>
<h3>Use Format as a Function</h3>
<p>You can use .format as a function which allows for some separation of text and formatting from code. For example at the beginning of your program you could include all your formats and then use later. This also could be a nice way to handle internationalization which not only requires different text but often requires different formats for numbers.</p>
<pre><code class="python">## defining formats
email_f = "Your email address was {email}".format

## use elsewhere
print(email_f(email="bob@example.com"))
</code></pre>
<p>Hat tip to <a href="http://www.reddit.com/r/Python/comments/174e1i/python_string_format_cookbook/c82ot0h">earthboundkids</a> who provided this on reddit.</p>
<h3> Escaping Braces </h3>
<p>If you need to use braces when using str.format(), just double up</p>
<pre><code class="python">print(" The {} set is often represented as {{0}} ".format("empty"))
&gt;&gt;&gt; The empty set is often represented as {0}
</code></pre>
<h3> Reference </h3>
<ul>
<li> <a href="http://docs.python.org/3/library/string.html">Python String Library</a> - Standard Library Documentation </li>
<li> <a href="http://www.amazon.com/gp/product/0672329786/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0672329786&amp;linkCode=as2&amp;tag=mkazcom-20">Python Essential Reference</a> - book on Amazon </li>
</ul>
					</div><!-- .entry-content -->
		
	<footer class="entry-meta">
					<span class="cat-links">
				Posted in <a href="http://mkaz.com/category/solutions-log/" title="View all posts in solutions log" rel="category tag">solutions log</a>			</span>
			
						<span class="tags-links">
				Tagged <a href="http://mkaz.com/tag/python/" rel="tag">python</a>, <a href="http://mkaz.com/tag/string-format/" rel="tag">string format</a>			</span>
		
			</footer><!-- .entry-meta -->
</article><!-- #post-## -->

				<nav role="navigation" id="nav-below" class="post-navigation">
		<h1 class="screen-reader-text">Post navigation</h1>

	
		<div class="nav-previous"><a href="http://mkaz.com/2012/10/01/sunbeam-tiger/" rel="prev"><span class="meta-nav">&larr;</span> Sunbeam Tiger</a></div>		<div class="nav-next"><a href="http://mkaz.com/2012/10/27/python-dates/" rel="next">Python Dates <span class="meta-nav">&rarr;</span></a></div>
	
	</nav><!-- #nav-below -->
	
			
		
		</main><!-- #main -->
	</div><!-- #primary -->

	<div id="secondary" class="widget-areas clear" role="complementary">
		<div class="widget-areas-inner">
										<div class="widget-area">
					<aside id="categories-2" class="widget widget_categories"><h1 class="widget-title">Categories</h1>		<ul>
	<li class="cat-item cat-item-36"><a href="http://mkaz.com/category/business/" title="View all posts filed under business">business</a>
</li>
	<li class="cat-item cat-item-121"><a href="http://mkaz.com/category/gallery/" title="View all posts filed under gallery">gallery</a>
</li>
	<li class="cat-item cat-item-122"><a href="http://mkaz.com/category/gear/" title="View all posts filed under gear">gear</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://mkaz.com/category/newsletter/" title="View all posts filed under newsletter">newsletter</a>
</li>
	<li class="cat-item cat-item-123"><a href="http://mkaz.com/category/photography/" title="View all posts filed under photography">photography</a>
</li>
	<li class="cat-item cat-item-23"><a href="http://mkaz.com/category/solutions-log/" title="View all posts filed under solutions log">solutions log</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://mkaz.com/category/technology/" title="View all posts filed under technology">technology</a>
</li>
		</ul>
</aside>				</div>
										<div class="widget-area">
							<aside id="recent-posts-2" class="widget widget_recent_entries">		<h1 class="widget-title">Recent Posts</h1>		<ul>
					<li>
				<a href="http://mkaz.com/2014/05/12/little-gardenia/">Little Gardenia</a>
						</li>
					<li>
				<a href="http://mkaz.com/2014/05/07/lanyon-a-markdown-web-server/">Lanyon, a markdown web server</a>
						</li>
					<li>
				<a href="http://mkaz.com/2014/04/17/the-bash-prompt/">The ★ Bash Prompt</a>
						</li>
					<li>
				<a href="http://mkaz.com/2014/04/12/purple-daisies/">Purple Daisies</a>
						</li>
					<li>
				<a href="http://mkaz.com/2014/04/11/dandelion-2/">Dandelion</a>
						</li>
				</ul>
		</aside>				</div>
										<div class="widget-area">
					<aside id="search-2" class="widget widget_search"><form role="search" method="get" class="search-form" action="http://mkaz.com/">
	<label>
		<span class="screen-reader-text">Search for:</span>
		<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s">
	</label>
	<input type="submit" class="search-submit" value="Search">
</form>
</aside>				</div>
					</div>
	</div><!-- #secondary -->

	</div><!-- #content -->

	<footer id="colophon" class="site-footer" role="contentinfo">
		<div class="site-info">
			&copy; 1997-2014 mkaz.com
			<span class="sep"> &middot; </span>
			<b>Risa Theme</b> by <a href="http://mkaz.com/" rel="designer">Marcus Kazmierczak</a>
			<span class="sep"> &middot; </span>
			Powered by <a href="http://wordpress.org/" rel="generator">WordPress</a>

		</div><!-- .site-info -->
	</footer><!-- #colophon -->
</div><!-- #page -->

<script type='text/javascript' src='http://s0.wp.com/wp-content/js/devicepx-jetpack.js?ver=201426'></script>

	<script src="http://stats.wordpress.com/e-201426.js" type="text/javascript"></script>
	<script type="text/javascript">
	st_go({v:'ext',j:'1:3.0.2',blog:'43850591',post:'677',tz:'0'});
	var load_cmc = function(){linktracker_init(43850591,677,2);};
	if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
	else load_cmc();
	</script>
</body>
</html>

<!-- Dynamic page generated in 0.330 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2014-06-29 21:42:26 -->

<!-- Compression = gzip -->