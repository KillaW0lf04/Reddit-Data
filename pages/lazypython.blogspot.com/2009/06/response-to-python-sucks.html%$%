<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html dir='ltr'>
<head>
<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'/>
<script type="text/javascript">(function() { var b=window,f="chrome",g="tick",k="jstiming";(function(){function d(a){this.t={};this.tick=function(a,d,c){var e=void 0!=c?c:(new Date).getTime();this.t[a]=[e,d];if(void 0==c)try{b.console.timeStamp("CSI/"+a)}catch(h){}};this[g]("start",null,a)}var a;b.performance&&(a=b.performance.timing);var n=a?new d(a.responseStart):new d;b.jstiming={Timer:d,load:n};if(a){var c=a.navigationStart,h=a.responseStart;0<c&&h>=c&&(b[k].srt=h-c)}if(a){var e=b[k].load;0<c&&h>=c&&(e[g]("_wtsrt",void 0,c),e[g]("wtsrt_","_wtsrt",h),e[g]("tbsd_","wtsrt_"))}try{a=null,
b[f]&&b[f].csi&&(a=Math.floor(b[f].csi().pageT),e&&0<c&&(e[g]("_tbnd",void 0,b[f].csi().startE),e[g]("tbnd_","_tbnd",c))),null==a&&b.gtbExternal&&(a=b.gtbExternal.pageT()),null==a&&b.external&&(a=b.external.pageT,e&&0<c&&(e[g]("_tbnd",void 0,b.external.startE),e[g]("tbnd_","_tbnd",c))),a&&(b[k].pt=a)}catch(p){}})();b.tickAboveFold=function(d){var a=0;if(d.offsetParent){do a+=d.offsetTop;while(d=d.offsetParent)}d=a;750>=d&&b[k].load[g]("aft")};var l=!1;function m(){l||(l=!0,b[k].load[g]("firstScrollTime"))}b.addEventListener?b.addEventListener("scroll",m,!1):b.attachEvent("onscroll",m);
 })();</script>
<meta content='blogger' name='generator'/>
<link href='http://lazypython.blogspot.co.uk/favicon.ico' rel='icon' type='image/x-icon'/>
<link href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html' rel='canonical'/>
<link rel="alternate" type="application/atom+xml" title="Lazy Pythonista - Atom" href="http://lazypython.blogspot.com/feeds/posts/default" />
<link rel="alternate" type="application/rss+xml" title="Lazy Pythonista - RSS" href="http://lazypython.blogspot.com/feeds/posts/default?alt=rss" />
<link rel="service.post" type="application/atom+xml" title="Lazy Pythonista - Atom" href="http://www.blogger.com/feeds/7176062489626496619/posts/default" />

<link rel="alternate" type="application/atom+xml" title="Lazy Pythonista - Atom" href="http://lazypython.blogspot.com/feeds/6171883798243766809/comments/default" />
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<title>Lazy Pythonista: A response to "Python sucks"</title>
<link type='text/css' rel='stylesheet' href='https://www.blogger.com/static/v1/widgets/3841957138-widget_css_bundle.css' />
<link type='text/css' rel='stylesheet' href='https://www.blogger.com/dyn-css/authorization.css?targetBlogID=7176062489626496619&zx=54fdd861-6ba5-4792-ac08-cb7519630bf1' />
<style id='page-skin-1' type='text/css'><!--
/*
-----------------------------------------------
Blogger Template Style
Name:     Stretch Denim
Designer: Darren Delaye
URL:      www.DarrenDelaye.com
Date:     11 Jul 2006
-----------------------------------------------
*/
/* Variable definitions
====================
<Variable name="bgColor" description="Page Background Color"
type="color" default="#efefef">
<Variable name="textColor" description="Text Color"
type="color" default="#333333">
<Variable name="linkColor" description="Link Color"
type="color" default="#336699">
<Variable name="headerBgColor" description="Page Header Background Color"
type="color" default="#336699">
<Variable name="headerTextColor" description="Page Header Text Color"
type="color" default="#ffffff">
<Variable name="headerCornersColor" description="Page Header Corners Color"
type="color" default="#528bc5">
<Variable name="mainBgColor" description="Main Background Color"
type="color" default="#ffffff">
<Variable name="borderColor" description="Border Color"
type="color" default="#cccccc">
<Variable name="dateHeaderColor" description="Date Header Color"
type="color" default="#999999">
<Variable name="sidebarTitleBgColor" description="Sidebar Title Background Color"
type="color" default="#ffd595">
<Variable name="sidebarTitleTextColor" description="Sidebar Title Text Color"
type="color" default="#333333">
<Variable name="bodyFont" description="Text Font"
type="font" default="normal normal 100% Verdana, Arial, Sans-serif;">
<Variable name="headerFont" description="Page Header Font"
type="font" default="normal normal 210% Verdana, Arial, Sans-serif;">
<Variable name="startSide" description="Start side in blog language"
type="automatic" default="left">
<Variable name="endSide" description="End side in blog language"
type="automatic" default="right">
*/
body {
background: #efefef;
margin: 0;
padding: 0px;
font: x-small Verdana, Arial;
text-align: center;
color: #333333;
font-size/* */:/**/small;
font-size: /**/small;
}
a:link {
color: #336699;
}
a:visited {
color: #336699;
}
a img {
border-width: 0;
}
#outer-wrapper {
font: normal normal 100% Verdana, Arial, Sans-serif;;
}
/* Header
----------------------------------------------- */
#header-wrapper {
margin:0;
padding: 0;
background-color: #528bc5;
text-align: left;
}
#header {
margin: 0 2%;
background-color: #336699;
color: #ffffff;
padding: 0;
font: normal normal 210% Verdana, Arial, Sans-serif;;
position: relative;
}
h1.title {
padding-top: 38px;
margin: 0 1% .1em;
line-height: 1.2em;
font-size: 100%;
}
h1.title a, h1.title a:visited {
color: #ffffff;
text-decoration: none;
}
#header .description {
display: block;
margin: 0 1%;
padding: 0 0 40px;
line-height: 1.4em;
font-size: 50%;
}
/* Content
----------------------------------------------- */
.clear {
clear: both;
}
#content-wrapper {
margin: 0 2%;
padding: 0 0 15px;
text-align: left;
background-color: #ffffff;
border: 1px solid #cccccc;
border-top: 0;
}
#main-wrapper {
margin-left: 1%;
width: 64%;
float: left;
background-color: #ffffff;
display: inline;       /* fix for doubling margin in IE */
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;      /* fix for long non-text content breaking IE sidebar float */
}
#sidebar-wrapper {
margin-right: 1%;
width: 29%;
float: right;
background-color: #ffffff;
display: inline;       /* fix for doubling margin in IE */
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;      /* fix for long non-text content breaking IE sidebar float */
}
/* Headings
----------------------------------------------- */
h2, h3 {
margin: 0;
}
/* Posts
----------------------------------------------- */
.date-header {
margin: 1.5em 0 0;
font-weight: normal;
color: #999999;
font-size: 100%;
}
.post {
margin: 0 0 1.5em;
padding-bottom: 1.5em;
}
.post-title {
margin: 0;
padding: 0;
font-size: 125%;
font-weight: bold;
line-height: 1.1em;
}
.post-title a, .post-title a:visited, .post-title strong {
text-decoration: none;
color: #333333;
font-weight: bold;
}
.post div {
margin: 0 0 .75em;
line-height: 1.3em;
}
.post-footer {
margin: -.25em 0 0;
color: #333333;
font-size: 87%;
}
.post-footer .span {
margin-right: .3em;
}
.post img, table.tr-caption-container {
padding: 4px;
border: 1px solid #cccccc;
}
.tr-caption-container img {
border: none;
padding: 0;
}
.post blockquote {
margin: 1em 20px;
}
.post blockquote p {
margin: .75em 0;
}
/* Comments
----------------------------------------------- */
#comments h4 {
margin: 1em 0;
color: #999999;
}
#comments h4 strong {
font-size: 110%;
}
#comments-block {
margin: 1em 0 1.5em;
line-height: 1.3em;
}
#comments-block dt {
margin: .5em 0;
}
#comments-block dd {
margin: .25em 0 0;
}
#comments-block dd.comment-footer {
margin: -.25em 0 2em;
line-height: 1.4em;
font-size: 78%;
}
#comments-block dd p {
margin: 0 0 .75em;
}
.deleted-comment {
font-style:italic;
color:gray;
}
.feed-links {
clear: both;
line-height: 2.5em;
}
#blog-pager-newer-link {
float: left;
}
#blog-pager-older-link {
float: right;
}
#blog-pager {
text-align: center;
}
/* Sidebar Content
----------------------------------------------- */
.sidebar h2 {
margin: 1.6em 0 .5em;
padding: 4px 5px;
background-color: #ffd595;
font-size: 100%;
color: #333333;
}
.sidebar ul {
margin: 0;
padding: 0;
list-style: none;
}
.sidebar li {
margin: 0;
padding-top: 0;
padding-right: 0;
padding-bottom: .5em;
padding-left: 15px;
text-indent: -15px;
line-height: 1.5em;
}
.sidebar {
color: #333333;
line-height:1.3em;
}
.sidebar .widget {
margin-bottom: 1em;
}
.sidebar .widget-content {
margin: 0 5px;
}
/* Profile
----------------------------------------------- */
.profile-img {
float: left;
margin-top: 0;
margin-right: 5px;
margin-bottom: 5px;
margin-left: 0;
padding: 4px;
border: 1px solid #cccccc;
}
.profile-data {
margin:0;
text-transform:uppercase;
letter-spacing:.1em;
font-weight: bold;
line-height: 1.6em;
font-size: 78%;
}
.profile-datablock {
margin:.5em 0 .5em;
}
.profile-textblock {
margin: 0.5em 0;
line-height: 1.6em;
}
/* Footer
----------------------------------------------- */
#footer {
clear: both;
text-align: center;
color: #333333;
}
#footer .widget {
margin:.5em;
padding-top: 20px;
font-size: 85%;
line-height: 1.5em;
text-align: left;
}
/** Page structure tweaks for layout editor wireframe */
body#layout #header {
width: 750px;
}

--></style>
<script type="text/javascript">var a="indexOf",b="&m=1",e="(^|&)m=",f="?",g="?m=1";function h(){var c=window.location.href,d=c.split(f);switch(d.length){case 1:return c+g;case 2:return 0<=d[1].search(e)?null:c+b;default:return null}}var k=navigator.userAgent;if(-1!=k[a]("Mobile")&&-1!=k[a]("WebKit")&&-1==k[a]("iPad")||-1!=k[a]("Opera Mini")||-1!=k[a]("IEMobile")){var l=h();l&&window.location.replace(l)};
</script><script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('headEnd');
</script></head>
<body>
<div class='navbar section' id='navbar'><div class='widget Navbar' id='Navbar1'><script type="text/javascript">
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener('load',
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent('onload', function(){ object[attribute] = val; });
      }
    }
  </script>
<div id="navbar-iframe-container"></div>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<script type="text/javascript">
        gapi.load("gapi.iframes:gapi.iframes.style.bubble", function() {
          if (gapi.iframes && gapi.iframes.getContext) {
            gapi.iframes.getContext().openChild({
                url: 'https://www.blogger.com/navbar.g?targetBlogID\0757176062489626496619\46blogName\75Lazy+Pythonista\46publishMode\75PUBLISH_MODE_BLOGSPOT\46navbarType\75BLUE\46layoutType\75LAYOUTS\46searchRoot\75http://lazypython.blogspot.com/search\46blogLocale\75en\46v\0752\46homepageUrl\75http://lazypython.blogspot.com/\46targetPostID\0756171883798243766809\46blogPostOrPageUrl\75http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html\46vt\75-8935038196978604426',
                where: document.getElementById("navbar-iframe-container"),
                id: "navbar-iframe"
            });
          }
        });
      </script><script type="text/javascript">
(function() {
var script = document.createElement('script');
script.type = 'text/javascript';
script.src = '//pagead2.googlesyndication.com/pagead/js/google_top_exp.js';
var head = document.getElementsByTagName('head')[0];
if (head) {
head.appendChild(script);
}})();
</script>
</div></div>
<div id='outer-wrapper'><div id='wrap2'>
<!-- skip links for text browsers -->
<span id='skiplinks' style='display:none;'>
<a href='#main'>skip to main </a> |
      <a href='#sidebar'>skip to sidebar</a>
</span>
<div id='header-wrapper'>
<div class='header section' id='header'><div class='widget Header' id='Header1'>
<div id='header-inner'>
<div class='titlewrapper'>
<h1 class='title'>
<a href='http://lazypython.blogspot.co.uk/'>Lazy Pythonista</a>
</h1>
</div>
<div class='descriptionwrapper'>
<p class='description'><span>
</span></p>
</div>
</div>
</div></div>
</div>
<div id='content-wrapper'>
<div id='crosscol-wrapper' style='text-align:center'>
<div class='crosscol section' id='crosscol'></div>
</div>
<div id='main-wrapper'>
<div class='main section' id='main'><div class='widget Blog' id='Blog1'>
<div class='blog-posts hfeed'>
<!-- google_ad_section_start(name=default) -->

          <div class="date-outer">
        
<h2 class='date-header'><span>Thursday, June 4, 2009</span></h2>

          <div class="date-posts">
        
<div class='post-outer'>
<div class='post hentry uncustomized-post-template' itemprop='blogPost' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'>
<meta content='7176062489626496619' itemprop='blogId'/>
<meta content='6171883798243766809' itemprop='postId'/>
<a name='6171883798243766809'></a>
<h3 class='post-title entry-title' itemprop='name'>
A response to "Python sucks"
</h3>
<div class='post-header'>
<div class='post-header-line-1'></div>
</div>
<div class='post-body entry-content' id='post-body-6171883798243766809' itemprop='description articleBody'>
I recently saw an article on Programming Reddit, titled, "Python sucks: Why Python is not my favourite programming language".  I personally like Python quite a lot (see my blog title), but I figured I might read an interesting critique, probably from a very different point of view from mine.  Unfortunately that is the opposite of what I found.  The post was, at best, a horribly misinformed inaccurate critique, and at worst an intentionally dishonest, misleading, farce.  The post can be found <a href="http://call-cc.blogspot.com/2009/06/2-rarely-cited-reasons-why-python-sucks.html">here</a>.  I felt the need to respond to it precisely because it is so lacking in facts, and reading it one can get impressions that are completely incorrect, and I am hoping I can correct some of these.<br /><br />The post's initial statements about iterating over a file are accurate.  However, he then goes on to say Python supports closures (which is true), and follows this with a piece of code that has absolutely nothing to do with closures, it is actually a callable object (or as C++ calls them, functors).  The authors seems to take issue with these (though he doesn't explain why), ignoring the fact that Python has complete support for actual closures, not just callable objects.<br /><br />The author then claims that Python has many other such arbitrary rules, using as an example the "yield" keyword.  The author appears to be claiming the behavior of the yield keyword is arbitrary and poorly defined, however it's very unclear what his point actually is, or what the source of his complaints is.  My only response can be to say that the "yield" keyword *always* turns the function it's used in into a generator, that is to say it returns an iterable that lazy evaluates the function, pausing each time it reaches the yield statement, and returning that object.<br /><br />The author claims that many of the arbitrary decisions in Python are a result of Guido's insistence on a specific programming style, using as an example crippled lambdas.  It is generally accepted that in Python lambda is just syntactic sugar for defining a function within any context (which the author completely ignores in his discussion of closure).  To say that lambdas are crippled is to ignore the fact that absolutely nothing is rendered impossible by this, except for unreadable one liners.<br /><br />The author's final complaint is directed at Python's C-API.  This is possibly his least accurate critique.  The author compares what is necessary to use a C library from within various programming languages.  He shows that in Python all you have to do is import the library like you would for normal Python code.  However, he goes on to say that for this to work you need to write lots of C boilerplate, and says that in other programming languages (showing examples from Haskell and PLT Scheme) this boiler plate is unnecessary.  However, this is a completely disingenuous comparison.  This is because what he is showing for Haskell and Scheme is their foreign function interface, not any actual language level integration.  To do what he shows in Python is perfectly possible using the included ctypes library.  I'm not familiar with the C-API of either Haskell or PLT Scheme, however I imagine that in order to work seamlessly and have the APIs appear the same as in code in those languages it is still necessary to write boiler plate so that the interpreter can recognize them.<br /><br />In conclusion that blog post was a critique completely devoid of value, not worth the bytes that are used to store it.  This is not to say there aren't any valid criticisms of Python, there are many, as evidenced by any number of recent blog posts discussing "5 things they hate about technology X", where technology X is something the author likes, because no technology is perfect, however no such honest critique was present here.
<div style='clear: both;'></div>
</div>
<div class='post-footer'>
<div class='post-footer-line post-footer-line-1'>
<span class='post-author vcard'>
Posted by
<span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'>
<meta content='http://www.blogger.com/profile/14054821112394577330' itemprop='url'/>
<a class='g-profile' href='http://www.blogger.com/profile/14054821112394577330' rel='author' title='author profile'>
<span itemprop='name'>Alex</span>
</a>
</span>
</span>
<span class='post-timestamp'>
at
<meta content='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html' itemprop='url'/>
<a class='timestamp-link' href='http://lazypython.blogspot.co.uk/2009/06/response-to-python-sucks.html' rel='bookmark' title='permanent link'><abbr class='published' itemprop='datePublished' title='2009-06-04T23:27:00-04:00'>11:27 PM</abbr></a>
</span>
<span class='reaction-buttons'>
</span>
<span class='star-ratings'>
</span>
<span class='post-comment-link'>
</span>
<span class='post-backlinks post-comment-link'>
</span>
<span class='post-icons'>
<span class='item-action'>
<a href='http://www.blogger.com/email-post.g?blogID=7176062489626496619&postID=6171883798243766809' title='Email Post'>
<img alt='' class='icon-action' height='13' src='http://img1.blogblog.com/img/icon18_email.gif' width='18'/>
</a>
</span>
<span class='item-control blog-admin pid-1797685848'>
<a href='http://www.blogger.com/post-edit.g?blogID=7176062489626496619&postID=6171883798243766809&from=pencil' title='Edit Post'>
<img alt='' class='icon-action' height='18' src='http://img2.blogblog.com/img/icon18_edit_allbkg.gif' width='18'/>
</a>
</span>
</span>
<div class='post-share-buttons goog-inline-block'>
</div>
</div>
<div class='post-footer-line post-footer-line-2'>
<span class='post-labels'>
Labels:
<a href='http://lazypython.blogspot.co.uk/search/label/python' rel='tag'>python</a>,
<a href='http://lazypython.blogspot.co.uk/search/label/response' rel='tag'>response</a>
</span>
</div>
<div class='post-footer-line post-footer-line-3'>
<span class='post-location'>
</span>
</div>
</div>
</div>
<div class='comments' id='comments'>
<a name='comments'></a>
<h4>9 comments:</h4>
<div class='comments-content'>
<script async='async' src='//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js' type='text/javascript'></script>
<script type='text/javascript'>
    (function() {
      var items = [{'id': '5570924346448568651', 'body': 'And he goes by the name of \46quot;Blog User\46quot;. I think it\46#39;s just an elaborate troll blog.', 'timestamp': '1244187773068', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751244187773068#c5570924346448568651', 'author': {'name': 'Anonymous', 'avatarUrl': 'http://img1.blogblog.com/img/blank.gif', 'profileUrl': ''}, 'displayTime': 'June 5, 2009 at 3:42 AM', 'deleteclass': 'item-control blog-admin pid-701658100'}, {'id': '5823658559308787433', 'body': 'touche :)', 'timestamp': '1244204224542', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751244204224542#c5823658559308787433', 'author': {'name': 'Dougal', 'avatarUrl': 'http://img2.blogblog.com/img/b16-rounded.gif', 'profileUrl': 'http://www.blogger.com/profile/09183581228040499732'}, 'displayTime': 'June 5, 2009 at 8:17 AM', 'deleteclass': 'item-control blog-admin pid-495736739'}, {'id': '4984245011786874378', 'body': 'Python lambdas would be a _lot_ nicer if they weren\46#39;t crippled functions, if you could put more than one statement/expression/whatever in them.', 'timestamp': '1244204929466', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751244204929466#c4984245011786874378', 'author': {'name': 'Anonymous', 'avatarUrl': 'http://img1.blogblog.com/img/blank.gif', 'profileUrl': ''}, 'displayTime': 'June 5, 2009 at 8:28 AM', 'deleteclass': 'item-control blog-admin pid-1680292964'}, {'id': '5886449254033025239', 'body': 'Python\46#39;s closures do not have write access to variables bound in an outer scope.  I would not say Python has \46quot;complete support\46quot; for closures.\74br /\76\74br /\76The following function returns 7, not 9:\74br /\76\74br /\76    def foo();\74br /\76      x \75 7\74br /\76      def bar(): x \759\74br /\76      bar();return x\74br /\76\74br /\76Yes, I know why.  And the hacks you need to work around this are, well, hacks.\74br /\76\74br /\76PS Blogger screwed my indentation.', 'timestamp': '1244205293896', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751244205293896#c5886449254033025239', 'author': {'name': 'drj11', 'avatarUrl': 'http://img1.blogblog.com/img/openid16-rounded.gif', 'profileUrl': 'http://drj11.wordpress.com/'}, 'displayTime': 'June 5, 2009 at 8:34 AM', 'deleteclass': 'item-control blog-admin pid-600787751'}, {'id': '3536634772408199800', 'body': 'drj11, this has actually been fixed in Python 3 with the new non-local keyword.', 'timestamp': '1244208262510', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751244208262510#c3536634772408199800', 'author': {'name': 'Alex', 'avatarUrl': 'http://img2.blogblog.com/img/b16-rounded.gif', 'profileUrl': 'http://www.blogger.com/profile/14054821112394577330'}, 'displayTime': 'June 5, 2009 at 9:24 AM', 'deleteclass': 'item-control blog-admin pid-1797685848'}, {'id': '1911714361964367985', 'body': '@alex ooh.  that\46#39;ll teach me to live in the past.  thanks for the heads up.', 'timestamp': '1244216335441', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751244216335441#c1911714361964367985', 'author': {'name': 'drj11', 'avatarUrl': 'http://img1.blogblog.com/img/openid16-rounded.gif', 'profileUrl': 'http://drj11.wordpress.com/'}, 'displayTime': 'June 5, 2009 at 11:38 AM', 'deleteclass': 'item-control blog-admin pid-600787751'}, {'id': '6407057229782424821', 'body': 'Bah... don\46#39;t even waste time on stuff like that. Let\46#39;s NOT throw Python on the flame arena, like they love to do with Ruby x Java or Java x .NET...', 'timestamp': '1265490865224', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751265490865224#c6407057229782424821', 'author': {'name': 'hcarvalhoalves', 'avatarUrl': 'http://img2.blogblog.com/img/b16-rounded.gif', 'profileUrl': 'http://www.blogger.com/profile/12812850971866518523'}, 'displayTime': 'February 6, 2010 at 4:14 PM', 'deleteclass': 'item-control blog-admin pid-854777330'}, {'id': '4474958586540940013', 'body': 'Python used to be great: simple, clear. \74br /\76\74br /\76Now the language is becoming bloated and full of special cases. For example: see \46#39;Problem with generator expression and class definition\46#39; in c.l.py and the related discussion from PEP 289: http://www.python.org/dev/peps/pep-0289/#early-binding-versus-late-binding.\74br /\76\74br /\76I remember when the term \46#39;pythonic\46#39; used to mean simple and elegant. Somewhere along the way developers forgot to remain pythonic. Now python has dozes of built-in functions. Py3000 is going to break (among other things) exceptions and print statements, forcing thousands of packages to be rewritten.', 'timestamp': '1267016908002', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751267016908002#c4474958586540940013', 'author': {'name': 'Anonymous', 'avatarUrl': 'http://img1.blogblog.com/img/blank.gif', 'profileUrl': ''}, 'displayTime': 'February 24, 2010 at 8:08 AM', 'deleteclass': 'item-control blog-admin pid-1373131887'}, {'id': '2239456895705150638', 'body': 'There really is a lot about Python that could be better. Have you seen the number of PEPs that have as their reason for being (or not being) that GvR was simply to stubborn to consider changing the language? A lot of the decisions seem arbitrary to me.', 'timestamp': '1276310340816', 'permalink': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment\0751276310340816#c2239456895705150638', 'author': {'name': 'Anonymous', 'avatarUrl': 'http://img1.blogblog.com/img/blank.gif', 'profileUrl': ''}, 'displayTime': 'June 11, 2010 at 10:39 PM', 'deleteclass': 'item-control blog-admin pid-554956089'}];
      var msgs = {'loadMore': 'Load more...', 'loading': 'Loading...', 'loaded': 'No more!', 'addComment': 'Add comment', 'reply': 'Reply', 'delete': 'Delete'};
      var config = {'blogId': '7176062489626496619', 'postId': '6171883798243766809', 'feed': 'http://lazypython.blogspot.com/feeds/6171883798243766809/comments/default', 'authorName': 'Alex', 'authorUrl': 'http://www.blogger.com/profile/14054821112394577330', 'baseUri': 'http://www.blogger.com', 'maxThreadDepth': 2};

// <![CDATA[
      var cursor = null;
      if (items && items.length > 0) {
        cursor = parseInt(items[items.length - 1].timestamp) + 1;
      }

      var bodyFromEntry = function(entry) {
        if (entry.gd$extendedProperty) {
          for (var k in entry.gd$extendedProperty) {
            if (entry.gd$extendedProperty[k].name == 'blogger.contentRemoved') {
              return '<span class="deleted-comment">' + entry.content.$t + '</span>';
            }
          }
        }
        return entry.content.$t;
      }

      var parse = function(data) {
        cursor = null;
        var comments = [];
        if (data && data.feed && data.feed.entry) {
          for (var i = 0, entry; entry = data.feed.entry[i]; i++) {
            var comment = {};
            // comment ID, parsed out of the original id format
            var id = /blog-(\d+).post-(\d+)/.exec(entry.id.$t);
            comment.id = id ? id[2] : null;
            comment.body = bodyFromEntry(entry);
            comment.timestamp = Date.parse(entry.published.$t) + '';
            if (entry.author && entry.author.constructor === Array) {
              var auth = entry.author[0];
              if (auth) {
                comment.author = {
                  name: (auth.name ? auth.name.$t : undefined),
                  profileUrl: (auth.uri ? auth.uri.$t : undefined),
                  avatarUrl: (auth.gd$image ? auth.gd$image.src : undefined)
                };
              }
            }
            if (entry.link) {
              if (entry.link[2]) {
                comment.link = comment.permalink = entry.link[2].href;
              }
              if (entry.link[3]) {
                var pid = /.*comments\/default\/(\d+)\?.*/.exec(entry.link[3].href);
                if (pid && pid[1]) {
                  comment.parentId = pid[1];
                }
              }
            }
            comment.deleteclass = 'item-control blog-admin';
            if (entry.gd$extendedProperty) {
              for (var k in entry.gd$extendedProperty) {
                if (entry.gd$extendedProperty[k].name == 'blogger.itemClass') {
                  comment.deleteclass += ' ' + entry.gd$extendedProperty[k].value;
                } else if (entry.gd$extendedProperty[k].name == 'blogger.displayTime') {
                  comment.displayTime = entry.gd$extendedProperty[k].value;
                }
              }
            }
            comments.push(comment);
          }
        }
        return comments;
      };

      var paginator = function(callback) {
        if (hasMore()) {
          var url = config.feed + '?alt=json&v=2&orderby=published&reverse=false&max-results=50';
          if (cursor) {
            url += '&published-min=' + new Date(cursor).toISOString();
          }
          window.bloggercomments = function(data) {
            var parsed = parse(data);
            cursor = parsed.length < 50 ? null
                : parseInt(parsed[parsed.length - 1].timestamp) + 1
            callback(parsed);
            window.bloggercomments = null;
          }
          url += '&callback=bloggercomments';
          var script = document.createElement('script');
          script.type = 'text/javascript';
          script.src = url;
          document.getElementsByTagName('head')[0].appendChild(script);
        }
      };
      var hasMore = function() {
        return !!cursor;
      };
      var getMeta = function(key, comment) {
        if ('iswriter' == key) {
          var matches = !!comment.author
              && comment.author.name == config.authorName
              && comment.author.profileUrl == config.authorUrl;
          return matches ? 'true' : '';
        } else if ('deletelink' == key) {
          return config.baseUri + '/delete-comment.g?blogID='
               + config.blogId + '&postID=' + comment.id;
        } else if ('deleteclass' == key) {
          return comment.deleteclass;
        }
        return '';
      };

      var replybox = null;
      var replyUrlParts = null;
      var replyParent = undefined;

      var onReply = function(commentId, domId) {
        if (replybox == null) {
          // lazily cache replybox, and adjust to suit this style:
          replybox = document.getElementById('comment-editor');
          if (replybox != null) {
            replybox.height = '250px';
            replybox.style.display = 'block';
            replyUrlParts = replybox.src.split('#');
          }
        }
        if (replybox && (commentId !== replyParent)) {
          document.getElementById(domId).insertBefore(replybox, null);
          replybox.src = replyUrlParts[0]
              + (commentId ? '&parentID=' + commentId : '')
              + '#' + replyUrlParts[1];
          replyParent = commentId;
        }
      };

      var hash = (window.location.hash || '#').substring(1);
      var startThread, targetComment;
      if (/^comment-form_/.test(hash)) {
        startThread = hash.substring('comment-form_'.length);
      } else if (/^c[0-9]+$/.test(hash)) {
        targetComment = hash.substring(1);
      }

      // Configure commenting API:
      var configJso = {
        'maxDepth': config.maxThreadDepth
      };
      var provider = {
        'id': config.postId,
        'data': items,
        'loadNext': paginator,
        'hasMore': hasMore,
        'getMeta': getMeta,
        'onReply': onReply,
        'rendered': true,
        'initComment': targetComment,
        'initReplyThread': startThread,
        'config': configJso,
        'messages': msgs
      };

      var render = function() {
        if (window.goog && window.goog.comments) {
          var holder = document.getElementById('comment-holder');
          window.goog.comments.render(holder, provider);
        }
      };

      // render now, or queue to render when library loads:
      if (window.goog && window.goog.comments) {
        render();
      } else {
        window.goog = window.goog || {};
        window.goog.comments = window.goog.comments || {};
        window.goog.comments.loadQueue = window.goog.comments.loadQueue || [];
        window.goog.comments.loadQueue.push(render);
      }
    })();
// ]]>
</script>
<div id='comment-holder'>
<div id='bc_0_10C' kind='c'><div id='bc_0_10CT'><div id='bc_0_9T' class='comment-thread' kind='r'  t='0' u='0'><ol id='bc_0_9TB'><li id='bc_0_0B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img1.blogblog.com/img/anon36.png'></img></div><div id='c5570924346448568651' class='comment-block'><div id='bc_0_0M' class='comment-header' kind='m'><cite class='user'>Anonymous</cite><span class='icon user'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1244187773068#c5570924346448568651'>June 5, 2009 at 3:42 AM</a></span></div><p id='bc_0_0MC' class='comment-content'>And he goes by the name of &quot;Blog User&quot;. I think it&#39;s just an elaborate troll blog.</p><span id='bc_0_0MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-701658100'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=5570924346448568651'>Delete</a></span></span></div><div id='bc_0_0BR' class='comment-replies'></div><div id='bc_0_0B_box' class='comment-replybox-single'></div></li><li id='bc_0_1B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img2.blogblog.com/img/b36-rounded.png'></img></div><div id='c5823658559308787433' class='comment-block'><div id='bc_0_1M' class='comment-header' kind='m'><cite class='user'><a rel='nofollow' href='http://www.blogger.com/profile/09183581228040499732'>Dougal</a></cite><span class='icon user'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1244204224542#c5823658559308787433'>June 5, 2009 at 8:17 AM</a></span></div><p id='bc_0_1MC' class='comment-content'>touche :)</p><span id='bc_0_1MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-495736739'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=5823658559308787433'>Delete</a></span></span></div><div id='bc_0_1BR' class='comment-replies'></div><div id='bc_0_1B_box' class='comment-replybox-single'></div></li><li id='bc_0_2B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img1.blogblog.com/img/anon36.png'></img></div><div id='c4984245011786874378' class='comment-block'><div id='bc_0_2M' class='comment-header' kind='m'><cite class='user'>Anonymous</cite><span class='icon user'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1244204929466#c4984245011786874378'>June 5, 2009 at 8:28 AM</a></span></div><p id='bc_0_2MC' class='comment-content'>Python lambdas would be a _lot_ nicer if they weren&#39;t crippled functions, if you could put more than one statement/expression/whatever in them.</p><span id='bc_0_2MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-1680292964'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=4984245011786874378'>Delete</a></span></span></div><div id='bc_0_2BR' class='comment-replies'></div><div id='bc_0_2B_box' class='comment-replybox-single'></div></li><li id='bc_0_3B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img1.blogblog.com/img/openid36-rounded.png'></img></div><div id='c5886449254033025239' class='comment-block'><div id='bc_0_3M' class='comment-header' kind='m'><cite class='user'><a rel='nofollow' href='http://drj11.wordpress.com/'>drj11</a></cite><span class='icon user'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1244205293896#c5886449254033025239'>June 5, 2009 at 8:34 AM</a></span></div><p id='bc_0_3MC' class='comment-content'>Python&#39;s closures do not have write access to variables bound in an outer scope.  I would not say Python has &quot;complete support&quot; for closures.<br /><br />The following function returns 7, not 9:<br /><br />    def foo();<br />      x = 7<br />      def bar(): x =9<br />      bar();return x<br /><br />Yes, I know why.  And the hacks you need to work around this are, well, hacks.<br /><br />PS Blogger screwed my indentation.</p><span id='bc_0_3MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-600787751'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=5886449254033025239'>Delete</a></span></span></div><div id='bc_0_3BR' class='comment-replies'></div><div id='bc_0_3B_box' class='comment-replybox-single'></div></li><li id='bc_0_4B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img2.blogblog.com/img/b36-rounded.png'></img></div><div id='c3536634772408199800' class='comment-block'><div id='bc_0_4M' class='comment-header' kind='m'><cite class='user blog-author'><a rel='nofollow' href='http://www.blogger.com/profile/14054821112394577330'>Alex</a></cite><span class='icon user blog-author'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1244208262510#c3536634772408199800'>June 5, 2009 at 9:24 AM</a></span></div><p id='bc_0_4MC' class='comment-content'>drj11, this has actually been fixed in Python 3 with the new non-local keyword.</p><span id='bc_0_4MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-1797685848'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=3536634772408199800'>Delete</a></span></span></div><div id='bc_0_4BR' class='comment-replies'></div><div id='bc_0_4B_box' class='comment-replybox-single'></div></li><li id='bc_0_5B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img1.blogblog.com/img/openid36-rounded.png'></img></div><div id='c1911714361964367985' class='comment-block'><div id='bc_0_5M' class='comment-header' kind='m'><cite class='user'><a rel='nofollow' href='http://drj11.wordpress.com/'>drj11</a></cite><span class='icon user'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1244216335441#c1911714361964367985'>June 5, 2009 at 11:38 AM</a></span></div><p id='bc_0_5MC' class='comment-content'>@alex ooh.  that&#39;ll teach me to live in the past.  thanks for the heads up.</p><span id='bc_0_5MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-600787751'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=1911714361964367985'>Delete</a></span></span></div><div id='bc_0_5BR' class='comment-replies'></div><div id='bc_0_5B_box' class='comment-replybox-single'></div></li><li id='bc_0_6B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img2.blogblog.com/img/b36-rounded.png'></img></div><div id='c6407057229782424821' class='comment-block'><div id='bc_0_6M' class='comment-header' kind='m'><cite class='user'><a rel='nofollow' href='http://www.blogger.com/profile/12812850971866518523'>hcarvalhoalves</a></cite><span class='icon user'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1265490865224#c6407057229782424821'>February 6, 2010 at 4:14 PM</a></span></div><p id='bc_0_6MC' class='comment-content'>Bah... don&#39;t even waste time on stuff like that. Let&#39;s NOT throw Python on the flame arena, like they love to do with Ruby x Java or Java x .NET...</p><span id='bc_0_6MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-854777330'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=6407057229782424821'>Delete</a></span></span></div><div id='bc_0_6BR' class='comment-replies'></div><div id='bc_0_6B_box' class='comment-replybox-single'></div></li><li id='bc_0_7B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img1.blogblog.com/img/anon36.png'></img></div><div id='c4474958586540940013' class='comment-block'><div id='bc_0_7M' class='comment-header' kind='m'><cite class='user'>Anonymous</cite><span class='icon user'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1267016908002#c4474958586540940013'>February 24, 2010 at 8:08 AM</a></span></div><p id='bc_0_7MC' class='comment-content'>Python used to be great: simple, clear. <br /><br />Now the language is becoming bloated and full of special cases. For example: see &#39;Problem with generator expression and class definition&#39; in c.l.py and the related discussion from PEP 289: http://www.python.org/dev/peps/pep-0289/#early-binding-versus-late-binding.<br /><br />I remember when the term &#39;pythonic&#39; used to mean simple and elegant. Somewhere along the way developers forgot to remain pythonic. Now python has dozes of built-in functions. Py3000 is going to break (among other things) exceptions and print statements, forcing thousands of packages to be rewritten.</p><span id='bc_0_7MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-1373131887'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=4474958586540940013'>Delete</a></span></span></div><div id='bc_0_7BR' class='comment-replies'></div><div id='bc_0_7B_box' class='comment-replybox-single'></div></li><li id='bc_0_8B' class='comment' kind='b'><div class='avatar-image-container'><img src='http://img1.blogblog.com/img/anon36.png'></img></div><div id='c2239456895705150638' class='comment-block'><div id='bc_0_8M' class='comment-header' kind='m'><cite class='user'>Anonymous</cite><span class='icon user'></span><span class='datetime secondary-text'><a rel='nofollow' href='http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html?showComment=1276310340816#c2239456895705150638'>June 11, 2010 at 10:39 PM</a></span></div><p id='bc_0_8MC' class='comment-content'>There really is a lot about Python that could be better. Have you seen the number of PEPs that have as their reason for being (or not being) that GvR was simply to stubborn to consider changing the language? A lot of the decisions seem arbitrary to me.</p><span id='bc_0_8MN' class='comment-actions secondary-text' kind='m'><a kind='i' href='javascript:;' target='_self' o='r'>Reply</a><span class='item-control blog-admin pid-554956089'><a o='d' target='_self' href='http://www.blogger.com/delete-comment.g?blogID=7176062489626496619&amp;postID=2239456895705150638'>Delete</a></span></span></div><div id='bc_0_8BR' class='comment-replies'></div><div id='bc_0_8B_box' class='comment-replybox-single'></div></li></ol><div id='bc_0_9I' class='continue' kind='ci'><a href='javascript:;' target='_self'>Add comment</a></div><div id='bc_0_9T_box' class='comment-replybox-thread'></div><div id='bc_0_9L' class='loadmore loaded' kind='rb'><a href='javascript:;' target='_self'>Load more...</a></div></div></div></div>
</div>
</div>
<p class='comment-footer'>
<div class='comment-form'>
<a name='comment-form'></a>
<p>
</p>
<p>Note: Only a member of this blog may post a comment.</p>
<a href='https://www.blogger.com/comment-iframe.g?blogID=7176062489626496619&postID=6171883798243766809' id='comment-editor-src'></a>
<iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' frameborder='0' height='410' id='comment-editor' name='comment-editor' src='' width='100%'></iframe>
<script type="text/javascript" src="https://www.blogger.com/static/v1/jsbin/313381681-comment_from_post_iframe.js"></script>
<script type='text/javascript'>
      BLOG_CMT_createIframe('https://www.blogger.com/rpc_relay.html', '09429335984922429643');
    </script>
</div>
</p>
<div id='backlinks-container'>
<div id='Blog1_backlinks-container'>
</div>
</div>
</div>
</div>

        </div></div>
      
<!-- google_ad_section_end -->
</div>
<div class='blog-pager' id='blog-pager'>
<span id='blog-pager-newer-link'>
<a class='blog-pager-newer-link' href='http://lazypython.blogspot.co.uk/2009/07/announcing-pyvcs-django-vcs-and-piano.html' id='Blog1_blog-pager-newer-link' title='Newer Post'>Newer Post</a>
</span>
<span id='blog-pager-older-link'>
<a class='blog-pager-older-link' href='http://lazypython.blogspot.co.uk/2009/05/eurodjangocon-2009.html' id='Blog1_blog-pager-older-link' title='Older Post'>Older Post</a>
</span>
<a class='home-link' href='http://lazypython.blogspot.co.uk/'>Home</a>
</div>
<div class='clear'></div>
<div class='post-feeds'>
<div class='feed-links'>
Subscribe to:
<a class='feed-link' href='http://lazypython.blogspot.com/feeds/6171883798243766809/comments/default' target='_blank' type='application/atom+xml'>Post Comments (Atom)</a>
</div>
</div>
<script type="text/javascript">window.___gcfg = {'lang': 'en'};</script>
</div></div>
</div>
<div id='sidebar-wrapper'>
<div class='sidebar section' id='sidebar'><div class='widget Text' id='Text1'>
<h2 class='title'>Contact Me</h2>
<div class='widget-content'>
If you want to contact me for anything email me at: alex.gaynor@gmail.com .<br/><div><br/></div><div>This blog has a new home at <a href="http://alexgaynor.net/">alexgaynor.net</a>.</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=7176062489626496619&widgetType=Text&widgetId=Text1&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("Text1"));' target='configText1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget HTML' id='HTML2'>
<h2 class='title'>Suggestions</h2>
<div class='widget-content'>
<div id="writeSkribitHere"></div><script src="http://skribit.com/javascripts/SkribitWidget.js?renderTo=writeSkribitHere&amp;blog=e53ad5d2a7e45192c8337f7855e65306&amp;cnt=5"></script><noscript>Sorry, but the <a href="http://skribit.com" title="Skribit - Cure Writer's Block">Skribit</a> widget only works on browsers with JavaScript support.  <a href="http://skribit.com/blogs/lazy-pythonista" title="Skribit Suggestions for Lazy Pythonista">View suggestions for this blog here.</a></noscript>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=7176062489626496619&widgetType=HTML&widgetId=HTML2&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML2"));' target='configHTML2' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget HTML' id='HTML1'>
<div class='widget-content'>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-1735273-6");
pageTracker._trackPageview();
</script>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=7176062489626496619&widgetType=HTML&widgetId=HTML1&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML1"));' target='configHTML1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div><div class='widget BlogArchive' id='BlogArchive1'>
<h2>Blog Archive</h2>
<div class='widget-content'>
<div id='ArchiveList'>
<div id='BlogArchive1_ArchiveList'>
<ul class='hierarchy'>
<li class='archivedate expanded'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy toggle-open'>&#9660;&#160;</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/search?updated-min=2009-01-01T00:00:00-05:00&amp;updated-max=2010-01-01T00:00:00-05:00&amp;max-results=48'>2009</a>
<span class='post-count' dir='ltr'>(48)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_12_01_archive.html'>December</a>
<span class='post-count' dir='ltr'>(2)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_11_01_archive.html'>November</a>
<span class='post-count' dir='ltr'>(29)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_10_01_archive.html'>October</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_08_01_archive.html'>August</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_07_01_archive.html'>July</a>
<span class='post-count' dir='ltr'>(2)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate expanded'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy toggle-open'>&#9660;&#160;</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_06_01_archive.html'>June</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://lazypython.blogspot.co.uk/2009/06/response-to-python-sucks.html'>A response to &quot;Python sucks&quot;</a></li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_05_01_archive.html'>May</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_04_01_archive.html'>April</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_03_01_archive.html'>March</a>
<span class='post-count' dir='ltr'>(3)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_02_01_archive.html'>February</a>
<span class='post-count' dir='ltr'>(2)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2009_01_01_archive.html'>January</a>
<span class='post-count' dir='ltr'>(5)</span>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/search?updated-min=2008-01-01T00:00:00-05:00&amp;updated-max=2009-01-01T00:00:00-05:00&amp;max-results=35'>2008</a>
<span class='post-count' dir='ltr'>(35)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2008_12_01_archive.html'>December</a>
<span class='post-count' dir='ltr'>(8)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://lazypython.blogspot.co.uk/2008_11_01_archive.html'>November</a>
<span class='post-count' dir='ltr'>(27)</span>
</li>
</ul>
</li>
</ul>
</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=7176062489626496619&widgetType=BlogArchive&widgetId=BlogArchive1&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("BlogArchive1"));' target='configBlogArchive1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div></div>
</div>
<!-- spacer for skins that want sidebar and main to be the same height-->
<div class='clear'>&#160;</div>
</div>
<!-- end content-wrapper -->
<div id='footer-wrapper'>
<div class='footer section' id='footer'></div>
</div>
</div></div>
<!-- end outer-wrapper -->
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('widgetJsBefore');
</script><script type="text/javascript" src="https://www.blogger.com/static/v1/widgets/3401484092-widgets.js"></script>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<script type='text/javascript'>
if (typeof(BLOG_attachCsiOnload) != 'undefined' && BLOG_attachCsiOnload != null) { window['blogger_templates_experiment_id'] = "templatesV1";window['blogger_blog_id'] = '7176062489626496619';BLOG_attachCsiOnload('item_'); }_WidgetManager._Init('//www.blogger.com/rearrange?blogID\x3d7176062489626496619','//lazypython.blogspot.co.uk/2009/06/response-to-python-sucks.html','7176062489626496619');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'blogId': '7176062489626496619', 'bloggerUrl': 'http://www.blogger.com', 'title': 'Lazy Pythonista', 'pageType': 'item', 'postId': '6171883798243766809', 'url': 'http://lazypython.blogspot.co.uk/2009/06/response-to-python-sucks.html', 'canonicalUrl': 'http://lazypython.blogspot.com/2009/06/response-to-python-sucks.html', 'canonicalHomepageUrl': 'http://lazypython.blogspot.com/', 'homepageUrl': 'http://lazypython.blogspot.co.uk/', 'blogspotFaviconUrl': 'http://lazypython.blogspot.co.uk/favicon.ico', 'enabledCommentProfileImages': true, 'adultContent': false, 'disableAdSenseWidget': false, 'analyticsAccountNumber': '', 'searchLabel': '', 'searchQuery': '', 'pageName': 'A response to \42Python sucks\042', 'pageTitle': 'Lazy Pythonista: A response to \42Python sucks\042', 'encoding': 'UTF-8', 'locale': 'en', 'localeUnderscoreDelimited': 'en', 'isPrivate': false, 'isMobile': false, 'isMobileRequest': false, 'mobileClass': '', 'isPrivateBlog': false, 'languageDirection': 'ltr', 'feedLinks': '\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Lazy Pythonista - Atom\42 href\75\42http://lazypython.blogspot.com/feeds/posts/default\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/rss+xml\42 title\75\42Lazy Pythonista - RSS\42 href\75\42http://lazypython.blogspot.com/feeds/posts/default?alt\75rss\42 /\76\n\74link rel\75\42service.post\42 type\75\42application/atom+xml\42 title\75\42Lazy Pythonista - Atom\42 href\75\42http://www.blogger.com/feeds/7176062489626496619/posts/default\42 /\76\n\n\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Lazy Pythonista - Atom\42 href\75\42http://lazypython.blogspot.com/feeds/6171883798243766809/comments/default\42 /\76\n', 'meTag': '', 'openIdOpTag': '', 'latencyHeadScript': '\74script type\75\42text/javascript\42\76(function() { var b\75window,f\75\42chrome\42,g\75\42tick\42,k\75\42jstiming\42;(function(){function d(a){this.t\75{};this.tick\75function(a,d,c){var e\75void 0!\75c?c:(new Date).getTime();this.t[a]\75[e,d];if(void 0\75\75c)try{b.console.timeStamp(\42CSI/\42+a)}catch(h){}};this[g](\42start\42,null,a)}var a;b.performance\46\46(a\75b.performance.timing);var n\75a?new d(a.responseStart):new d;b.jstiming\75{Timer:d,load:n};if(a){var c\75a.navigationStart,h\75a.responseStart;0\74c\46\46h\76\75c\46\46(b[k].srt\75h-c)}if(a){var e\75b[k].load;0\74c\46\46h\76\75c\46\46(e[g](\42_wtsrt\42,void 0,c),e[g](\42wtsrt_\42,\42_wtsrt\42,h),e[g](\42tbsd_\42,\42wtsrt_\42))}try{a\75null,\nb[f]\46\46b[f].csi\46\46(a\75Math.floor(b[f].csi().pageT),e\46\0460\74c\46\46(e[g](\42_tbnd\42,void 0,b[f].csi().startE),e[g](\42tbnd_\42,\42_tbnd\42,c))),null\75\75a\46\46b.gtbExternal\46\46(a\75b.gtbExternal.pageT()),null\75\75a\46\46b.external\46\46(a\75b.external.pageT,e\46\0460\74c\46\46(e[g](\42_tbnd\42,void 0,b.external.startE),e[g](\42tbnd_\42,\42_tbnd\42,c))),a\46\46(b[k].pt\75a)}catch(p){}})();b.tickAboveFold\75function(d){var a\0750;if(d.offsetParent){do a+\75d.offsetTop;while(d\75d.offsetParent)}d\75a;750\76\75d\46\46b[k].load[g](\42aft\42)};var l\75!1;function m(){l||(l\75!0,b[k].load[g](\42firstScrollTime\42))}b.addEventListener?b.addEventListener(\42scroll\42,m,!1):b.attachEvent(\42onscroll\42,m);\n })();\74/script\076', 'mobileHeadScript': '', 'view': '', 'dynamicViewsCommentsSrc': '//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js', 'dynamicViewsScriptSrc': '//www.blogblog.com/dynamicviews/76f25a6f2e06af76', 'plusOneApiSrc': 'https://apis.google.com/js/plusone.js', 'sf': 'n', 'tf': ''}}, {'name': 'skin', 'data': {'vars': {'textColor': '#333333', 'linkColor': '#336699', 'borderColor': '#cccccc', 'headerTextColor': '#ffffff', 'mainBgColor': '#ffffff', 'sidebarTitleTextColor': '#333333', 'bgColor': '#efefef', 'headerCornersColor': '#528bc5', 'headerFont': 'normal normal 210% Verdana, Arial, Sans-serif;', 'sidebarTitleBgColor': '#ffd595', 'bodyFont': 'normal normal 100% Verdana, Arial, Sans-serif;', 'dateHeaderColor': '#999999', 'endSide': 'right', 'startSide': 'left', 'headerBgColor': '#336699'}, 'override': ''}}, {'name': 'view', 'data': {'classic': {'name': 'classic', 'url': '?view\75classic'}, 'flipcard': {'name': 'flipcard', 'url': '?view\75flipcard'}, 'magazine': {'name': 'magazine', 'url': '?view\75magazine'}, 'mosaic': {'name': 'mosaic', 'url': '?view\75mosaic'}, 'sidebar': {'name': 'sidebar', 'url': '?view\75sidebar'}, 'snapshot': {'name': 'snapshot', 'url': '?view\75snapshot'}, 'timeslide': {'name': 'timeslide', 'url': '?view\75timeslide'}}}]);
_WidgetManager._RegisterWidget('_TextView', new _WidgetInfo('Text1', 'sidebar', null, document.getElementById('Text1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML2', 'sidebar', null, document.getElementById('HTML2'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML1', 'sidebar', null, document.getElementById('HTML1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogArchiveView', new _WidgetInfo('BlogArchive1', 'sidebar', null, document.getElementById('BlogArchive1'), {'languageDirection': 'ltr'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header', null, document.getElementById('Header1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_NavbarView', new _WidgetInfo('Navbar1', 'navbar', null, document.getElementById('Navbar1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false, 'lightboxEnabled': true, 'lightboxModuleUrl': 'https://www.blogger.com/static/v1/jsbin/1938910137-lbx.js', 'lightboxCssUrl': 'https://www.blogger.com/static/v1/v-css/2392111094-lightbox_bundle.css'}, 'displayModeFull'));
</script>
</body>
</html>