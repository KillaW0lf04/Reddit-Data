<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="UTF-8" />
<title>Physics engines for dummies | Wildbunny blog</title>
<link rel="profile" href="http://gmpg.org/xfn/11" />
<link rel="stylesheet" type="text/css" media="all" href="http://www.wildbunny.co.uk/blog/wp-content/themes/twentyten/style.css?v=0" />
<link rel="pingback" href="http://www.wildbunny.co.uk/blog/xmlrpc.php" />

<!-- BEGIN Metadata added by Add-Meta-Tags WordPress plugin
Get the plugin at: http://www.g-loaded.eu/2006/01/05/add-meta-tags-wordpress-plugin/ -->
<meta name="description" content="Hello and welcome back to my blog! This time i'm going to talk about the basic components that make up a physics engine and how to put them together; this tutorial is aimed at programmers who have a basic grasp of maths and geometry but would like to step into the world of simulation." />
<meta name="keywords" content="as3, beginner, collision detection, geometry, graphics, physics, technical, collision detection, constraint, contact, game engine, joint, physics, pong, simulation" />
<meta name="blogcatalog" content="9BC10671562" />
<div id="ScribCode634274886"></div>
<!-- END Metadata added by Add-Meta-Tags WordPress plugin -->

<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Feed" href="http://www.wildbunny.co.uk/blog/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Comments Feed" href="http://www.wildbunny.co.uk/blog/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Wildbunny blog &raquo; Physics engines for dummies Comments Feed" href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/feed/" />
<link rel='stylesheet' id='bm-author-donations-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/bitmate-author-donations/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cntctfrm_stylesheet-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/contact-form-plugin/css/style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-style.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='cookielawinfo-table-style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/css/cli-tables.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='oikCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/oik.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='bwlinkCSS-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/oik/bwlink.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='wp125style-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp125/wp125.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='thsp-sticky-header-plugin-styles-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/css/public.css?ver=1.0.0' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='featured-post-css-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/featured-post.css?ver=3.8.2' type='text/css' media='all' />
<link rel='stylesheet' id='ws-plugin--s2member-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_css=1&#038;qcABC=1&#038;ver=140105-140105-2848662513' type='text/css' media='all' />
<link rel='stylesheet' id='mr_social_sharing-css'  href='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/style.css?ver=3.8.2' type='text/css' media='all' />
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/swfobject.js?ver=2.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/comment-reply.min.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery.js?ver=1.10.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.2.1'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/jquery.cookie.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/cookie-law-info/js/cookielawinfo.js?ver=3.8.2'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var StickyHeaderParams = {"show_at":"200","hide_if_narrower":"600"};
/* ]]> */
</script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/sticky-header/js/public.js?ver=1.0.0'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/script.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/googleplus.js.php?lang=en_US&#038;ver=3.8.2'></script>
<script type='text/javascript' src='http://apis.google.com/js/plusone.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://connect.facebook.net/en_US/all.js?ver=3.8.2#xfbml=1'></script>
<script type='text/javascript' src='http://platform.twitter.com/widgets.js?ver=3.8.2'></script>
<script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.2'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.wildbunny.co.uk/blog/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.wildbunny.co.uk/blog/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Client-&gt;server communication using json, silverlight and php' href='http://www.wildbunny.co.uk/blog/2011/03/31/client-server-communication-using-json-silverlight-php/' />
<link rel='next' title='Blog micro-transactions &#8211; a viable business model?' href='http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/' />
<meta name="generator" content="WordPress 3.8.2" />
<link rel='canonical' href='http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/' />
<link rel='shortlink' href='http://www.wildbunny.co.uk/blog/?p=327' />
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/js/bubble.js"></script>
<link rel="stylesheet" type="text/css" href="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/css/style.css" />
<style type="text/css">
<!-- Silverlight WordPress Plugin -->
#silverlightControlHost{height:100%;}
</style>
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS BEGIN -->
<script type="text/javascript" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/js/wpsfv2-js.php"></script> 
<!-- Protected by WP-SpamFree v2.1.1.2 :: JS END -->

		<style type="text/css">
			#thsp-sticky-header {
				background-color: #181818;
			}
			#thsp-sticky-header,
			#thsp-sticky-header a {
				color: #f9f9f9 !important;
			}
											</style>
	<style type="text/css" id="custom-background-css">
body.custom-background { background-color: #EAEAEA; }
</style>
<!-- Google Analytics Tracking by Google Analyticator 6.2: http://ronaldheft.com/code/analyticator/ -->
<script type="text/javascript">window.google_analytics_uacct = "ca-pub-4897461488762721";</script>
<script type="text/javascript">
	var analyticsFileTypes = [''];
	var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-16999711-1']);
	_gaq.push(['_trackPageview']);
	_gaq.push(['_trackPageLoadTime']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>

<body class="single single-post postid-327 single-format-standard custom-background">
<div id="wrapper" class="hfeed">
	<div id="header">
		<div id="masthead">
			<div id="branding" role="banner">
								<div id="site-title">
					<span>
						<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">Wildbunny blog</a>
					</span>
				</div>
				<div id="site-description">Developer knowledge centre</div>

										<img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/02/bunnyWP1.gif" width="940" height="198" alt="" />
								</div><!-- #branding -->

			<div id="access" role="navigation">
			  				<div class="skip-link screen-reader-text"><a href="#content" title="Skip to content">Skip to content</a></div>
								<div class="menu-header"><ul id="menu-flowhub-header" class="menu"><li id="menu-item-272" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li id="menu-item-1302" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li id="menu-item-319" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li id="menu-item-2072" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li id="menu-item-446" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li id="menu-item-466" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li id="menu-item-1183" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li id="menu-item-1694" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul></div>			</div><!-- #access -->
		</div><!-- #masthead -->
	</div><!-- #header -->

	<div id="main">

		<div id="container">
			<div id="content" role="main">


				<div id="nav-above" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/03/31/client-server-communication-using-json-silverlight-php/" rel="prev"><span class="meta-nav">&larr;</span> Client->server communication using json, silverlight and php</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/" rel="next">Blog micro-transactions &#8211; a viable business model? <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-above -->

				<div id="post-327" class="post-327 post type-post status-publish format-standard hentry category-as3 category-beginner category-collision-detection-platform-game category-geometry category-graphics category-physics-2 category-technical tag-collision-detection tag-constraint tag-contact tag-game-engine tag-joint tag-physics tag-pong tag-simulation">
					<h1 class="entry-title">Physics engines for dummies</h1>

					<div class="entry-meta">
						<span class="meta-prep meta-prep-author">Posted on</span> <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" title="5:29 pm" rel="bookmark"><span class="entry-date">April 6, 2011</span></a> <span class="meta-sep">by</span> <span class="author vcard"><a class="url fn n" href="http://www.wildbunny.co.uk/blog/author/paulfirth/" title="View all posts by Paul Firth">Paul Firth</a></span>					</div><!-- .entry-meta -->

					<div class="entry-content">
						<img width="150" height="116" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/real-pong.jpg" class="attachment-single-post-thumbnail wp-post-image" alt="Can you code this?" />						
				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/";
							  reddit_title = "Physics engines for dummies";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" data-count="horizontal" data-text="Physics engines for dummies">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F06%2Fphysics-engines-for-dummies%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F06%2Fphysics-engines-for-dummies%2F&amp;title=Physics+engines+for+dummies" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><p>Hello and welcome back to my blog!</p>
<p>This time i&#8217;m going to talk about the basic components that make up a physics engine and how to put them together; this tutorial is aimed at programmers who have a basic grasp of maths and geometry but would like to step into the world of simulation.</p>
<p>It is my hope that if, at the beginning of this article, you are able to code the physics behind the 1972 game <a href="http://en.wikipedia.org/wiki/Pong">Pong</a>,  by the end of the article you will be equally happy writing your own constraints to use in your own physics solver!</p>
<div id="attachment_370" style="width: 310px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/real-pong.jpg"><img class="size-medium wp-image-370" title="real-pong" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/real-pong-300x232.jpg" alt="" width="300" height="232" /></a><p class="wp-caption-text">Can you code this?</p></div>
<p>I&#8217;ve always found the title of those books of from the &#8216;&#8230;for dummies&#8217; series reassuring; after all, if a dummy can learn this stuff you should stand a good chance, right?</p>
<div id="attachment_328" style="width: 210px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/quantumdummies.jpg"><img class="size-full wp-image-328" title="quantumdummies" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/quantumdummies.jpg" alt="" width="200" height="252" /></a><p class="wp-caption-text">...for dummies?</p></div>
<p>Hence the title of this article.</p>
<h2>Plan of action</h2>
<p>Ok, so i&#8217;m going to cover a few of the things you might want in a physics engine:</p>
<ul>
<li><span style="font-size: small;">Rigid bodies</span></li>
<li><span style="font-size: small;">Collisions</span></li>
<li><span style="font-size: small;">Resting contact</span></li>
<li><span style="font-size: small;">Constraints (Joints)</span></li>
</ul>
<h2>Simulation</h2>
<p>Bear with me, this is going to start out really basically, but hopefully later on it will become clear why.</p>
<p>Starting out with particles, which we assume will have a position�<em>P</em> and a velocity�<em>V. </em>Each frame we advance the position of�<em>P</em> by adding the velocity�<em>V</em> on to it. This is called�<em>integration</em>.</p>
<p>You can use whatever units you like for you simulation; the usual choice is one unit/meter which is what i&#8217;m using here &#8211; the screen is two metres by two metres (in our world), so our velocities are specified in metres/second. To make this work, we must know how many seconds there are per frame, then we can do�<em>P += V*dt</em> in our integration to advance the particles properly, where <em>dt</em> is the number of seconds per frame.</p>
<p>We can simulate multiple particles by storing an array of positions and velocities, and looping over integrating each one. To prevent our particles going off screen we would like to collide them against the screen&#8217;s edges.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_0" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/ParticlesAxis.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/ParticlesAxis.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>To bounce the particles off the edges we simply detect collisions against the edges and reverse the velocity in the offending axis, thus:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">for</span> all i
  <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">=</span> <span style="color: #008000;">-</span>V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span>
  <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">=</span> <span style="color: #008000;">-</span>V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span><span style="color: #008000;">;</span>
  <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">=</span> <span style="color: #008000;">-</span>V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span>
  <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
  <span style="color: #008000;">&#123;</span>
    V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">=</span> <span style="color: #008000;">-</span>V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">;</span>
  <span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>The first condition of each case checks for intersection of the particle in space and the second checks that the particle is actually heading towards the edge. The second condition is important otherwise we would do the collision response again next frame erronusly should the particles move more than one pixel per frame. This second condition carries though all of impulse based rigid body simulation and is what separates inequality contraints (e.g contacts) and equality constraints (most joints).</p>
<p>This is the kind of example code you will no doubt have written a long time ago when you first started getting interested in simulation. I&#8217;m including it here because I think there is a natural progression from this easy example to more complex physics code.</p>
<p><strong>Whats going on in this simple simulation?</strong></p>
<p>Well, without knowing it, we have assumed a physical matieral type for our particles including the <a href="http://scienceworld.wolfram.com/physics/CoefficientofRestitution.html">coefficient of restituition</a> and followed Newton&#8217;s principle of <a href="http://scienceworld.wolfram.com/physics/ConservationofMomentum.html">conservation of momentum</a>. We have also chosen that the world have infinite mass such that it doesn&#8217;t feel a collision response when the particles impact on it. By choosing to reflect particles on impact we are also preseving their momentum (even though we have ignored their mass in our calculations), indicating that we have chosen a coefficient of restitution of 1, i.e. perfectly elastic &#8211; like a super-ball. Additionally, we have chosen an impulse/velocity model for the collision response, rather than a force/acceleration model &#8211; we did this simply by changing the velocity instantaneously, rather than over a period of time.</p>
<p>What we have here is actually a highly optimised special case physics simulation. Optimised how, you ask? Well, let me explain:</p>
<p>If we were to code the above &#8220;properly&#8221;, not taking any short cuts, we would have to assume the following. Our environment is defined by its boundaries which are four axis aligned planes (actually, they&#8217;re lines because we are in 2d). Each one has a normal (which points inwards) and a distance to the origin. They look like this:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;">Planes<span style="color: #008000;">&#91;</span><span style="color: #FF0000;">4</span><span style="color: #008000;">&#93;</span> <span style="color: #008000;">=</span>
<span style="color: #008000;">&#123;</span>
   <span style="color: #008000;">&#40;</span><span style="color: #FF0000;">1</span>,  <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>,
   <span style="color: #008000;">&#40;</span><span style="color: #FF0000;">0</span>, <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span>, <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>,
   <span style="color: #008000;">&#40;</span><span style="color: #008000;">-</span><span style="color: #FF0000;">1</span>, <span style="color: #FF0000;">0</span>, <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>,
   <span style="color: #008000;">&#40;</span><span style="color: #FF0000;">0</span>,  <span style="color: #FF0000;">1</span>, <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>So, now we have to detect our collisions as we did before, but we can&#8217;t take any shortcuts this time. In order to detect if our particles have penetrated the planes we must perform a <a href="/blog/vector-maths-a-primer-for-games-programmers/vector/#Dot">dot product</a> and add the plane&#8217;s distance to origin:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">for</span> all particles i
<span style="color: #008000;">&#123;</span>
  <span style="color: #0600FF; font-weight: bold;">for</span> all planes j
  <span style="color: #008000;">&#123;</span>
    distance <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span>Planes<span style="color: #008000;">&#91;</span>j<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">a</span> <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span>Planes<span style="color: #008000;">&#91;</span>j<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">b</span> <span style="color: #008000;">+</span> Planes<span style="color: #008000;">&#91;</span>j<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">c</span><span style="color: #008000;">;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>distance <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
      <span style="color: #008080; font-style: italic;">// collision responce</span>
    <span style="color: #008000;">&#125;</span>
  <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>What this code is doing is finding, by <a href="/blog/vector-maths-a-primer-for-games-programmers/vector/#Projection">projection</a>, how much of the vector from the plane to the particle is in the direction of the plane normal. Because our plane&#8217;s normals are unit length, this is a measure of the closest <strong>distance from the particle to the plane</strong>. Obviously, if this distance is less than 0, our particle has penetrated the plane and we need to take action to perform the collision response.</p>
<p>Now, if we take a closer look at that distance check above, including each plane&#8217;s coefficents:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;">plane0dist <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span><span style="color: #FF0000;">1</span>  <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span><span style="color: #FF0000;">0</span>  <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane1dist <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span><span style="color: #FF0000;">0</span>  <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane2dist <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span><span style="color: #FF0000;">0</span>  <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane3dist <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span><span style="color: #FF0000;">0</span>  <span style="color: #008000;">+</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span><span style="color: #FF0000;">1</span>  <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>If we simplify that down a bit:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;">plane0dist <span style="color: #008000;">=</span>   P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane1dist <span style="color: #008000;">=</span>  <span style="color: #008000;">-</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane2dist <span style="color: #008000;">=</span>  <span style="color: #008000;">-</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span>
plane3dist <span style="color: #008000;">=</span>   P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">+</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">;</span></pre></td></tr></table></div>

<p>Re-arranging slightly we get these plane tests conditions:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>  <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>
<span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span><span style="color: #008000;">-</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>
<span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span><span style="color: #008000;">-</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&gt;</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>
<span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>  <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span></pre></td></tr></table></div>

<p>Which are exactly the same as those which we used in our first simple example. The second condition for each plane must also be satisfied so we only do the collision response once per collision. This can be done by performing a dot product between the particle&#8217;s velocity and the normal for each plane;</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">&lt;</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span>�N<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span> <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span></pre></td></tr></table></div>

<p>We call this the <em>normal velocity</em> since its the particle&#8217;s velocity in the direction of the normal. If this results in a value less than zero then the particle is moving towards the plane and we allow the collision. Once the collision is resolved, the normal velocity will be &gt;= 0 depending on the coefficient of restitution. I could perform the same analysis on the second condition as i did the first to prove that this general solution is the same as the first specific version, but i will leave that as an excercise for the reader.</p>
<p>This shows our two approaches are physically the same.</p>
<p>Ok, so what do we do now for the collision response?</p>
<p>We need a solution which achieves the same result as the�original program but is more general. We can do this using the�<em><a href="https://en.wikipedia.org/wiki/Reflection_(physics)">reflection vector</a></em> from the�<em><a href="http://scienceworld.wolfram.com/physics/LawofReflection.html">law of reflection</a></em>. The reflection vector is calculated thus:</p>
<p><em>R = V &#8211; 2*N*(V</em>�<em>N)</em></p>
<p>Where�<em>V</em> is the velocity vector and�<em>N</em> the surface normal. We need to do a similar comparison with this operator as we did with the collision checks:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;">plane0vel x <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span><span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>   <span style="color: #008000;">=</span>   <span style="color: #008000;">-</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>
plane0vel y <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">0</span>      <span style="color: #008000;">=</span>    V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>
plane1vel x <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">0</span>      <span style="color: #008000;">=</span>    V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>
plane1vel y <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>  <span style="color: #008000;">=</span>   <span style="color: #008000;">-</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>
plane2vel x <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>  <span style="color: #008000;">=</span>   <span style="color: #008000;">-</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>
plane2vel y <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*-</span><span style="color: #FF0000;">1</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>                <span style="color: #008000;">=</span>    V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>
plane3vel x <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span>                <span style="color: #008000;">=</span>    V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span>
plane3vel y <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">*</span><span style="color: #008000;">&#40;</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">x</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">+</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span><span style="color: #008000;">*</span> <span style="color: #FF0000;">1</span><span style="color: #008000;">&#41;</span> <span style="color: #008000;">=</span> V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span> <span style="color: #008000;">-</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span>  <span style="color: #008000;">=</span>   <span style="color: #008000;">-</span>V<span style="color: #008000;">.</span><span style="color: #0000FF;">y</span></pre></td></tr></table></div>

<p>Which, you should be able to see, are the exact same resulting velocities after collision with each plane in the first simple example.</p>
<p>You will have noticed that mass has been ignored in our calculations so far, this is because it just drops right out of the equations when you are dealing with collision against a body of infinite mass (i.e. our simple world).</p>
<p>So what does this new version look like so far in pseudo-code?</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">for</span> all particles i
<span style="color: #008000;">&#123;</span>
  <span style="color: #0600FF; font-weight: bold;">for</span> all planes j
  <span style="color: #008000;">&#123;</span>
    N <span style="color: #008000;">=</span> <span style="color: #008000;">&#123;</span>Planes<span style="color: #008000;">.</span><span style="color: #0000FF;">a</span>, Planes<span style="color: #008000;">.</span><span style="color: #0000FF;">b</span><span style="color: #008000;">&#125;</span><span style="color: #008000;">;</span>
    distance <span style="color: #008000;">=</span> P<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span>�N <span style="color: #008000;">+</span> Planes<span style="color: #008000;">&#91;</span>j<span style="color: #008000;">&#93;</span><span style="color: #008000;">.</span><span style="color: #0000FF;">c</span><span style="color: #008000;">;</span>
&nbsp;
    <span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>distance <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span> <span style="color: #008000;">&amp;&amp;</span> V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span>�N <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
    <span style="color: #008000;">&#123;</span>
      <span style="color: #008080; font-style: italic;">// collision response, reflect particle</span>
      V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span> <span style="color: #008000;">-=</span> <span style="color: #FF0000;">2</span><span style="color: #008000;">*</span>N<span style="color: #008000;">*</span>N�V<span style="color: #008000;">&#91;</span>i<span style="color: #008000;">&#93;</span><span style="color: #008000;">;</span>
    <span style="color: #008000;">&#125;</span>
  <span style="color: #008000;">&#125;</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>Great, so we&#8217;ve turned a nice simple example into one that&#8217;s far more complicated than it needs to be. Why?</p>
<p>Firstly, to demonstrate that the roots of all our inital assumptions were grounded in physics and secondly, to demonstrate the advantages of the more complex implementation. Because we now have a way to deal with arbitrary 2d planes instead of axis aligned planes, it means we can rotate our world and still have the simulation work correctly:</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_1" width="320" height="320">
      <param name="movie" value="http://www.wildbunny.co.uk/media/ParticlesPlane.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/ParticlesPlane.swf" width="320" height="320">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>Move the mouse over the demo to rotate the planes. Note that in this demo, i have done some correction to the points as the planes are rotated to make sure the points still lie within the planes.</p>
<p>Ok, so this is all very well but its not a very real world simulation. There is no gravity and the coefficient of restistution is far too high &#8211; in the real world, most everyday things have a near plastic coefficient of restitution, i.e near 0.</p>
<p>So, adding gravity is pretty simple, we just�subtract gravity from our particle&#8217;s velocities before we do any collision, remembering to account for the fact that gravity is an�acceleration:</p>
<p><em>V[i] += G*dt</em></p>
<p>In this case�<em>G</em> is the vector {0, -9.8} and<em> dt</em> is the number of seconds per frame as before.</p>
<p>We would also like to use a different coefficient of restitution as well�because our particles might not be made of super-rubber. Recall the�<em><a href="https://en.wikipedia.org/wiki/Reflection_(physics)">reflection vector</a></em> equation that we used earlier:</p>
<p><em>R = V &#8211; 2*N*(V</em>�<em>N)</em></p>
<p>We can actually re-write this equation to include the coefficient of restitution:</p>
<p><em>R = V &#8211; (1+e)*N*(V</em>�<em>N)</em></p>
<p>Where�<em>e</em> is the coefficient of restitution which varies from 0 (totally plastic) to 1 (totally elastic). You can see that these two equations are equivelent; if we set�<em>e</em> to 1, we get the original equation. The particles in this example have coefficients of restitution varying from 0 to 1.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_2" width="320" height="320">
      <param name="movie" value="http://www.wildbunny.co.uk/media/ParticlesPlaneGravity.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/ParticlesPlaneGravity.swf" width="320" height="320">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>The only thing we can now do to this particle simulation to make it more realistic (without going to a full rigid body simulation with rotation) is to handle masses in our collisions. To accomplish this, we will have to use circles instead of particles, since its quite unlikely that two particles will ever collide what with them having no actual size!</p>
<div id="attachment_337" style="width: 271px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure1.png"><img class="size-full wp-image-337" title="figure1" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure1.png" alt="" width="261" height="153" /></a><p class="wp-caption-text">Figure 1</p></div>
<p>As per Figure 1, two circles <em>A </em>and <em>B </em>intersect if the distance between them is less than the sum of their radii. The collision normal is simply the vector <em>d </em>between the two, but normalised.</p>
<p>In order to deal with the masses of our particles we need to do some thinking regarding the reflection equation that we already have. What we really need is some kind of mass ratio to apply a bias to the equation so that lighter particles get pushed out of the way by heavier particles, but we need it to conserve momentum as well.</p>
<p><em>ratio<sub>a</sub> = M<sub>b</sub> / (M<sub>a</sub> + M<sub>b</sub>)</em><br />
<em>ratio<sub>b</sub> = M<sub>a</sub> / (M<sub>a</sub> + M<sub>b</sub>)</em></p>
<p>The above two ratios will do the trick. Here is an example:</p>
<p><em>M<sub>a</sub> = 1.0<br />
M<sub>b</sub> = 0.5</em></p>
<p><em>ratio<sub>a</sub> = 0.5 / (1.0 + 0.5) = 1/3<br />
ratio<sub>b</sub> = 1.0 / (1.0 + 0.5) = 2/3</em></p>
<p>Obviously 1/3 + 2/3 = 1, so you can see that this conserves momentum correctly, and since body�<em>b</em> is half the mass of body�<em>a</em>, it should experience twice the reaction upon collision, which it does.</p>
<p>So we can plug these two ratios into our reflection vector equation to obtain two new equations for the reflected velocity of each body after collision:</p>
<p><em>V<sub>a</sub> = V<sub>a</sub> &#8211; (1+e)*N*((V<sub>b</sub>-V<sub>a</sub>) </em><span style="font-family: Courier; font-size: x-small;">�</span><em> N)*(M<sub>b</sub> / (M<sub>a</sub>+M<sub>b</sub>))<br />
V<sub>b</sub> = V<sub>b</sub> &#8211; (1+e)*-N*((V<sub>b</sub>-V<sub>a</sub>)  </em><span style="font-family: Courier; font-size: x-small;">�</span><em> -N)*(M<sub>a</sub> / (M<sub>a</sub>+M<sub>b</sub>))</em></p>
<p>Our collision code gives us the normal pointing from body�<em>b</em> towards body�<em>a</em>, so we must reverse the normal to calculate�body�<em>b</em>&#8216;s reflected velocity. You will have noticed that there�are a lot of duplicated calculations in the two equations above. We would like to simplify this down a bit. What we can do is use the�<em>relative velocity</em> of the two objects in question:</p>
<p><em>V<sub>r</sub> = V<sub>a </sub>- V<sub>b</sub></em></p>
<p>Now that we have only one velocity to deal with the equation gets simpiler.</p>
<p><em>I = (1+e)*N*(V<sub>r</sub> <span style="font-family: Courier; font-size: x-small;">�</span> N)</em></p>
<p><em>V<sub>a</sub> = -I*(M<sub>b</sub> / (M<sub>a</sub>+M<sub>b</sub>))<br />
V<sub>b</sub> = +I*(M<sub>a</sub> / (M<sub>a</sub>+M<sub>b</sub>))</em></p>
<p>What we are doing here is to treat one object as being stationary relative to the other moving object. But there is still more we can do here to simplify these equations:</p>
<p><em>I = (1+e)*N*(V<sub>r</sub> <span style="font-family: Courier; font-size: x-small;">�</span> N)*(M<sub>a</sub>*M<sub>b</sub>)/(<sub> </sub>M<sub>a</sub>+M<sub>b</sub>)</em></p>
<p><em><em>V<sub>a</sub> &#8211; = I /��M<sub>a</sub><br />
V<sub>b</sub> + = I /�M<sub>b</sub></em></em></p>
<p>By combining the ratios we can save some more calculation�and reduce the final step to a simple divide though by the mass of the objects in question to produce the final velocities for those objects. You can see this works because</p>
<!-- Easy AdSense V2.79 -->
<!-- Post[count: 1] -->
<div class="ezAdsense adsense adsense-midtext" style="text-align:center;margin:12px; "><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- medi -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:250px"
     data-ad-client="ca-pub-4897461488762721"
     data-ad-slot="9797433564"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div><p><em>(M<sub>a</sub>*M<sub>b</sub>)/(<sub> </sub>M<sub>a</sub>+M<sub>b</sub>) / M<sub>a </sub>=�<strong>M<sub>b</sub>/(<sub> </sub>M<sub>a</sub>+M<sub>b</sub>)</strong></em></p>
<p>and</p>
<p><em>(M<sub>a</sub>*M<sub>b</sub>)/(<sub> </sub>M<sub>a</sub>+M<sub>b</sub>) / M<sub>b </sub>=<sub> </sub><strong>M<sub>a</sub> / (M<sub>a</sub>+M<sub>b</sub>)</strong></em></p>
<p>Finally we can show that (from fractions)</p>
<p><em>(M<sub>a</sub>+M<sub>b</sub>)/(<sub> </sub>M<sub>a</sub>*M<sub>b</sub>) = 1/M<sub>a </sub>+ 1/M<sub>b</sub></em></p>
<p>Which means we can re-write the final linear impulse equation</p>
<p><strong><em>I = (1+e)*N*(V<sub>r</sub> <span style="font-family: Courier; font-size: x-small;">�</span> N) / (1/M<sub>a </sub>+ 1/M<sub>b</sub>)</em></strong></p>
<p>This is handy because we can just store�<em>1/M<sub>a </sub></em>and<em> 1/M<sub>b</sub></em> inside the definition of our circle rigid bodies so we don&#8217;t have to re-calculate. It also means that we now have a way to represent infinitly massive objects, such as our world (by storing the inverse mass as 0).</p>
<p><em><strong>V<sub>a</sub> &#8211; = I *�1/M<sub>a</sub></strong><br />
<strong>V<sub>b</sub> + = I *�1/M<sub>b</sub></strong></em></p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_3" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/SingleCirclePlane.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/SingleCirclePlane.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>In these demos you can manipulate the circles with the mouse.</p>
<p>Ok, so you probably already noticed we are starting to see problems due to penetration caused by the collision detection system detecting the collision after its already too late. This problem only gets more severe as we add more rigid-bodies, and is compounded by the fact that the system is currently doing nothing to correct the penetration:</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_4" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/CirclesSinkPlane.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/CirclesSinkPlane.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>To combat this problem, we need to be able to detect collisions before they actually happen and deal with penetration. Luckily i&#8217;ve covered this technique already in a <a href="http://www.wildbunny.co.uk/blog/2011/03/25/speculative-contacts-an-continuous-collision-engine-approach-part-1/">previous article</a> which i suggest you read.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_5" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/CirclesPlane.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/CirclesPlane.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>Once this technique is applied the problem just goes away; and there are only a few lines of code required. The only caveat is that we have to assume that the coefficient of restitution is never required to be non-0; in the majority of real-world cases this isn&#8217;t too much of a limitation, especially given the benefits.</p>
<h2>Software engineering</h2>
<p>In physics engines, the mathsy part is only half the story; the second half is how you organise your physics engine in terms of classes�hierarchy and how you actually code it.</p>
<p>I&#8217;m going to present one possible solution here which has worked for me in the past; it may be over-simplified for your requirements but it should give you an idea. The language here is actionscript, but the principles apply to any OO language.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> RigidBody
<span style="color: #66cc66;">&#123;</span>
	protected <span style="color: #000000; font-weight: bold;">var</span> m_pos:Vector2;
	protected <span style="color: #000000; font-weight: bold;">var</span> m_vel:Vector2;
	protected <span style="color: #000000; font-weight: bold;">var</span> m_invMass:<span style="color: #0066CC;">Number</span>;
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> RigidBody<span style="color: #66cc66;">&#40;</span> pos:Vector2, vel:Vector2, invMass:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
	        m_pos=pos;
		m_vel=vel;
		m_invMass=invMass;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> GenerateContact<span style="color: #66cc66;">&#40;</span> rb:RigidBody <span style="color: #66cc66;">&#41;</span>:Contact
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Error</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;Not implemented on base class&quot;</span><span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Integrate<span style="color: #66cc66;">&#40;</span> dt:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
	<span style="color: #66cc66;">&#123;</span>
		m_pos=m_pos.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> m_vel.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span> dt <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>So, i&#8217;ve defined a <em>RigidBody </em>base class containing the three parameters that we need so far in our example. There is an integrate function to move foward in time and (what should be a virtual) function called <em>GenerateContact()</em> which will generate a collision normal and distance between any two <em>RigidBody</em>s.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Circle <span style="color: #0066CC;">extends</span> RigidBody
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_radius:<span style="color: #0066CC;">Number</span>;
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Circle<span style="color: #66cc66;">&#40;</span> pos:Vector2, radius:<span style="color: #0066CC;">Number</span>, invMass:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_radius = radius;
		<span style="color: #0066CC;">super</span><span style="color: #66cc66;">&#40;</span>pos, <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>, invMass<span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> override <span style="color: #000000; font-weight: bold;">function</span> GenerateContact<span style="color: #66cc66;">&#40;</span> rb:RigidBody <span style="color: #66cc66;">&#41;</span> :Contact
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> rb is Circle <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			...
		<span style="color: #66cc66;">&#125;</span>
                <span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span>rb is ...<span style="color: #66cc66;">&#41;</span>
                <span style="color: #66cc66;">&#123;</span>
                        ...
                <span style="color: #66cc66;">&#125;</span>
                <span style="color: #b1b100;">else</span>
		<span style="color: #66cc66;">&#123;</span>
		    <span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Error</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;unahandled case!&quot;</span><span style="color: #66cc66;">&#41;</span>;
                <span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>And we have a <em>Circle </em>which derives from <em>RigidBody </em>and extends its functionality by having a radius parameter. Also, we have implemented the <em>GenerateContact()</em> function to return the required information when needed.</p>
<p>By separating functionality out into base class and concrete implementations we will be able to deal with multiple RigidBodys in the same lists, which greatly simplifies the code.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Plane <span style="color: #0066CC;">extends</span> RigidBody
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_n:Vector2;
	<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_d:<span style="color: #0066CC;">Number</span>
&nbsp;
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Plane<span style="color: #66cc66;">&#40;</span>n:Vector2, d:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_n=n;
		m_d=d;
&nbsp;
		<span style="color: #0066CC;">super</span><span style="color: #66cc66;">&#40;</span>n.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>-d<span style="color: #66cc66;">&#41;</span>, <span style="color: #000000; font-weight: bold;">new</span> Vector2<span style="color: #66cc66;">&#40;</span><span style="color: #66cc66;">&#41;</span>, <span style="color: #cc66cc;">0</span><span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
        <span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> override <span style="color: #000000; font-weight: bold;">function</span> GenerateContact<span style="color: #66cc66;">&#40;</span> rb:RigidBody <span style="color: #66cc66;">&#41;</span>:Contact
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> rb is Particle <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			...
		<span style="color: #66cc66;">&#125;</span>
		<span style="color: #b1b100;">else</span> <span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> rb is Circle <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			...
		<span style="color: #66cc66;">&#125;</span>
	        <span style="color: #b1b100;">else</span>
                <span style="color: #66cc66;">&#123;</span>
			<span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Error</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;unhandled case!&quot;</span><span style="color: #66cc66;">&#41;</span>;
                <span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above is another concrete implementation, this time representing an infinite plane (our screen edges).</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Contact
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">var</span> m_normal:Vector2;
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">var</span> m_dist:<span style="color: #0066CC;">Number</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Contact<span style="color: #66cc66;">&#40;</span> n:Vector2, dist:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_normal = n;
		m_dist = dist;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above is the definition for the <em>Contact </em>class, which represents the information the system will need to resolve one collision.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">function</span> Update<span style="color: #66cc66;">&#40;</span> <span style="color: #0066CC;">e</span>:GameLoopEvent <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
<span style="color: #66cc66;">&#123;</span>
	const dt:<span style="color: #0066CC;">Number</span> = <span style="color: #0066CC;">Math</span>.<span style="color: #0066CC;">min</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">e</span>.<span style="color: #006600;">m_elapsed</span>, <span style="color: #cc66cc;">1.0</span><span style="color: #66cc66;">/</span><span style="color: #cc66cc;">15.0</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">// apply gravity</span>
	<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> p:RigidBody <span style="color: #b1b100;">in</span> m_rigidBodies <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> p.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			p.<span style="color: #006600;">m_vel</span>=p.<span style="color: #006600;">m_vel</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> Constants.<span style="color: #006600;">kGravity</span>.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span> dt <span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">// collide</span>
	<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span>=<span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">||</span>rbj.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		const c:Contact=rbi.<span style="color: #006600;">GenerateContact</span><span style="color: #66cc66;">&#40;</span> rbj <span style="color: #66cc66;">&#41;</span>;
&nbsp;
		...
&nbsp;
		<span style="color: #808080; font-style: italic;">//resolve collision</span>
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">// integrate</span>
	<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span> <span style="color: #66cc66;">&#40;</span> p <span style="color: #b1b100;">in</span> m_rigidBodies <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		p.<span style="color: #006600;">Integrate</span><span style="color: #66cc66;">&#40;</span> dt <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above is what our update loop currently looks like. The order here is fairly important;</p>
<ol>
<li>Firstly, external forces are applied &#8211; i.e. gravity.</li>
<li>Then, all the collision detection is done to generate a contact which needs to be resolved for each pair of interacting rigid bodies.</li>
<li>Finally, each RigidBody is integrated forward in time.</li>
</ol>
<p>The time-step clamping at the beginning is so that as we debug the code, we don&#8217;t end up with such a massive time-step the next frame that everything explodes!</p>
<h2>Constraints</h2>
<p>Ok, so we have a pile of spheres up and running and our physics engine is starting to take shape quite nicely, what about constraints?</p>
<p>Before i talk about this, i feel i should introduce some concepts needed to understand the problem.</p>
<p><strong>Constraint</strong></p>
<p>Loosely, this is something which enforces a condition between two rigid bodies. So, when there is a collision we create a constraint which enforces the rule that the colliding rigid body may not move through the object it collides with but also that it do this by only pushing. We already derrived the code for this above (not taking into account rotation yet):</p>
<p><strong><em>I = (1+e)*N*(V<sub>r</sub> <span style="font-family: Courier; font-size: x-small;">�</span> N) / (1/M<sub>a </sub>+ 1/M<sub>b</sub>)</em></strong></p>
<p>All the constraints i&#8217;m going to work with are impulse velocity level constraints. Forces and accellerations will not come into it.</p>
<p><strong>Inequality constraint</strong></p>
<p>This is a constraint which only acts in one direction. So a collision constraint is an inequality constraint because it is only allowed to push and never pull. If it were allowed to pull, it would stick the rigid body to the object it collided with. The way we enforce this inequality is simply the check i mentioned at the beginning:</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="csharp" style="font-family:monospace;"><span style="color: #0600FF; font-weight: bold;">if</span> <span style="color: #008000;">&#40;</span>V�N <span style="color: #008000;">&lt;</span> <span style="color: #FF0000;">0</span><span style="color: #008000;">&#41;</span>
<span style="color: #008000;">&#123;</span>
   <span style="color: #008080; font-style: italic;">// handle constaint</span>
<span style="color: #008000;">&#125;</span></pre></td></tr></table></div>

<p>Little Big Planet contained a lot of constraints of this type; winch, piston, string are a few examples &#8211; they only allowed motion in one direction within the limits of the constraint. So a piston, for example was a length constraint with lower and upper bounds on the allowed length.</p>
<p><strong>Equality constraint</strong></p>
<p>This constraint type is allowed to pull and push equally. An example is a point to point constraint, where two rigid bodies are connected by a single point &#8211; one point on each body is forced to lie in the same place. With a hinge constraint the whole hinge axis is constrained to lie in the same place on both rigid bodies. A rod constraint would be a a length constraint where the length is never allowed to change.</p>
<h2>Designing a constraint</h2>
<p>The way to approach how to design a particular constraint is to think about what restricting effect it has on the two rigid-bodies its connected between.</p>
<p>For example, a distance constraint (a rod in LBP) simply prevents the two end points of the rod getting any closer than (or any further away from) the specified distance. Putting the end points exactly at the centre of mass of each rigid body, as we are about to describe keeps simple circular rigid bodies at a constant distance from each other, while still allowing both of them to continue to move around in 2d space.</p>
<div id="attachment_351" style="width: 271px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure2.png"><img class="size-full wp-image-351" title="figure2" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure2.png" alt="" width="261" height="153" /></a><p class="wp-caption-text">Figure 2</p></div>
<p>In <em>Figure 2</em>, bodies <em>A </em>and <em>B </em>must not get any closer than distance <em>d</em>, but are still allowed to move around independently otherwise &#8211; this resolves as each body being able to orbit the other as they fly through space.</p>
<p><strong>Impulse/velocity level</strong></p>
<p>As mentioned previously, the simulator i&#8217;m describing is an impulse/velocity level simulator, rather than a force/acceleration level one. This means that all the constraints must only be solved by applying impulses to change velocities of bodies.</p>
<p>What this means when designing a constraint is that once you&#8217;ve worked out how it behaves on a position/distance level (i.e. on paper, with a diagram), you need to then think about how that translates into velocities.</p>
<p>So, to recap: our distance constraint stops the end points getting any closer or further away from each other. In velocity terms this is describing a one dimensional constraint; the relative velocity of the bodies is constrained to be zero in one particular axis. That axis is defined by vector between the end points.</p>
<div id="attachment_353" style="width: 271px" class="wp-caption alignnone"><a href="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure3.png"><img class="size-full wp-image-353" title="figure3" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure3.png" alt="" width="261" height="153" /></a><p class="wp-caption-text">Figure 3</p></div>
<p>In <em>Figure 3</em>, <em>A </em>and <em>B </em>have starting velocities which violate the length constraint that we&#8217;ve placed between them (from <em>Figure 2</em>). The first step in solving a constraint is to figure out where that velocity actually is. In this case you can see its the projection of <em>A<sub>v</sub></em> and <em>B<sub>v</sub></em> on to the length constraint axis.</p>
<p>Once we have the velocities we want to remove, we convert into a single, <em>relative velocity</em> (as we did before with the contact constraint) and we already derived the maths required to solve one dimensional constraints (from the contact constraint):</p>
<p><strong>I = (1+e)*N*(Vr���N) / (1/Ma�+ 1/Mb)</strong></p>
<p>Lets re-write that so it becomes less of a mouth-full:</p>
<p><strong>I = RelativeVelocityMagnitudeToRemove / (1/Ma�+ 1/Mb)</strong></p>
<p>In addition to the velocity part, there will also be some positional fix-up to do, since with more than one constraint acting in the system simultaneously it will often fail to be resolved with one one solver iteration. In this simple example we just add an artificial correction to the velocity (current length &#8211; desired length) / time-step.</p>

    <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="swfobj_6" width="320" height="240">
      <param name="movie" value="http://www.wildbunny.co.uk/media/DistanceConstraint.swf" />
      <!--[if !IE]>-->
      <object type="application/x-shockwave-flash" data="http://www.wildbunny.co.uk/media/DistanceConstraint.swf" width="320" height="240">
      <!--<![endif]-->
        
      <!--[if !IE]>-->
      </object>
      <!--<![endif]-->
    </object>

<p>Above is the result &#8211; you can manipulate the circles with the mouse as before, although one is fixed in place to demonstrate the constraint chain.</p>
<p><strong>Software engineering</strong></p>
<p>So, lets cover the additions to the code.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> Constraint
<span style="color: #66cc66;">&#123;</span>
	protected <span style="color: #000000; font-weight: bold;">var</span> m_bodyA:RigidBody;
	protected <span style="color: #000000; font-weight: bold;">var</span> m_bodyB:RigidBody;
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Constraint<span style="color: #66cc66;">&#40;</span> bodyA:RigidBody, bodyB:RigidBody <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		m_bodyA = bodyA;
		m_bodyB = bodyB;
&nbsp;
		Assert<span style="color: #66cc66;">&#40;</span> m_bodyA.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">||</span>m_bodyB.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span>, <span style="color: #ff0000;">&quot;Constraint between two infinite mass bodies not allowed&quot;</span> <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> ApplyImpulse<span style="color: #66cc66;">&#40;</span> I:Vector2 <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
	<span style="color: #66cc66;">&#123;</span>
		m_bodyA.<span style="color: #006600;">m_vel</span> = m_bodyA.<span style="color: #006600;">m_vel</span>.<span style="color: #0066CC;">Add</span><span style="color: #66cc66;">&#40;</span> I.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>m_bodyA.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
		m_bodyB.<span style="color: #006600;">m_vel</span> = m_bodyB.<span style="color: #006600;">m_vel</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span> I.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>m_bodyB.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&#41;</span> <span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> Solve<span style="color: #66cc66;">&#40;</span> dt:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #0066CC;">throw</span> <span style="color: #000000; font-weight: bold;">new</span> <span style="color: #0066CC;">Error</span><span style="color: #66cc66;">&#40;</span><span style="color: #ff0000;">&quot;base class doesn't implement!&quot;</span><span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above you can see we&#8217;ve added another base class; this one defines the basic part of a constraint but doesn&#8217;t actually define any concrete details &#8211; as before, we leave this to the derived classes. It does however provide a framework for us &#8211; each constraint must implement the <em>Solve()</em> function which does the meat of the work. Additionally, there is an <em>ApplyImpulse()</em> function defined to save us some work in the concrete implementations.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">class</span> DistanceConstraint <span style="color: #0066CC;">extends</span> Constraint
<span style="color: #66cc66;">&#123;</span>
	<span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_distance:<span style="color: #0066CC;">Number</span>;
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> <span style="color: #000000; font-weight: bold;">function</span> DistanceConstraint<span style="color: #66cc66;">&#40;</span> bodyA:RigidBody, bodyB:RigidBody, distance:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #0066CC;">super</span><span style="color: #66cc66;">&#40;</span>bodyA, bodyB<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		m_distance = distance;
	<span style="color: #66cc66;">&#125;</span>
&nbsp;
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #808080; font-style: italic;">///</span>
	<span style="color: #808080; font-style: italic;">/// </span>
	<span style="color: #0066CC;">public</span> override <span style="color: #000000; font-weight: bold;">function</span> Solve<span style="color: #66cc66;">&#40;</span> dt:<span style="color: #0066CC;">Number</span> <span style="color: #66cc66;">&#41;</span>:<span style="color: #0066CC;">void</span>
	<span style="color: #66cc66;">&#123;</span>
		<span style="color: #808080; font-style: italic;">// get some information that we need</span>
		const axis:Vector2 = m_bodyB.<span style="color: #006600;">m_Pos</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>m_bodyA.<span style="color: #006600;">m_Pos</span><span style="color: #66cc66;">&#41;</span>;
		const currentDistance:<span style="color: #0066CC;">Number</span> = axis.<span style="color: #006600;">m_Len</span>;
		const unitAxis:Vector2 = axis.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span><span style="color: #cc66cc;">1</span><span style="color: #66cc66;">/</span>currentDistance<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// calculate relative velocity in the axis, we want to remove this</span>
		const relVel:<span style="color: #0066CC;">Number</span> = m_bodyB.<span style="color: #006600;">m_vel</span>.<span style="color: #006600;">Sub</span><span style="color: #66cc66;">&#40;</span>m_bodyA.<span style="color: #006600;">m_vel</span><span style="color: #66cc66;">&#41;</span>.<span style="color: #006600;">Dot</span><span style="color: #66cc66;">&#40;</span>unitAxis<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		const relDist:<span style="color: #0066CC;">Number</span> = currentDistance-m_distance;
&nbsp;
		<span style="color: #808080; font-style: italic;">// calculate impulse to solve</span>
		const remove:<span style="color: #0066CC;">Number</span> = relVel+relDist<span style="color: #66cc66;">/</span>dt;
		const impulse:<span style="color: #0066CC;">Number</span> = remove <span style="color: #66cc66;">/</span> <span style="color: #66cc66;">&#40;</span>m_bodyA.<span style="color: #006600;">m_InvMass</span> + m_bodyB.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// generate impulse vector</span>
		const I:Vector2 = unitAxis.<span style="color: #006600;">MulScalar</span><span style="color: #66cc66;">&#40;</span>impulse<span style="color: #66cc66;">&#41;</span>;
&nbsp;
		<span style="color: #808080; font-style: italic;">// apply</span>
		ApplyImpulse<span style="color: #66cc66;">&#40;</span>I<span style="color: #66cc66;">&#41;</span>;
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>Above is the implementation for the actual distance constraint, it does the work as described above.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;"><span style="color: #0066CC;">private</span> <span style="color: #000000; font-weight: bold;">var</span> m_joints:Vector.<span style="color: #66cc66;">&lt;</span>Constraint<span style="color: #66cc66;">&gt;</span>;</pre></td></tr></table></div>

<p>In the solver we define a list of constraints &#8211; they are different to contacts in that they&#8217;re more permanent, so they get their own list.</p>

<div class="wp_syntax"><table><tr><td class="code"><pre class="actionscript" style="font-family:monospace;">const dt:<span style="color: #0066CC;">Number</span> = <span style="color: #0066CC;">Math</span>.<span style="color: #0066CC;">min</span><span style="color: #66cc66;">&#40;</span><span style="color: #0066CC;">e</span>.<span style="color: #006600;">m_elapsed</span>, <span style="color: #cc66cc;">1.0</span><span style="color: #66cc66;">/</span><span style="color: #cc66cc;">15.0</span><span style="color: #66cc66;">&#41;</span>;
&nbsp;
<span style="color: #808080; font-style: italic;">// apply gravity</span>
<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> p:RigidBody <span style="color: #b1b100;">in</span> m_rigidBodies <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	...
<span style="color: #66cc66;">&#125;</span>
&nbsp;
<span style="color: #808080; font-style: italic;">// collide</span>
<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> i:<span style="color: #0066CC;">int</span>=<span style="color: #cc66cc;">0</span>; i<span style="color: #66cc66;">&lt;</span>m_rigidBodies.<span style="color: #006600;">length</span>-<span style="color: #cc66cc;">1</span>; i++ <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	const rbi:RigidBody=m_rigidBodies<span style="color: #66cc66;">&#91;</span>i<span style="color: #66cc66;">&#93;</span>;
	<span style="color: #b1b100;">for</span> <span style="color: #66cc66;">&#40;</span> <span style="color: #000000; font-weight: bold;">var</span> j:<span style="color: #0066CC;">int</span>=i+<span style="color: #cc66cc;">1</span>; j<span style="color: #66cc66;">&lt;</span>m_rigidBodies.<span style="color: #0066CC;">length</span>; j++ <span style="color: #66cc66;">&#41;</span>
	<span style="color: #66cc66;">&#123;</span>
		const rbj:RigidBody=m_rigidBodies<span style="color: #66cc66;">&#91;</span>j<span style="color: #66cc66;">&#93;</span>;
&nbsp;
		<span style="color: #b1b100;">if</span> <span style="color: #66cc66;">&#40;</span> rbi.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span><span style="color: #66cc66;">||</span>rbj.<span style="color: #006600;">m_InvMass</span><span style="color: #66cc66;">&gt;</span><span style="color: #cc66cc;">0</span> <span style="color: #66cc66;">&#41;</span>
		<span style="color: #66cc66;">&#123;</span>
			...
		<span style="color: #66cc66;">&#125;</span>
	<span style="color: #66cc66;">&#125;</span>
<span style="color: #66cc66;">&#125;</span>
&nbsp;
<span style="color: #808080; font-style: italic;">// solve constraints</span>
<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span><span style="color: #66cc66;">&#40;</span><span style="color: #000000; font-weight: bold;">var</span> jt:Constraint <span style="color: #b1b100;">in</span> m_joints<span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	jt.<span style="color: #006600;">Solve</span><span style="color: #66cc66;">&#40;</span>dt<span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span> 
&nbsp;
<span style="color: #808080; font-style: italic;">// integrate</span>
<span style="color: #b1b100;">for</span> <span style="color: #b1b100;">each</span> <span style="color: #66cc66;">&#40;</span> p <span style="color: #b1b100;">in</span> m_rigidBodies <span style="color: #66cc66;">&#41;</span>
<span style="color: #66cc66;">&#123;</span>
	p.<span style="color: #006600;">Integrate</span><span style="color: #66cc66;">&#40;</span> dt <span style="color: #66cc66;">&#41;</span>;
<span style="color: #66cc66;">&#125;</span></pre></td></tr></table></div>

<p>The solver loop now looks like the above &#8211; we have gained a little loop for solving the constraints &#8211; i&#8217;ve chosen to do that after solving for contacts which makes the joints &#8216;stronger&#8217; than the contacts (in that because they&#8217;re resolved last, they will be more correct than the contacts which are done first), you can do it the other way around if you like.</p>
<h2>Conclusion</h2>
<p>This article has uncovered the physics lurking behind the most simple of 2d games (pong), shown that the principles therein are grounded in physics and expanded on the technique used in that game step by step all the way up to the point where designing a constraint in a physics engine can be seen as a simple extension of colliding two objects.</p>
<p>I hope this article has whet your appetite for physics simulation while also being easy to understand. I have run out of time with this article, but depending on its popularity i can write a lot more on the subject. Register your interest by posting in the comments! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<h2>Source code</h2>
<p>As ever, if you enjoyed reading this article and would like to see more, please consider buying the source code which accompanies it; this will allow an indie developer like me to pay the rent and buy more food to eat! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>You will receive all the framework code that i&#8217;ve laid out in this article, including the code behind the demos on this page which should serve as a good base to expand upon. They are written in actionscript 3.0 but the techniques are applicable to all OO languages.</p>
<p>After purchasing, you will be redirected to a page where you can download the source immediately.</p>
<p>USD 14.99<br />
<form action="https://www.paypal.com/cgi-bin/webscr" method="post">
 <input type="hidden" name="business" value="paypal@wildbunny.co.uk" />
 <input type="hidden" name="cmd" value="_xclick" />
 <!-- Instant Payment Notification & Return Page Details -->
 <input type="hidden" name="notify_url" value="http://www.wildbunny.co.uk/blog/?s2member_paypal_notify=1" />
 <input type="hidden" name="cancel_return" value="http://www.wildbunny.co.uk/blog/" />
 <input type="hidden" name="return" value="http://www.wildbunny.co.uk/blog/?s2member_paypal_return=1" />
 <input type="hidden" name="rm" value="2" />
 <!-- Configures Basic Checkout Fields -->
 <input type="hidden" name="lc" value="" />
 <input type="hidden" name="no_shipping" value="1" />
 <input type="hidden" name="no_note" value="1" />
 <input type="hidden" name="custom" value="www.wildbunny.co.uk" />
 <input type="hidden" name="currency_code" value="USD" />
 <input type="hidden" name="page_style" value="paypal" />
 <input type="hidden" name="charset" value="utf-8" />
 <input type="hidden" name="item_name" value="Physics engines for dummies source" />
 <input type="hidden" name="item_number" value="sp:414:72" />
 <input type="hidden" name="amount" value="14.99" />
 <!-- Configures s2Member's Unique Invoice ID/Code  -->
 <input type="hidden" name="invoice" value="53b321801e0e6~31.220.200.86" />
 <!-- Associates Purchase With A User/Member (when/if applicable) -->
 <input type="hidden" name="on0" value="Originating Domain" />
 <input type="hidden" name="os0" value="www.wildbunny.co.uk" />
 <!-- Identifies The Customer's IP Address For Tracking -->
 <input type="hidden" name="on1" value="Customer IP Address" />
 <input type="hidden" name="os1" value="31.220.200.86" />
 <!-- Displays The PayPal Image Button -->
 <input type="image" src="https://www.paypal.com/en_US/i/btn/btn_xpressCheckout.gif" style="width:auto; height:auto; border:0;" alt="PayPal" />
</form></p>
<p><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Subscribers can access the source here</a></p>
<p>Until next time, have fun!</p>
<p>Cheers, Paul.</p>

				<!-- Social Sharing Toolkit v2.0.4 | http://www.marijnrongen.com/wordpress-plugins/social_sharing_toolkit/ -->
				<div class="mr_social_sharing_wrapper"><span class="mr_social_sharing"><script type="text/javascript">
							  reddit_url = "http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/";
							  reddit_title = "Physics engines for dummies";
							</script>
							<script type="text/javascript" src="http://www.reddit.com/static/button/button1.js"></script></span><span class="mr_social_sharing"><a href="http://twitter.com/share" class="twitter-share-button" data-url="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" data-count="horizontal" data-text="Physics engines for dummies">Tweet</a></span><span class="mr_social_sharing"><iframe src="https://www.facebook.com/plugins/like.php?locale=en_US&amp;href=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F06%2Fphysics-engines-for-dummies%2F&amp;layout=button_count&amp;show_faces=false&amp;width=90px&amp;height=21px" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:90px; height:21px;" allowTransparency="true"></iframe></span><span class="mr_social_sharing"><div id="fb-root"></div><fb:send href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" font=""></fb:send></span><span class="mr_social_sharing"><g:plusone size="medium" href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/"></g:plusone></span><span class="mr_social_sharing"><a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.wildbunny.co.uk%2Fblog%2F2011%2F04%2F06%2Fphysics-engines-for-dummies%2F&amp;title=Physics+engines+for+dummies" target="_blank" class="mr_social_sharing_popup_link"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/social-sharing-toolkit/images/buttons/stumbleupon.png" alt="Submit to StumbleUpon" title="Submit to StumbleUpon"/></a></span></div><span style="clear:both;display:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/wp-spamfree/img/wpsf-img.php" width="0" height="0" alt="" style="border-style:none;width:0px;height:0px;display:none;" /></span>											</div><!-- .entry-content -->

					<div id="entry-author-info">
						<div id="author-avatar">
							<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=60&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D60&amp;r=G' class='avatar avatar-60 photo' height='60' width='60' />						</div><!-- #author-avatar -->
						<div id="author-description">
							<h2>About Paul Firth</h2>
							A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp							<div id="author-link">
								<a href="http://www.wildbunny.co.uk/blog/author/paulfirth/">
									View all posts by Paul Firth <span class="meta-nav">&rarr;</span>								</a>
							</div><!-- #author-link	-->
						</div><!-- #author-description -->
					</div><!-- #entry-author-info -->

					<div class="entry-utility">
						This entry was posted in <a href="http://www.wildbunny.co.uk/blog/category/as3/" title="View all posts in AS3" rel="category tag">AS3</a>, <a href="http://www.wildbunny.co.uk/blog/category/beginner/" title="View all posts in Beginner" rel="category tag">Beginner</a>, <a href="http://www.wildbunny.co.uk/blog/category/platform-game/collision-detection-platform-game/" title="View all posts in Collision Detection" rel="category tag">Collision Detection</a>, <a href="http://www.wildbunny.co.uk/blog/category/geometry/" title="View all posts in Geometry" rel="category tag">Geometry</a>, <a href="http://www.wildbunny.co.uk/blog/category/graphics/" title="View all posts in Graphics" rel="category tag">Graphics</a>, <a href="http://www.wildbunny.co.uk/blog/category/physics-2/" title="View all posts in Physics" rel="category tag">Physics</a>, <a href="http://www.wildbunny.co.uk/blog/category/technical/" title="View all posts in Technical" rel="category tag">Technical</a> and tagged <a href="http://www.wildbunny.co.uk/blog/tag/collision-detection/" rel="tag">collision detection</a>, <a href="http://www.wildbunny.co.uk/blog/tag/constraint/" rel="tag">constraint</a>, <a href="http://www.wildbunny.co.uk/blog/tag/contact/" rel="tag">contact</a>, <a href="http://www.wildbunny.co.uk/blog/tag/game-engine/" rel="tag">game engine</a>, <a href="http://www.wildbunny.co.uk/blog/tag/joint/" rel="tag">joint</a>, <a href="http://www.wildbunny.co.uk/blog/tag/physics/" rel="tag">physics</a>, <a href="http://www.wildbunny.co.uk/blog/tag/pong/" rel="tag">pong</a>, <a href="http://www.wildbunny.co.uk/blog/tag/simulation/" rel="tag">simulation</a>. Bookmark the <a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/" title="Permalink to Physics engines for dummies" rel="bookmark">permalink</a>.											</div><!-- .entry-utility -->
				</div><!-- #post-## -->

				<div id="nav-below" class="navigation">
					<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/03/31/client-server-communication-using-json-silverlight-php/" rel="prev"><span class="meta-nav">&larr;</span> Client->server communication using json, silverlight and php</a></div>
					<div class="nav-next"><a href="http://www.wildbunny.co.uk/blog/2011/04/10/blog-micro-transactions-a-viable-business-model/" rel="next">Blog micro-transactions &#8211; a viable business model? <span class="meta-nav">&rarr;</span></a></div>
				</div><!-- #nav-below -->

				
			<div id="comments">


			<h3 id="comments-title">185 Responses to <em>Physics engines for dummies</em></h3>

			<div class="navigation">
				<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div>
				<div class="nav-next"></div>
			</div> <!-- .navigation -->

			<ol class="commentlist">
					<li class="comment even thread-even depth-1" id="li-comment-710">
		<div id="comment-710">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/581d0927721240ec53d3394c66814b1c?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-710">
			July 17, 2011 at 8:45 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I&#8217;m using the Angry Birds Part 2.  I&#8217;ve probably posted in the wrong spot.  Sorry about that.</p>
<p>The reason for the COR is just to test.  I figured if I could get a perfectly elastic collision looking right, then reducing it to something more real would probably be correct as well.</p>
<p>I&#8217;ll keep plugging away at it.  If I find a solution, I&#8217;ll post it and maybe it will help someone else.</p>
<p>Thanks.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=710#respond' onclick='return addComment.moveForm("comment-710", "710", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-711">
		<div id="comment-711">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-711">
			July 17, 2011 at 10:06 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Working on Little Big Planet PSP we found that the entire game was possible with a COR of 0 &#8211; the reason being is that most objects in real life have a plastic (near 0) COR <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=711#respond' onclick='return addComment.moveForm("comment-711", "711", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://programmersgoodies.com/how-a-physics-engine-actually-simulates-physics' rel='external nofollow' class='url'>How a physics engine actually simulates physics? - Programmers Goodies</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.thomasbergamini.com/blog/wordpress/?p=279' rel='external nofollow' class='url'>Video Game Collision Detection | Thomas Bergamini</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-829">
		<div id="comment-829">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/55bb03ca64dd4b464c9dff772980109d?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.mojomassage.co.uk' rel='external nofollow' class='url'>Massage in London</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-829">
			September 14, 2011 at 2:13 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Is there any other way to buy it except pay pal?<br />
alertpay ?moneybookers?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=829#respond' onclick='return addComment.moveForm("comment-829", "829", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-831">
		<div id="comment-831">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-831">
			September 14, 2011 at 10:00 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi, right now there is only PayPal, very sorry we tried Google checkout but it didn&#8217;t work out for us. Remember, if you have a credit card you can use PayPal to pay without needing to sign up to PayPal itself <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=831#respond' onclick='return addComment.moveForm("comment-831", "831", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://programmersgoodies.com/find-point-of-collision-for-two-sprites' rel='external nofollow' class='url'>Find point of collision for two sprites - Programmers Goodies</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://checkinout.shikshik.org/2011/09/28/physics-dummies/' rel='external nofollow' class='url'>Physics dummies | Checkinout</a></p>
	</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.help-about-ipad.blogspot.com' rel='external nofollow' class='url'>help about ipad</a></p>
	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-896">
		<div id="comment-896">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-896">
			October 23, 2011 at 4:42 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi,</p>
<p>I&#8217;m fine with you referencing and linking, but I&#8217;m not sure about you using large portions of my material <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=896#respond' onclick='return addComment.moveForm("comment-896", "896", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-902">
		<div id="comment-902">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/ff42c4a4d611006ed5e5a3b0e0029e7c?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">tarik kaya</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-902">
			October 26, 2011 at 1:04 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thank you for this amazingly insightful tutorial.</p>
<p>But&#8230; <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>I think I found a mistake. You say:</p>
<p>Va = Va � (1+e)*N*(Va � N)*(Mb / (Ma+Mb))<br />
Vb = Vb � (1+e)*-N*(Vb � -N)*(Ma / (Ma+Mb))</p>
<p>to calculate the new velocities.</p>
<p>So here is a counter-example: if a ball sits still with zero velocity, there can be no impact possible to get it to some velocity other than zero, according to these equations.<br />
because: suppose: Va = 0 then: (Va � N) = 0 then: Va=0 no mater what Vb is..</p>
<p>If I am getting something wrong, I would very much appreciate to be enlightened.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=902#respond' onclick='return addComment.moveForm("comment-902", "902", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-905">
		<div id="comment-905">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-905">
			October 27, 2011 at 10:16 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Tarik,</p>
<p>I think you found a mistake that I thought I&#8217;d corrected already <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>It should be:</p>
<p>Va = Va � (1+e)*N*((Vb-Va) � N)*(Mb / (Ma+Mb))<br />
Vb = Vb � (1+e)*-N*((Vb-Va) � -N)*(Ma / (Ma+Mb))</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=905#respond' onclick='return addComment.moveForm("comment-905", "905", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://modforminecraft.com/your-questions-about-mods-for-minecraft-9/' rel='external nofollow' class='url'>Your Questions About &#8211; Mods For Minecraft | Mod For Minecraft</a></p>
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-958">
		<div id="comment-958">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/15879431d53a6982e30ffd5d3482cc71?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">ryan20fun</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-958">
			November 16, 2011 at 4:12 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>nice tutorial, but some of the code blocks have the &gt; and &lt; cymbles translated to HTML tags.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=958#respond' onclick='return addComment.moveForm("comment-958", "958", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-959">
		<div id="comment-959">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-959">
			November 16, 2011 at 8:47 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Argh, I thought I fixed that &#8211; must be WordPress messing me up; thanks for pointing it out <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=959#respond' onclick='return addComment.moveForm("comment-959", "959", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-966">
		<div id="comment-966">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/45503476d63ea711be6f400fc85d2ddf?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://Khada.net' rel='external nofollow' class='url'>Khada Kuraki</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-966">
			November 20, 2011 at 8:18 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thanks very much for this wonderful article.</p>
<p>Khada Kuraki.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=966#respond' onclick='return addComment.moveForm("comment-966", "966", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-967">
		<div id="comment-967">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/41f0fa8e9f08fc042a0918845750686b?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Paul</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-967">
			November 20, 2011 at 12:25 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Thank you very much for writing this article, really appreciated <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /><br />
but could you please explain how you find the distance from the line to the origin ? is there some kind of formula? im having a really hard time understanding how to get the distance of a arbitary line segment to the origin. </p>
<p>Thank you<br />
Paul</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=967#respond' onclick='return addComment.moveForm("comment-967", "967", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-968">
		<div id="comment-968">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-968">
			November 20, 2011 at 9:01 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Its a case of projecting the origin onto the line and then getting the distance between the origin and the projected point; this website has the details: <a href="http://mathworld.wolfram.com/Point-LineDistance2-Dimensional.html" rel="nofollow">http://mathworld.wolfram.com/Point-LineDistance2-Dimensional.html</a></p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=968#respond' onclick='return addComment.moveForm("comment-968", "968", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment even depth-2" id="li-comment-972">
		<div id="comment-972">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/be68f570cfedf1a7add82cda2520dee9?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Aleks</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-972">
			November 24, 2011 at 5:06 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I am digesting this article myself and it took me a while to understand some parts of it. So to make it easier to remember I started a blog in which in I wrote my understanding of how the distance worked. If you are interested you can take a look:</p>
<p><a href="http://nindzadza.blogspot.com/2011/11/setting-up-proper-screen-boundaries.html" rel="nofollow">http://nindzadza.blogspot.com/2011/11/setting-up-proper-screen-boundaries.html</a></p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=972#respond' onclick='return addComment.moveForm("comment-972", "972", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1090">
		<div id="comment-1090">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/5b1ea4c05df6168a733fabc270141696?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">TasuLife</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1090">
			January 9, 2012 at 2:54 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Paul, thanks for this.  Its easy to see the love you put into it and its very helpful.  I know you don&#8217;t want to spend the rest of your life maintaining this document, but I also got stuck on this part.  I think that  Alek&#8217;s explanation is much, much easier to digest, but it&#8217;s way down here in the comments (I missed it last night).  I reccomend adding Alek&#8217;s explanation up to your own document when you say:<br />
&#8220;Our environment is defined by its boundaries which are four axis aligned planes (actually, they�re lines because we are in 2d). Each one has a normal (which points inwards) and a distance to the origin. They look like this:&#8221;</p>
<p>Anyway, I absolutely love this document, thank you so much for writing it.  It&#8217;s a great primer.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1090#respond' onclick='return addComment.moveForm("comment-1090", "1090", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-1091">
		<div id="comment-1091">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1091">
			January 9, 2012 at 4:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>Really glad you enjoyed it <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>I&#8217;ll look up Alek&#8217;s explanation and see if I can fit it in&#8230;</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1091#respond' onclick='return addComment.moveForm("comment-1091", "1091", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-1092">
		<div id="comment-1092">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1092">
			January 9, 2012 at 4:56 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I had a quick look at Alek&#8217;s explaination, which I have seen before actually <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>I can&#8217;t really update my explanation to match his, because I think his is technically incorrect &#8211; the planes I defined are not just the normals of the planes, they are the actual planes &#8211; the first two components are the normal x and y, the final one is the distance to the origin.</p>
<p>Does that make any sense?</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1092#respond' onclick='return addComment.moveForm("comment-1092", "1092", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-5" id="li-comment-1097">
		<div id="comment-1097">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/5b1ea4c05df6168a733fabc270141696?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">TasuLife</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1097">
			January 11, 2012 at 1:15 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Yes, that tidbit is helpful.  I was mostly confused what the numbers meant (to the layman they look like xyz coordinates).  I&#8217;ve never seen a plane described like that, but I say blame the parents.</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1019">
		<div id="comment-1019">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/5feca61ac1643854a71403928ab5a8dc?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.milfordgames.com' rel='external nofollow' class='url'>Doug Milford</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1019">
			December 13, 2011 at 3:29 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>I&#8217;ve enjoyed your tutorials&#8230; the first one I tripped upon was with Speculative contacts which I found very interesting.</p>
<p>I recently purchased the code for Physics for Dummies as I was interested in the section regarding Constraints (the string of connected balls).  When I tried to open it in Visual Studio 10, though, nothing came up.  Peaking at the code via a Notepad, it looks like it&#8217;s a Flash game.  Is this correct?  Is there a Silverlight version? That&#8217;s ok if not as I was only interested in a very specific piece and can most likely translate to Silverlight very easily.</p>
<p>Thank you very much for providing these demos!  The speculative code has already saved me several hours of banging my head against the wall.  Well worth the price I paid!</p>
<p>Doug</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1019#respond' onclick='return addComment.moveForm("comment-1019", "1019", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1021">
		<div id="comment-1021">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1021">
			December 13, 2011 at 12:09 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Doug,</p>
<p>Glad you enjoyed the tutorials <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>I switched to using Flash after that speculative contacts article, because it has a much better install base and I wanted the demos to be visible to as many people as possible&#8230;</p>
<p>I use a visual studio 2008 plug-in called Amethyst which allows flash to work with VS, which is why there is a .sln file <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1021#respond' onclick='return addComment.moveForm("comment-1021", "1021", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1062">
		<div id="comment-1062">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/0064cd8c6ccedc58c649dae611baa2ff?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Alex A.</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1062">
			December 28, 2011 at 8:43 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,<br />
Thank you for awesome tutorials/<br />
I&#8217;m wondering, would you make tuts based on Matthias Muller&#8217;s papers like &#8220;position-based dynamics&#8221; and &#8220;Meshless Deformations Based on Shape Matching&#8221;?<br />
Cuz these techniques are very flexible and fits well for 2D, but math explanation is much harder to read than code <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_sad.gif" alt=":(" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1062#respond' onclick='return addComment.moveForm("comment-1062", "1062", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-1063">
		<div id="comment-1063">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1063">
			December 28, 2011 at 10:23 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Alex,</p>
<p>No problem, glad you enjoyed them <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>I have to confess, I&#8217;ve not read either of those two papers &#8211; but thanks for the suggestion, I&#8217;ll consider it&#8230;</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1063#respond' onclick='return addComment.moveForm("comment-1063", "1063", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-5" id="li-comment-1413">
		<div id="comment-1413">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/0064cd8c6ccedc58c649dae611baa2ff?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Alex A.</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1413">
			April 27, 2012 at 6:11 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>thank you for answer, Paul.<br />
I forgot to  mention that the main reason why i&#8217;m asking about that techniques is because as far as i know developers of original LBP was using those techniques(they was mention about it on siggraph presentation)</p>
<p>p.s.  your articles are awesome, and further direction seems very promising</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="post pingback">
		<p>Pingback: <a href='http://www.wildbunny.co.uk/blog/2011/12/14/how-to-make-a-2d-platform-game-part-2-collision-detection/' rel='external nofollow' class='url'>How to make a 2d platform game &#8211; part 2 collision detection | Paul&#039;s blog@Wildbunny</a></p>
	</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1078">
		<div id="comment-1078">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/b28a30d2f0da4cae77cc06e90c4e1aca?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">joaquin</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1078">
			January 5, 2012 at 10:55 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I really like the tutorial, its really hard to find a &#8220;step by step&#8221; introduction to collision response. In most books they dive into the hardcore and its easy to miss the whole picture, speciality if you want to implement a simple 2D game with some collision.</p>
<p>I&#8217;m so glad Google exists =)</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1078#respond' onclick='return addComment.moveForm("comment-1078", "1078", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1079">
		<div id="comment-1079">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1079">
			January 5, 2012 at 10:59 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I love google as well; the internet rocks for this kind of info, I can&#8217;t even remember what life was like beforehand! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Glad you enjoyed it!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1079#respond' onclick='return addComment.moveForm("comment-1079", "1079", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1142">
		<div id="comment-1142">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/a671ce4ef243a304f2867f93f3971325?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Robert</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1142">
			January 25, 2012 at 9:22 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi,<br />
I just purchased this tutorial. Thank you.<br />
I would be interested how could one implement bounciness on the balls. Right now if two balls hit each other they kind of slide smoothly without any bounce. If it is more than meets the eye maybe you could make another tutorial.</p>
<p>Anyway, you have some great content here. Keep it up.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1142#respond' onclick='return addComment.moveForm("comment-1142", "1142", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1143">
		<div id="comment-1143">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1143">
			January 25, 2012 at 9:36 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Robert,</p>
<p>Thanks for the purchase <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>This is one of the limitations of the technique &#8211; it only supports totally plastic collisions (i.e. no bounce). I haven&#8217;t looked into trying to add the bounce back in; I think it should be possible. When I get a chance I will have a go and write a post if its successful <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1143#respond' onclick='return addComment.moveForm("comment-1143", "1143", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1327">
		<div id="comment-1327">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/4bf901b3f63b9fabbdbdc7ddf4362bf4?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tomas</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1327">
			April 6, 2012 at 12:53 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi!</p>
<p>I really enjoy your articles, thanks a lot! There is one thing I can&#8217;t quite work out though, and internet doesn&#8217;t seem to know either:</p>
<p>if (-P[i].y  1)</p>
<p>How is it that you can put an assignment operator between two if-statements?</p>
<p>Cheers!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1327#respond' onclick='return addComment.moveForm("comment-1327", "1327", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1328">
		<div id="comment-1328">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1328">
			April 6, 2012 at 1:04 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Tomas,</p>
<p>Are you referring to this code block?</p>
<pre>if (P[i].x  &lt; -1)
if (-P[i].y &lt; -1) = if (P[i].y &gt; 1)
if (-P[i].x &lt; -1) = if (P[i].x &gt; 1)
if (P[i].y  &lt; -1)</pre>
<p>If so, I was just saying that you can simplify the two <em>if</em> conditions in the middle and the result is on the right.</p>
<p>So <em>if (-P[i].y < -1)</em> can be rewritten as </em><em>if (P[i].y > 1)</em> <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1328#respond' onclick='return addComment.moveForm("comment-1328", "1328", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1329">
		<div id="comment-1329">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/4bf901b3f63b9fabbdbdc7ddf4362bf4?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tomas</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1329">
			April 6, 2012 at 3:08 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey! </p>
<p>Yeah, the code was cut off somehow! I see what you mean now, I suppose the code block threw me off. Thanks a lot for clearing it up for me! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1329#respond' onclick='return addComment.moveForm("comment-1329", "1329", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1398">
		<div id="comment-1398">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/ff8e77b16f0fb8dc07d831ba4f771778?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Raul</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1398">
			April 20, 2012 at 3:51 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi. I really liked your tutorial as i&#8217;m looking for a physics engine, but a very simple one, this will help me get what I want.<br />
Altough I haven&#8217;t finished reading, I can&#8217;t understand about the planes. Because you&#8217;re creating a 2D engine but use 3D vectors for the planes? I mean, how do I get a normal for a line, that would be the plane in 2D?<br />
Hope you understand the question.<br />
Thanks for the attention.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1398#respond' onclick='return addComment.moveForm("comment-1398", "1398", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1399">
		<div id="comment-1399">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1399">
			April 20, 2012 at 10:25 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Raul,</p>
<p>The plane equation is two parts &#8211; the normal to the plane (which is two components) and the distance to the origin (which is the final component).</p>
<p>Hope that makes sense!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1399#respond' onclick='return addComment.moveForm("comment-1399", "1399", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1400">
		<div id="comment-1400">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/ff8e77b16f0fb8dc07d831ba4f771778?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Raul</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1400">
			April 20, 2012 at 5:14 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>oh, I get it.<br />
So a plane (a, b, c) has the normal that is the &#8216;vector&#8217; (a, b) and a distance c from the origin.<br />
Thanks for the info.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1400#respond' onclick='return addComment.moveForm("comment-1400", "1400", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1401">
		<div id="comment-1401">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/ff8e77b16f0fb8dc07d831ba4f771778?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Raul</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1401">
			April 21, 2012 at 12:09 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hello, it&#8217;s me again.<br />
As I finished reading the tutorial, I must say it&#8217;s very well written.<br />
But I have a question about the &#8216;Software engineering&#8217; part.<br />
I didn&#8217;t get how you handle the collisions, I see you created the class Contact but I don&#8217;t get how you use it.<br />
Is this kind of thing available only in the full code?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1401#respond' onclick='return addComment.moveForm("comment-1401", "1401", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1404">
		<div id="comment-1404">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1404">
			April 24, 2012 at 7:45 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Raul,</p>
<p>A contact just contains the data relevant to solving one collision &#8211; so it stores both objects, the contact normal and the distance between objects. These values are then used in the equations you&#8217;ve already seen <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1404#respond' onclick='return addComment.moveForm("comment-1404", "1404", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1411">
		<div id="comment-1411">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/d2060aba9e5dceca8847092195bd6662?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Chris</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1411">
			April 27, 2012 at 5:58 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thank you for the very well written tutorial!</p>
<p>This is the first one that I&#8217;ve seen that actually  expexplains how to implement the math in code.<br />
That was my main problem. </p>
<p>If I end up making any money from what I&#8217;ve learned, I&#8217;ll make sure to come back and buy the source code. <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1411#respond' onclick='return addComment.moveForm("comment-1411", "1411", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1449">
		<div id="comment-1449">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/75781aef71beb9ded42848d781f20d38?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Alan</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1449">
			May 30, 2012 at 6:13 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Dear Paul,</p>
<p>When I receive my diploma in software engineering, I&#8217;ll remember you.<br />
Thanks a lot for the lessons!</p>
<p>Sincerely,<br />
Alan</p>
<p>P.S. Your source code is a bit much for a college student&#8217;s budget, but I&#8217;ll try and contribute one day.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1449#respond' onclick='return addComment.moveForm("comment-1449", "1449", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1450">
		<div id="comment-1450">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1450">
			May 30, 2012 at 6:15 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Alan,</p>
<p>Glad I could help! Don&#8217;t worry about the cost, I know what its like being a student! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1450#respond' onclick='return addComment.moveForm("comment-1450", "1450", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1458">
		<div id="comment-1458">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/75781aef71beb9ded42848d781f20d38?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Alan</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1458">
			June 4, 2012 at 2:09 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>May I add, actually, that I&#8217;m applying the same principles in this tutorial to 3D. Since everything is in vectors I&#8217;m able to do that with only minor modifications (except for the actual collision detection). So, if anyone prefers models over sprites, they will benefit from this tutorial as well. Just putting it out there. <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1458#respond' onclick='return addComment.moveForm("comment-1458", "1458", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1551">
		<div id="comment-1551">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6aa19478b3027b467f1a819ead33dbe5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='https://twitter.com/KamilTrebunia' rel='external nofollow' class='url'>Kamil T.</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1551">
			August 17, 2012 at 9:36 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi, great article and very useful source code. I&#8217;m trying to really *get* everything you&#8217;re writing here with all the underlying math and physics.</p>
<p>And I can&#8217;t get past one thing&#8230; When you write &#8220;above two ratios will do the trick&#8221; (regarding conservation of momentum) do you only mean that they are &#8220;fine&#8221; or that they are precise? Wikipedia has somehow different equations (at the very end of that article):<br />
<a href="http://en.wikipedia.org/wiki/Elastic_collision#Two-_and_three-dimensional" rel="nofollow">http://en.wikipedia.org/wiki/Elastic_collision#Two-_and_three-dimensional</a></p>
<p>I know that at that point you already solved part of what those equations are doing (namely you&#8217;ve got your angles right by that point) and what I&#8217;m asking is if m1/(m1 + m2) has any basis in physics of perfectly elastic rigid bodies or is it just some approximation.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1551#respond' onclick='return addComment.moveForm("comment-1551", "1551", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1555">
		<div id="comment-1555">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1555">
			August 22, 2012 at 9:23 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Kamil,</p>
<p>Yes the two ratios I mention are exact and are fundamental to conservation of linear momentum.</p>
<p>If you look in that wikkipedia link you can see the same equations hiding along with the other parts specific to angular momentum <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1555#respond' onclick='return addComment.moveForm("comment-1555", "1555", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-1695">
		<div id="comment-1695">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/dea12f81a696f0d05ff407bbf8b41f4b?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">mr5</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1695">
			November 10, 2012 at 11:37 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there&#8230;I would also like to create my own physics engine in 2D.<br />
I have already done some things. the only thing that bothers me most is: how to check all the coordinates scope of the (x, y) axis , which is the origin + its radius (a circular object) . what I mean is like rotating a needle in the middle through its scope. is it like using some sin/cosine functions there? hope you understand what I mean. like the bouncing balls in your article. </p>
<p>Too lazy to read. </p>
<p>thanks!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1695#respond' onclick='return addComment.moveForm("comment-1695", "1695", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1696">
		<div id="comment-1696">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1696">
			November 10, 2012 at 12:29 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi, sorry I&#8217;m not sure what you mean?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1696#respond' onclick='return addComment.moveForm("comment-1696", "1696", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-1892">
		<div id="comment-1892">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1d560c523dea22722fe39a89c903c33d?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Rich</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1892">
			January 9, 2013 at 1:58 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi, forgive me if this is a dumb question but could you please explain to me what exactly N, the normal, is? I see it in multiple equations. Is it a property of a certain class or is it derived in someway? Just bought your source btw so i&#8217;ll look at that when I get a chance.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1892#respond' onclick='return addComment.moveForm("comment-1892", "1892", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-1893">
		<div id="comment-1893">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1893">
			January 9, 2013 at 9:16 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Rich,</p>
<p>N is the contact normal involved in a collision, generated by the collision detection system.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1893#respond' onclick='return addComment.moveForm("comment-1893", "1893", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-1894">
		<div id="comment-1894">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/1d560c523dea22722fe39a89c903c33d?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Rich</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1894">
			January 9, 2013 at 3:20 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>So is the contact normal considered a distance or a force? Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1894#respond' onclick='return addComment.moveForm("comment-1894", "1894", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1919">
		<div id="comment-1919">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3729b37b3e52f6339300ccf50728dde7?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Joe</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1919">
			January 16, 2013 at 2:01 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey Paul , </p>
<p>Thank you very much for these tutorials! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /><br />
I learned a lot about how to design classes and how to apply linear algebra in a practical way. Up to now university was all about theory and your tutorials really help me to close the gap to the practical. </p>
<p>Right now Im trying to figure out your Contact Design:<br />
1)where do you store Contacts? Are they stored all in one list somewhere, or has each object a list?<br />
2)how do i resolve them only knowing  &#8220;m_normal&#8221; &#8220;m_dist&#8221; later in the update loop.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1919#respond' onclick='return addComment.moveForm("comment-1919", "1919", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1920">
		<div id="comment-1920">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1920">
			January 16, 2013 at 9:34 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Joe,</p>
<p>No problem, glad they helped you!</p>
<p>1) Contacts are stored in a big, shared list<br />
2) The distance between objects and normal are all you need if you&#8217;re only resolving about the COM of each object. If you need to consider angular effects as well, you&#8217;ll need the actual contact points too.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1920#respond' onclick='return addComment.moveForm("comment-1920", "1920", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-1932">
		<div id="comment-1932">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/3729b37b3e52f6339300ccf50728dde7?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Joe</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1932">
			January 20, 2013 at 11:21 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>It works, this is awesome! <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /><br />
Thanks Paul</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1932#respond' onclick='return addComment.moveForm("comment-1932", "1932", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-1933">
		<div id="comment-1933">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1933">
			January 20, 2013 at 12:35 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Great!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1933#respond' onclick='return addComment.moveForm("comment-1933", "1933", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1937">
		<div id="comment-1937">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/38b14207ac95cbed2d5ab4dd8ca8ca4f?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1937">
			January 23, 2013 at 11:26 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>This article is just awesome. Thanks.<br />
I was wondering how much more it would take to implement circles&#8217;s rotation (is it a torque in that case) as part of the collision reaction ?<br />
Would you mind giving some tips about it ? equations, simple way to integrate, so forth.<br />
Thanks again.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1937#respond' onclick='return addComment.moveForm("comment-1937", "1937", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1938">
		<div id="comment-1938">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1938">
			January 23, 2013 at 11:30 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Time,</p>
<p>It&#8217;s somewhat more complex; I&#8217;d recommend following Chris Hecker&#8217;s articles here: </p>
<p><a href="http://chrishecker.com/Rigid_Body_Dynamics" rel="nofollow">http://chrishecker.com/Rigid_Body_Dynamics</a></p>
<p>These cover the topic thoroughly.</p>
<p>Hope that helps!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1938#respond' onclick='return addComment.moveForm("comment-1938", "1938", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1942">
		<div id="comment-1942">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/08dcd40ba585c3fad0a32695ca34964c?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.milesalden.com' rel='external nofollow' class='url'>Miles</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1942">
			January 25, 2013 at 2:08 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>First, thank you SOSOSOSO much for publishing this blog. Very helpful. I&#8217;m not particularly amenable to vector maths, but I&#8217;m trying to learn. I&#8217;ve got a few <i>basic</i> concepts under my belt now, but I&#8217;ve had trouble implementing and understanding your planes representation (newb, I know, but bear with me). </p>
<p>My little sandbox project <a href="milesalden.com/wildbunny/bouncyballs/BouncyBalls.zip" rel="nofollow"> here</a>:   ( Look in &#8211; [MAPlaneManager buildPlanes:] )</p>
<p>I haven&#8217;t been able to manipulate the below items to properly match up with my screen edges.  Two sides are off by ~20-30px. Is there some wisdom you can point me to to better help understand this? </p>
<p>Planes[4] =<br />
{<br />
   (1,  0, 1),<br />
   (0, -1, 1),<br />
   (-1, 0, 1),<br />
   (0,  1, 1)<br />
}</p>
<p>How exactly do these vectors determine planes? They&#8217;re meant to represent directions and not positions, right?</p>
<p>Thanks in advance,<br />
Miles</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1942#respond' onclick='return addComment.moveForm("comment-1942", "1942", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1943">
		<div id="comment-1943">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1943">
			January 25, 2013 at 9:28 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Those planes are specified in world-space where each plane is one metre from the centre of the world (the last parameter of each vector in the plane).</p>
<p>Keep all your objects in world space, but when rendering them, convert into screen space. Here is one conversion into screen space:</p>
<p>render.x = p.m_x*Constants.kWidth*0.5 + Constants.kWidth*0.5;<br />
render.y = p.m_y*Constants.kHeight*0.5 + Constants.kHeight*0.5;</p>
<p>Hope that helps!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1943#respond' onclick='return addComment.moveForm("comment-1943", "1943", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-1993">
		<div id="comment-1993">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/8f169dd8ef3f02ace4157774b8c8c9eb?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Benjamin Britten</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1993">
			February 17, 2013 at 4:02 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I take it this is Euler integration, if so you should remake the demos with the Runge-Kutta 4 Method as it performs much better.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1993#respond' onclick='return addComment.moveForm("comment-1993", "1993", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-1998">
		<div id="comment-1998">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1998">
			February 17, 2013 at 10:00 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Actually not in my experience. In fact, I don&#8217;t know of any commercial physics engine which uses anything higher than Euler. The integration is never usually the problem unless you&#8217;re trying to simulate a pendulum.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1998#respond' onclick='return addComment.moveForm("comment-1998", "1998", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-1995">
		<div id="comment-1995">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/45f1cf43ad2db9dbcca08b74afbe7dea?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Chris Gregg</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1995">
			February 17, 2013 at 8:48 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there &#8212; great tutorial, thanks.  I know this page is fairly old, but I thought I&#8217;d comment on your integration to determine the effect of gravity on the particles.  You use Euler integration: V[i] += G*dt; P[i] += V[i]*dt.  This introduces a systematic error into the calculation for position, because the value of the position during an entire time-step is not based on the final result of V[i] during that time-step, rather it is based on the average value: (V[i-1]+V[i])/2.  The value of P[i] should then be: P[i]+=(V[i-1]+V[i])/2.  See the following for more information: <a href="http://lol.zoy.org/blog/2011/12/14/understanding-motion-in-games" rel="nofollow">http://lol.zoy.org/blog/2011/12/14/understanding-motion-in-games</a></p>
<p>As a concrete example, if you dropped a ball from 10 meters above the ground, after one second (neglecting air resistance) the velocity would be -9.8m/s, but the distance the ball fell would be 4.9m, not -9.8m like an Euler integration would calculate.</p>
<p>I&#8217;m guessing you already know all this and wanted to simplify it for the tutorial, but I thought it was worth mentioning to your readers in case any of them (like me) scratched their heads if they have a bit of physics background and see that the numbers don&#8217;t quite work out.  Cheers!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1995#respond' onclick='return addComment.moveForm("comment-1995", "1995", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-2" id="li-comment-1996">
		<div id="comment-1996">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/45f1cf43ad2db9dbcca08b74afbe7dea?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Chris Gregg</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-1996">
			February 17, 2013 at 8:50 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Whoops &#8212; that should be P[i]+=(V[i-1]+V[i])/2 * dt.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=1996#respond' onclick='return addComment.moveForm("comment-1996", "1996", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-2000">
		<div id="comment-2000">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2000">
			February 17, 2013 at 10:05 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Chris,</p>
<p>Yes, Euler is an approximation, but it&#8217;s one most games are perfectly happy to live with. I&#8217;ve never used anything else in any of the games I&#8217;ve worked on because it was simply not necessary <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2000#respond' onclick='return addComment.moveForm("comment-2000", "2000", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-2003">
		<div id="comment-2003">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/45f1cf43ad2db9dbcca08b74afbe7dea?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Chris Gregg</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2003">
			February 17, 2013 at 1:05 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Fair enough &#8212; if it works well enough for the simulation, then that&#8217;s cool.  I&#8217;m building a physics simulator for teaching physics, so I&#8217;m trying to make it as true-to-life as I can (esp. when I tell the students that a ball dropped from rest should fall 4.9m!).  I&#8217;m not looking forward to trying to wrap my head around simulating friction. <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2003#respond' onclick='return addComment.moveForm("comment-2003", "2003", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-2004">
		<div id="comment-2004">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2004">
			February 17, 2013 at 1:26 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Ahhh ok, I understand &#8211; I can see why you&#8217;d want something more true-to-life than Euler if you&#8217;re teaching physics. If you&#8217;re teaching simulation physics, I&#8217;d actually advice steering well clear of higher order integration methods because they make every single thing much more complicated to understand and to implement.</p>
<p>Semi-implicit Euler does fairly well in most situations.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2004#respond' onclick='return addComment.moveForm("comment-2004", "2004", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-2240">
		<div id="comment-2240">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/8c11a1d2ee0cde7f82358f9e753d1d3e?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Elias</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2240">
			April 23, 2013 at 5:41 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Will you accept bitcoins for the source code?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2240#respond' onclick='return addComment.moveForm("comment-2240", "2240", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-2241">
		<div id="comment-2241">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2241">
			April 23, 2013 at 6:18 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Elias,</p>
<p>I&#8217;m afraid not&#8230; I was tempted but really I could use the cash right now <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2241#respond' onclick='return addComment.moveForm("comment-2241", "2241", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-2379">
		<div id="comment-2379">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c2ba0e216146f53c8d731dd4190b78f5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Hector Vasquez</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2379">
			May 15, 2013 at 6:47 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul.</p>
<p>I know that &#8216;e&#8217; is the coefficient of restitution, but each body have its own coefficient<br />
so i want to know which coefficient i will use in the &#8216;I&#8217; ecuation that is<br />
I = (1+e)*N*(Vr � N) / (1/Ma + 1/Mb);</p>
<p>Thanks.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2379#respond' onclick='return addComment.moveForm("comment-2379", "2379", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-2380">
		<div id="comment-2380">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2380">
			May 15, 2013 at 7:10 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Hector,</p>
<p>This is a common problem. There is no &#8216;right&#8217; answer to this question &#8211; you&#8217;ll have to make a function which picks one single value from the two objects in contact using some kind of heuristic.</p>
<p>The trouble is trying to understand what happens in cases like a perfectly rubber ball touching a perfectly slippery surface <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2380#respond' onclick='return addComment.moveForm("comment-2380", "2380", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-2381">
		<div id="comment-2381">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c2ba0e216146f53c8d731dd4190b78f5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Hector Vasquez</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2381">
			May 15, 2013 at 7:55 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Ook i will try to understand that, but i have another question.<br />
Some times when they collide, one of the circles stuck to the other one, i dont know why this is happening</p>
<p>Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2381#respond' onclick='return addComment.moveForm("comment-2381", "2381", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-2382">
		<div id="comment-2382">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2382">
			May 15, 2013 at 8:27 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Hector,</p>
<p>It sounds like you need to make sure relative normal velocity is negative before resolving the impulse. This type of impulse should only &#8216;push&#8217; never &#8216;pull&#8217;.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2382#respond' onclick='return addComment.moveForm("comment-2382", "2382", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-5" id="li-comment-2384">
		<div id="comment-2384">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c2ba0e216146f53c8d731dd4190b78f5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Hector Vasquez</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2384">
			May 16, 2013 at 3:54 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul.</p>
<p>Thanks a lot that worked!! relative normal velocity was positive!</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2387">
		<div id="comment-2387">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c2ba0e216146f53c8d731dd4190b78f5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Hector Vasquez</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2387">
			May 17, 2013 at 8:04 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul.</p>
<p>How about friction?<br />
How can we apply friction to this simulation?</p>
<p>Thanks.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2387#respond' onclick='return addComment.moveForm("comment-2387", "2387", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2388">
		<div id="comment-2388">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2388">
			May 17, 2013 at 8:12 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Hector,</p>
<p>Yes. Friction is always applied in the tangential direction. So, if you take your collision normal, and perp() it (-y, x) that gives you your tangent vector. Then, project relative velocity onto the tangent to get relative tangential velocity. Once you have this, you can use the same impulse equation to remove some portion of the tangential velocity, and that&#8217;s what gives you friction. <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2388#respond' onclick='return addComment.moveForm("comment-2388", "2388", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-2389">
		<div id="comment-2389">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c2ba0e216146f53c8d731dd4190b78f5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Hector Vasquez</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2389">
			May 17, 2013 at 9:03 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul.</p>
<p>So we dont need any cof ?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2389#respond' onclick='return addComment.moveForm("comment-2389", "2389", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-2390">
		<div id="comment-2390">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2390">
			May 17, 2013 at 9:07 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Coefficient of restitution will be 0, and setting it to 0 will remove some of that equation. The result will be what you need to use for friction &#8211; although the amount of tangential velocity you chose to remove could be called the coefficient of friction <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2390#respond' onclick='return addComment.moveForm("comment-2390", "2390", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2694">
		<div id="comment-2694">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/0d68e27739f5b4f85e13e26d395338d9?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Felipe Obregon</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2694">
			June 28, 2013 at 4:41 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I&#8217;m not sure if you noticed but you&#8217;re link to the dot product no longer works, it redirects to the home page of <a href="http://www.pfirth.co.uk/" rel="nofollow">http://www.pfirth.co.uk/</a></p>
<p>Excellent tutorial might I add!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2694#respond' onclick='return addComment.moveForm("comment-2694", "2694", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2695">
		<div id="comment-2695">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2695">
			June 28, 2013 at 4:42 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Felipe, </p>
<p>Thanks for pointing that out <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2695#respond' onclick='return addComment.moveForm("comment-2695", "2695", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-2705">
		<div id="comment-2705">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c306e7c788d9bb7fca7285487843375a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2705">
			June 30, 2013 at 9:49 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hey Paul, I&#8217;m confused about how the planes are positioned. Are they inside the window like a cross or are they the surrounding the window like a box.</p>
<p>Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2705#respond' onclick='return addComment.moveForm("comment-2705", "2705", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2706">
		<div id="comment-2706">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2706">
			June 30, 2013 at 9:57 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Surrounding like a box <img src="http://www.wildbunny.co.uk/blog/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2706#respond' onclick='return addComment.moveForm("comment-2706", "2706", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-2707">
		<div id="comment-2707">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/c306e7c788d9bb7fca7285487843375a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Tim</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2707">
			June 30, 2013 at 10:13 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I&#8217;m also confused about what a normal is, you said that the planes have normals that point inward but what are they?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2707#respond' onclick='return addComment.moveForm("comment-2707", "2707", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-2708">
		<div id="comment-2708">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2708">
			June 30, 2013 at 10:54 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Unit length vector: <a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/vector/#Unit" rel="nofollow">http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/vector/#Unit</a></p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2708#respond' onclick='return addComment.moveForm("comment-2708", "2708", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-2879">
		<div id="comment-2879">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/36d9f7c7f63395eb5d1704757a7a1b56?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Mathias Chunnoo</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2879">
			July 17, 2013 at 4:48 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi paul,</p>
<p>Thank you so much for writhing this article, it have helped me so much.</p>
<p>But i wondered if you had any tips on how to make a physic simulation with other objects then circles, like squares and triangles?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2879#respond' onclick='return addComment.moveForm("comment-2879", "2879", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-2880">
		<div id="comment-2880">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2880">
			July 17, 2013 at 4:54 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Mathias,</p>
<p>There&#8217;s a few related articles &#8211; have a look through these and see if any fit the bill?</p>
<p><a href="http://www.wildbunny.co.uk/blog/category/physics-2/" rel="nofollow">http://www.wildbunny.co.uk/blog/category/physics-2/</a></p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2880#respond' onclick='return addComment.moveForm("comment-2880", "2880", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-2881">
		<div id="comment-2881">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/36d9f7c7f63395eb5d1704757a7a1b56?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Mathias Chunnoo</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-2881">
			July 17, 2013 at 6:28 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thank you for answering so fast.</p>
<p>The one about collision detection really helped.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=2881#respond' onclick='return addComment.moveForm("comment-2881", "2881", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-3106">
		<div id="comment-3106">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/ad5c3d0c3678d6560dd6cab989596d82?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Hasan</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3106">
			August 21, 2013 at 4:49 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,<br />
I am going through a critical problem.You seems a pretty good programmer so I hope you may help.I graduated in CS from University of Windsor in the year 2011. I was pretty good in web programming that time.Due my work permit problem in Canada , no company helped me  to extended my stay in Canada. So I started odd jobs.They helped my stay in Canada and  now PR is on the way I guess.Recent days, I am planning to be game developer.I started with Unity 3D. I never learned C# before but it is familiar to me as I know Java.but still game programming is far away from web programming. I learned C in school but never learned C++.Do you think it will be a good decision to start learning game programming from the scratch using C++.I tried using Unity it seems nice but when comes critical movement I feel like I am a dumb ass.</p>
<p>Thanks</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3106#respond' onclick='return addComment.moveForm("comment-3106", "3106", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-3107">
		<div id="comment-3107">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3107">
			August 21, 2013 at 8:12 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Hasan,</p>
<p>Learning to be a game programmer is a very long process, there are many things to cover. C++ is one of the most difficult languages to grasp, so if you chose C++ you will be starting down an even longer road to learning. On the other hand, all the major games studios currently use C++ so it will stand you in good stead if that&#8217;s what you want to do.</p>
<p>To be honest, though you will probably end up getting paid more to do web development than you would game programming anyway, so that might be a better choice for you in the short term.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3107#respond' onclick='return addComment.moveForm("comment-3107", "3107", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-3345">
		<div id="comment-3345">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">big_fan_for_phy_engine</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3345">
			October 4, 2013 at 8:03 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul, </p>
<p>Thanks for this article. It&#8217;s so great! </p>
<p>But I am having some difficulties when calculating distance from a point to a plane. If I am not misunderstanding, the plane definition you provide is &#8216;parsed&#8217; like this: <code>(planeNormal.x, planeNormal.y, distanceFromOrigin)</code>. I can see the good point of this definition is to simplify the distance calculation from <b> (a*p.x + b*p.y + c)/sqrt(a*a + b*b) </b> to <b> p*planeNormal +  distance </b>. But my problem is: (normal.x, normal.y, distance) actually defines two planes(symmetrical to the origin, as the distance here is a scalar) rather than one. </p>
<p>So for a given plane and point, (p*planeNormal +  distance) gives out different results if the normal is flipped. The wrong result is actullay the distance between the point and the &#8220;symmetrical plane&#8221;.</p>
<p>As a result, my collision detector behaves really funny(ball goes through certain planes and collides with &#8216;invisible&#8217; planes out of canvas). Can you shed some light on this?</p>
<p>Thanks!</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3345#respond' onclick='return addComment.moveForm("comment-3345", "3345", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-3346">
		<div id="comment-3346">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3346">
			October 4, 2013 at 8:09 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi there,</p>
<p>Even when the plane distance is non unit, the definition only defines one plane because the &#8216;facing&#8217; direction is encoded into the plane normal. Planes under this definition are in fact one sided, so if you need a double sided plane, you&#8217;d need two of these single sided planes back-to-back as it were.</p>
<p>Hope that helps!</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3346#respond' onclick='return addComment.moveForm("comment-3346", "3346", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-3" id="li-comment-3347">
		<div id="comment-3347">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">big_fan_for_phy_engine</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3347">
			October 4, 2013 at 8:37 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Thanks for your fast reply!</p>
<p>By saying the definition defines two planes, i mean (1, 0, 1) can be seen as a plane facing the direction of X axis and intersecting with X axis at x = 1, but it also defines a plane with the same facing direction but intersects with X axis at x = -1. </p>
<p>I think if the &#8216;distance&#8217; in plane definition is a unsigned value, it will be difficult to pick the right plane to perform point to plane distance calculation.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3347#respond' onclick='return addComment.moveForm("comment-3347", "3347", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-4" id="li-comment-3348">
		<div id="comment-3348">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3348">
			October 4, 2013 at 8:59 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>I think you&#8217;re describing two different planes in your example:</p>
<p>(1,0,1) is located at x=-1 because the distance is always in the direction of the plane normal (which is 1,0), so to hit the origin after traveling 1 unit, it has to be positioned at x=-1;<br />
(-1,0,1) would be the opposite plane, located at x=+1, for a similar but opposite reason.</p>
<p>Does that make sense?</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3348#respond' onclick='return addComment.moveForm("comment-3348", "3348", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment even depth-5" id="li-comment-3349">
		<div id="comment-3349">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/6fe10b9f0a5a73fba68e5b62af98d66a?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">big_fan_for_phy_engine</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3349">
			October 4, 2013 at 9:22 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>&#8220;the distance is always in the direction of the plane normal&#8221; makes so much sense to me. My code does not restrict this&#8230;</p>
<p>Thanks for the explanation!</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-3423">
		<div id="comment-3423">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/28045e315d388b817f10af1193dba6ae?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Le Minh Duc</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3423">
			October 19, 2013 at 5:11 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Paul,</p>
<p>Thanks for a great article.</p>
<p>I implemented distance constraint, and try a step further to completely lock rotation of two object, but I has no idea. I think I must remove some angular velocities like in the distance constraint, but don&#8217;t know how to find them, can you help me?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3423#respond' onclick='return addComment.moveForm("comment-3423", "3423", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3426">
		<div id="comment-3426">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3426">
			October 20, 2013 at 12:02 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>In the article I don&#8217;t consider rotation at all &#8211; the objects are connected at their centre of mass, so they&#8217;re free to rotate in any direction. If you want to constrain the angular velocity of both objects to be the same, you need to construct an equation to remove all relative angular velocity and then apply an angular impulse separately. </p>
<p>You&#8217;ll need to consider moment of inertia instead of mass in the equation, but it looks quite similar (divide by sum of inverse moments of inertia).</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3426#respond' onclick='return addComment.moveForm("comment-3426", "3426", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment odd alt thread-even depth-1" id="li-comment-3705">
		<div id="comment-3705">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/158411aa78931e3aa531c07e827778de?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Garan</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3705">
			April 12, 2014 at 8:21 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi guys, I just implement the first bounching ball demo in your article by myself. But , in my demo, there is always some ball that goes out of the bounding area when i rotate the world. How did you do about this ? Is there something i missed ?</p>
<p>P.S This is a awesome article, i will study it very carefully.By the way, english is not my native language, so i am sorry if you do not understand what i mean here.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3705#respond' onclick='return addComment.moveForm("comment-3705", "3705", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-2" id="li-comment-3706">
		<div id="comment-3706">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3706">
			April 12, 2014 at 11:34 am</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>The code in the article actually corrects for this problem by pushing particles back inside the planes by the amount they are out. It&#8217;s quite easy to determine the distance to the plane and therefore correct any negative component in the direction of the plane normal.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3706#respond' onclick='return addComment.moveForm("comment-3706", "3706", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-3" id="li-comment-3707">
		<div id="comment-3707">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/158411aa78931e3aa531c07e827778de?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Garan</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3707">
			April 13, 2014 at 1:09 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Thank you for your reply. I can do it right now. It looks pretty good. </p>
<p>And in the following toturial, i read about the new reflection vector formula, you said it is like this :</p>
<p>Va = Va � (1+e)*N*((Vb-Va) � N)*(Mb / (Ma+Mb))<br />
Vb = Vb � (1+e)*-N*((Vb-Va) � -N)*(Ma / (Ma+Mb))</p>
<p>You called the Vb &#8211; Va is the relative velocity and it is true in the second formula, but is that right ,when it comes up to the first formula ? Is that vb &#8211; va is the relative velocity of the body a to body b?How about va &#8211; vb ?</p>
<p>I just get confus about this .</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3707#respond' onclick='return addComment.moveForm("comment-3707", "3707", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor even depth-4" id="li-comment-3708">
		<div id="comment-3708">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3708">
			April 13, 2014 at 1:56 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Both objects must share the same (relative) velocity vector in a collision, only the sign of the normal changes which dictates that the objects should be reflected away from each other post collision.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3708#respond' onclick='return addComment.moveForm("comment-3708", "3708", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment odd alt depth-5" id="li-comment-3709">
		<div id="comment-3709">
		<div class="comment-author vcard">
			<img alt='' src='http://1.gravatar.com/avatar/158411aa78931e3aa531c07e827778de?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Garan</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3709">
			April 13, 2014 at 3:59 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Sorry to bother you again. But in my demo, when i use the same relative velocity, it doesn&#8217;t work. When i use the different one, it works. </p>
<p>How about these test data?<br />
Va = (0, 10), Vb = (0, -10)<br />
and N=(0,-1)  e = 1 , Ma = 1, Mb = 1</p>
<p>In your formula, we can get the result as?<br />
va = (0, 10) &#8211; (1 + 1)* (0, -1) * [(0, -10) - (0,10)] * (0, -1) * 1 / (1 + 1)<br />
    = (0, 10) &#8211; (0, -1) * (0, -20) * (0, -1) = (0, 10) &#8211; (0,  -20)<br />
   = (0, 30)<br />
vb = (0, -10) &#8211; (1 + 1) * (0, 1) * [(0, -10) - (0, 10)]<br />
* (0, 1) *1 / (1 + 1)<br />
 = (0 , -10) &#8211; (0, 1) * (0, -20) * (0, 1)<br />
 = (0, -10) &#8211; (0, -20)<br />
 = (0, 10)</p>
<p>Is this right or am i missed something ???</p>
<p>By the way, thank for your patient .</p>
</div>

		<div class="reply">
					</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	<li class="comment even thread-odd thread-alt depth-1" id="li-comment-3718">
		<div id="comment-3718">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/8e5ed95efb952817467ee4d454d349cb?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn">Nathan</cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3718">
			May 2, 2014 at 8:10 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>For the part that is calculating to distance between the particles and planes, is P[i].x the particles x position or its velocity?</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3718#respond' onclick='return addComment.moveForm("comment-3718", "3718", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	<ul class="children">
	<li class="comment byuser comment-author-paulfirth bypostauthor odd alt depth-2" id="li-comment-3719">
		<div id="comment-3719">
		<div class="comment-author vcard">
			<img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' />			<cite class="fn"><a href='http://www.wildbunny.co.uk' rel='external nofollow' class='url'>Paul Firth</a></cite> <span class="says">says:</span>		</div><!-- .comment-author .vcard -->
		
		<div class="comment-meta commentmetadata"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-2/#comment-3719">
			May 2, 2014 at 8:31 pm</a>		</div><!-- .comment-meta .commentmetadata -->

		<div class="comment-body"><p>Hi Nathan,</p>
<p>.x is the x position.</p>
<p>Cheers, Paul.</p>
</div>

		<div class="reply">
			<a class='comment-reply-link' href='/blog/2011/04/06/physics-engines-for-dummies/?replytocom=3719#respond' onclick='return addComment.moveForm("comment-3719", "3719", "respond", "327")'>Reply</a>		</div><!-- .reply -->
	</div><!-- #comment-##  -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>

			<div class="navigation">
				<div class="nav-previous"><a href="http://www.wildbunny.co.uk/blog/2011/04/06/physics-engines-for-dummies/comment-page-1/#comments" ><span class="meta-nav">&larr;</span> Older Comments</a></div>
				<div class="nav-next"></div>
			</div><!-- .navigation -->


								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/blog/2011/04/06/physics-engines-for-dummies/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.wildbunny.co.uk/blog/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='327' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
							<script type='text/javascript'>
	<!--
	refJS = escape( document[ 'referrer' ] );
	document.write("<input type='hidden' name='refJS' value='"+refJS+"'>");
	// -->
	</script>
	<p style="font-size:9px;clear:both;">WP-SpamFree by <a rel="nofollow" href="http://www.polepositionmarketing.com/library/wp-spamfree/" title="WP-SpamFree WordPress Anti-Spam Plugin" >Pole Position Marketing</a>

					</form>
							</div><!-- #respond -->
			
</div><!-- #comments -->


			</div><!-- #content -->
		</div><!-- #container -->


		<div id="primary" class="widget-area" role="complementary">
			<ul class="xoxo">

<li id="search-3" class="widget-container widget_search"><h3 class="widget-title">Search</h3><form role="search" method="get" id="searchform" class="searchform" action="http://www.wildbunny.co.uk/blog/">
				<div>
					<label class="screen-reader-text" for="s">Search for:</label>
					<input type="text" value="" name="s" id="s" />
					<input type="submit" id="searchsubmit" value="Search" />
				</div>
			</form></li><li id="categories-3" class="widget-container widget_categories"><h3 class="widget-title">Choose a category</h3><select name='cat' id='cat' class='postform' >
	<option value='-1'>Select Category</option>
	<option class="level-0" value="104">Algorithmic trading&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="7">Animal Army&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="35">AS3&nbsp;&nbsp;(19)</option>
	<option class="level-0" value="44">Beginner&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="114">Bitcoin&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="6">Business&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="73">Chip tunes&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="71">Circles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="40">Collision Detection&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="53">Developer love&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="117">Entity systems&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="103">Finance&nbsp;&nbsp;(6)</option>
	<option class="level-0" value="101">Full games&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="67">Geometry&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="58">Graphics&nbsp;&nbsp;(9)</option>
	<option class="level-0" value="100">JSON&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="42">Ladders and AI&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="96">learning-to-program&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="28">Making angry birds&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="47">Micro-transactions&nbsp;&nbsp;(3)</option>
	<option class="level-0" value="90">Multi-player&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="72">Music&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="118">Optimisation&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="41">Parallax and Tiles&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="65">paypal&nbsp;&nbsp;(1)</option>
	<option class="level-0" value="97">Physics&nbsp;&nbsp;(8)</option>
	<option class="level-0" value="36">Platform game&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="68">Polygons&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="98">Portals&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="52">Promotion&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="93">Self improvement&nbsp;&nbsp;(4)</option>
	<option class="level-0" value="66">Server side&nbsp;&nbsp;(7)</option>
	<option class="level-0" value="99">Silverlight&nbsp;&nbsp;(5)</option>
	<option class="level-0" value="45">Stencyl&nbsp;&nbsp;(2)</option>
	<option class="level-0" value="5">Technical&nbsp;&nbsp;(28)</option>
	<option class="level-0" value="1">Uncategorized&nbsp;&nbsp;(1)</option>
</select>

<script type='text/javascript'>
/* <![CDATA[ */
	var dropdown = document.getElementById("cat");
	function onCatChange() {
		if ( dropdown.options[dropdown.selectedIndex].value > 0 ) {
			location.href = "http://www.wildbunny.co.uk/blog/?cat="+dropdown.options[dropdown.selectedIndex].value;
		}
	}
	dropdown.onchange = onCatChange;
/* ]]> */
</script>

</li>			</ul>
		</div><!-- #primary .widget-area -->


		<div id="secondary" class="widget-area" role="complementary">
			<ul class="xoxo">
				<li id="user_bio-2" class="widget-container widget_user_bio"><h3 class="widget-title"><div style="text-align:center">About the author</div></h3><div class="ub-grav" style="margin:5px 5px 0px 5px;text-align:center;"><img alt='' src='http://0.gravatar.com/avatar/e19935619bbfb2c4d003acdb0669ca46?s=128&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D128&amp;r=G' class='avatar avatar-128 photo' height='128' width='128' /></div>A games industry veteran of ten years, seven of which spent at Sony Computer Entertainment Europe, he has had key technical roles on triple-A titles like the Bafta Award Winning Little Big Planet (PSP), 24: The Game (PS2), special effects work on Heavenly Sword (PS3), some in-show graphics on the BBC�s version of Robot Wars, the TV show, as well as a few more obscure projects.
&nbsp;
Now joint CEO of Wildbunny, he is able to give himself hiccups simply by coughing.
&nbsp;
1NobNQ88UoYePFi5QbibuRJP3TtLhh65Jp
</li><li id="widget_featured-posts-2" class="widget-container widget_featured-posts"><h3 class="widget-title">Featured Posts</h3>	
	<ul id="yiw-featured-post">
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/04/figure111.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Collision detection for dummies" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/04/20/collision-detection-for-dummies/">Collision detection for dummies</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2012/11/01/10-steps-to-becoming-a-better-programmer/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2012/11/stencylRules.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="10 steps to becoming a better programmer" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2012/11/01/10-steps-to-becoming-a-better-programmer/">10 steps to becoming a better programmer</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2011/12/11/how-to-make-a-2d-platform-game-part-1/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/12/giantStar.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="How to make a 2d Platform Game &#8211; part 1" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2011/12/11/how-to-make-a-2d-platform-game-part-1/">How to make a 2d Platform Game &#8211; part 1</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2013/04/17/algorithmic-trading-for-dummies-part-2/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/04/stop-loss.jpg&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="Algorithmic trading for dummies &#8211; part 2" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2013/04/17/algorithmic-trading-for-dummies-part-2/">Algorithmic trading for dummies &#8211; part 2</a>
	       </h4>
	   </li>
	   <li>
	       <a href="http://www.wildbunny.co.uk/blog/2012/01/06/how-to-make-games/" class="featured-thumb">
	                      <img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/featured-post-with-thumbnail/scripts/timthumb.php?src=http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/12/flashLogo.png&amp;h=200&amp;w=200&amp;zc=1" class="alignleft" alt="How to make games" />
           
	       	       </a>
           
           <h4 class="featured-title">
	           <a href="http://www.wildbunny.co.uk/blog/2012/01/06/how-to-make-games/">How to make games</a>
	       </h4>
	   </li>
	</ul>
	
	</li><li id="advanced-featured-page-widget-3" class="widget-container widget_advanced-featured-page-widget"><h3 class="widget-title">Tutorials with code to buy</h3><div class="post-2295 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-multiplayer-asteroids-engine/" title="Buy multiplayer asteroids engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/multiplayer.jpg" class="attachment-200 by 200 image" alt="multiplayer" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-2" class="widget-container widget_advanced-featured-page-widget"><div class="post-2299 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-angrybirds-alike-engine/" title="Buy Angrybirds-alike engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/birds.jpg" class="attachment-200 by 200 image" alt="birds" /></a></div><!--end post_class()-->

</li><li id="advanced-featured-page-widget-4" class="widget-container widget_advanced-featured-page-widget"><div class="post-2301 page type-page status-publish hentry"><a href="http://www.wildbunny.co.uk/blog/buy-platform-game-engine/" title="Buy platform game engine" class="alignnone"><img width="200" height="200" src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/05/platform.png" class="attachment-200 by 200 image" alt="platform" /></a></div><!--end post_class()-->

</li><li id="wp125" class="widget-container wp125_write_ads_widget">
<h3 class="widget-title">Affiliates</h3><div id="wp125adwrap_1c">
<div class="wp125ad odd"><a href="index.php?adclick=10" title="plus500" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2013/03/plus500-200x200.gif" alt="plus500" /></a></div>
<div class="wp125ad even"><a href="https://www.cavirtex.com/Z/50680" title="cavirtex" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/blog/wp-content/uploads/2014/03/caVirtex.gif" alt="cavirtex" /></a></div>
<div class="wp125ad odd"><a href="http://www.freelancer.co.uk/affiliates/wildbunny2/" title="freelancer" rel="nofollow"target='_blank'><img src="/images/freelancer.png" alt="freelancer" /></a></div>
<div class="wp125ad even"><a href="http://www.shareasale.com/r.cfm?b=531904&u=949687&m=41388&urllink=&afftrack=" title="wp engine" rel="nofollow"target='_blank'><img src="http://www.shareasale.com/image/41388/sas_banner_250x250.jpg" alt="wp engine" /></a></div>
<div class="wp125ad odd"><a href="http://www.wildbunny.co.uk/blog/advertise-here/" rel="nofollow"target='_blank'><img src="http://www.wildbunny.co.uk/images/blankAdvert.png" alt="" /></a></div>
</div>
</li><li id="ezadswidget-4" class="widget-container ezAdsWidget"><h3 class="widget-title">My MetaTrader 5 products</h3><!-- Easy AdSense V2.79 -->
<!-- Widg[count: 2] -->
<div class="ezAdsense adsense adsense-widget"><div style="text-align:center;margin:0px; "><div style="width:350px">
<a target="_blank" href="http://mql5.com/dzz" title="Download VWAP technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/925/mid" alt="Buy VWAP customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e08" title="Download Average Spread technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/951/mid" alt="Buy Average Spread customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/e09" title="Download Bid Ask Volumes technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/950/mid" alt="Buy Bid Ask Volumes customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/po9" title="Download Market Activity technical indicator from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/963/mid" alt="Buy Market Activity customer indicator in the store selling algo trading systems" width="400" height="60"></a>
<a target="_blank" href="http://mql5.com/poa" title="Download Precision Scalper trading system from MQL5 Market"><img src="http://www.mql5.com/en/market/widget/972/mid" alt="Buy Precision Scalper trading application in the store of automated robot systems" width="400" height="60"></a>
</div></div></div></li>			</ul>
		</div><!-- #secondary .widget-area -->

	</div><!-- #main -->

	<div id="footer" role="contentinfo">
		<div id="colophon">



			<div id="site-info">
				<a href="http://www.wildbunny.co.uk/blog/" title="Wildbunny blog" rel="home">
					Wildbunny blog				</a>
			</div><!-- #site-info -->

			<div id="site-generator">
								<a href="http://wordpress.org/"
						title="Semantic Personal Publishing Platform" rel="generator">
					Proudly powered by WordPress.				</a>
			</div><!-- #site-generator -->

		</div><!-- #colophon -->
	</div><!-- #footer -->

</div><!-- #wrapper -->

		
		<script type="text/javascript">
			//<![CDATA[
			jQuery(document).ready(function() {
				var a = '<div id="cookie-law-info-bar"><span>This website uses cookies to improve your experience. We\'ll assume you\'re ok with this, but you can opt-out if you wish.<a href=\"#\" id=\"cookie_action_close_header\"  class=\"medium cli-plugin-button cli-plugin-main-button\" >Accept</a> <a href=\"http://www.wildbunny.co.uk/blog/privacy-policy/\" id=\"CONSTANT_OPEN_URL\" target=\"_new\"  class=\"cli-plugin-main-link\"  >Read More</a></span></div>';
				var b = '{"animate_speed_hide":"500","animate_speed_show":"500","background":"#fff","border":"#444","border_on":true,"button_1_button_colour":"#000","button_1_button_hover":"#000000","button_1_link_colour":"#fff","button_1_as_button":true,"button_2_button_colour":"#333","button_2_button_hover":"#292929","button_2_link_colour":"#444","button_2_as_button":false,"font_family":"inherit","notify_animate_hide":true,"notify_animate_show":false,"notify_div_id":"#cookie-law-info-bar","notify_position_horizontal":"right","notify_position_vertical":"bottom","showagain_tab":false,"showagain_background":"#fff","showagain_border":"#000","showagain_div_id":"#cookie-law-info-again","showagain_x_position":"50%","text":"#000"}';
				cli_show_cookiebar(a,b);
				
							});
			//]]>
		</script>
		
		 
			<a id="FollowMeTabLeftLg" onClick="showFollowMe()" href="#" style="border-bottom:none;"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/leftlg.gif" border="0" /></a>	

<div id="FollowMeBubbleBG" style="visibility:hidden;"></div>
<div id="FollowMeBubble" style="visibility:hidden;border-bottom:none;">


<div class="top" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_top.gif');width:329px;height:60px;float:left;display:block;border-bottom:none;">
<a id="close" onClick="hideFollowMe()" href="#" style="border-bottom:none"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/close.png" border="0" /> </a>
<!-- <a id="grab" target="_blank" title="grab this" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>--></div>
<div class="mid" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_mid.gif');width:329px;background-repeat:repeat-y;float:left;">
<div id="stretch">
<span><a title="
Twitter" target="_blank" href="http://twitter.com/paul_m_firth" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
twitter.png" border="0" alt="
Twitter" /> 
Twitter</a></span>
<span><a title="
Facebook" target="_blank" href="http://www.facebook.com/WildbunnyLtd" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
facebook.png" border="0" alt="
Facebook" /> 
Facebook</a></span>
<span><a title="
RSS" target="_blank" href="http://wildbunny.co.uk/blog/feed" rel="me"><img width="32px" src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/
rss.png" border="0" alt="
RSS" /> 
RSS</a></span>
</div></div>
<div class="bottom" style="background-image:url('http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_bottom.gif');height:34px;width:329px;clear:both;float:left;">
<a id="grab" target="_blank" title="grab this" style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><span>grab this</span></a>
</div>
<div class="grab" style="width:329px;clear:both;float:left;"><a style="border-bottom:none;" href="http://www.ignitesocialmedia.com/tools/follow-me/"><img src="http://www.wildbunny.co.uk/blog/wp-content/plugins/follow-me/images/followme_grab.gif" /></a></div>
</div>







<div id="thsp-sticky-header">
	<div id="thsp-sticky-header-inner">
		<div id="thsp-sticky-header-title">
			<a href="http://www.wildbunny.co.uk/blog" title="Developer knowledge centre">Wildbunny blog</a>
		</div>
		
		<ul id="thsp-sticky-header-menu" class="menu"><li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-272"><a href="/blog/">All articles</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1302"><a href="http://www.wildbunny.co.uk/blog/vector-maths-a-primer-for-games-programmers/">Vector maths</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-319"><a href="http://www.wildbunny.co.uk/blog/contact-me/">Contact me</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2072"><a href="http://www.wildbunny.co.uk/blog/hire-me/">Hire me</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-446"><a href="http://www.wildbunny.co.uk/blog/membership-sign-up-page/">Subscribe!</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-466"><a href="http://www.wildbunny.co.uk/blog/welcome-to-our-members-area/">Members</a></li>
<li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-1183"><a href="/blog/buy-source-code">Buy source-code</a></li>
<li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1694"><a href="http://www.wildbunny.co.uk/blog/privacy-policy/">Privacy policy</a></li>
</ul>	</div><!-- #thsp-sticky-header-inner -->
</div><!-- #thsp-sticky-header --><script type='text/javascript' src='http://www.wildbunny.co.uk/blog/wp-content/plugins/s2member/s2member-o.php?ws_plugin__s2member_js_w_globals=1&#038;qcABC=1&#038;ver=140105-140105-2848662513'></script>

			<!-- SwfObj: Register SWFs on this page. -->
			<script type="text/javascript">
					swfobject.registerObject("swfobj_0", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_1", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_2", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_3", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_4", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_5", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
					swfobject.registerObject("swfobj_6", "8.0.0", "http://www.wildbunny.co.uk/blog/wp-content/plugins/swfobj/expressInstall.swf");
			</script>
</body>
</html>
