<!DOCTYPE html>
<html lang="en">
<head>
        <title>Python 1.0</title>
        <meta charset="utf-8" />
        <link rel="stylesheet" href="http://harkablog.com/theme/css/main.css" type="text/css" />
        <link href="http://harkablog.com/feeds/all.atom.xml" type="application/atom+xml" rel="alternate" title="Hark! A blog. ATOM Feed" />


        <!--[if IE]>
                <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script><![endif]-->

        <!--[if lte IE 7]>
                <link rel="stylesheet" type="text/css" media="all" href="http://harkablog.com/css/ie.css"/>
                <script src="http://harkablog.com/js/IE8.js" type="text/javascript"></script><![endif]-->

        <!--[if lt IE 7]>
                <link rel="stylesheet" type="text/css" media="all" href="http://harkablog.com/css/ie6.css"/><![endif]-->

</head>

<body id="index" class="home">
        <header id="banner" class="body">
                <h1><a href="http://harkablog.com">Hark! A blog. </a></h1>
                <nav><ul>
                    <li class="active"><a href="http://harkablog.com/category/code.html">code</a></li>
                    <li ><a href="http://harkablog.com/category/community.html">community</a></li>
                    <li ><a href="http://harkablog.com/category/iron.html">iron</a></li>
                    <li ><a href="http://harkablog.com/category/meta.html">meta</a></li>
                    <li ><a href="http://harkablog.com/category/misc.html">misc</a></li>
                </ul></nav>
        </header><!-- /#banner -->
        


 


<section id="content" class="body">    

<div>
    <a href='error-starting-gunicorn-in-supervisor.html'>â Error Starting Gunicorn in Supervisor</a>
 
</div>

<article>
        <header> <h1 class="entry-title"><a href="python-1-0.html"
        rel="bookmark" title="Permalink to Python 1.0">Python 1.0</a></h1>  </header>
        <div class="entry-content">
<footer class="post-info">
        <abbr class="published" title="2014-03-23T08:45:00">
                Sun 23 March 2014
        </abbr>

        <address class="vcard author">
                By <a class="url fn" href="#">J. Clifford Dyer</a>
        </address>
<p>In <a href="http://harkablog.com/category/code.html">code</a>. </p>
<p>tags: <a href="http://harkablog.com/tag/python.html">python</a> <a href="http://harkablog.com/tag/python1.html">python1</a> <a href="http://harkablog.com/tag/c.html">c</a> </p></footer><!-- /.post-info -->        <p>This morning, I decided to try to install Python 1.0.  I wanted to get a
glimpse of where the language came from, how it's grown, and what it
was like in its early days.  I figured an earlier version would probably be a
little simpler, and perhaps the codebase would be easier to understand.</p>
<p>Browsing the <a class="reference external" href="https://www.python.org/download/releases/">downloads page</a> of python.org, I found binaries going back to 1.2
for several processors.  There was even one 1.1 binary for an architecture I'd
never heard of called sequent-pts.  <a class="reference external" href="http://en.wikipedia.org/wiki/Sequent_Computer_Systems">This maybe</a>? On another page, they had
source releases going back to 1.0.1, with a note saying:</p>
<blockquote>
If you find an older Python release (e.g. 0.9.8), we're interested
in getting a copy!  <a class="reference external" href="mailto:webmaster&#64;python.org">webmaster&#64;python.org</a></blockquote>
<p>I figured there was little chance of getting one of the binaries working
out of the box, plus the source releases go back further, so I grabbed a copy
of 1.0.1.  The first thing I noticed was that the whole tarball weighs in at
1.1MB, compared to 19MB for the latest version, Python 3.4.</p>
<p>The organization of the code did not seem unusual; the base directory had the
usual <tt class="docutils literal">configure</tt> and <tt class="docutils literal">Makefile</tt>, as well as a <tt class="docutils literal">README</tt> file with some
brief release notes, build instructions, and a guide to the organization of
the source code.  According to the copyright file, Python was originally
created in 1991, and this version came out in 1994.  Twenty years ago.</p>
<p>One amusing note from the README: apparently Guido van Rossum did not feel the
need for handholding newbies back then.  There's a section about compiling
<tt class="docutils literal">readline</tt> support into python, in which he says:</p>
<blockquote>
You can use the GNU readline library to improve the interactive
user interface: this gives you line editing and command history when
calling python interactively.  You need to build the GNU readline
library before running the configure script.  Its sources are
distributed with Python.  This may involve some editing of the
Makefile there -- I'm sorry, but I don't feel responsible for making
it more portable or adapting it to autoconf...</blockquote>
<p>The pieces are there, but it hasn't actually been hooked up, and doing so
is left as an exercise for the reader.  (I may try my hand at that exercise;
it sounds like a fun learning experience).</p>
<p>Next, I decided to try actually compiling the thing.  According to the docs,
it just required the usual:</p>
<pre class="literal-block">
$ ./configure --prefix=~
$ make
$ make install
</pre>
<p>plus an extra</p>
<pre class="literal-block">
$ make libinstall
</pre>
<p>Unfortunately, <tt class="docutils literal">make</tt> failed with gcc complaining that the function
<tt class="docutils literal">getline</tt> was defined twice with incompatible declarations.  Apparently,
python defined its own <tt class="docutils literal">getline</tt> in one file, even though it already
exists in stdio.h.  Maybe it didn't back then.  Looking at the source
for stdio.h, it seemed that the standard lib <tt class="docutils literal">getline</tt> could be removed by
unsetting the <tt class="docutils literal">__USE_XOPEN2K8</tt> macro.  I tried to do that a couple ways,
but apparently was having trouble finding the right place to put it so that
it would be undefined by the time stdio.h was included.  I'm sure I could
figure it out, but I was eager to get going, and it was easier just
to rename python's <tt class="docutils literal">getline</tt> function to <tt class="docutils literal">_getline</tt> instead.  With that
done, I was able to build the whole thing with no trouble.  The entire
build, <tt class="docutils literal">./configure &amp;&amp; make</tt>, took a whopping seven seconds.</p>
<p>I was surprised at how easy it was.  So I installed the resulting binary,
and fired it up.</p>
<pre class="literal-block">
~/Downloads/python-1.0.1$ ~/bin/python
Python 1.0.1 (Mar 23 2014)
Copyright 1991-1994 Stichting Mathematisch Centrum, Amsterdam
Segmentation fault
</pre>
<p>Dang.</p>
<p>My first guess is that it's complaining because I compiled it on a 64-bit
system, and it was only built to handle 32-bit architectures.  That's as
far as I've gotten so far.  Figuring that out will be my next task.  I might
try to compile it against 32-bit libraries, or I might see how much work it
would take to create a x86_64 port.  The release notes say that the 1.0 release
involved a lot of work porting python to different architectures, so hopefully
most of the heavy lifting is done.</p>
<p>So far, perusing this codebase has been a fascinating glimpse into the history
of Python, both the language itself, and how the core Python community saw
itself in the greater open source and Unix ecosystems of the time.  I'm
looking forward to exploring further.</p>

        </div><!-- /.entry-content -->
        <div class="comments">
        <h2>Comments !</h2>
            <div id="disqus_thread"></div>
            <script type="text/javascript">
               var disqus_identifier = "python-1-0.html";
               (function() {
               var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
               dsq.src = 'http://harkablog.disqus.com/embed.js';
               (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
              })();
            </script>
        </div>

</article>
</section>

        <section id="extras" class="body">
        </section><!-- /#extras -->

        <footer id="contentinfo" class="body">
                <address id="about" class="vcard body">
                Proudly powered by <a href="http://alexis.notmyidea.org/pelican/">pelican</a>, which takes great advantages of <a href="http://python.org">python</a>.
                </address><!-- /#about -->

                <p>The theme is by <a href="http://smashingmagazine.com">Smashing Magazine</a>, thanks!</p>
        </footer><!-- /#contentinfo -->

    <script type="text/javascript">
    var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
    document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    </script>
    <script type="text/javascript">
    try {
        var pageTracker = _gat._getTracker("UA-26043849-1");
    pageTracker._trackPageview();
    } catch(err) {}</script>
    <script type="text/javascript">
        var pkBaseURL = (("https:" == document.location.protocol) ? "https://piwik.harkablog.com/" : "http://piwik.harkablog.com/");
    document.write(unescape("%3Cscript src='" + pkBaseURL + "piwik.js' type='text/javascript'%3E%3C/script%3E"));
    </script><script type="text/javascript">
    try {
    var piwikTracker = Piwik.getTracker(pkBaseURL + "piwik.php", 1);
    piwikTracker.trackPageView();
    piwikTracker.enableLinkTracking();
    } catch( err ) {}
    </script><noscript><p><img src="http://piwik.harkablog.com/piwik.php?idsite=1" style="border:0" alt="" /></p></noscript>
<script type="text/javascript">
    var disqus_shortname = 'harkablog';
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = 'http://' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
</script>
</body>
</html>