<!DOCTYPE html>
<html lang="en">
<head>




<script id="before-content" type="text/javascript">
(function () {
    if (typeof window.sdmedia !== 'object') window.sdmedia = {};
    if (typeof window.sdmedia.site !== 'object') window.sdmedia.site = {};

    var site = window.sdmedia.site;
    site.rootdir = "//slashdot.org";
}());

var pageload = {
	pagemark: '685373555331793543',
	before_content: (new Date).getTime()
};
function pageload_done( $, console, maybe ){
	pageload.after_readycode	= (new Date).getTime();
	pageload.content_ready_time	= pageload.content_ready - pageload.before_content;
	pageload.script_ready_time	= pageload.after_readycode - pageload.content_ready;
	pageload.ready_time		= pageload.after_readycode - pageload.before_content;
	// Only report 1% of cases.
	maybe || (Math.random()>0.01) || $.ajax({ data: {
		op: 'page_profile',
		pagemark: pageload.pagemark,
		dom: pageload.content_ready_time,
		js: pageload.script_ready_time
	} });
}
</script>


	<title>Python Gets a Big Data Boost From DARPA - Slashdot</title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

	<meta name="description" content="itwbennett writes &#34;DARPA (the U.S. Defense Advanced Research Projects Agency) has awarded $3 million to software provider Continuum Analytics to help fund the development of Python's data processing and visualization capabilities for big data jobs. The money will go toward developing new techniques ...">
	<meta itemprop="name" content="Python Gets a Big Data Boost From DARPA - Slashdot">
	<meta itemprop="description" content="itwbennett writes &#34;DARPA (the U.S. Defense Advanced Research Projects Agency) has awarded $3 million to software provider Continuum Analytics to help fund the development of Python's data processing and visualization capabilities for big data jobs. The money will go toward developing new techniques ...">


	<meta property="fb:admins" content="100000696822412">
	<meta property="fb:page_id" content="267995220856">

	<meta name="viewport" content="width=1000, user-scalable=yes, minimum-scale=0, maximum-scale=10.0" />
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="apple-mobile-web-app-status-bar-style" content="black">

	<meta property="og:image" content="http://a.fsdn.com/sd/topics/python_64.png">


	<link rel="canonical" href="http://developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa">


<!--[if IE 8]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie8-classic.css?release_20140618" ><![endif]-->
<link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/classic.css?release_20140618" >
<!--[if IE 7]><link rel="stylesheet" type="text/css" media="screen, projection" href="//a.fsdn.com/sd/ie7-classic.css?release_20140618" ><![endif]-->







<!--  -->








<script src="//a.fsdn.com/sd/all-minified.js?release_20140618" type="text/javascript"></script>


<script type="text/javascript">
(function(){
var regexp=/\s*(?:\d+|many)\s+more\s*/i;

	
	var auto_more_count = 1;

	function auto_more(){
		var $more_link = $('#more-experiment a');
		$more_link.each(function(){
			var $lastitem = $('#firehoselist>article.fhitem:visible:last');
			if ( Bounds.intersect(window, $lastitem) ) {
			
			
				!--auto_more_count && (auto_more=undefined);
				// don't allow a call till the next paginate gets built and |more_possible|
				$(document).unbind('scroll', call_auto_more);
			}
		});
	};

	function call_auto_more(){ auto_more && auto_more(); }
	

$('#more-experiment a').
	live('more-possible', function( event ){
		var $more_link=$(this);
		if ( regexp.test($more_link.text()) ) {
		
			$(document).bind('scroll', call_auto_more);
		} else {
			$(document).unbind('scroll', call_auto_more);
		
		}
	});
})();
</script>
<!--[if lt IE 9]><script src="//a.fsdn.com/sd/html5.js"></script><![endif]-->


<script type="text/javascript">
(function() {
    if (typeof window.janrain !== 'object') window.janrain = {};
    if (typeof window.janrain.settings !== 'object') window.janrain.settings = {};
    
    /* _______________ can edit below this line _______________ */

    janrain.settings.tokenUrl = 'https://slashdot.org/token_callback.pl';
    janrain.settings.type = 'embed';
    janrain.settings.appId = 'ggidemlconlmjciiohla';
    janrain.settings.appUrl = 'https://login.slashdot.org';
    janrain.settings.providers = ["google","twitter","facebook", "linkedin"];
    janrain.settings.providersPerPage = '4';
    janrain.settings.format = 'one column';
    janrain.settings.actionText = 'Sign in using your account with';
    janrain.settings.showAttribution = false;
    janrain.settings.fontColor = '#666666';
    janrain.settings.fontFamily = 'lucida grande, Helvetica, Verdana, sans-serif';
    janrain.settings.backgroundColor = '#ffffff';
    janrain.settings.width = '308';
    janrain.settings.borderColor = '#C0C0C0';
    janrain.settings.borderRadius = '5';    janrain.settings.buttonBorderColor = '#CCCCCC';
    janrain.settings.buttonBorderRadius = '5';
    janrain.settings.buttonBackgroundStyle = 'gradient';
    janrain.settings.language = 'en';
    janrain.settings.linkClass = 'janrainEngage';

    /* _______________ can edit above this line _______________ */

    function isReady() { janrain.ready = true; };
    if (document.addEventListener) {
      document.addEventListener("DOMContentLoaded", isReady, false);
    } else {
      window.attachEvent('onload', isReady);
    }

    var e = document.createElement('script');
    e.type = 'text/javascript';
    e.id = 'janrainAuthWidget';

    if (document.location.protocol === 'https:') {
      e.src = 'https://rpxnow.com/js/lib/login.slashdot.org/engage.js';
    } else {
      e.src = 'http://widget-cdn.rpxnow.com/js/lib/login.slashdot.org/engage.js';
    }

    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(e, s);
})();
</script>

<script type="text/javascript">
(function() {
    if (typeof window.janrain !== 'object') window.janrain = {};
    if (typeof window.janrain.settings !== 'object') window.janrain.settings = {};
    if (typeof window.janrain.settings.share !== 'object') window.janrain.settings.share = {};
    if (typeof window.janrain.settings.packages !== 'object') janrain.settings.packages = [];
    janrain.settings.packages.push('share');

    /* _______________ can edit below this line _______________ */

    janrain.settings.share.providers = ["facebook","twitter","linkedin"];
    janrain.settings.share.providersEmail = [];
    janrain.settings.share.modes = ["broadcast","contact"];
    janrain.settings.share.attributionDisplay = false;
    janrain.settings.share.message = "";
    janrain.settings.share.title = "";
    janrain.settings.share.url = "";
    janrain.settings.share.description = "";

    // Modal Styles
    janrain.settings.share.modalBackgroundColor = "#000000";
    janrain.settings.share.modalBorderRadius = "5";
    janrain.settings.share.modalOpacity = "0.5";
    janrain.settings.share.modalWidth = "5";

    // Body Styles
    janrain.settings.share.bodyBackgroundColor = "#009DDC";
    janrain.settings.share.bodyBackgroundColorOverride = false;
    janrain.settings.share.bodyColor = "#333333";
    janrain.settings.share.bodyContentBackgroundColor = "#ffffff";
    janrain.settings.share.bodyFontFamily = "Helvetica";
    janrain.settings.share.bodyTabBackgroundColor = "#f8f8f8";
    janrain.settings.share.bodyTabColor = "#000000";

    // Element Styles
    janrain.settings.share.elementBackgroundColor = "#f6f6f6";
    janrain.settings.share.elementBorderColor = "#cccccc";
    janrain.settings.share.elementBorderRadius = "3";
    janrain.settings.share.elementButtonBorderRadius = "6";
    janrain.settings.share.elementButtonBoxShadow = "3";
    janrain.settings.share.elementColor = "#333333";
    janrain.settings.share.elementHoverBackgroundColor = "#eeeeee";
    janrain.settings.share.elementLinkColor = "#009DDC";

    /* _______________ can edit above this line _______________ */

    function isReady() { janrain.ready = true; };
    if (document.addEventListener) {
        document.addEventListener("DOMContentLoaded", isReady, false);
    } else {
        window.attachEvent('onload', isReady);
    }

    var e = document.createElement('script');
    e.type = 'text/javascript';
    e.id = 'janrainWidgets';

    if (document.location.protocol === 'https:') {
      e.src = 'https://rpxnow.com/js/lib/login.slashdot.org/widget.js';
    } else {
      e.src = 'http://widget-cdn.rpxnow.com/js/lib/login.slashdot.org/widget.js';
    }

    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(e, s);
})();

$(document).ready(function(){
    if(janrain) {
        $("a.janrain").live('click', function () {

            var $anchor = $(this);
            var provider = $anchor.attr("data-provider");
            var url = $anchor.attr("data-url");
            var message = $anchor.attr("data-message");
            var title = $anchor.attr("data-title");

            janrain.engage.share.reset();
            janrain.engage.share.showProvider(provider);
            janrain.engage.share.setTitle(title);
            janrain.engage.share.setMessage(message);
            janrain.engage.share.setUrl(url);
            janrain.engage.share.show();
            return false;
         });
    }
});


</script><link rel="top"       title="News for nerds, stuff that matters" href="//slashdot.org/" >
<link rel="search"    title="Search Slashdot" href="//developers.slashdot.org/search.pl">
<link rel="alternate" title="Slashdot RSS" href="http://rss.slashdot.org/Slashdot/slashdotDevelopers" type="application/rss+xml">
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
<!-- load GPT library: synchronous -->
<script type='text/javascript'>
(function() {
	var useSSL = 'https:' === document.location.protocol;
	var src = (useSSL ? 'https:' : 'http:') + '//www.googletagservices.com/tag/js/gpt.js';
	document.write('<scr' + 'ipt src="' + src + '"></scr' + 'ipt>');
})();
</script>



<!-- prep GPT ads -->
<script type='text/javascript'>
(function() {
	function page_type (loc) {
		/*
		only four page types:
		- Story
		- Poll
		- Homepage (/ only)
		- Other (but AdOps wants 'Homepage' again)
		*/
		var path = loc.pathname;
		var just_the_root = /^\/?$/.test(path);
		var story_or_poll = /^\/(story|submission|poll)\//i.exec(path);

		var page_type = just_the_root ? 'homepage'
		              : story_or_poll ? story_or_poll[1]
		              :                 'other'

		// exceptions
		page_type = page_type.toLowerCase() === 'submission'
		          ? 'story'  // submissions are like stories, right?
		          : page_type
		page_type = page_type.toLowerCase() === 'other'
		          ? 'homepage'  // this one might move out of here
		          : page_type;

		return page_type;
	}
	function page_section (loc) {
		var greek = ['alpha', 'beta', 'gamma', 'delta'].join('|');
		var hostwise = '^([a-z]+)(?:-(?:'+greek+'))?\\.(?:slashdot\\.org|[a-z]+-[0-9]+\\.sb\\.sf\\.net)$';
		var pathwise = '^/(?:(recent|popular|blog)|stories/([^/]+))';
		var rootwise = '^\/?$';

		var hostwisely = new RegExp(hostwise,'i').exec(loc.hostname);
		var pathwisely = new RegExp(pathwise,'i').exec(loc.pathname);
		var rootwisely = new RegExp(rootwise,'i').exec(loc.pathname);

		var all_greek_to_me = new RegExp( '^(' + greek + ')$' ,'i');

		function no_greek_for_me (barbarian) {
			return all_greek_to_me.test(barbarian)
			     ? false
			     : barbarian
			     ;
		}

		var section = (hostwisely && no_greek_for_me(hostwisely[1]))
		           || (rootwisely && 'homepage')
		           || (pathwisely && (pathwisely[1] || pathwisely[2]))
		           || ''
		            ;

                section.replace(/[^_a-z]/ig, '');

		return section;
	}
	function single_size (size) {
		return '' + size[0] + 'x' + size[1];
	}
	function sz_sz (sz) {
		var str = '';
		var sizes = [];
		if (sz[0] instanceof Array) {
			for (size in sz) {
				sizes.push(single_size(sz[size]));
			}
			return sizes.join(',');
		} else {
			return single_size(sz);
		}
	}

	/* LEGEND: 
		- 'sz' = "size"
		- 'npt' = "no page type" in ad unit name
		- 'oops' = "out-of-page slot" for great justice
	*/
	var tags = {

		               '728x90_A': { 'sz': [728, 90], 'oops': 1 }

		,              '728x90_B': { 'sz': [728, 90] }
		,      'HubIcon_200x90_A': { 'sz': [200, 90] }
		,  'PowerSwitch_980x66_A': { 'sz': [980, 66] }
		,              'PollPeel': { 'sz': [200, 90] }
		,   'VideoWidget_300x250': { 'sz': [300, 250], 'npt': 1 }
		,             '300x250_A': { 'sz': [[300, 250], [300, 600]] }
		,             '300x250_B': { 'sz': [[300, 250], [300, 600]] }
		,             '300x250_C': { 'sz': [[300, 250], [300, 600]] }
		,             '300x250_D': { 'sz': [[300, 250], [300, 600]] }
	};

	var network_path = '/4140/ostg.slashdot/';
	var tag_name_prefix = 'SD';
	var tag_name_linkage = '_';
	var tag_name_pagetype = page_type(location);
	var tag_topic = page_section(location);

	var before_tag_pagetyped    = network_path
	                            + tag_name_prefix
	                            + tag_name_linkage
	                            + tag_name_pagetype
	                            + tag_name_linkage
	                            ;
	var before_tag_pagetypeless = network_path
	                            + tag_name_prefix
	                            + tag_name_linkage
	                         /* + tag_name_pagetype */
	                         /* + tag_name_linkage */
	                            ;


	googletag.cmd.push(function() {
		function define_me_a_slot (tag, oops) {
			var sandbox_regex = /[a-z]+-[0-9]+\.sb\.sf\.net$/i;
			var beta_regex = /\b(alpha|beta|gamma|delta)\b/i;
			var full_name = tags[tag].npt  // "no page type"
			              ? before_tag_pagetypeless + tag
			              : before_tag_pagetyped    + tag
			              ;
			var div_id = 'div-gpt-ad-' + tag.toLowerCase();

			var service;
			if (oops) {  // out-of-page slot
				console.log(full_name + ": define out of page slot (" + div_id + "-oops)");
				service = googletag.defineOutOfPageSlot(
					  full_name
					, div_id + '-oops'
				).addService(googletag.pubads());
			} else {
				console.log(full_name + ": define slot (" + div_id + ")");
				service = googletag.defineSlot(
					  full_name
					, tags[tag].sz
					, div_id
				).addService(googletag.pubads());
			}
			if (!oops) {  // no sizes for out-of-page slots
				service.setTargeting('sz', tags[tag].sz);
			}
			service.setTargeting('tpc', tag_topic);
			if (location.hostname.match(sandbox_regex)) {
				service.setTargeting('test', 'adops');
			}
			if (location.hostname.match(beta_regex)) {
				service.setTargeting('site', 'beta');
			}

			// this is a little hackish: if slot has oops:1
			//  then do the same slot one more time,
			//  but set it up as out-of-page
			if (tags[tag].oops) {  // "out-of-page slot"
				tags[tag].oops = 0;  // infinite recursion!
				define_me_a_slot(tag, true);
			}
		}

		for (tag in tags) {
			define_me_a_slot(tag, false);
		}

		googletag.pubads().enableSyncRendering();

		//googletag.pubads().enableSingleRequest();
		googletag.pubads().collapseEmptyDivs();
		googletag.enableServices();
	});
})();
</script>

<script type="text/javascript">
window.google_analytics_uacct = "UA-32013-5";

var _gaq = _gaq || [];





  _gaq.push(['_setAccount', 'UA-36136016-1']);
  _gaq.push(['b._setAccount', 'UA-32013-5']);
  _gaq.push(['_setDomainName', '.slashdot.org']);
  _gaq.push(['b._setDomainName', '.slashdot.org']);

	
		_gaq.push(['_addIgnoredRef', 'slashdot.org']);
		_gaq.push(['b._addIgnoredRef', 'slashdot.org']);
	


  _gaq.push(['_setCustomVar', 1, 'User Type',  'Anon', 3]);
  _gaq.push(['b._setCustomVar', 1, 'User Type',  'Anon', 3]);		
	
	_gaq.push(['_setCustomVar', 2, 'Page','article2', 3]);
	_gaq.push(['b._setCustomVar', 2, 'Page','article2', 3]);

	



// track beta behavior for user
var betamatches = document.cookie.match(/betagroup=(-?\d+)/);

if(betamatches && betamatches[1]) {
  if(betamatches[1] == -1) {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','opt-out', 3]);
  } else {
    _gaq.push(['_setCustomVar', 3, 'Beta-Usage','unredirected', 3]);
  }
}



  _gaq.push(['_trackPageview']);
  _gaq.push(['b._trackPageview']);
  _gaq.push(['_trackPageLoadTime']);
  _gaq.push(['b._trackPageLoadTime']);




  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

</head>
<body class="anon firehose ">


	<div id="top_parent"></div>
	<a name="topothepage"></a>

<div id="topadspace">
	<table id="topadtable"><tr><td>
	<div id='div-gpt-ad-728x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_a');});</script></div>
	<div id='div-gpt-ad-728x90_a-oops'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_a-oops');});</script></div>
	</td>
	<td>
	<div id='div-gpt-ad-hubicon_200x90_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-hubicon_200x90_a');});</script></div>
	</td></tr></table>
</div>

	<header class="col_wrapper container clearfix h">
            <hgroup>
                <section class="grid_9">
			<div id="logo" >
				<a href="//slashdot.org"><span>Slashdot</span></a>
        			<div id="jump" class="hide">
                			<a href="#main-articles">Stories</a><br>
                			<a href="#blocks">Slash Boxes</a><br>
                			<a href="#comments">Comments</a>
        			</div>
			</div>
         <a class='data-title' href='/slash-stats/week' id='sg_hof_mvtest_title' onclick="showHof('week'); return false;"><span class='ui-icon medal ico-w'></span></a>
		


			<form id="search" method="get" action="//developers.slashdot.org/index2.pl">
				<input type="text" name="fhfilter" value="" id="searchquery">
				<span class="ui-icon search"></span>
				<input type="submit" value="Search">
				
			</form>
			
			
                </section>
                <nav role="top-navigation" class="grid_15">
		<ul class="dropnav">

	<li >
		<a href="//slashdot.org/my/newuser"   onclick="getModalPrefs('newUserModal', 'Create Account', 1); $('#modal_box').addClass('join'); return false;">Join</a>
		
	</li>

	<li >
		<a href="//slashdot.org/my/login"   onclick="show_login_box(); return false;">Login</a>
		
	</li>

	<li >
		<a href="//slashdot.org/submission"    title="Submit a Story to Slashdot">Submit</a>
		
	</li>

	<li >
		<a href="http://beta.slashdot.org/newsletter"  target="_blank"  title="Subscribe to Slashdot Newsletter & Emails">Newsletter</a>
		
	</li>

	<li >
		<a href="//slashdot.org/job_board.pl"   >Jobs</a>
		
	</li>

	<li >
		<a href="//tv.slashdot.org" class="btn link slashtvico"  ><span>SlashTV</span></a>
		
	</li>

</ul>


<!-- dropnavstyle begin -->
<style type="text/css">

.dropnav{
	border:none;
	border:0px;
	margin:0px;
	padding:0px;
	font: "Arial, sans-serif;
	font-size:1em;
	font-weight:bold;
	list-style:none;
	padding-top: 3px;
	padding-bottom: 3px;
	}
.dropnav ul{
	padding-top:10px;
	background:none;
	height:25px;
	list-style:none;
	margin:0;
	padding:0;
	}
	.dropnav li{
		float:right;
		padding:0px;
		}
	.dropnav li a{
		background:none bottom right no-repeat;
		color:#ffffff;
		display:block;
		font-weight:normal;
		line-height:25px;
		margin:0px;
		padding:0px 5px;
		padding-bottom: 6px;
		text-align:center;
		text-decoration:none;
		}
		.dropnav li a:hover, .dropnav ul li:hover a{
			 /* background: #005555 bottom center no-repeat; */
			  color:#FFFFFF;
			  text-decoration:underline; 
			}
	.dropnav li ul{
		background:#004242;
		display:none;
		height:auto;
		min-width:100px;
		margin:0px;
		padding:0px;
		border:0px;
		position:absolute;
		z-index:200;
		/*top:1em;
		/*left:0;*/
		}
	.dropnav li:hover ul{
		display:block;
		
		}
	.dropnav li li {
		display:block;
		float:none;
		min-width:100px;
		margin:0px;
		padding:0px;
		}
	.dropnav li:hover li a{
		background:none;
		
		}
	.dropnav li ul a{
		display:block;
		height:25px;
		font-size:12px;
		font-style:normal;
		margin:0px;
		padding:0px 10px 0px 15px;
		text-align:left;
		}
		.dropnav li ul a:hover, .dropnav li ul li:hover a{
		 	background:#005555 center left no-repeat; 
			border:0px;
			color:#ffffff;
			text-decoration:none;
			}
	.dropnav p{
		clear:left;
		}

	.dropnav li.droparrowneeded>a:after {
		content: "\25BE";
		margin-left: 5px; 
		text-decoration: none;
	}

		
</style>
<!-- dropnavstyle end -->
		
                </nav>
            </hgroup>
        </header>




	<section>
   
      <div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd" placeholder="6-20 characters long">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div id="janrainEngageEmbed"></div>
<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
   
   <div id='div-gpt-ad-powerswitch_980x66_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-powerswitch_980x66_a');});</script></div>
		<a name="main-articles"></a><!-- body begin -->






	

	<style type="text/css">
menu, menu * {
	text-decoration:none;
}

menu[type=context] {
	display:none;
	position:absolute;
	z-index:10000;
}

menu[type=context]:not(.brief) {
	background-color:#dfdfdf;
	margin:0;
	padding:2px 0.5em;
	border-style:solid;
	border-width:1px;
	border-color:#eeeeee #aaaaaa #aaaaaa #eeeeee;
	-moz-border-radius-topright:.7em;
	-webkit-border-top-right-radius: 0.7em 0.7em;
}

menu.full[type=context] > a.slash-hover:first-child {
	-moz-border-radius-topright:.6em;
	-webkit-border-top-right-radius: 0.6em 0.6em;
}



menu.brief[type=context] > a {
	-moz-border-radius:.6em;
	-webkit-border-radius: 0.6em;
	color:#ffffff;
	background-color:#000000;
}

/*
span.briefmenu a.tag:not(.datatype) {
    padding-left:.5em;
}
*/




/* #tag-menu a, #feedback-menu a  { */
menu.tag-menu a {
	display:list-item;
	list-style:none;
	text-align:left;
	font-weight:bold;
	color:black;
	padding:0.1em 0.5em;
	margin:-0.1em -0.5em;
	cursor:pointer;
}


.tags .edit-bar { position:relative; }
article aside .share .addthis_toolbox { display:block; width:60px; float:left; }
article aside.view_mode .share { min-width:120px; padding-top:.5em; }
#firehose.list article header h2 {padding-left: 20px; !important}
.novote .vote { display:none; }
.vote > a, .votedup > a, .voteddown > a {border-width:1px; border-style:solid; border-color:rgba(0,0,0,0.25); display:block; height:22px; width:22px; margin:-2px 3px 0 0; color:rgb(255,255,255); text-decoration:none; line-height:22px; text-align:center; font-weight:bold; font-size:14px; float:left; border-width:1px; border-style:solid; border-color:rgba(0,0,0,0.5); }
.vote > a, .votedup > a, .voteddown > a {color:rgb(0,0,0);}
article.fhitem-submission h2 .vote > a, article.fhitem-submission h2 .votedup > a, article.fhitem-submission h2 .voteddown > a { border-color:rgba(0,0,0,0.15); }
.vote .up, .vote .down, .votedup .up, .votedup .down, .voteddown .up, .voteddown .down { border-radius: 4px; -moz-border-radius: 4px; -webkit-border-radius: 4px; text-shadow:0 0 2px #000000; } 
article:not(.fhitem-story) .vote .up,article:not(.fhitem-story) .vote .down,article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .votedup .down,article:not(.fhitem-story) .voteddown .up,article:not(.fhitem-story) .voteddown .down { text-shadow:none !important; }
.voteddown .down, .votedup .up { text-indent:2px; line-height:24px; }
article:not(.fhitem-story) .votedup .up,article:not(.fhitem-story) .voteddown .down {background: rgb(174,174,174);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(174,174,174)), to(rgb(193,193,193)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(193,193,193), rgb(174,174,174) 100%);color:rgb(0,0,0);}
article.fhitem-story .votedup .up,article.fhitem-story .voteddown .down {background: rgb(0,66,66);background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(0,53,53)), to(rgb(0,102,102)));background-image: -moz-linear-gradient(100% 100% 90deg,rgb(0,102,102), rgb(0,53,53) 100%);}





#tag-menu span.var-tag {
font-weight:normal;
color:#444444;
}

menu.reasons-menu a {
padding:0 .25em 0 .25em;
font-size:80%;
-moz-border-radius:.5em;
-webkit-border-radius:.5em;
cursor:pointer;
}

menu.reasons-menu a:hover {
background:rgb(153,153,153);
background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102);
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102)));
color:#fff;
text-decoration:none;
font-weignt:normal;
}

article.fhitem-story menu.reasons-menu a:hover {
background:#002323 !important;
background:-moz-linear-gradient(100% 100% 90deg, #002323, #005353 70%) repeat scroll 0 0 #002323 !important;
background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#005353), to(#002323)) !important;
}


menu.reasons-menu {
	display:none;
	margin:0;
	padding:0;
}

div.fhitem h3 menu.reasons-menu {
margin:0.25em 0 0;
}

div.fhitem h3 menu.reasons-menu a.tag {
font-size:.8em;
}

#tag-menu a.slash-hover,
#feedback-menu a.slash-hover,

.tag-display span.tag:hover,
.tag-display span.tag.trigger {
	color:white;
	background-color:rgb(0, 85, 85);
}

#tag-menu a.slash-hover span.var-tag {
	color:#eee;
}

.tag-entry.default {
        color:#ccc;
}

.brief .nix {
	margin-top:-1.35em;
	margin-left:0px;
	margin-top:-1.15em;
	text-decoration:none;
	line-height:1.35em;
	padding:0 2px;
	-moz-border-radius:.6em 0 0 .6em;
	-webkit-border-radius:.6em 0 0 .6em;
	-o-border-radius:.6em 0 0 .6em;
	border-radius:.6em 0 0 .6em;
    color:#fff !important;
    background:transparent !important;
}

.brief .nix:hover {
    background:rgb(153,153,153) !important;
    background:-moz-linear-gradient(100% 100% 90deg, rgb(102,102,102), rgb(153,153,153) 70%) repeat scroll 0 0 rgb(102,102,102) !important;
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(rgb(153,153,153)), to(rgb(102,102,102))) !important;
}

</style>

<menu id="nix-reasons" style="display:none">
	<a class="tag">binspam</a><a class="tag">dupe</a><a class="tag">notthebest</a><a class="tag">offtopic</a><a class="tag">slownewsday</a><a class="tag">stale</a><a class="tag">stupid</a>
</menu>
<menu id="nod-reasons" style="display:none">
	<a class="tag">fresh</a><a class="tag">funny</a><a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">maybe</a>
</menu>
<menu id="comment-nix-reasons" style="display:none">
	<a class="tag">offtopic</a><a class="tag">flamebait</a><a class="tag">troll</a><a class="tag">redundant</a><a class="tag">overrated</a>
</menu>
<menu id="comment-nod-reasons" style="display:none">
	<a class="tag">insightful</a><a class="tag">interesting</a><a class="tag">informative</a><a class="tag">funny</a><a class="tag">underrated</a>
</menu>

<menu id="tag-nod-reasons" style="display:none">
	<a class="tag">descriptive</a>
</menu>
<menu id="feedback-menu" class="tag-menu" type="context">
	<a class="tag">typo</a><a class="tag">dupe</a><a class="tag">error</a>
</menu>
<menu id="tag-menu" class="tag-menu none" type="context">

<!--	<a data-op="!" class="nix">!<span class="var-tag hide"></span></a>-->

</menu>

<script type="text/javascript">
$(function(){
var $CURRENT_MENU, $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/, IE7=/^7\.0/, TAG_PREFIX=/^\/tag\//;

function get_tag_name( $tag ){
	return ($tag.attr('href') || '').replace(TAG_PREFIX, '') || $tag.text().toLowerCase();
}

function trigger_menu( e, selector, $menu, menu_content ){
	var $target=$(original_target(e, selector)), in_use=$target.is('.trigger');
	if ( $CURRENT_MENU ) {
		$CURRENT_MENU.menu('cancel', e);
		$CURRENT_MENU = null;
	}

	if ( !in_use ) {
		menu_content && $menu.stop(true, true).hide().html(menu_content);
		($CURRENT_MENU=$menu).menu('context', e);
	}
	return !in_use;
}

function open_menu( trigger, $menu ){
	var $trigger=$(trigger), $fhitem=$trigger.closest('.fhitem');
	$fhitem.length && user_intent('interest', $fhitem[0]);

	$menu.appendTo(document.body).css({ opacity:0 }).show();

	var 	right	= $fhitem.offset().left + $fhitem.width(),
		global	= $trigger.offset(),
		local	= $menu.offsetParent().offset();

	// Ugly IE position hack required:
	$.browser.msie && IE7.test($.browser.version) && (local.top = 0);

	// pin the menu (horizontally) on-screen
	global.left = Math.min(global.left, right-$menu.width());

	$trigger.addClass('trigger');
	$menu.css({
		position:	'absolute',
		top:		global.top - local.top + $trigger.height(),
		left:		global.left - local.left,
		opacity:	1
	});
}

function close_menu( trigger, $menu ){
	$menu.hide();
	$(trigger).removeClass('trigger');
	($CURRENT_MENU===$menu) && ($CURRENT_MENU=false);
}

/* T2 tag context-menu */
var $TAG_MENU=$('#tag-menu'), NOTNOT=/^!!/;


    var user_is_admin = 0;

	

$('a[rel=tag]').live('mousedown',function(ea){
    window.open(this.href);
    return false;
})

$('.tag-bar .disagree').live('mousedown',function(ee){
	var fhitem = $(original_target(ee)).closest('.fhitem')[0],
		command = ('!' + $(original_target(ee)).attr("data-tag")).replace(NOTNOT, '');
    try { Tags.submit(fhitem, command); } catch ( err ) {  }
    return false;
})



$('a[rel=tag]').
	live('mousedown', function( e ){
        
            return true;
        

	}).
	live('click', function( e ){
		if ( !logged_in ) {
			var	target	= original_target(e),
				tag	= $(target).text();
			addfhfilter(tag);
		}
		e.preventDefault();
		return false;
	});

$TAG_MENU.menu({
	cssNamespace: 'slash',
	liveTriggers: true,
	clickDuration: 300,

	start: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			context	= firehose_settings && firehose_settings.viewtitle;

		// Insert the tagname into the menu items where needed.
		$TAG_MENU.find('span.var-tag').text(tag);
		$TAG_MENU.find('a.nix').attr('title','not ' + tag);
		

			// non-admins may only delete their own tags
		$TAG_MENU.find('a:[data-op="-"]').toggle($tag.is('.my'));
	

		// *tagname* in *viewtitle*
		$TAG_MENU.find('a:[data-op="="]').toggle(!!context);
		context && $TAG_MENU.find('span.var-view').text(context);

		open_menu($tag, $TAG_MENU);
	},

	select: function( e, ui ){
		var	$tag	= $(ui.trigger),
			tag	= get_tag_name($tag),
			op	= $(ui.select).attr('data-op'),
			fhitem,
			command;

		// Global for positioning other things.
		$related_trigger = $tag;

		switch ( op ) {
			case '=':
				addfhfilter(tag);
				break;

			default:
				fhitem = $tag.closest('.fhitem')[0];
				command = (op + tag).replace(NOTNOT, '');
				try { Tags.submit(fhitem, command); } catch ( err ) {  }
				break;
		}
	},

	stop: function( e, ui ){ close_menu(ui.trigger, $TAG_MENU); }
});




/* T2 feedback context-menu */



/* T2 datatype context-menu (admin-only) */






});
</script>

	


								  <div class="col_1">
									<nav role="sections" id="links" class="left_menu">
										 
										 <ul class="menu" id="fhtablist_new">

			
				
				
				

				
				
					
				
				
				<li class="active Stories">
				
				
				
				<a href="//slashdot.org/stories">Stories</a>
				<span></span>
				</li>
				
				
				
				
				
				<li class="Submissions">
				
				<a href="//slashdot.org/recent">Submissions</a>
				
				</li>
				
				
				
				
				
				<li class="Popular">
				
				<a href="//slashdot.org/popular">Popular</a>
				
				</li>
				
				
				
				
				
				<li class="Blog">
				
				<a href="//slashdot.org/blog">Blog</a>
				
				</li>

		
	</ul>
										 
										<h4 class="hide" id="links-sections-title" >
			
				<a class="data-title" href="//slashdot.org" >Slashdot</a>
				
				
				<script type="data">{ color: "", viewname: "stories", filter: "", name: "Main", id: 13 }</script>

			
		</h4>
	
	
	
	
		<ul id="firehose-sections" role="sections" class="left_menu">
	

	<li class="enhancedspacer"></li>
	 
				

		
		
		<li class="" id="fhsection-askslashdot">
			<a id="fhsectiontitle-4" class="data-title" href="//ask.slashdot.org">Ask Slashdot</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-bookreview">
			<a id="fhsectiontitle-6" class="data-title" href="//books.slashdot.org">Book Reviews</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-games">
			<a id="fhsectiontitle-10" class="data-title" href="//games.slashdot.org">Games</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-idle">
			<a id="fhsectiontitle-28" class="data-title" href="//idle.slashdot.org">Idle</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-yro">
			<a id="fhsectiontitle-17" class="data-title" href="//yro.slashdot.org">YRO</a>
			
		</li>
		
	 
				

		
		
		<li class="active" id="fhsection-developers">
			<a id="fhsectiontitle-8" class="data-title" href="//developers.slashdot.org">Developers</a>
			<span></span>
		</li>
		
	
	<li class="enhancedspacer"></li>
	 
				

		
		
		
		<li class="" id="fhsection-cloud">
			<a id="fhsectiontitle-cloud" class="data-title" href="//slashdot.org/stories/cloud">Cloud</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-hardware">
			<a id="fhsectiontitle-21" class="data-title" href="//hardware.slashdot.org">Hardware</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-linux">
			<a id="fhsectiontitle-19" class="data-title" href="//linux.slashdot.org">Linux</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-it">
			<a id="fhsectiontitle-18" class="data-title" href="//it.slashdot.org">Management</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-mobile">
			<a id="fhsectiontitle-29" class="data-title" href="//mobile.slashdot.org">Mobile</a>
			
		</li>
		
	 
				

		
		
		<li class="" id="fhsection-science">
			<a id="fhsectiontitle-14" class="data-title" href="//science.slashdot.org">Science</a>
			
		</li>
		
	 
				

		
		
		
		<li class="" id="fhsection-security">
			<a id="fhsectiontitle-security" class="data-title" href="//slashdot.org/stories/security">Security</a>
			
		</li>
		
	 
				

		
		
		
		<li class="" id="fhsection-storage">
			<a id="fhsectiontitle-storage" class="data-title" href="//slashdot.org/stories/storage">Storage</a>
			
		</li>
		
	
	</ul>
									</nav>
								  </div>

								  <div class="col_2">
								     <section id="content" class="grid_24 a2 ">
									<section id="firehose" class="nothumbs">


									    <div id="firehoselist" class="fhroot fleft  grid_24">
										 
										 <article id="firehose-42947059" data-fhid="42947059" data-fhtype="story" class="fhitem fhitem-story article usermode thumbs grid_24">
<span class="sd-info-block" style="display: none">
	<span class="sd-key-firehose-id">42947059</span>
	<span class="type">story</span>
	
</span>

	
	
	
						
						

	<header>
		
			
			<span class="topic" id="topic-42947059">
				<a href="//developers.slashdot.org/index2.pl?fhfilter=python" onclick="return addfhfilter('python');">
			
				<img src="//a.fsdn.com/sd/topics/python_64.png" width="64" height="64" alt="Python" title="Python">
			
		</a>
		
	
		
		
		
		

		
		<a href="//developers.slashdot.org/index2.pl?fhfilter=government" onclick="return addfhfilter('government');">
			
				<img src="//a.fsdn.com/sd/topics/government_64.png" width="64" height="64" alt="Government" title="Government">
			
		</a>
		
	
		
		

		
		<a href="//developers.slashdot.org/index2.pl?fhfilter=usa" onclick="return addfhfilter('usa');">
			
				<img src="//a.fsdn.com/sd/topics/usa_64.png" width="64" height="64" alt="United States" title="United States">
			
		</a>
			</span>
			
		
		<h2 class="story">
				
				
				
			<span id="title-42947059"> <a   href="//developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa">Python Gets a Big Data Boost From DARPA</a></span>
			
			
			<span class="comments commentcnt-42947059" >180</span>
			

                        
		</h2>
		<div class="details" id="details-42947059">
		
		Posted
		by 
	
	
		
			<a href="mailto:soulskill@slashdot.org" rel="nofollow">Soulskill</a>
		
	
	

	
	
	<time id="fhtime-42947059" datetime="on Wednesday February 06, 2013 @03:20AM">on Wednesday February 06, 2013 @03:20AM</time>
	
	
		<br>from the from-unclesam-import-money dept.
	
	</div>
	</header>

	<div class="body" id="fhbody-42947059">

		


			<div id="text-42947059" class="p">
			<a href="http://www.itworld.com/" rel="nofollow">itwbennett</a> writes <i>"DARPA (the U.S. Defense Advanced Research Projects Agency) has awarded $3 million to software provider Continuum Analytics to help <a href="http://www.itworld.com/big-data/340570/python-gets-big-data-boost-darpa">fund the development of Python's data processing and visualization capabilities</a> for big data jobs. The money will go toward developing new techniques for data analysis and for visually portraying large, multi-dimensional data sets. The work aims to extend beyond the capabilities offered by the <a href="http://www.numpy.org/">NumPy</a> and <a href="http://www.scipy.org/">SciPy</a> Python libraries, which are widely used by programmers for mathematical and scientific calculations, respectively. The work is part of DARPA's <a href="http://www.darpa.mil/Our_Work/I2O/Programs/XDATA.aspx">XData research program</a>, a four-year, $100 million effort to give the Defense Department and other U.S. government agencies tools to work with large amounts of sensor data and other forms of big data."</i>

			</div>

			

		
		
			
		
	</div>
	<aside class="grid_24 view_mode">
	
			<div class="grid_12 cc">
				<p>
				

				<span class="sharethisawrp">
					<span id="sharethis-42947059" class="">
						
                     

		  



	
		<a class="janrain t" href="#" data-provider="twitter" data-message="Python Gets a Big Data Boost From DARPA @slashdot" data-url="http://developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa" data-title="Python Gets a Big Data Boost From DARPA">twitter</a>
		<a class="janrain f fb" href="#" data-provider="facebook" data-url="http://developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa" data-message="Python Gets a Big Data Boost From DARPA" data-title="Python Gets a Big Data Boost From DARPA">facebook</a>
        	<a class="janrain l" href="#" data-provider="linkedin" data-url="http://developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa" data-message="Python Gets a Big Data Boost From DARPA" data-title="Python Gets a Big Data Boost From DARPA">linkedin</a>
	        <a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="http://www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	

						
					</span>
				</span>

				</p>
			</div>
        <div class="grid_24 tright tw">
			<span class="tright tags">
						
			</span>
        </div>





       
       
       
        <section class="grid_24" id="newa2footerv2">
            <div class="grid_6 pr">
                <h3><a title="Previous story" href="//tech.slashdot.org/story/13/02/06/0112233/discourse-next-generation-discussionweb-forum-software?sdsrc=prev">&larr;</a></h3>
            </div>
            <div class="grid_12 rl">
                <h3>You may like to read:</h3>
            </div>
            <div class="grid_6 ns">
                <h3><a title="Next story" href="//it.slashdot.org/story/13/02/06/0336251/semi-automatic-hacking-of-masked-rom-code-from-microscopic-images?sdsrc=next">&rarr;</a></h3>
            </div>


            <div class="grid_6">
                <span class="c">
					<a href="//tech.slashdot.org/story/13/02/06/0112233/discourse-next-generation-discussionweb-forum-software?sdsrc=prev">Discourse: Next-Generation Discussion/Web Forum Software </a>
				</span>
            </div>
            <div class="grid_12">
                <span class="c">
					
                                                
                                                
                                                
						

                                                                                                        <h3><a href="//developers.slashdot.org/story/14/06/02/2311257/apple-announces-new-programming-language-called-swift?sdsrc=popbyskid">Apple Announces New Programming Language Called Swift</a><br></h3>
                                                                                                        <h3><a href="//developers.slashdot.org/story/14/06/08/1642252/turing-test-passed?sdsrc=popbyskid">Turing Test Passed</a><br></h3>
                                                                                                        <h3><a href="//developers.slashdot.org/story/14/06/27/2132223/google-is-offering-free-coding-lessons-to-women-and-minorities?sdsrc=popbyskid">Google Is Offering Free Coding Lessons To Women and Minorities</a><br></h3>
                                                                                                        <h3><a href="//developers.slashdot.org/story/14/06/12/1314232/google-engineer-we-need-more-web-programming-languages?sdsrc=popbyskid">Google Engineer: We Need More Web Programming Languages</a><br></h3>
                                                                                                        <h3><a href="//developers.slashdot.org/story/14/05/18/037233/fixing-the-pain-of-programming?sdsrc=popbyskid">Fixing the Pain of Programming</a><br></h3>
                                                
					
					
						<h3><a href="//developers.slashdot.org/submission/2481431/python-gets-a-big-data-boost-from-darpa?sdsrc=rel">Submission: Python Gets a Big Data Boost from DARPA</a></h3>
					
				</span>
            </div>
            <div class="grid_6">
                <span class="c">
					
						<a href="//it.slashdot.org/story/13/02/06/0336251/semi-automatic-hacking-of-masked-rom-code-from-microscopic-images?sdsrc=next">Semi-Automatic Hacking of Masked ROM Code From Microscopic Images</a>
					
				</span>
            </div>
        </section>


	
	</aside>
	
	

</article>
									    </div>
									    
									</section>

									<aside id="slashboxes">
									     
										  <div class="railad">
<div id='div-gpt-ad-300x250_a'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-300x250_a');});</script></div>
</div>
										  <div id="slashboxesin" class="yui-b">
										    
										    
										    
										  </div>
									     
									</aside>

									<section id="comments" class="a2commentwrap">
									   <div>
    									   <a name="comments"></a>
<div class="commentwrap ">
<div class="commentBox notice pcna">
			

		
			
				This discussion has been archived.
			
			No new comments can be posted.
		
	
</div>
</div><a name="comments"></a>

	 <section class="d2incommentspl">
	 <div class="commentwrap" id="commentwrap">

		 
			 <div class="commentBox">
				<div class="title hide">	
					<h4>
						<span class="escape-link"><a href="//developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa" title="Back to Article - Python Gets a Big Data Boost From DARPA">Python Gets a Big Data Boost From DARPA</a></span>
						<span class="commentBoxLinks"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_d"></span> More</a>





	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a></span>
					</h4>
				</div>
			 </div>
		 

	 



<section class="grid_24" id="d2header"><div>

	<h2 class="commentspl test"><a title="Back to Article - Python Gets a Big Data Boost From DARPA" href="//developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa">Python Gets a Big Data Boost From DARPA</a></h2>

	<nav class="grid_24">
		<div class="grid_14 widthauto">
			
				<button class="btn" disabled="disabled">Archived Discussion</button>
			
			<!-- <a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=3437373" class="btn">Search <span class="totalcommentcnt">180</span> Comments</a> -->
			
				
   					<a href="#" onclick="D2.ajaxFetchComments(0,1,'','',-1); return false" class="btn" id="d2loadall">Load All Comments</a>
				
			
        
		</div>
		<div class="grid_10 d1or2">
		

				 
					 <div id="d2out" class="horizontal rooted grid_15">
								 <div id="d2act" class="hide">
									 <div class="loki" id="gods">
										 <script type="text/javascript">
										 $(function(){
											 D2.slider = new D2.Slider(
												 D2.user_threshold(),
												 D2.user_highlightthresh(),
												 'x'
											 );
										 });
										 </script>
										 <div id="bones" class="grid_12">
											 <div class="ccw-count-container grid_24">
												 <span id="ccw-full-count-text" class="grid_8 ccw-count-text tcenter"><span></span><span id="ccw-full-phrase">&nbsp;Full</span></span>
												 <span id="ccw-abbr-count-text" class="grid_8 ccw-count-text"><span></span><span id="ccw-abbr-phrase">&nbsp;Abbreviated</span></span>
												 <span id="ccw-hide-count-text" class="grid_8 ccw-count-text tleft"><span></span><span id="ccw-hide-phrase">&nbsp;Hidden</span></span>
											 </div>
											 <div id="ccw">
												 <div id="ccw-body" class="ccw-core">
													 <div id="ccw-panel-container" class="ccw-core">
														 <div id="ccw-full-panel" class="ccw-panel">
															 /Sea<div class="ccw-panel-border"></div>
															 <div id="ccw-full-count-pos" class="ccw-core-pos ccw-count-pos"></div>
														 </div>
														 <div id="ccw-abbr-panel" class="ccw-panel">
															 <div class="ccw-panel-border"></div>
															 <div id="ccw-abbr-count-pos" class="ccw-core-pos ccw-count-pos"></div>
														 </div>
														 <div id="ccw-hide-panel" class="ccw-panel">
															 <div id="ccw-hide-count-pos" class="ccw-core-pos ccw-count-pos"></div>
														 </div>
													 </div>								
													 <div id="ccw-control" class="ccw-core">
														 <div id="ccw-centering-rail" class="ccw-core">
															 <div id="ccw-hide-bar-pos" class="ccw-core-pos">
																 <div id="ccw-hide-bar" class="ccw-bar">
																	 <div id="ccw-hide-bar-tab" class="ccw-bar-tab"></div>
																	 <div class="ccwa"></div>
																	 <div class="ccwb"></div>
																	 <div id="ccw-hide-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(HIDE_BAR, +1)"></div>
																	 <div id="ccw-hide-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(HIDE_BAR, -1)"></div>
																 </div>
															 </div>
															 <div id="ccw-abbr-bar-pos" class="ccw-core-pos">
																 <div id="ccw-abbr-bar" class="ccw-bar">
																	 <div id="ccw-abbr-bar-tab" class="ccw-bar-tab"></div>
																	 <div class="ccwa"></div>
																	 <div class="ccwb"></div>
																	 <div id="ccw-abbr-bar-upzone" class="ccw-upzone" onclick="D2.slider.stepTHT(ABBR_BAR, +1)"></div>
																	 <div id="ccw-abbr-bar-downzone" class="ccw-downzone" onclick="D2.slider.stepTHT(ABBR_BAR, -1)"></div>
																 </div>
															 </div>
														 </div>
													 </div>
												 </div>
												 <div class="ccw-score-label grid_24">
													 <div class="grid_3"><span class="sc">Score:</span></div>
													 <div class="grid_3">5<span class="lg"></span></div>
													 <div class="grid_3">4<span class="lg"></span></div>
													 <div class="grid_3">3<span class="lg"></span></div>
													 <div class="grid_3">2<span class="lg"></span></div>
													 <div class="grid_3">1<span class="lg"></span></div>
													 <div class="grid_3">0<span class="lg"></span></div>
													 <div class="grid_3">-1<span class="lg"></span></div>
												 </div>
											 </div>
										 </div>
										 <div class="commentControlFooter"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_c"></span> More</a>





	<a class="login"  href="//developers.slashdot.org/login.pl" onclick="show_login_box(); return false">Login</a><div id="login_cover" class="hide" onclick="hide_login_box()"></div>
<div id="login_box" class="hide">
	<div id="login_box_content">
		<div id='embbeded_login_modal' class="hide">
<form action="https://slashdot.org/my/login" method="post" onsubmit="if (global_returnto) { this.returnto.value = global_returnto }" class="embedded"><fieldset style="-webkit-border-radius:10px 10px 0 0;border-radius:10px 10px 0 0;-moz-border-radius:10px 10px 0 0">
<div style='height:25px;'>&nbsp;</div>
    <input type="hidden" name="returnto" value="//developers.slashdot.org/comments.pl?sid=3437373">
    <input type="hidden" name="op" value="userlogin">
    <p>
        <label class="fleft" for="unickname">Nickname:</label>
        <input type="text" name="unickname" value="">
    </p>
    <p>
        <label class="fleft" for="upasswd">Password:</label>
        <input type="password" name="upasswd" placeholder="6-20 characters long">
    </p>
    <label class="checkbox"><input type="checkbox" name="login_temp" value="yes"> Public Terminal</label>
    <br>
    <hr>
    <input type="submit" name="userlogin" value="Log In" class="fno"> <a href="//slashdot.org/my/mailpassword" class="btn link" onclick="getModalPrefs('sendPasswdModal', 'Retrieve Password', 1); return false;">Forgot your password?</a>
</fieldset></form>

<div id="janrainEngageEmbed"></div>
<div class="actions">
 <a class="ico close" onclick="hide_login_slider();" href=""><span>Close</span></a>
</div>
</div>
		<div class="actions">
			<a class="ico close" href="#" onclick="hide_login_box(); return false"><span>Close</span></a>
		</div>
	</div>
</div>
<script type="text/javascript">logged_in = 0</script></div>
										 <div id="commentControlBoxStatus" class="hide"></div>
									 </div>
								 </div>
					 </div>
				 
				 



				  <a href="//developers.slashdot.org/search.pl?op=comments&amp;sid=3437373" class="ui-icon search_comments">Search <span class="totalcommentcnt">180</span> Comments</a>




				  <a class="pref ui-icon-w" href="//developers.slashdot.org/users.pl" onclick="show_login_box(); $('#modal_box').addClass('login'); return false;">Log In/Create an Account</a>
				  
		</div>
	</nav>
	<section id="besttabs" class="grid_24">
	    <span class="legend">Comments Filter:</span>
	    <ul class="besttabslist">
	        <li class="active"><a href="//developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa#comments">All</a></li>
		
	        <li ><a href="//developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa/insightful-comments#comments">Insightful</a></li>
		
	        <li ><a href="//developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa/informative-comments#comments">Informative</a></li>
		
	        <li ><a href="//developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa/interesting-comments#comments">Interesting</a></li>
		
	        <li ><a href="//developers.slashdot.org/story/13/02/06/0225259/python-gets-a-big-data-boost-from-darpa/funny-comments#comments">Funny</a></li>
		
	    </ul>
	</section>
    <aside class="grid_24">
		<p>
			<small><strong>The Fine Print:</strong> The following comments are owned by whoever posted them.  We are not responsible for them in any way.</small>
		</p>
		<a name="topcomment"></a>
    </aside>


</div></section><script src="//a.fsdn.com/sd/comments-minified.js?release_20140618" type="text/javascript"></script>


<script type="text/javascript">
<!--
D2.d2_keybindings_disable()[191] = 1;
D2.boxStatus(1);
D2.comments({ 42822261: { uid: 934246, pid: 42810431, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42810431 }, 42806245: { uid: 2723487, pid: 42806195, subject: "Re:I get the impression that", read: 0, points: 3, kids: [ 42806315 ], opid: 42806195 }, 42806337: { uid: 16383, pid: 42806135, subject: "Re:Wrong language", read: 0, points: 4, kids: [  ], opid: 42806135 }, 42806687: { uid: 796014, pid: 42806195, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42809833 ], opid: 42806195 }, 42817155: { uid: 27352, pid: 42816165, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42818217 ], opid: 42816165 }, 42807023: { uid: 934246, pid: 42806767, subject: "Re:Its all going on making the documentation legib", read: 0, points: 2, kids: [  ], opid: 42806767 }, 42820351: { uid: 970822, pid: 42806107, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806107 }, 42808881: { uid: undefined, pid: 42806621, read: 0, points: -2, kids: [ 42809953 ], opid: undefined }, 42814711: { uid: 103154, pid: 42813009, subject: "Re:Python?", read: 0, points: 2, kids: [ 42815185 ], opid: 42813009 }, 42806279: { uid: 16383, pid: 42806095, subject: "Re:Python 2 or 3?", read: 0, points: 5, kids: [  ], opid: 42806095 }, 42809155: { uid: 652467, pid: 42808605, subject: "Re:Matlab", read: 0, points: 2, kids: [  ], opid: 42808605 }, 42810827: { uid: 1563847, pid: 42810229, subject: "Re:110 reasons to pick Python over Matlab", read: 0, points: 2, kids: [ 42811047 ], opid: 42810229 }, 42811793: { uid: undefined, pid: 42809099, read: 0, points: -2, kids: [ 42832075 ], opid: undefined }, 42817125: { uid: 27352, pid: 42816119, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42818259 ], opid: 42816119 }, 42816077: { uid: 1633185, pid: 42812181, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42812181 }, 42808447: { uid: 1186893, pid: 42807179, subject: "Re:Python?", read: 0, points: 2, kids: [ 42809319 ], opid: 42807179 }, 42806929: { uid: 535365, pid: 42806555, subject: "Re:I get the impression that", read: 0, points: 5, kids: [ 42807641, 42811253, 42842667 ], opid: 42806555 }, 42809953: { uid: undefined, pid: 42808881, read: 0, points: -2, kids: [ 42810801 ], opid: undefined }, 42807267: { uid: 652467, pid: 42806065, subject: "Re:Matlab", read: 0, points: 2, kids: [ 42808605 ], opid: 42806065 }, 42806235: { uid: undefined, pid: 42806195, read: 0, points: -2, kids: [ 42809463 ], opid: undefined }, 42808355: { uid: undefined, pid: 42806151, read: 0, points: -2, kids: [ 42813171 ], opid: undefined }, 42806147: { uid: undefined, pid: 0, read: 0, points: -2, kids: [ 42814141 ], opid: undefined }, 42816119: { uid: 1633185, pid: 42810781, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42817125 ], opid: 42810781 }, 42810801: { uid: 1810296, pid: 42809953, subject: "Re:Great. Just Great", read: 0, points: 2, kids: [  ], opid: 42809953 }, 42811127: { uid: 1560139, pid: 42810171, subject: "Re:Python?", read: 0, points: 2, kids: [  ], opid: 42810171 }, 42806023: { uid: 894406, pid: 0, read: 0, points: 5, kids: [ 42806107, 42806125, 42806195, 42806667, 42806867 ], opid: 0 }, 42806953: { uid: 1457205, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 42811223: { uid: 27070, pid: 42810587, subject: "Re:good lord no.", read: 0, points: 2, kids: [  ], opid: 42810587 }, 42813009: { uid: 1563847, pid: 42812411, subject: "Re:Python?", read: 0, points: 2, kids: [ 42814711 ], opid: 42812411 }, 42806163: { uid: undefined, pid: 42806125, read: 0, points: -2, kids: [ 42806345 ], opid: undefined }, 42808615: { uid: 134248, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 42806185: { uid: 897351, pid: 42806107, subject: "Re:I get the impression that", read: 0, points: 5, kids: [  ], opid: 42806107 }, 42806637: { uid: 837600, pid: 42806065, subject: "Re:Matlab", read: 0, points: 2, kids: [  ], opid: 42806065 }, 42806667: { uid: undefined, pid: 42806023, read: 0, points: -2, kids: [ 42806799, 42807277 ], opid: undefined }, 42806995: { uid: 934246, pid: 42806925, subject: "Re:I get the impression that", read: 0, points: 4, kids: [ 42806999, 42810431 ], opid: 42806925 }, 42808527: { uid: 91262, pid: 0, read: 0, points: 3, kids: [  ], opid: 0 }, 42806767: { uid: undefined, pid: 0, read: 0, points: -2, kids: [ 42807023 ], opid: undefined }, 42832075: { uid: 1810296, pid: 42811793, subject: "Re:GIL is a non-issue.", read: 0, points: 2, kids: [  ], opid: 42811793 }, 42809667: { uid: 1633185, pid: 42806745, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806745 }, 42806135: { uid: 125561, pid: 0, read: 0, points: 5, kids: [ 42806171, 42806337, 42806473, 42807445 ], opid: 0 }, 42806799: { uid: 894406, pid: 42806667, subject: "Re:I get the impression that", read: 0, points: 4, kids: [  ], opid: 42806667 }, 42809833: { uid: 729550, pid: 42806687, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806687 }, 42806107: { uid: 1017012, pid: 42806023, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42806185, 42806925, 42820351 ], opid: 42806023 }, 42814371: { uid: 189863, pid: 42812181, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42815181 ], opid: 42812181 }, 42806237: { uid: 41445, pid: 0, read: 0, points: 3, kids: [  ], opid: 0 }, 42808967: { uid: 682885, pid: 42806195, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42809779 ], opid: 42806195 }, 42811699: { uid: 1268702, pid: 42807019, subject: "Re:Good news for the Python community", read: 0, points: 2, kids: [  ], opid: 42807019 }, 42806171: { uid: undefined, pid: 42806135, read: 0, points: -2, kids: [ 42806187 ], opid: undefined }, 42806867: { uid: 869795, pid: 42806023, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806023 }, 42818217: { uid: 1633185, pid: 42817155, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42817155 }, 42810229: { uid: 1560139, pid: 42807179, read: 0, points: 2, kids: [ 42810827 ], opid: 42807179 }, 42809755: { uid: 1633185, pid: 42808585, subject: "Re:May I have a word", read: 0, points: 2, kids: [  ], opid: 42808585 }, 42806065: { uid: 666, pid: 0, read: 0, points: 1, kids: [ 42806637, 42807267 ], opid: 0 }, 42810171: { uid: 666, pid: 42809319, subject: "Re:Python?", read: 0, points: 2, kids: [ 42811127 ], opid: 42809319 }, 42806271: { uid: 961791, pid: 0, read: 0, points: 2, kids: [  ], opid: 0 }, 42807291: { uid: 641811, pid: 42806473, subject: "Re:Wrong language", read: 0, points: 3, kids: [  ], opid: 42806473 }, 42808585: { uid: undefined, pid: 42806195, read: 0, points: -2, kids: [ 42809755 ], opid: undefined }, 42815181: { uid: undefined, pid: 42814371, read: 0, points: -2, kids: [ 42819253 ], opid: undefined }, 42806125: { uid: undefined, pid: 42806023, read: 0, points: -2, kids: [ 42806163 ], opid: undefined }, 42807227: { uid: 681230, pid: 42806151, subject: "Re:Great. Just Great", read: 0, points: 5, kids: [  ], opid: 42806151 }, 42806151: { uid: 2757125, pid: 42806011, subject: "Re:Great. Just Great", read: 0, points: 5, kids: [ 42806621, 42807227, 42808355 ], opid: 42806011 }, 42813253: { uid: 525815, pid: 42806925, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42823765 ], opid: 42806925 }, 42806229: { uid: undefined, pid: 42806195, read: 0, points: -2, kids: [ 42810587 ], opid: undefined }, 42806925: { uid: undefined, pid: 42806107, read: 0, points: -2, kids: [ 42806995, 42809099, 42809919, 42813253, 42820737 ], opid: undefined }, 42806145: { uid: 779239, pid: 0, read: 0, points: 3, kids: [ 42807019 ], opid: 0 }, 42806011: { uid: 666, pid: 0, read: 0, points: 1, kids: [ 42806151, 42813117 ], opid: 0 }, 42806261: { uid: 666, pid: 42806225, subject: "Re:I get the impression that", read: 0, points: 5, kids: [  ], opid: 42806225 }, 42807277: { uid: 977600, pid: 42806667, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806667 }, 42810781: { uid: 27352, pid: 42809463, subject: "Re:I get the impression that", read: 0, points: 3, kids: [ 42816119 ], opid: 42809463 }, 42806441: { uid: undefined, pid: 0, read: 0, points: -2, kids: [ 42813633 ], opid: undefined }, 42813171: { uid: 525815, pid: 42808355, subject: "Re:Great. Just Great", read: 0, points: 2, kids: [  ], opid: 42808355 }, 42842667: { uid: 189863, pid: 42806929, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806929 }, 42806745: { uid: undefined, pid: 42806195, read: 0, points: -2, kids: [ 42809667 ], opid: undefined }, 42818259: { uid: 1633185, pid: 42817125, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42817125 }, 42806999: { uid: 934246, pid: 42806995, subject: "Re:I get the impression that", read: 0, points: 3, kids: [  ], opid: 42806995 }, 42810431: { uid: undefined, pid: 42806995, read: 0, points: -2, kids: [ 42822261 ], opid: undefined }, 42806473: { uid: 574795, pid: 42806135, subject: "Re:Wrong language", read: 0, points: 2, kids: [ 42807291 ], opid: 42806135 }, 42806187: { uid: 806112, pid: 42806171, subject: "Re:Wrong language", read: 0, points: 2, kids: [  ], opid: 42806171 }, 42807293: { uid: 608031, pid: 0, read: 0, points: 3, kids: [  ], opid: 0 }, 42806621: { uid: 666, pid: 42806151, subject: "Re:Great. Just Great", read: 0, points: 5, kids: [ 42808881 ], opid: 42806151 }, 42811047: { uid: 1560139, pid: 42810827, subject: "Re:110 reasons to pick Python over Matlab", read: 0, points: 2, kids: [  ], opid: 42810827 }, 42813117: { uid: 525815, pid: 42806011, subject: "Re:Great. Just Great", read: 0, points: 2, kids: [  ], opid: 42806011 }, 42809463: { uid: 1633185, pid: 42806235, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42810781, 42811099 ], opid: 42806235 }, 42806983: { uid: 535365, pid: 42806555, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42807381 ], opid: 42806555 }, 42811253: { uid: 559668, pid: 42806929, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806929 }, 42828783: { uid: 525815, pid: 42823765, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42823765 }, 42807179: { uid: 1563847, pid: 0, read: 0, points: 3, kids: [ 42808447, 42810229, 42811739, 42812411 ], opid: 0 }, 42806225: { uid: 449118, pid: 42806195, subject: "Re:I get the impression that", read: 0, points: 3, kids: [ 42806261, 42806267 ], opid: 42806195 }, 42814141: { uid: 525815, pid: 42806147, subject: "Re:Enthought Python", read: 0, points: 2, kids: [  ], opid: 42806147 }, 42806345: { uid: 666, pid: 42806163, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806163 }, 42806555: { uid: 856614, pid: 42806195, subject: "Re:I get the impression that", read: 0, points: 5, kids: [ 42806929, 42806983, 42808601, 42809581 ], opid: 42806195 }, 42806195: { uid: 1633185, pid: 42806023, subject: "Re:I get the impression that", read: 0, points: 5, kids: [ 42806225, 42806229, 42806235, 42806245, 42806355, 42806555, 42806687, 42806745, 42808585, 42808967 ], opid: 42806023 }, 42819253: { uid: 189863, pid: 42815181, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42815181 }, 42806267: { uid: 547041, pid: 42806225, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806225 }, 42807019: { uid: 934246, pid: 42806145, subject: "Re:Good news for the Python community", read: 0, points: 2, kids: [ 42810789, 42811699 ], opid: 42806145 }, 42809099: { uid: 1810296, pid: 42806925, read: 0, points: 2, kids: [ 42811793 ], opid: 42806925 }, 42811099: { uid: 538416, pid: 42809463, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42816165 ], opid: 42809463 }, 42816165: { uid: 1633185, pid: 42811099, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42817155 ], opid: 42811099 }, 42808601: { uid: 134248, pid: 42806555, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806555 }, 42812181: { uid: 103154, pid: 42809581, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42814371, 42815519, 42816077 ], opid: 42809581 }, 42809581: { uid: 1633185, pid: 42806555, subject: "Re:I get the impression that", read: 0, points: 2, kids: [ 42812181 ], opid: 42806555 }, 42807381: { uid: 574795, pid: 42806983, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806983 }, 42807445: { uid: 153816, pid: 42806135, subject: "Re:Wrong language", read: 0, points: 2, kids: [  ], opid: 42806135 }, 42815185: { uid: 1563847, pid: 42814711, subject: "Re:Python?", read: 0, points: 2, kids: [  ], opid: 42814711 }, 42810789: { uid: 1810296, pid: 42807019, read: 0, points: 2, kids: [  ], opid: 42807019 }, 42811739: { uid: 1268702, pid: 42807179, subject: "Re:Python?", read: 0, points: 2, kids: [  ], opid: 42807179 }, 42807641: { uid: 856614, pid: 42806929, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806929 }, 42812411: { uid: 103154, pid: 42807179, subject: "Re:Python?", read: 0, points: 2, kids: [ 42813009 ], opid: 42807179 }, 42806355: { uid: 2757125, pid: 42806195, subject: "Re:I get the impression that", read: 0, points: 5, kids: [  ], opid: 42806195 }, 42809919: { uid: 78516, pid: 42806925, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806925 }, 42809319: { uid: 1563847, pid: 42808447, subject: "Re:Python?", read: 0, points: 2, kids: [ 42810171 ], opid: 42808447 }, 42815519: { uid: 1235200, pid: 42812181, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42812181 }, 42810587: { uid: 1810296, pid: 42806229, read: 0, points: 2, kids: [ 42811223 ], opid: 42806229 }, 42808605: { uid: undefined, pid: 42807267, read: 0, points: -2, kids: [ 42809155 ], opid: undefined }, 42806095: { uid: 806112, pid: 0, read: 0, points: 4, kids: [ 42806279 ], opid: 0 }, 42806315: { uid: 547041, pid: 42806245, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42806245 }, 42813633: { uid: 525815, pid: 42806441, subject: "Re:Hope these guys work with Wes McKinney (Pandas)", read: 0, points: 2, kids: [  ], opid: 42806441 }, 42809779: { uid: 1633185, pid: 42808967, subject: "Re:I get the impression that", read: 0, points: 2, kids: [  ], opid: 42808967 }, 42820737: { uid: 970822, pid: 42806925, read: 0, points: 2, kids: [  ], opid: 42806925 }, 42823765: { uid: undefined, pid: 42813253, read: 0, points: -2, kids: [ 42828783 ], opid: undefined } });

D2.thresh_totals({6:{6:{1:100,3:0,2:0}},4:{6:{1:84,3:2,2:14},4:{1:84,3:16,2:0},5:{1:84,3:13,2:3}},1:{6:{1:0,3:2,2:98},4:{1:0,3:21,2:79},1:{1:0,3:100,2:0},3:{1:0,3:29,2:71},2:{1:0,3:100,2:0},5:{1:0,3:13,2:87}},3:{6:{1:74,3:2,2:24},4:{1:74,3:21,2:5},3:{1:74,3:26,2:0},5:{1:74,3:13,2:13}},0:{6:{1:0,3:2,2:98},4:{1:0,3:21,2:79},1:{1:0,3:100,2:0},3:{1:0,3:29,2:71},0:{1:0,3:100,2:0},2:{1:0,3:100,2:0},5:{1:0,3:13,2:87}},2:{6:{1:2,3:2,2:96},4:{1:2,3:21,2:77},3:{1:2,3:29,2:69},2:{1:2,3:98,2:0},5:{1:2,3:13,2:85}},5:{6:{1:88,3:2,2:10},5:{1:88,3:12,2:0}},"-1":{6:{1:0,3:2,2:98},4:{1:0,3:21,2:79},1:{1:0,3:100,2:0},3:{1:0,3:29,2:71},0:{1:0,3:100,2:0},2:{1:0,3:100,2:0},5:{1:0,3:13,2:87},"-1":{1:0,3:100,2:0}}});

D2.root_comment(0);
D2.root_comments([42806011,42806023,42806065,42806095,42806135,42806145,42806237,42806271,42806953,42807179,42807293,42808527,42808615,42806767,42806441,42806147]);
D2.root_comments_hash({42808615:1,42806145:1,42806011:1,42808527:1,42806767:1,42806441:1,42806135:1,42807293:1,42806237:1,42806065:1,42806147:1,42806271:1,42807179:1,42806095:1,42806023:1,42806953:1});

D2.d2_comment_order(0);
D2.user_uid(666);
D2.user_is_anon(1);
D2.user_is_admin(0);
D2.user_is_subscriber(0);
D2.user_smallscreen(0);
D2.user_threshold(1);
D2.user_highlightthresh(4);
D2.user_d2asp(0);

D2.discussion_id(3437373);

D2.d2_seen('42806011,12,42,30,12,28,10,6,34,2,8,30,12,8,16,6,4,8,36,22,8,10,118,82,66,16,50,112,68,62,24,30,12,4,20,4,156,48,40,10,14,2,88,64,196,806,80,74,14,352,132,56,164,144,118,86,88,24,54,86,252,58,358,194,8,12,26,220,52,28,96,30,446,40,442,230,598,108,54,82,380,508,230,340,474,334,558,42,46,960,30,1062,42,994,1098,386,1524,6522,3292,10592');
D2.more_comments_num(80);


//-->
</script>




	
	
	
	
		<ul id="commentlisting" class="d2">
			<li id="tree_42806011" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806011" class="commentstatus"></div>
<div id="comment_42806011" class="cw">
	<div id="comment_top_42806011" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806011" name="comment_link_42806011" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806011" onclick="return D2.setFocusComment(42806011)" >Great.  Just Great</a>


		 	<span id="comment_score_42806011" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806011); return false"><span class=opt>Score:</span>1</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806011"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806011"><p><div class="quote"><p>The work is part of DARPA's XData research program, a four-year, $100 million effort to give the Defense Department and other U.S. government agencies tools to work with large amounts of sensor data and other forms of big data.</p></div><p>Yeah the govt needs better systems to manage the huge databases and dossiers they are building on everybody with their warrentless wiretaps and reading everybody's emails.  Anybody who helps with this project is pretty damn naive if they don't think it will also be used for this.
<br> <br>
For that matter anybody who trusts the govt and thinks the govt is your friend is pretty damn naive.  Yeah I would like to believe that too.  No I won't ignore the mountains of evidence to the contrary.  I won't treat all the cou<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806011">

</div>
</div>

<div id="replyto_42806011"></div>

<ul id="group_42806011">
	<li id="hiddens_42806011" class="hide"></li>
</ul>

<ul id="commtree_42806011"><li id="tree_42806151" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806151" class="commentstatus"></div>
<div id="comment_42806151" class="cw">
	<div id="comment_top_42806151" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806151" name="comment_link_42806151" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806151" onclick="return D2.setFocusComment(42806151)" >Re:Great. Just Great</a>


		 	<span id="comment_score_42806151" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806151); return false"><span class=opt>Score:</span>5</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Kwyj1b0">Kwyj1b0</a>  <span class="uid"><a href="//slashdot.org/~Kwyj1b0">(2757125)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806151">		
		on Wednesday February 06, 2013 @04:07AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806151">#42806151</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806151"><p><div class="quote"><p>Yeah the govt needs better systems to manage the huge databases and dossiers they are building on everybody with their warrentless wiretaps and reading everybody's emails.  Anybody who helps with this project is pretty damn naive if they don't think it will also be used for this.</p><p>For that matter anybody who trusts the govt and thinks the govt is your friend is pretty damn naive.  Yeah I would like to believe that too.  No I won't ignore the mountains of evidence to the contrary.  I won't treat all the counterexamples as isolated cases.  I see them for what they are: an amazingly consistent pattern.  The rule, not the exception.  Govt positions are really attractive to sociopath types who just love power and control and a feeling that they are important and they get that feeling by imposing their will on us.</p></div><p>So what you are saying is that DARPA funds will be used in a way to further the goals of DARPA/The government? Shocking. I haven't read anything that says which agencies will/won't have access to these tools - so I'd hazard a guess that any department that wants it can have it (including the famous three letter agencies).</p><p>FYI,  Continuum Analytics is a company that is based on providing high-performance python-based computing to clients. Any packages they might release will either be open source (and can be checked), or closed source (in which case you don't have to use it). They aren't hijacking the Numpy/Scipy libraries. They are developing libraries/tools for a client (who happens to be DARPA). (Frankly, I'd hope that Continuum Analytics open sources their development because it might be useful to the larger community). You do know that DARPA funds also go to improve robotics, they supported ARPANET, and a lot of their space programs later got transferred to NASA? </p><p> Basically, I have no idea what you are ranting about. One government organization funded a project - it happens all the time.  Do you rant about NSF/NIH/NASA money as well? If so, you'd better live in a cave - a lot of government sponsored research has gone into almost every modern convenience that we take for granted. </p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806151">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806011" onclick="return D2.selectParent(42806011)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:Great. Just Great by Kwyj1b0 @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806151" data-title="Re:Great. Just Great">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:Great. Just Great by Kwyj1b0" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806151" data-title="Re:Great. Just Great">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:Great. Just Great by Kwyj1b0" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806151" data-title="Re:Great. Just Great">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806151" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806151"></div>

<ul id="group_42806151">
	<li id="hiddens_42806151" class="hide"></li>
</ul>

<ul id="commtree_42806151"><li id="tree_42806621" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806621" class="commentstatus"></div>
<div id="comment_42806621" class="cw">
	<div id="comment_top_42806621" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806621" name="comment_link_42806621" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806621" onclick="return D2.setFocusComment(42806621)" >Re:Great. Just Great</a>


		 	<span id="comment_score_42806621" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806621); return false"><span class=opt>Score:</span>5</a>, Funny)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806621">		
		on Wednesday February 06, 2013 @06:27AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806621">#42806621</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806621">What is this APRANET thing? It sounds like some useless crap loaded acronym to me.</div>
	</div>

	<div class="commentSub" id="comment_sub_42806621">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806151" onclick="return D2.selectParent(42806151)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:Great. Just Great by Anonymous Coward @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806621" data-title="Re:Great. Just Great">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:Great. Just Great by Anonymous Coward" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806621" data-title="Re:Great. Just Great">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:Great. Just Great by Anonymous Coward" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806621" data-title="Re:Great. Just Great">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806621" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806621"></div>

<ul id="group_42806621">
	<li id="hiddens_42806621" class="hide"></li>
</ul>

<ul id="commtree_42806621"><li id="tree_42808881" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42808881" class="commentstatus"></div>
<div id="comment_42808881" class="cw">
</div>

<div id="replyto_42808881"></div>

<ul id="group_42808881">
	<li id="hiddens_42808881" class="hide"></li>
</ul>

<ul id="commtree_42808881"><li id="tree_42809953" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42809953" class="commentstatus"></div>
<div id="comment_42809953" class="cw">
</div>

<div id="replyto_42809953"></div>

<ul id="group_42809953">
	<li id="hiddens_42809953" class="hide"></li>
</ul>

<ul id="commtree_42809953"><li id="tree_42810801" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42810801" class="commentstatus"></div>
<div id="comment_42810801" class="cw">
	<div id="comment_top_42810801" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42810801" name="comment_link_42810801" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42810801" onclick="return D2.setFocusComment(42810801)" >Re:</a>


		 	<span id="comment_score_42810801" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42810801); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~luis_a_espinal">luis_a_espinal</a>  <span class="uid"><a href="//slashdot.org/~luis_a_espinal">(1810296)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42810801"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42810801"><p><div class="quote"><p> <a href="http://en.wikipedia.org/wiki/Poe's_law" title="wikipedia.org">Poe's Law.</a> [wikipedia.org] </p></div><p>In<nobr> <wbr></nobr>/., you never know.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42810801">

</div>
</div>

<div id="replyto_42810801"></div>

<ul id="group_42810801">
	<li id="hiddens_42810801" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_42807227" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42807227" class="commentstatus"></div>
<div id="comment_42807227" class="cw">
	<div id="comment_top_42807227" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807227" name="comment_link_42807227" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807227" onclick="return D2.setFocusComment(42807227)" >Re:Great. Just Great</a>


		 	<span id="comment_score_42807227" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807227); return false"><span class=opt>Score:</span>5</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~sdaug">sdaug</a>  <span class="uid"><a href="//slashdot.org/~sdaug">(681230)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807227">		
		on Wednesday February 06, 2013 @08:54AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807227">#42807227</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807227"><p><div class="quote"><p>Frankly, I'd hope that Continuum Analytics open sources their development because it might be useful to the larger community</p></div><p>Open sourcing is a requirement of the XDATA program.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42807227">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806151" onclick="return D2.selectParent(42806151)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:Great. Just Great by sdaug @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807227" data-title="Re:Great. Just Great">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:Great. Just Great by sdaug" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807227" data-title="Re:Great. Just Great">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:Great. Just Great by sdaug" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807227" data-title="Re:Great. Just Great">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42807227" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42807227"></div>

<ul id="group_42807227">
	<li id="hiddens_42807227" class="hide"></li>
</ul>

</li><li id="tree_42808355" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42808355" class="commentstatus"></div>
<div id="comment_42808355" class="cw">
</div>

<div id="replyto_42808355"></div>

<ul id="group_42808355">
	<li id="hiddens_42808355" class="hide"></li>
</ul>

<ul id="commtree_42808355"><li id="tree_42813171" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42813171" class="commentstatus"></div>
<div id="comment_42813171" class="cw">
	<div id="comment_top_42813171" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42813171" name="comment_link_42813171" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42813171" onclick="return D2.setFocusComment(42813171)" >Re:</a>


		 	<span id="comment_score_42813171" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42813171); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blueskies">blueskies</a>  <span class="uid"><a href="//slashdot.org/~blueskies">(525815)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42813171"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42813171"><p><div class="quote"><p>You have no idea what he's talking about? It was pretty clear: factions within the US government wants these tools to datamine all the ISP data they have been snarfing up so they can spy on everyone in the world. Saying that you believe otherwise is a pretty extreme view</p></div><p>He has no idea why there is ranting about open source code that everyone in the world can use for any purposes.  Did you rant about git being open source?  I'm betting the gov't can use that to manage code related to data mining.  Do you rant about postgres or any of the databases used by the US gov't?  Would postgres suddenly become evil because the gov't threw some money their way?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42813171">

</div>
</div>

<div id="replyto_42813171"></div>

<ul id="group_42813171">
	<li id="hiddens_42813171" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42813117" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42813117" class="commentstatus"></div>
<div id="comment_42813117" class="cw">
	<div id="comment_top_42813117" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42813117" name="comment_link_42813117" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42813117" onclick="return D2.setFocusComment(42813117)" >Re:</a>


		 	<span id="comment_score_42813117" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42813117); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blueskies">blueskies</a>  <span class="uid"><a href="//slashdot.org/~blueskies">(525815)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42813117"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42813117"><p><div class="quote"><p>Yeah the govt needs better systems to manage the huge databases and dossiers they are building on everybody with their warrentless wiretaps and reading everybody's emails.  Anybody who helps with this project is pretty damn naive if they don't think it will also be used for this.</p></div><p>Isn't this true of all useful open source projects?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42813117">

</div>
</div>

<div id="replyto_42813117"></div>

<ul id="group_42813117">
	<li id="hiddens_42813117" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806023" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806023" class="commentstatus"></div>
<div id="comment_42806023" class="cw">
	<div id="comment_top_42806023" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806023" name="comment_link_42806023" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806023" onclick="return D2.setFocusComment(42806023)" >I get the impression that</a>


		 	<span id="comment_score_42806023" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806023); return false"><span class=opt>Score:</span>5</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Chrisq">Chrisq</a>  <span class="uid"><a href="//slashdot.org/~Chrisq">(894406)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806023">		
		on Wednesday February 06, 2013 @03:35AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806023">#42806023</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806023">I get the impression that in the Engineering and Scientific community Python is the new Fortran. I hope so, because it would be "Fortran done right".</div>
	</div>

	<div class="commentSub" id="comment_sub_42806023">
	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="I get the impression that by Chrisq @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806023" data-title="I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="I get the impression that by Chrisq" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806023" data-title="I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="I get the impression that by Chrisq" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806023" data-title="I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806023" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806023"></div>

<ul id="group_42806023">
	<li id="hiddens_42806023" class="hide"></li>
</ul>

<ul id="commtree_42806023"><li id="tree_42806107" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806107" class="commentstatus"></div>
<div id="comment_42806107" class="cw">
	<div id="comment_top_42806107" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806107" name="comment_link_42806107" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806107" onclick="return D2.setFocusComment(42806107)" >Re:</a>


		 	<span id="comment_score_42806107" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806107); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~BlackPignouf">BlackPignouf</a>  <span class="uid"><a href="//slashdot.org/~BlackPignouf">(1017012)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806107"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806107"><p>I think you're right.<br>I love Ruby, it's a very fun and effective language, I could write it in my sleep but there are so many cool projects that are written in Python.<br>Those languages are *very* similar, and it's a shame that so much effort is being divided between communities.<br>I might get to learn Python one day but I'm afraid I'd become a so-so programmer in both languages.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806107">

</div>
</div>

<div id="replyto_42806107"></div>

<ul id="group_42806107">
	<li id="hiddens_42806107" class="hide"></li>
</ul>

<ul id="commtree_42806107"><li id="tree_42806185" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806185" class="commentstatus"></div>
<div id="comment_42806185" class="cw">
	<div id="comment_top_42806185" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806185" name="comment_link_42806185" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806185" onclick="return D2.setFocusComment(42806185)" >Re:I get the impression that</a>


		 	<span id="comment_score_42806185" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806185); return false"><span class=opt>Score:</span>5</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~jma05">jma05</a>  <span class="uid"><a href="//slashdot.org/~jma05">(897351)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806185">		
		on Wednesday February 06, 2013 @04:16AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806185">#42806185</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806185"><p>&gt; I might get to learn Python one day but I'm afraid I'd become a so-so programmer in both languages.</p><p>I empathize since I conversely only barely use Ruby. Once someone learns one of these languages, there is not that much that the other offers. But happily, one need not learn advanced Python to benefit from these projects.</p><p>&gt; it's a shame that so much effort is being divided between communities</p><p>AFAIK, all scientific funding from US and Europe is/was always directed to Python, not Ruby. So Python is firmly established as a research language and there is not much effort being divided with Ruby (which seems to have a much more spotted and amateur movement in this direction), at least as far as scientific stuff is concerned (Ruby is more popular on web app side). For me the tension for scientific use is not between Python and Ruby, but between Python and R. Python community is replicating a lot of R functionality these days but R still has a much better lead in science libraries. Happily, it is quite easy to call R from Python.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806185">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806107" onclick="return D2.selectParent(42806107)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:I get the impression that by jma05 @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806185" data-title="Re:I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:I get the impression that by jma05" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806185" data-title="Re:I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:I get the impression that by jma05" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806185" data-title="Re:I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806185" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806185"></div>

<ul id="group_42806185">
	<li id="hiddens_42806185" class="hide"></li>
</ul>

</li><li id="tree_42820351" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42820351" class="commentstatus"></div>
<div id="comment_42820351" class="cw">
	<div id="comment_top_42820351" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42820351" name="comment_link_42820351" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42820351" onclick="return D2.setFocusComment(42820351)" >Re:</a>


		 	<span id="comment_score_42820351" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42820351); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~DragonWriter">DragonWriter</a>  <span class="uid"><a href="//slashdot.org/~DragonWriter">(970822)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42820351"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42820351"><blockquote><div><p>I love Ruby, it's a very fun and effective language, I could write it in my sleep but there are so many cool projects that are written in Python.
Those languages are *very* similar, and it's a shame that so much effort is being divided between communities.</p></div></blockquote><p>

I think I disagree. I think that its great that both communities exist and each can develop languages in ways unconstrained by the particular historical choices that shaped the other languages (and that, in both cases, each has subcommunities around part<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42820351">

</div>
</div>

<div id="replyto_42820351"></div>

<ul id="group_42820351">
	<li id="hiddens_42820351" class="hide"></li>
</ul>

</li><li id="tree_42806925" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806925" class="commentstatus"></div>
<div id="comment_42806925" class="cw">
</div>

<div id="replyto_42806925"></div>

<ul id="group_42806925">
	<li id="hiddens_42806925" class="hide"></li>
</ul>

<ul id="commtree_42806925"><li id="tree_42806995" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806995" class="commentstatus"></div>
<div id="comment_42806995" class="cw">
	<div id="comment_top_42806995" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806995" name="comment_link_42806995" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806995" onclick="return D2.setFocusComment(42806995)" >Re:I get the impression that</a>


		 	<span id="comment_score_42806995" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806995); return false"><span class=opt>Score:</span>4</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~lattyware">lattyware</a>  <span class="uid"><a href="//slashdot.org/~lattyware">(934246)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806995">		 &lt;<a href="mailto:gareth%40lattyware.co.uk">gareth@lattyware.co.uk</a>&gt;
		on Wednesday February 06, 2013 @08:01AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806995">#42806995</a>)
		<small><a href="http://www.lattyware.co.uk/" title="http://www.lattyware.co.uk/" class="user_homepage_display">Homepage</a>
<a href="//slashdot.org/~lattyware/journal/" title="Thursday February 19, 2009 @06:17PM" class="user_journal_display">Journal</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806995">The GIL is an overblown issue. Threading is designed to get around issues with accessing slow resources, not for serious parallel computing. Just use multiprocessing if you want to do lots of computing in parallel, problem solved.</div>
	</div>

	<div class="commentSub" id="comment_sub_42806995">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806925" onclick="return D2.selectParent(42806925)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:I get the impression that by lattyware @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806995" data-title="Re:I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:I get the impression that by lattyware" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806995" data-title="Re:I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:I get the impression that by lattyware" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806995" data-title="Re:I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806995" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806995"></div>

<ul id="group_42806995">
	<li id="hiddens_42806995" class="hide"></li>
</ul>

<ul id="commtree_42806995"><li id="tree_42806999" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806999" class="commentstatus"></div>
<div id="comment_42806999" class="cw">
	<div id="comment_top_42806999" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806999" name="comment_link_42806999" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806999" onclick="return D2.setFocusComment(42806999)" >Re:</a>


		 	<span id="comment_score_42806999" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806999); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~lattyware">lattyware</a>  <span class="uid"><a href="//slashdot.org/~lattyware">(934246)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806999"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806999">Oh, and Python without a GIL exists, it's called Jython.</div>
	</div>

	<div class="commentSub" id="comment_sub_42806999">

</div>
</div>

<div id="replyto_42806999"></div>

<ul id="group_42806999">
	<li id="hiddens_42806999" class="hide"></li>
</ul>

</li><li id="tree_42810431" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42810431" class="commentstatus"></div>
<div id="comment_42810431" class="cw">
</div>

<div id="replyto_42810431"></div>

<ul id="group_42810431">
	<li id="hiddens_42810431" class="hide"></li>
</ul>

<ul id="commtree_42810431"><li id="tree_42822261" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42822261" class="commentstatus"></div>
<div id="comment_42822261" class="cw">
	<div id="comment_top_42822261" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42822261" name="comment_link_42822261" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42822261" onclick="return D2.setFocusComment(42822261)" >Re:</a>


		 	<span id="comment_score_42822261" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42822261); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~lattyware">lattyware</a>  <span class="uid"><a href="//slashdot.org/~lattyware">(934246)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42822261"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42822261"><a href="http://stackoverflow.com/questions/12867263/why-wasnt-pypy-included-in-standard-python/12867292#12867292" title="stackoverflow.com">PyPy isn't there yet.</a> [stackoverflow.com]</div>
	</div>

	<div class="commentSub" id="comment_sub_42822261">

</div>
</div>

<div id="replyto_42822261"></div>

<ul id="group_42822261">
	<li id="hiddens_42822261" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42809099" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809099" class="commentstatus"></div>
<div id="comment_42809099" class="cw">
	<div id="comment_top_42809099" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809099" name="comment_link_42809099" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809099" onclick="return D2.setFocusComment(42809099)" >GIL is a non-issue.</a>


		 	<span id="comment_score_42809099" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809099); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~luis_a_espinal">luis_a_espinal</a>  <span class="uid"><a href="//slashdot.org/~luis_a_espinal">(1810296)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809099"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809099"><p><div class="quote"><p><div class="quote"><p>I think you're right.
I love Ruby, it's a very fun and effective language, I could write it in my sleep but there are so many cool projects that are written in Python.
Those languages are *very* similar, and it's a shame that so much effort is being divided between communities.
I might get to learn Python one day but I'm afraid I'd become a so-so programmer in both languages.</p></div><p>Both languages suffer from the global interpreter lock defect and will require a rewrite in the next 5-10 years <b>if the languages have any chance of surviving in the servers.</b><span class="substr"> </span> </p></div><p>Gee, because there are no distributed enterprise solutions written on Python or Ruby &lt;rolls eyes/&gt;</p><p><div class="quote"><p>It will take some very serious, dedicated, low level work and I just don't see it happening.</p></div><p>It already has happened. The solutions aren't just in the mainstream versions, though. Take Jython. On a typical JVM, it is the fastest Python in-the-trenches implementation available. Throw that over specialized Java-focused hardware (like the Azul Vega 3), and you are on fire.</p><p>

Furthermore, a solution to the GIL problem is not necessary <b>in the general case</b>. In any modern system, the cost of communicatin</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42809099">

</div>
</div>

<div id="replyto_42809099"></div>

<ul id="group_42809099">
	<li id="hiddens_42809099" class="hide"></li>
</ul>

<ul id="commtree_42809099"><li id="tree_42811793" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42811793" class="commentstatus"></div>
<div id="comment_42811793" class="cw">
</div>

<div id="replyto_42811793"></div>

<ul id="group_42811793">
	<li id="hiddens_42811793" class="hide"></li>
</ul>

<ul id="commtree_42811793"><li id="tree_42832075" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42832075" class="commentstatus"></div>
<div id="comment_42832075" class="cw">
	<div id="comment_top_42832075" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42832075" name="comment_link_42832075" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42832075" onclick="return D2.setFocusComment(42832075)" >Re:</a>


		 	<span id="comment_score_42832075" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42832075); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~luis_a_espinal">luis_a_espinal</a>  <span class="uid"><a href="//slashdot.org/~luis_a_espinal">(1810296)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42832075"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42832075"><p><div class="quote"><p>Java/JEE never shines.  It is total crap.</p></div><p>That's an invective, not an argument. Now go back and finish your programming homework.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42832075">

</div>
</div>

<div id="replyto_42832075"></div>

<ul id="group_42832075">
	<li id="hiddens_42832075" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42809919" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809919" class="commentstatus"></div>
<div id="comment_42809919" class="cw">
	<div id="comment_top_42809919" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809919" name="comment_link_42809919" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809919" onclick="return D2.setFocusComment(42809919)" >Re:</a>


		 	<span id="comment_score_42809919" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809919); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~mattr">mattr</a>  <span class="uid"><a href="//slashdot.org/~mattr">(78516)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809919"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809919"><p>It would be easier to get some of that Darpa money sent over to <a href="https://bitbucket.org/allison/pynie" title="bitbucket.org">Pynie</a> [bitbucket.org] and it will all run on Parrot (multithreaded stable as of last month apparently). Then you will be able to call Perl6 and Befunge when you get tired of indenting all the time (ducks)</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42809919">

</div>
</div>

<div id="replyto_42809919"></div>

<ul id="group_42809919">
	<li id="hiddens_42809919" class="hide"></li>
</ul>

</li><li id="tree_42813253" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42813253" class="commentstatus"></div>
<div id="comment_42813253" class="cw">
	<div id="comment_top_42813253" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42813253" name="comment_link_42813253" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42813253" onclick="return D2.setFocusComment(42813253)" >Re:</a>


		 	<span id="comment_score_42813253" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42813253); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blueskies">blueskies</a>  <span class="uid"><a href="//slashdot.org/~blueskies">(525815)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42813253"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42813253"><p><div class="quote"><p>Both languages suffer from the global interpreter lock defect and will require a rewrite in the next 5-10 years if the languages have any chance of surviving in the servers.</p></div><p>You don't really understand big data, if you think it needs to run on <b>ONE</b> computer.
<br> <br>
This is only a problem if you think threading is the solution to scaling CPU computations across hundreds of computers. If you generalized your code to run on hundreds of computers, there is no reason you can't run a process per core for your multicore machines.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42813253">

</div>
</div>

<div id="replyto_42813253"></div>

<ul id="group_42813253">
	<li id="hiddens_42813253" class="hide"></li>
</ul>

<ul id="commtree_42813253"><li id="tree_42823765" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42823765" class="commentstatus"></div>
<div id="comment_42823765" class="cw">
</div>

<div id="replyto_42823765"></div>

<ul id="group_42823765">
	<li id="hiddens_42823765" class="hide"></li>
</ul>

<ul id="commtree_42823765"><li id="tree_42828783" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42828783" class="commentstatus"></div>
<div id="comment_42828783" class="cw">
	<div id="comment_top_42828783" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42828783" name="comment_link_42828783" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42828783" onclick="return D2.setFocusComment(42828783)" >Re:</a>


		 	<span id="comment_score_42828783" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42828783); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blueskies">blueskies</a>  <span class="uid"><a href="//slashdot.org/~blueskies">(525815)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42828783"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42828783"><p><div class="quote"><p>I used to do "big data" and "cloud" computing when it was called clusters.</p></div><p>Did you run one process with multiple threads across all of those machines, or was threading less of an issue once you started thinking about distributed computing?</p><p><div class="quote"><p> I can say this with a certainty: Anything other than a compiled language with low level facilities is a pure waste of time and money.</p></div><p>Isn't that what Numba does?  Compiling Python code using LLVM and being able to understand numpy data structures?  I'm still not sure I understand what threading has to do with this.  The OP said threading was an issue, but threading doesn't</p><p><div class="quote"><p>While with Java you at least get some safety for big projects</p></div><p>Safety?  Job security?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42828783">

</div>
</div>

<div id="replyto_42828783"></div>

<ul id="group_42828783">
	<li id="hiddens_42828783" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42820737" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42820737" class="commentstatus"></div>
<div id="comment_42820737" class="cw">
	<div id="comment_top_42820737" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42820737" name="comment_link_42820737" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42820737" onclick="return D2.setFocusComment(42820737)" >Neither LANGUAGE has a GIL</a>


		 	<span id="comment_score_42820737" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42820737); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~DragonWriter">DragonWriter</a>  <span class="uid"><a href="//slashdot.org/~DragonWriter">(970822)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42820737"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42820737"><blockquote><div><p>Both languages suffer from the global interpreter lock defect and will require a rewrite in the next 5-10 years if the languages have any chance of surviving in the servers.</p></div></blockquote><p>No, they don't. The CPython and MRI/YARV <i>implementations</i> of Python and Ruby, respectively, have global interpreter locks, but those are implementation quirks not language features. On the Python side, IronPython and Jython don't have a GIL, on the Ruby side neither JRuby, MacRuby, IronRuby nor Rubinius (the latter being particularly impo<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42820737">

</div>
</div>

<div id="replyto_42820737"></div>

<ul id="group_42820737">
	<li id="hiddens_42820737" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42806195" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806195" class="commentstatus"></div>
<div id="comment_42806195" class="cw">
	<div id="comment_top_42806195" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806195" name="comment_link_42806195" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806195" onclick="return D2.setFocusComment(42806195)" >Re:I get the impression that</a>


		 	<span id="comment_score_42806195" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806195); return false"><span class=opt>Score:</span>5</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806195">		
		on Wednesday February 06, 2013 @04:18AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806195">#42806195</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806195">You're dead wrong, nothing quite beats Fortran in speed when it comes to number crunching. If you need to go through hundreds of gigabytes of data and performance is important there's only one realistic choice: Fortran. Python isn't fit to run on a large cluster to simulate things, too much overhead. And lets not forget what sort of efficiency you can get if you use a good compiler (Intel Composer). You won't find  Fortran on the way out over here, it's here to stay!</div>
	</div>

	<div class="commentSub" id="comment_sub_42806195">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806023" onclick="return D2.selectParent(42806023)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:I get the impression that by solidraven @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806195" data-title="Re:I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:I get the impression that by solidraven" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806195" data-title="Re:I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:I get the impression that by solidraven" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806195" data-title="Re:I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806195" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806195"></div>

<ul id="group_42806195">
	<li id="hiddens_42806195" class="hide"></li>
</ul>

<ul id="commtree_42806195"><li id="tree_42806225" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806225" class="commentstatus"></div>
<div id="comment_42806225" class="cw">
	<div id="comment_top_42806225" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806225" name="comment_link_42806225" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806225" onclick="return D2.setFocusComment(42806225)" >Re:</a>


		 	<span id="comment_score_42806225" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806225); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ctid">ctid</a>  <span class="uid"><a href="//slashdot.org/~ctid">(449118)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806225"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806225"><p>Why would Fortran be any faster than any other compiled language?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806225">

</div>
</div>

<div id="replyto_42806225"></div>

<ul id="group_42806225">
	<li id="hiddens_42806225" class="hide"></li>
</ul>

<ul id="commtree_42806225"><li id="tree_42806261" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806261" class="commentstatus"></div>
<div id="comment_42806261" class="cw">
	<div id="comment_top_42806261" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806261" name="comment_link_42806261" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806261" onclick="return D2.setFocusComment(42806261)" >Re:I get the impression that</a>


		 	<span id="comment_score_42806261" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806261); return false"><span class=opt>Score:</span>5</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806261">		
		on Wednesday February 06, 2013 @04:46AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806261">#42806261</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806261">Short answer, Fortran has stricter aliasing rules so the compiler has more optimization opportunities. Long answer, <a href="http://stackoverflow.com/questions/146159/is-fortran-faster-than-c" title="stackoverflow.com" rel="nofollow">see Stack Overflow</a> [stackoverflow.com].</div>
	</div>

	<div class="commentSub" id="comment_sub_42806261">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806225" onclick="return D2.selectParent(42806225)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:I get the impression that by Anonymous Coward @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806261" data-title="Re:I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:I get the impression that by Anonymous Coward" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806261" data-title="Re:I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:I get the impression that by Anonymous Coward" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806261" data-title="Re:I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806261" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806261"></div>

<ul id="group_42806261">
	<li id="hiddens_42806261" class="hide"></li>
</ul>

</li><li id="tree_42806267" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806267" class="commentstatus"></div>
<div id="comment_42806267" class="cw">
	<div id="comment_top_42806267" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806267" name="comment_link_42806267" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806267" onclick="return D2.setFocusComment(42806267)" >Re:</a>


		 	<span id="comment_score_42806267" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806267); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~martin-boundary">martin-boundary</a>  <span class="uid"><a href="//slashdot.org/~martin-boundary">(547041)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806267"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806267"><blockquote><div><p> Why would Fortran be any faster than any other compiled language?</p></div>


</blockquote><p>
Because the language is simpler, so the compiler can make assumptions and generate better automatic optimizations. C/C++ are much harder to optimize (=generate optimal assembly instructions).</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806267">

</div>
</div>

<div id="replyto_42806267"></div>

<ul id="group_42806267">
	<li id="hiddens_42806267" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806245" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806245" class="commentstatus"></div>
<div id="comment_42806245" class="cw">
	<div id="comment_top_42806245" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806245" name="comment_link_42806245" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806245" onclick="return D2.setFocusComment(42806245)" >Re:</a>


		 	<span id="comment_score_42806245" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806245); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~ssam">ssam</a>  <span class="uid"><a href="//slashdot.org/~ssam">(2723487)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806245"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806245"><p>FORTRAN does arrays in a way thats slightly easier for the compiler to optimise. But some modern techniques and data structures are much harder to do in FORTRAN compared to c++. It is also quite easy to call C, C++ or FORTRAN functions from python.</p><p>Writing a loop in python is slow. You express that loop as a numpy array operation you get a substantial way towards c speed. if you use numexpr you will get something faster than a simple C version.</p><p>Processing big data is as much about moving the data around, and<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806245">

</div>
</div>

<div id="replyto_42806245"></div>

<ul id="group_42806245">
	<li id="hiddens_42806245" class="hide"></li>
</ul>

<ul id="commtree_42806245"><li id="tree_42806315" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806315" class="commentstatus"></div>
<div id="comment_42806315" class="cw">
	<div id="comment_top_42806315" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806315" name="comment_link_42806315" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806315" onclick="return D2.setFocusComment(42806315)" >Re:</a>


		 	<span id="comment_score_42806315" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806315); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~martin-boundary">martin-boundary</a>  <span class="uid"><a href="//slashdot.org/~martin-boundary">(547041)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806315"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806315"><blockquote><div><p>  Processing big data is as much about moving the data around, and minimising
  latency in this movement as the raw processing speed. so a language that lets
  you express things efficiently will win in the end.</p></div><span class="substr"> </span></blockquote><p>
If by expressing things efficiently you mean easy for the programmer to write, then you're wrong. What matters (doubly so for big data) is full control over the machine's resources, ie how data is laid out in memory, good control over i/o etc.  While this has always been the key to fast performan</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806315">

</div>
</div>

<div id="replyto_42806315"></div>

<ul id="group_42806315">
	<li id="hiddens_42806315" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806355" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806355" class="commentstatus"></div>
<div id="comment_42806355" class="cw">
	<div id="comment_top_42806355" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806355" name="comment_link_42806355" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806355" onclick="return D2.setFocusComment(42806355)" >Re:I get the impression that</a>


		 	<span id="comment_score_42806355" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806355); return false"><span class=opt>Score:</span>5</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Kwyj1b0">Kwyj1b0</a>  <span class="uid"><a href="//slashdot.org/~Kwyj1b0">(2757125)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806355">		
		on Wednesday February 06, 2013 @05:14AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806355">#42806355</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806355"><p> Compared to plain old Python, yes. But Cython offers a lot of capabilities that improve speed dramatically - just using a type for your data in Cython gives programs a wonderful boost in speed.</p><p> As someone who uses Matlab for most of my programming, I have come to detest languages that do not force specifying a variable type and/or declaring variables. Matlab offers neither, but it is a standard in some circles. </p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806355">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806195" onclick="return D2.selectParent(42806195)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:I get the impression that by Kwyj1b0 @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806355" data-title="Re:I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:I get the impression that by Kwyj1b0" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806355" data-title="Re:I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:I get the impression that by Kwyj1b0" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806355" data-title="Re:I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806355" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806355"></div>

<ul id="group_42806355">
	<li id="hiddens_42806355" class="hide"></li>
</ul>

</li><li id="tree_42806555" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806555" class="commentstatus"></div>
<div id="comment_42806555" class="cw">
	<div id="comment_top_42806555" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806555" name="comment_link_42806555" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806555" onclick="return D2.setFocusComment(42806555)" >Re:I get the impression that</a>


		 	<span id="comment_score_42806555" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806555); return false"><span class=opt>Score:</span>5</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~LourensV">LourensV</a>  <span class="uid"><a href="//slashdot.org/~LourensV">(856614)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806555">		
		on Wednesday February 06, 2013 @06:06AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806555">#42806555</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806555"><p>You're probably right, but you're also missing the point. Most scientists are not programmers who specialise in numerical methods and software optimisation. Just getting something that does what they want is hard enough for them, which is why they use high-level languages like Matlab and R. If things are too slow, they learn to rewrite their computations in matrix form, so that they get deferred to the built-in linear algebra function libraries (which are written in C or Fortran), which usually gets them to within an order of magnitude of these low-level languages.</p><p>If that still isn't good enough, they can either 1) choose a smaller data set and limit the scope of their investigations until things fit, 2) buy or rent a (virtual) machine with more CPU and more memory, or 3) hire a programmer to re-implement everything in a low-level language and so that it can run in parallel on a cluster. The third option is rarely chosen, because it's expensive, good programmers are difficult to find, and in the course of research the software will have to be updated often as the research question and hypotheses evolve (scientific programming is like rapid prototyping, not like software engineering), which makes option 3) even more expensive and time-consuming.</p><p>So yes, operational weather forecasts and big well-funded projects that can afford to use it will continue to use Fortran and benefit from faster software. But for run-of-the-mill science, in which the data sets are currently growing rapidly, having a freely available "proper" programming language that is capable of relatively efficiently processing gigabytes of data while being easy enough to learn for an ordinary computer user is a godsend. R and Matlab and clones aren't it, but Python is pretty close, and this new library would be a welcome addition for many people.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806555">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806195" onclick="return D2.selectParent(42806195)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:I get the impression that by LourensV @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806555" data-title="Re:I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:I get the impression that by LourensV" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806555" data-title="Re:I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:I get the impression that by LourensV" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806555" data-title="Re:I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806555" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806555"></div>

<ul id="group_42806555">
	<li id="hiddens_42806555" class="hide"></li>
</ul>

<ul id="commtree_42806555"><li id="tree_42806929" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806929" class="commentstatus"></div>
<div id="comment_42806929" class="cw">
	<div id="comment_top_42806929" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806929" name="comment_link_42806929" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806929" onclick="return D2.setFocusComment(42806929)" >Re:I get the impression that</a>


		 	<span id="comment_score_42806929" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806929); return false"><span class=opt>Score:</span>5</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~nadaou">nadaou</a>  <span class="uid"><a href="//slashdot.org/~nadaou">(535365)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806929">		
		on Wednesday February 06, 2013 @07:41AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806929">#42806929</a>)
		<small><a href="http://slashdot.org/" title="http://slashdot.org/" class="user_homepage_display">Homepage</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806929"><blockquote><div><p>You're probably right, but you're also missing the point. Most scientists are not programmers who specialise in numerical methods and software optimisation.</p></div></blockquote><p>Which is <i>exactly</i> why FORTRAN is an excellent choice for them instead of something else fast (close to assembler) like C/C++, and why so many of the top fluid dynamics models continue to use it. It is simple (perhaps a function of its age) and because of that it is simple to do things like break up the calculation for MPI or tell the compiler to "vectorize this" or "automatically make it multi-threaded" in a way which is still a long from maturity for other languages.</p><p>Can you guess which language MATLAB was originally written in? You know that funny row,column order on indexes? Any ideas on the history of that?</p><p>R is great an all, and is brilliant in its niche, but how's that RAM limitation thing going? It's not a solution for everything.</p><p>MATLAB is pretty good too, as is Octave and SciLab, and it has gotten a whole lot faster recently, but ever try much disk I/O or array resizing for something which couldn't be vectorized? Becomes slow as molasses.</p><blockquote><div><p>If that still isn't good enough, they can either 1) choose a smaller data set and limit the scope of their investigations until things fit,</p></div></blockquote><p>heh. I don't think you know these people.</p><blockquote><div><p>2) buy or rent a (virtual) machine with more CPU and more memory,</p></div></blockquote><p>Many problems are I/O limited and require real machines with high speed low latency network traffic. VMs just don't cut it for many parallelized tasks which need to pass messages quickly.</p><p>Forgive me if I'm wrong, but your post sounds a bit like you think you're pretty good on the old computers, but don't know the first thing about FORTRAN and are feeling a bit defensive about that, and attacking something out of ignorance.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806929">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806555" onclick="return D2.selectParent(42806555)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:I get the impression that by nadaou @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806929" data-title="Re:I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:I get the impression that by nadaou" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806929" data-title="Re:I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:I get the impression that by nadaou" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806929" data-title="Re:I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806929" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806929"></div>

<ul id="group_42806929">
	<li id="hiddens_42806929" class="hide"></li>
</ul>

<ul id="commtree_42806929"><li id="tree_42807641" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42807641" class="commentstatus"></div>
<div id="comment_42807641" class="cw">
	<div id="comment_top_42807641" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807641" name="comment_link_42807641" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807641" onclick="return D2.setFocusComment(42807641)" >Re:</a>


		 	<span id="comment_score_42807641" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807641); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~LourensV">LourensV</a>  <span class="uid"><a href="//slashdot.org/~LourensV">(856614)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807641"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807641"><p>You're not <a href="http://slashdot.org/comments.pl?sid=3437373&amp;cid=42806983" title="slashdot.org">picking on me<span class="substr"> </span></a> [slashdot.org], you're arguing your point. That's what this thing here is for, so no hard feelings at all.</p><p>I'll readily admit to not knowing Fortran (or much Python!<nobr> <wbr></nobr>;-)); I'm a C++ guy myself, having got there through GW-Basic, Turbo Pascal and C. I now teach an introductory programming course using Matlab (and know of its history as an easy-to-use Fortran-alike), and I use R because it's what's commonly used in my field of computational ecology. I greatly dislike R, and I'm not too hot on Matlab</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42807641">

</div>
</div>

<div id="replyto_42807641"></div>

<ul id="group_42807641">
	<li id="hiddens_42807641" class="hide"></li>
</ul>

</li><li id="tree_42811253" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42811253" class="commentstatus"></div>
<div id="comment_42811253" class="cw">
	<div id="comment_top_42811253" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42811253" name="comment_link_42811253" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42811253" onclick="return D2.setFocusComment(42811253)" >Re:</a>


		 	<span id="comment_score_42811253" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42811253); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~gl4ss">gl4ss</a>  <span class="uid"><a href="//slashdot.org/~gl4ss">(559668)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42811253"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42811253"><p>buying vm's on the same farm is just another way of getting access to real machines on the cheap for limited time. it's just another way of saying of buying time on a supercomputer now.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42811253">

</div>
</div>

<div id="replyto_42811253"></div>

<ul id="group_42811253">
	<li id="hiddens_42811253" class="hide"></li>
</ul>

</li><li id="tree_42842667" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42842667" class="commentstatus"></div>
<div id="comment_42842667" class="cw">
	<div id="comment_top_42842667" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42842667" name="comment_link_42842667" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42842667" onclick="return D2.setFocusComment(42842667)" >Re:</a>


		 	<span id="comment_score_42842667" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42842667); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Spacelem">Spacelem</a>  <span class="uid"><a href="//slashdot.org/~Spacelem">(189863)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42842667"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42842667"><p>That funny row/column order in matrix indices (aka column major order) is because it's the correct mathematical order.</p><p>Consider that you can only multiply two matrices if matrix A is of size [i,j], and matrix B is of size [j,k], i.e. the number of rows in A must be equal to the number of columns in B. The product C=AB is then of size [i,k]. This works for any number of matrices, so, [i,j]*[j,k]*[k,l]*[l,m] is valid, and gives [i,m].</p><p>This naturally leads to the indexing you see in Fortran and Matlab, because i<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42842667">

</div>
</div>

<div id="replyto_42842667"></div>

<ul id="group_42842667">
	<li id="hiddens_42842667" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806983" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806983" class="commentstatus"></div>
<div id="comment_42806983" class="cw">
	<div id="comment_top_42806983" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806983" name="comment_link_42806983" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806983" onclick="return D2.setFocusComment(42806983)" >Re:</a>


		 	<span id="comment_score_42806983" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806983); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~nadaou">nadaou</a>  <span class="uid"><a href="//slashdot.org/~nadaou">(535365)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806983"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806983"><blockquote><div><p>So yes, operational weather forecasts and big well-funded projects that can afford to use it will continue to use Fortran and benefit from faster software.</p></div></blockquote><p>I don't mean for this to be pick on LourensV day, but I have another small nit to pick. You're presuming operational weather forecasting is well funded? I don't think funding has anything to do with it. Often it's what the original author knew which chose the language.<br>And have you seen what's been done to NOAA's budget over they last decade?? Well funded.<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806983">

</div>
</div>

<div id="replyto_42806983"></div>

<ul id="group_42806983">
	<li id="hiddens_42806983" class="hide"></li>
</ul>

<ul id="commtree_42806983"><li id="tree_42807381" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42807381" class="commentstatus"></div>
<div id="comment_42807381" class="cw">
	<div id="comment_top_42807381" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807381" name="comment_link_42807381" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807381" onclick="return D2.setFocusComment(42807381)" >Re:</a>


		 	<span id="comment_score_42807381" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807381); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~csirac">csirac</a>  <span class="uid"><a href="//slashdot.org/~csirac">(574795)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807381"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807381"><p>Perhaps he means it's well funded in the sense that they have dedicated programmers <em>at all</em>. "Run of the mill" science is done by investigating scientists or their jack-of-all-trades research assistants, collaborators or grads/post-docs, etc. most of which are unlikely to have substanital software engineering experience or training in their background.</p><p>Nonetheless, they write code - very useful, productive code - but it's in whatever tool or high-level language popular among their peers/discipline (matlab, R,<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42807381">

</div>
</div>

<div id="replyto_42807381"></div>

<ul id="group_42807381">
	<li id="hiddens_42807381" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42808601" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42808601" class="commentstatus"></div>
<div id="comment_42808601" class="cw">
	<div id="comment_top_42808601" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42808601" name="comment_link_42808601" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42808601" onclick="return D2.setFocusComment(42808601)" >Re:</a>


		 	<span id="comment_score_42808601" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42808601); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~tyrione">tyrione</a>  <span class="uid"><a href="//slashdot.org/~tyrione">(134248)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42808601"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42808601"><p>You lost me at ``Most scientists are not programmers...'' schtick. Whether it was my Mechanical Engineering professors fluent in ADA, C, Fortran, C++ or Pascal or my EE professors in the same, to my Mathematics Professors all in the same, not a single CS Professor could hold a candle to them, unless we started dicking around with LISP, SmallTalk or VisualBasic for shits and giggles. In fact, they became proficient in these languages because they had to write custom software to model nonlinear-dynamic system<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42808601">

</div>
</div>

<div id="replyto_42808601"></div>

<ul id="group_42808601">
	<li id="hiddens_42808601" class="hide"></li>
</ul>

</li><li id="tree_42809581" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809581" class="commentstatus"></div>
<div id="comment_42809581" class="cw">
	<div id="comment_top_42809581" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809581" name="comment_link_42809581" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809581" onclick="return D2.setFocusComment(42809581)" >Re:</a>


		 	<span id="comment_score_42809581" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809581); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809581"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809581">I disagree partially with what you said based on personal experience. As an EE student I had to learn to use Fortran for my thesis. I needed to run a large EM simulation and not a single affordable commercial program was able to run on a small cluster of computers that was available. So I resorted to using Fortran and MATLAB for visualisation. So I managed to learn basic Fortran over the weekend and then use it to write a working program for a cluster, all within 1 week time. I just don't think I could have</div>
	</div>

	<div class="commentSub" id="comment_sub_42809581">

</div>
</div>

<div id="replyto_42809581"></div>

<ul id="group_42809581">
	<li id="hiddens_42809581" class="hide"></li>
</ul>

<ul id="commtree_42809581"><li id="tree_42812181" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42812181" class="commentstatus"></div>
<div id="comment_42812181" class="cw">
	<div id="comment_top_42812181" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42812181" name="comment_link_42812181" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42812181" onclick="return D2.setFocusComment(42812181)" >Re:</a>


		 	<span id="comment_score_42812181" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42812181); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~steveha">steveha</a>  <span class="uid"><a href="//slashdot.org/~steveha">(103154)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42812181"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42812181"><p><span class="substr"> </span> <i>I resorted to using Fortran and MATLAB for visualisation. So I managed to learn basic Fortran over the weekend and then use it to write a working program for a cluster, all within 1 week time. I just don't think I could have done that with Python.</i> </p><p>Python with SciPy is a lot like MATLAB.  Python, the language, is far superior to MATLAB's language; I hate 1-based array indexing, for example.  MATLAB's language does have a few special features for matrices that Python lacks, but that is just syntactic sugar (th</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42812181">

</div>
</div>

<div id="replyto_42812181"></div>

<ul id="group_42812181">
	<li id="hiddens_42812181" class="hide"></li>
</ul>

<ul id="commtree_42812181"><li id="tree_42814371" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42814371" class="commentstatus"></div>
<div id="comment_42814371" class="cw">
	<div id="comment_top_42814371" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42814371" name="comment_link_42814371" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42814371" onclick="return D2.setFocusComment(42814371)" >Re:</a>


		 	<span id="comment_score_42814371" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42814371); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Spacelem">Spacelem</a>  <span class="uid"><a href="//slashdot.org/~Spacelem">(189863)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42814371"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42814371"><p>Sadly, with the exception of a few times where I get to sum an array, pretty much my whole model needs to be run in a fast language like C or Fortran (I use C, my supervisor uses F77). It's the kind of model (a spatial stochastic disease simulation) that doesn't really lend itself to coding up in Python. No matrices, just lots of little bits of data interrogation, calculating one event at a time, and so many loops (unavoidable) that it would just crawl in Python. If you try to start in Python and replace th<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42814371">

</div>
</div>

<div id="replyto_42814371"></div>

<ul id="group_42814371">
	<li id="hiddens_42814371" class="hide"></li>
</ul>

<ul id="commtree_42814371"><li id="tree_42815181" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42815181" class="commentstatus"></div>
<div id="comment_42815181" class="cw">
</div>

<div id="replyto_42815181"></div>

<ul id="group_42815181">
	<li id="hiddens_42815181" class="hide"></li>
</ul>

<ul id="commtree_42815181"><li id="tree_42819253" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42819253" class="commentstatus"></div>
<div id="comment_42819253" class="cw">
	<div id="comment_top_42819253" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42819253" name="comment_link_42819253" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42819253" onclick="return D2.setFocusComment(42819253)" >Re:</a>


		 	<span id="comment_score_42819253" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42819253); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Spacelem">Spacelem</a>  <span class="uid"><a href="//slashdot.org/~Spacelem">(189863)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42819253"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42819253"><p>Thanks for the link. My problem is that there isn't any one bit you can point to and say "that's the slow bit" (unless it's telling the code which parameters to use, varying the parameters, and then graphing the results when done -- I'm currently doing those parts with bash and Octave, and to be fair I would probably be better off doing both of those in Python).</p><p>The main work is the simulation, and it's where I've got a trivially small amount of data (say a 20x20 lattice of sites containing the number of sus<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42819253">

</div>
</div>

<div id="replyto_42819253"></div>

<ul id="group_42819253">
	<li id="hiddens_42819253" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42815519" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42815519" class="commentstatus"></div>
<div id="comment_42815519" class="cw">
	<div id="comment_top_42815519" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42815519" name="comment_link_42815519" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42815519" onclick="return D2.setFocusComment(42815519)" >Re:</a>


		 	<span id="comment_score_42815519" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42815519); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~butalearner">butalearner</a>  <span class="uid"><a href="//slashdot.org/~butalearner">(1235200)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42815519"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42815519"><p><div class="quote"><p>Python with SciPy is a lot like MATLAB.  Python, the language, is far superior to MATLAB's language; I hate 1-based array indexing, for example.  MATLAB's language does have a few special features for matrices that Python lacks, but that is just syntactic sugar (there are functions to do everything in Python).</p></div><p>Even as a MATLAB user I agree, as long as we're strictly talking about the language.  Many of GNU Octave's woes (though they're getting JIT now!) can be blamed on the poor language design.</p><p>But there are many things that SciPy doesn't have.  Yes, MATLAB is an unnecessarily expensive choice for data analysis, but my employer only uses it for that (not "big data," mind you) because it's already our design tool, so it's an ideal rapid prototyping environment.  That's where it really shines: Simulink and code gen<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42815519">

</div>
</div>

<div id="replyto_42815519"></div>

<ul id="group_42815519">
	<li id="hiddens_42815519" class="hide"></li>
</ul>

</li><li id="tree_42816077" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42816077" class="commentstatus"></div>
<div id="comment_42816077" class="cw">
	<div id="comment_top_42816077" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42816077" name="comment_link_42816077" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42816077" onclick="return D2.setFocusComment(42816077)" >Re:</a>


		 	<span id="comment_score_42816077" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42816077); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42816077"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42816077">I doubt SciPy would have been as easily to expand for running on a cluster. These sort of things come of as natural to Fortran. Additionally if I write my code in Fortran the compiler can optimize it a lot further than Python will allow me to. Hence the speed advantage is still in Fortran's hands which is important if you don't have access to the latest hardware and time on large clusters.</div>
	</div>

	<div class="commentSub" id="comment_sub_42816077">

</div>
</div>

<div id="replyto_42816077"></div>

<ul id="group_42816077">
	<li id="hiddens_42816077" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_42806687" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806687" class="commentstatus"></div>
<div id="comment_42806687" class="cw">
	<div id="comment_top_42806687" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806687" name="comment_link_42806687" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806687" onclick="return D2.setFocusComment(42806687)" >Re:</a>


		 	<span id="comment_score_42806687" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806687); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Terrasque">Terrasque</a>  <span class="uid"><a href="//slashdot.org/~Terrasque">(796014)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806687"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806687"><p><a href="http://pypy.org/" title="pypy.org">PyPy</a> [pypy.org] might change that in the future, especially with the <a href="http://pypy.org/tmdonate.html" title="pypy.org">Transitional Memory</a> [pypy.org] branch.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806687">

</div>
</div>

<div id="replyto_42806687"></div>

<ul id="group_42806687">
	<li id="hiddens_42806687" class="hide"></li>
</ul>

<ul id="commtree_42806687"><li id="tree_42809833" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809833" class="commentstatus"></div>
<div id="comment_42809833" class="cw">
	<div id="comment_top_42809833" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809833" name="comment_link_42809833" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809833" onclick="return D2.setFocusComment(42809833)" >Re:</a>


		 	<span id="comment_score_42809833" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809833); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~K.+S.+Kyosuke">K. S. Kyosuke</a>  <span class="uid"><a href="//slashdot.org/~K.+S.+Kyosuke">(729550)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809833"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809833">Wouldn't it be simply better for people to learn Haskell?</div>
	</div>

	<div class="commentSub" id="comment_sub_42809833">

</div>
</div>

<div id="replyto_42809833"></div>

<ul id="group_42809833">
	<li id="hiddens_42809833" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42808967" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42808967" class="commentstatus"></div>
<div id="comment_42808967" class="cw">
	<div id="comment_top_42808967" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42808967" name="comment_link_42808967" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42808967" onclick="return D2.setFocusComment(42808967)" >Re:</a>


		 	<span id="comment_score_42808967" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42808967); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Dcnjoe60">Dcnjoe60</a>  <span class="uid"><a href="//slashdot.org/~Dcnjoe60">(682885)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42808967"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42808967"><p><div class="quote"><p>You're dead wrong, nothing quite beats Fortran in speed when it comes to number crunching. If you need to go through hundreds of gigabytes of data and performance is important there's only one realistic choice: Fortran. Python isn't fit to run on a large cluster to simulate things, too much overhead. And lets not forget what sort of efficiency you can get if you use a good compiler (Intel Composer). You won't find  Fortran on the way out over here, it's here to stay!</p></div><p>Isn't that the point of DARPA funding this project - to make it so Python is fit to run on a large cluster to simulate things?  I do agree, though, that Fortran is here to stay. However, it is so specialized in what it does and that often a solution then requires multiple languages to get the task accomplished.</p><p>Back in the day (1970s) I had a professor who would say that you can write anything in anything. For instance you could write a business app in Fortran and you can use COBOL for plotting trajectories<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42808967">

</div>
</div>

<div id="replyto_42808967"></div>

<ul id="group_42808967">
	<li id="hiddens_42808967" class="hide"></li>
</ul>

<ul id="commtree_42808967"><li id="tree_42809779" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809779" class="commentstatus"></div>
<div id="comment_42809779" class="cw">
	<div id="comment_top_42809779" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809779" name="comment_link_42809779" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809779" onclick="return D2.setFocusComment(42809779)" >Re:</a>


		 	<span id="comment_score_42809779" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809779); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809779"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809779">Sure you can, any language that has a full feature set can do any task that the system is capable off. But efficiency is also important, and Fortran simply has so much advantages over Python. Complex data structures aren't needed for most simulations while they make optimisation so much harder. Additionally interpretation is a serious bottleneck.</div>
	</div>

	<div class="commentSub" id="comment_sub_42809779">

</div>
</div>

<div id="replyto_42809779"></div>

<ul id="group_42809779">
	<li id="hiddens_42809779" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806235" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806235" class="commentstatus"></div>
<div id="comment_42806235" class="cw">
</div>

<div id="replyto_42806235"></div>

<ul id="group_42806235">
	<li id="hiddens_42806235" class="hide"></li>
</ul>

<ul id="commtree_42806235"><li id="tree_42809463" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809463" class="commentstatus"></div>
<div id="comment_42809463" class="cw">
	<div id="comment_top_42809463" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809463" name="comment_link_42809463" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809463" onclick="return D2.setFocusComment(42809463)" >Re:</a>


		 	<span id="comment_score_42809463" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809463); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809463"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809463">Yes, but Python is still an interpreted language and very slow compared to Fortran.</div>
	</div>

	<div class="commentSub" id="comment_sub_42809463">

</div>
</div>

<div id="replyto_42809463"></div>

<ul id="group_42809463">
	<li id="hiddens_42809463" class="hide"></li>
</ul>

<ul id="commtree_42809463"><li id="tree_42810781" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42810781" class="commentstatus"></div>
<div id="comment_42810781" class="cw">
	<div id="comment_top_42810781" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42810781" name="comment_link_42810781" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42810781" onclick="return D2.setFocusComment(42810781)" >Re:</a>


		 	<span id="comment_score_42810781" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42810781); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~pthisis">pthisis</a>  <span class="uid"><a href="//slashdot.org/~pthisis">(27352)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42810781"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42810781"><p>The core processing in SciPy/NumPy is done in compiled C or Fortran libraries (LAPACK is used extensively where available), not in Python.</p><p>I'm unaware of a widely-used interpreted version of Python.  Whether Python is byte-compiled (CPython), JIT'd (psyco, pypy, IronPython, many Jython stacks), or compiled ahead of time to machine code (Jython+gcj, ShedSkin) depends on which Python implementation you're talking about.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42810781">

</div>
</div>

<div id="replyto_42810781"></div>

<ul id="group_42810781">
	<li id="hiddens_42810781" class="hide"></li>
</ul>

<ul id="commtree_42810781"><li id="tree_42816119" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42816119" class="commentstatus"></div>
<div id="comment_42816119" class="cw">
	<div id="comment_top_42816119" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42816119" name="comment_link_42816119" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42816119" onclick="return D2.setFocusComment(42816119)" >Re:</a>


		 	<span id="comment_score_42816119" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42816119); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42816119"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42816119">Most of those are still interpreted. It's not because it's a bytecode that it's not interpreted. In fact even your CPU interprets complex instructions and executes them using a set of simple instructions in a lot of cases (yay for RISC/CISC hybrids). A pre-compiled generalised library will never reach the performance of real Fortran code. People often forget that a lot of Fortran's performance comes from the way it deals with memory, pre-compiled libraries can't do that. Not to mention what a few decades of</div>
	</div>

	<div class="commentSub" id="comment_sub_42816119">

</div>
</div>

<div id="replyto_42816119"></div>

<ul id="group_42816119">
	<li id="hiddens_42816119" class="hide"></li>
</ul>

<ul id="commtree_42816119"><li id="tree_42817125" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42817125" class="commentstatus"></div>
<div id="comment_42817125" class="cw">
	<div id="comment_top_42817125" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42817125" name="comment_link_42817125" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42817125" onclick="return D2.setFocusComment(42817125)" >Re:</a>


		 	<span id="comment_score_42817125" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42817125); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~pthisis">pthisis</a>  <span class="uid"><a href="//slashdot.org/~pthisis">(27352)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42817125"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42817125"><p><span class="substr"> </span> <i>Most of those are still interpreted. It's not because it's a bytecode that it's not interpreted. In fact even your CPU interprets complex instructions and executes them using a set of simple instructions in a lot of cases (yay for RISC/CISC hybrids). </i> </p><p>Okay, then Fortran's an interpreted language too.  What was the point of your original post, then?</p><p>Moving the goalposts like this in the middle of a conversation is pointless--sure, there's a semi-rational definition under which x86 assembler is an interpreted l</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42817125">

</div>
</div>

<div id="replyto_42817125"></div>

<ul id="group_42817125">
	<li id="hiddens_42817125" class="hide"></li>
</ul>

<ul id="commtree_42817125"><li id="tree_42818259" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42818259" class="commentstatus"></div>
<div id="comment_42818259" class="cw">
	<div id="comment_top_42818259" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42818259" name="comment_link_42818259" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42818259" onclick="return D2.setFocusComment(42818259)" >Re:</a>


		 	<span id="comment_score_42818259" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42818259); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42818259"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42818259">Fortran is compiled directly to machine code in most cases. The Fortran VMs and interpreters aren't used all that often as far as I'm aware. At least I haven't seen any of them used in production environments. Lets take a good example: Intel Composer actively seems to avoid microcode based instructions and goes for fast hardware implemented ones and uses all features of the hardware. Pretty interesting to see at times how much a good compiler can make a difference. Trying to achieve the same with compiled p</div>
	</div>

	<div class="commentSub" id="comment_sub_42818259">

</div>
</div>

<div id="replyto_42818259"></div>

<ul id="group_42818259">
	<li id="hiddens_42818259" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_42811099" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42811099" class="commentstatus"></div>
<div id="comment_42811099" class="cw">
	<div id="comment_top_42811099" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42811099" name="comment_link_42811099" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42811099" onclick="return D2.setFocusComment(42811099)" >Re:</a>


		 	<span id="comment_score_42811099" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42811099); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~SolitaryMan">SolitaryMan</a>  <span class="uid"><a href="//slashdot.org/~SolitaryMan">(538416)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42811099"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42811099"><p><div class="quote"><p>Yes, but Python is still an <b>interpreted</b> language and very slow compared to Fortran.</p></div><p>Nope, it's not. Never was.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42811099">

</div>
</div>

<div id="replyto_42811099"></div>

<ul id="group_42811099">
	<li id="hiddens_42811099" class="hide"></li>
</ul>

<ul id="commtree_42811099"><li id="tree_42816165" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42816165" class="commentstatus"></div>
<div id="comment_42816165" class="cw">
	<div id="comment_top_42816165" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42816165" name="comment_link_42816165" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42816165" onclick="return D2.setFocusComment(42816165)" >Re:</a>


		 	<span id="comment_score_42816165" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42816165); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42816165"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42816165">Sorry, but you're wrong: it is. Or did you forget where the PYC files come from? You might want to read the official Python documentation on this one <a href="http://docs.python.org/3/glossary.html" title="python.org">http://docs.python.org/3/glossary.html</a> [python.org] . Go to "interpreted" in case you're too lazy to find it yourself. And by the definition we use over at the electronics department Python is an interpreted language no matter what you wish to claim.</div>
	</div>

	<div class="commentSub" id="comment_sub_42816165">

</div>
</div>

<div id="replyto_42816165"></div>

<ul id="group_42816165">
	<li id="hiddens_42816165" class="hide"></li>
</ul>

<ul id="commtree_42816165"><li id="tree_42817155" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42817155" class="commentstatus"></div>
<div id="comment_42817155" class="cw">
	<div id="comment_top_42817155" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42817155" name="comment_link_42817155" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42817155" onclick="return D2.setFocusComment(42817155)" >Re:</a>


		 	<span id="comment_score_42817155" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42817155); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~pthisis">pthisis</a>  <span class="uid"><a href="//slashdot.org/~pthisis">(27352)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42817155"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42817155"><p><span class="substr"> </span> <i>Sorry, but you're wrong: it is. Or did you forget where the PYC files come from? You might want to read the official Python documentation on this one <a href="http://docs.python.org/3/glossary.html" title="python.org">http://docs.python.org/3/glossary.html</a> [python.org] [python.org] . Go to "interpreted" in case you're too lazy to find it yourself. And by the definition we use over at the electronics department Python is an interpreted language no matter what you wish to claim.</i> </p><p>You're conflating implementations with languages.</p><p>Not every Python implementation even has<nobr> <wbr></nobr>.pyc files.  When I co</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42817155">

</div>
</div>

<div id="replyto_42817155"></div>

<ul id="group_42817155">
	<li id="hiddens_42817155" class="hide"></li>
</ul>

<ul id="commtree_42817155"><li id="tree_42818217" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42818217" class="commentstatus"></div>
<div id="comment_42818217" class="cw">
	<div id="comment_top_42818217" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42818217" name="comment_link_42818217" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42818217" onclick="return D2.setFocusComment(42818217)" >Re:</a>


		 	<span id="comment_score_42818217" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42818217); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42818217"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42818217">First of all, if you keep pulling different implementations out of your hat you can try to prove anything. And C and Fortran interpreters, lets just not go there before this turns into a complete comedy. You butcher both languages simply by doing that. On the other hand, Python wasn't designed to be compiled like that and is inefficient at it. So yes, our definition still holds. Compiling such a language will never lead to an optimal implementation in size, memory usage or performance. If you take the path</div>
	</div>

	<div class="commentSub" id="comment_sub_42818217">

</div>
</div>

<div id="replyto_42818217"></div>

<ul id="group_42818217">
	<li id="hiddens_42818217" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li></ul></li></ul></li><li id="tree_42806745" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806745" class="commentstatus"></div>
<div id="comment_42806745" class="cw">
</div>

<div id="replyto_42806745"></div>

<ul id="group_42806745">
	<li id="hiddens_42806745" class="hide"></li>
</ul>

<ul id="commtree_42806745"><li id="tree_42809667" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809667" class="commentstatus"></div>
<div id="comment_42809667" class="cw">
	<div id="comment_top_42809667" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809667" name="comment_link_42809667" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809667" onclick="return D2.setFocusComment(42809667)" >Re:</a>


		 	<span id="comment_score_42809667" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809667); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809667"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809667">Nah, Fortran was designed with number crunching for scientific and engineering applications in mind. It won't choke, it won't stop. Fortran compilers are far smarter than Python when dealing with memory. The language was designed to allow the compiler to make assumptions to speed up computation and make for efficient memory management. But I'll agree that you shouldn't write the entire application in Fortran. For visualisation other languages are better suited (MATLAB/Octave comes to mind). You can have a p</div>
	</div>

	<div class="commentSub" id="comment_sub_42809667">

</div>
</div>

<div id="replyto_42809667"></div>

<ul id="group_42809667">
	<li id="hiddens_42809667" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42808585" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42808585" class="commentstatus"></div>
<div id="comment_42808585" class="cw">
</div>

<div id="replyto_42808585"></div>

<ul id="group_42808585">
	<li id="hiddens_42808585" class="hide"></li>
</ul>

<ul id="commtree_42808585"><li id="tree_42809755" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809755" class="commentstatus"></div>
<div id="comment_42809755" class="cw">
	<div id="comment_top_42809755" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809755" name="comment_link_42809755" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809755" onclick="return D2.setFocusComment(42809755)" >Re:</a>


		 	<span id="comment_score_42809755" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809755); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~solidraven">solidraven</a>  <span class="uid"><a href="//slashdot.org/~solidraven">(1633185)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809755"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809755">You're comparing two very different tasks. A game and a large simulation are very different things. Lets compare two extremes: EVE online and the FDTD algorithm (EM field solver). EVE Online has a lot of conditionals. It's very unpredictable in memory usage. But the FDTD algorithm has very different properties. It needs a lot of data, but there are no conditional expressions. Additionally what's needed from the memory is known long before it's ever needed. It just goes over the data every pass without analy</div>
	</div>

	<div class="commentSub" id="comment_sub_42809755">

</div>
</div>

<div id="replyto_42809755"></div>

<ul id="group_42809755">
	<li id="hiddens_42809755" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806229" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806229" class="commentstatus"></div>
<div id="comment_42806229" class="cw">
</div>

<div id="replyto_42806229"></div>

<ul id="group_42806229">
	<li id="hiddens_42806229" class="hide"></li>
</ul>

<ul id="commtree_42806229"><li id="tree_42810587" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42810587" class="commentstatus"></div>
<div id="comment_42810587" class="cw">
	<div id="comment_top_42810587" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42810587" name="comment_link_42810587" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42810587" onclick="return D2.setFocusComment(42810587)" >good lord no.</a>


		 	<span id="comment_score_42810587" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42810587); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~luis_a_espinal">luis_a_espinal</a>  <span class="uid"><a href="//slashdot.org/~luis_a_espinal">(1810296)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42810587"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42810587"><p><div class="quote"><p>Well.. there's C, of course...</p></div><p>I work with C and C++ on a daily basis, and I have to ask/answer: For parallelized scientific computation or data crunching? No thank you. You don't use a phillips screw driver to unscrew a hexagonal bolt, do you? Know your tools, their strenghts and limitations.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42810587">

</div>
</div>

<div id="replyto_42810587"></div>

<ul id="group_42810587">
	<li id="hiddens_42810587" class="hide"></li>
</ul>

<ul id="commtree_42810587"><li id="tree_42811223" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42811223" class="commentstatus"></div>
<div id="comment_42811223" class="cw">
	<div id="comment_top_42811223" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42811223" name="comment_link_42811223" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42811223" onclick="return D2.setFocusComment(42811223)" >Re:</a>


		 	<span id="comment_score_42811223" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42811223); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~nr">nr</a>  <span class="uid"><a href="//slashdot.org/~nr">(27070)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42811223"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42811223"><p>I disagree, Fortran and C is very good for parallel scientific computations. If you are doing computations you care about speed, and the closer you are to the iron (and the os) the faster it runs and more work you can do in a time unit. You have nice tools like OpenMP, UPC, Cilk and MPI, etc. Posix SHM is the best for local IPC/RPC.</p><p>Python may be a nice lang to work with, but it is a slow dog.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42811223">

</div>
</div>

<div id="replyto_42811223"></div>

<ul id="group_42811223">
	<li id="hiddens_42811223" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_42806867" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806867" class="commentstatus"></div>
<div id="comment_42806867" class="cw">
	<div id="comment_top_42806867" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806867" name="comment_link_42806867" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806867" onclick="return D2.setFocusComment(42806867)" >Re:</a>


		 	<span id="comment_score_42806867" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806867); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~SpzToid">SpzToid</a>  <span class="uid"><a href="//slashdot.org/~SpzToid">(869795)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806867"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806867"><p>No one seems to be pining away for Fortran programmers. At least not much ayways. A quick 'n dirty search on Dice.com yields 46 results, (and no doubt a few are doubles).</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806867">

</div>
</div>

<div id="replyto_42806867"></div>

<ul id="group_42806867">
	<li id="hiddens_42806867" class="hide"></li>
</ul>

</li><li id="tree_42806125" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806125" class="commentstatus"></div>
<div id="comment_42806125" class="cw">
</div>

<div id="replyto_42806125"></div>

<ul id="group_42806125">
	<li id="hiddens_42806125" class="hide"></li>
</ul>

<ul id="commtree_42806125"><li id="tree_42806163" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806163" class="commentstatus"></div>
<div id="comment_42806163" class="cw">
</div>

<div id="replyto_42806163"></div>

<ul id="group_42806163">
	<li id="hiddens_42806163" class="hide"></li>
</ul>

<ul id="commtree_42806163"><li id="tree_42806345" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806345" class="commentstatus"></div>
<div id="comment_42806345" class="cw">
	<div id="comment_top_42806345" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806345" name="comment_link_42806345" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806345" onclick="return D2.setFocusComment(42806345)" >Re:</a>


		 	<span id="comment_score_42806345" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806345); return false"><span class=opt>Score:</span>2</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806345"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806345"><p>I guess the problem is that people who speak about Fortran actually think about FORTRAN. The last FORTRAN standard was from 1977, and that shows. After that, there had been no new standard and little new development until the Fortran 90 standard (note the different capitalization). Fortran 90 got rid of the old punch card based restrictions by giving it completely new, much more reasonable code parsing rules (it still accepts old form code for backwards compatibility, but you cannot mix both forms in one fi<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806345">

</div>
</div>

<div id="replyto_42806345"></div>

<ul id="group_42806345">
	<li id="hiddens_42806345" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42806667" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806667" class="commentstatus"></div>
<div id="comment_42806667" class="cw">
</div>

<div id="replyto_42806667"></div>

<ul id="group_42806667">
	<li id="hiddens_42806667" class="hide"></li>
</ul>

<ul id="commtree_42806667"><li id="tree_42806799" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806799" class="commentstatus"></div>
<div id="comment_42806799" class="cw">
	<div id="comment_top_42806799" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806799" name="comment_link_42806799" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806799" onclick="return D2.setFocusComment(42806799)" >Re:I get the impression that</a>


		 	<span id="comment_score_42806799" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806799); return false"><span class=opt>Score:</span>4</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Chrisq">Chrisq</a>  <span class="uid"><a href="//slashdot.org/~Chrisq">(894406)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806799">		
		on Wednesday February 06, 2013 @07:09AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806799">#42806799</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806799"><p><div class="quote"><p>The entire point of Fortran is that it has difficult-to-deal-with aliasing rules that make the compiler more free to produce optimized code. That's why it is suitable for things that require every last bit of performance you can wring out of it. Today probably you can get the same thing with C or C++ provided you are prepared to use things like restrict, but it used to be you couldn't, so Fortran ruled certain topics.</p><p>Python is an easy-to-use system with abysmal performance - expect 10-100x slowdown for code that runs in pure Python over a similar C version. If you can get things set up so Python is only gluing other C components together and the data never has to touch native Python data structures or loops, then performance will be fine, but now you aren't really coding in Python any more.</p><p>The point is, the purpose of Fortran and the purpose of Python are entirely opposed. They are exactly the opposite of each other. So it boggles the mind how you can think that Python can be Fortran "done right". So much so that now I suspect I got trolled. Well done, sir.</p></div><p>Yes I understand, and many people made the same point. However Fortran was for a lot of scientists and engineers the hammer to crack any nut. It was used for simple "try outs" where performance wasn't needed, simply because it was the language that Engineers knew. I think the same thing is happening with Python now, it is the first and sometimes only language that many engineers know. Now for the performance issue, it will not give the best performance but packages like SciPy and NumPy do give very good performance (arguably by using these libraries you are just using python to string c functions together, but it is properly integrated). Tests show that you are <a href="https://modelingguru.nasa.gov/docs/DOC-1762" title="nasa.gov">getting about a third of the performance of Fortran</a> [nasa.gov], (with the exception of the Fortran DGEMM marix multiply which greatly outperforms Python and other Fortran variants). The typical engineering reaction to performance needs is to throw hardware at the problem, then optimise your algorithm, and only change language if absolutely necessary!</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806799">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806667" onclick="return D2.selectParent(42806667)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:I get the impression that by Chrisq @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806799" data-title="Re:I get the impression that">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:I get the impression that by Chrisq" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806799" data-title="Re:I get the impression that">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:I get the impression that by Chrisq" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806799" data-title="Re:I get the impression that">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806799" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806799"></div>

<ul id="group_42806799">
	<li id="hiddens_42806799" class="hide"></li>
</ul>

</li><li id="tree_42807277" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42807277" class="commentstatus"></div>
<div id="comment_42807277" class="cw">
	<div id="comment_top_42807277" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807277" name="comment_link_42807277" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807277" onclick="return D2.setFocusComment(42807277)" >Re:</a>


		 	<span id="comment_score_42807277" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807277); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~pjabardo">pjabardo</a>  <span class="uid"><a href="//slashdot.org/~pjabardo">(977600)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807277"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807277">You are actually right but you are missing the point. Python doesn't compete with Fortran, it supplements it. With tools such as f2py, it is very easy to call fortran code from python (and there are tools that make it easy to call C/C++). This combination really potentializes both languages: bottlenecks use Fortran/C/C++ and the rest python. This combination is already popular: numpy/scipy is basically that.
<br> <br>
I don't think that being easy is python's main advantage. Using a dynamic environment were you can</div>
	</div>

	<div class="commentSub" id="comment_sub_42807277">

</div>
</div>

<div id="replyto_42807277"></div>

<ul id="group_42807277">
	<li id="hiddens_42807277" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42806065" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806065" class="commentstatus"></div>
<div id="comment_42806065" class="cw">
	<div id="comment_top_42806065" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806065" name="comment_link_42806065" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806065" onclick="return D2.setFocusComment(42806065)" >Matlab</a>


		 	<span id="comment_score_42806065" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806065); return false"><span class=opt>Score:</span>1</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806065"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806065"><p>Bye-bye Matlab. I liked your plotting capabilities, but that was about it.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806065">

</div>
</div>

<div id="replyto_42806065"></div>

<ul id="group_42806065">
	<li id="hiddens_42806065" class="hide"></li>
</ul>

<ul id="commtree_42806065"><li id="tree_42806637" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806637" class="commentstatus"></div>
<div id="comment_42806637" class="cw">
	<div id="comment_top_42806637" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806637" name="comment_link_42806637" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806637" onclick="return D2.setFocusComment(42806637)" >Re:</a>


		 	<span id="comment_score_42806637" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806637); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~sophanes">sophanes</a>  <span class="uid"><a href="//slashdot.org/~sophanes">(837600)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806637"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806637"><p>matplotlib already does this in conjunction with Numpy and Scipy - its plotting quality and flexibility compares favourably to Matlab.</p><p>Its biggest drawback is that it is pretty glacial even by Matlab's standards when rendering large datasets (think millions of points). I'm not sure whether matplotlib or the interactive backend is at fault, but anything DARPA can do to improve the situation would be welcome.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806637">

</div>
</div>

<div id="replyto_42806637"></div>

<ul id="group_42806637">
	<li id="hiddens_42806637" class="hide"></li>
</ul>

</li><li id="tree_42807267" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42807267" class="commentstatus"></div>
<div id="comment_42807267" class="cw">
	<div id="comment_top_42807267" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807267" name="comment_link_42807267" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807267" onclick="return D2.setFocusComment(42807267)" >Re:</a>


		 	<span id="comment_score_42807267" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807267); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~0100010001010011">0100010001010011</a>  <span class="uid"><a href="//slashdot.org/~0100010001010011">(652467)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807267"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807267"><p>Still nothing for Simulink.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42807267">

</div>
</div>

<div id="replyto_42807267"></div>

<ul id="group_42807267">
	<li id="hiddens_42807267" class="hide"></li>
</ul>

<ul id="commtree_42807267"><li id="tree_42808605" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42808605" class="commentstatus"></div>
<div id="comment_42808605" class="cw">
</div>

<div id="replyto_42808605"></div>

<ul id="group_42808605">
	<li id="hiddens_42808605" class="hide"></li>
</ul>

<ul id="commtree_42808605"><li id="tree_42809155" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809155" class="commentstatus"></div>
<div id="comment_42809155" class="cw">
	<div id="comment_top_42809155" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809155" name="comment_link_42809155" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809155" onclick="return D2.setFocusComment(42809155)" >Re:</a>


		 	<span id="comment_score_42809155" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809155); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~0100010001010011">0100010001010011</a>  <span class="uid"><a href="//slashdot.org/~0100010001010011">(652467)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809155"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809155"><p>Sage doesn't do anything Simulink does.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42809155">

</div>
</div>

<div id="replyto_42809155"></div>

<ul id="group_42809155">
	<li id="hiddens_42809155" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_42806095" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806095" class="commentstatus"></div>
<div id="comment_42806095" class="cw">
	<div id="comment_top_42806095" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806095" name="comment_link_42806095" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806095" onclick="return D2.setFocusComment(42806095)" >Python 2 or 3?</a>


		 	<span id="comment_score_42806095" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806095); return false"><span class=opt>Score:</span>4</a>, Interesting)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~toQDuj">toQDuj</a>  <span class="uid"><a href="//slashdot.org/~toQDuj">(806112)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806095">		
		on Wednesday February 06, 2013 @03:51AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806095">#42806095</a>)
		<small><a href="http://www.lookingatnothing.com/" title="http://www.lookingatnothing.com/" class="user_homepage_display">Homepage</a>
<a href="//slashdot.org/~toQDuj/journal/" title="Wednesday October 19, 2005 @09:55AM" class="user_journal_display">Journal</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806095"><p>So is this going to focus on Python 2 or 3? Might be a reason to upgrade..</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806095">
	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Python 2 or 3? by toQDuj @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806095" data-title="Python 2 or 3?">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Python 2 or 3? by toQDuj" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806095" data-title="Python 2 or 3?">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Python 2 or 3? by toQDuj" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806095" data-title="Python 2 or 3?">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806095" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806095"></div>

<ul id="group_42806095">
	<li id="hiddens_42806095" class="hide"></li>
</ul>

<ul id="commtree_42806095"><li id="tree_42806279" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806279" class="commentstatus"></div>
<div id="comment_42806279" class="cw">
	<div id="comment_top_42806279" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806279" name="comment_link_42806279" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806279" onclick="return D2.setFocusComment(42806279)" >Re:Python 2 or 3?</a>


		 	<span id="comment_score_42806279" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806279); return false"><span class=opt>Score:</span>5</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~SQL+Error">SQL Error</a>  <span class="uid"><a href="//slashdot.org/~SQL+Error">(16383)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806279">		
		on Wednesday February 06, 2013 @04:53AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806279">#42806279</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806279"><p>Both.  The prebuilt "Anaconda" distro defaults to Python 2.7, but it also works with 3.3 and 2.6.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806279">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806095" onclick="return D2.selectParent(42806095)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:Python 2 or 3? by SQL Error @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806279" data-title="Re:Python 2 or 3?">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:Python 2 or 3? by SQL Error" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806279" data-title="Re:Python 2 or 3?">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:Python 2 or 3? by SQL Error" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806279" data-title="Re:Python 2 or 3?">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806279" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806279"></div>

<ul id="group_42806279">
	<li id="hiddens_42806279" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806135" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806135" class="commentstatus"></div>
<div id="comment_42806135" class="cw">
	<div id="comment_top_42806135" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806135" name="comment_link_42806135" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806135" onclick="return D2.setFocusComment(42806135)" >Wrong language</a>


		 	<span id="comment_score_42806135" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806135); return false"><span class=opt>Score:</span>5</a>, Funny)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Dishwasha">Dishwasha</a>  <span class="uid"><a href="//slashdot.org/~Dishwasha">(125561)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806135">		
		on Wednesday February 06, 2013 @04:03AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806135">#42806135</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806135"><p>The put the money in the wrong place.  They should have put it in to R which very popularly interfaces with Python.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806135">
	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Wrong language by Dishwasha @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806135" data-title="Wrong language">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Wrong language by Dishwasha" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806135" data-title="Wrong language">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Wrong language by Dishwasha" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806135" data-title="Wrong language">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806135" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806135"></div>

<ul id="group_42806135">
	<li id="hiddens_42806135" class="hide"></li>
</ul>

<ul id="commtree_42806135"><li id="tree_42806337" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806337" class="commentstatus"></div>
<div id="comment_42806337" class="cw">
	<div id="comment_top_42806337" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806337" name="comment_link_42806337" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806337" onclick="return D2.setFocusComment(42806337)" >Re:Wrong language</a>


		 	<span id="comment_score_42806337" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806337); return false"><span class=opt>Score:</span>4</a>, Informative)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~SQL+Error">SQL Error</a>  <span class="uid"><a href="//slashdot.org/~SQL+Error">(16383)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806337">		
		on Wednesday February 06, 2013 @05:09AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806337">#42806337</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806337"><p>DARPA runs a lot of these research seed programs, putting a couple of million dollars into a bunch of different but related research projects.  In this case the program budget is $100 million in total, and Continuum got $3 million for their Python work (Numba, Blaze, etc).   Some of the program money may have gone to R as well; there's a couple of dozen research groups, but I don't have a full list.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806337">
<span class="ind"></span><a class="btn link" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;threshold=1&amp;commentsort=0&amp;mode=thread&amp;cid=42806135" onclick="return D2.selectParent(42806135)">Parent</a> 	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Re:Wrong language by SQL Error @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806337" data-title="Re:Wrong language">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Re:Wrong language by SQL Error" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806337" data-title="Re:Wrong language">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Re:Wrong language by SQL Error" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806337" data-title="Re:Wrong language">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806337" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806337"></div>

<ul id="group_42806337">
	<li id="hiddens_42806337" class="hide"></li>
</ul>

</li><li id="tree_42806473" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806473" class="commentstatus"></div>
<div id="comment_42806473" class="cw">
	<div id="comment_top_42806473" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806473" name="comment_link_42806473" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806473" onclick="return D2.setFocusComment(42806473)" >Re:</a>


		 	<span id="comment_score_42806473" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806473); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~csirac">csirac</a>  <span class="uid"><a href="//slashdot.org/~csirac">(574795)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806473"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806473"><p>Wow, I hope not. As much as I am actually a Ruby fan at heart; and as much as I appreciate the R community and everything R has done, it always seems much easier to write slow and/or memory-intensive R code than in Python. Perhaps I never quite spent enough time with it but there are many corners to the language which seem unnecessarily tedious. And no references - variables are all copied around the place, which is expensive. I know, I know... worrying about pass-by-value and efficiency of assignment state<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806473">

</div>
</div>

<div id="replyto_42806473"></div>

<ul id="group_42806473">
	<li id="hiddens_42806473" class="hide"></li>
</ul>

<ul id="commtree_42806473"><li id="tree_42807291" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42807291" class="commentstatus"></div>
<div id="comment_42807291" class="cw">
	<div id="comment_top_42807291" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807291" name="comment_link_42807291" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807291" onclick="return D2.setFocusComment(42807291)" >Re:</a>


		 	<span id="comment_score_42807291" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807291); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~hyfe">hyfe</a>  <span class="uid"><a href="//slashdot.org/~hyfe">(641811)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807291"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807291"><a href="http://en.wikipedia.org/wiki/R_(programming_language)" title="wikipedia.org">http://en.wikipedia.org/wiki/R_(programming_language)<span class="substr"> </span></a> [wikipedia.org] <p>

R is a statistical programming language. It has lots of neat methods and functions implemented, and is rules the world of statistical analysis.. which is kinda cool, since it's also open source. </p><p>

It sits pretty much halfway between Matlab and Python.. It's pretty usuable and convenient because of the huge library, but as a programming language it just, well, sucks ball. Building up the objects some of the methods there need, if you get data from an un</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42807291">

</div>
</div>

<div id="replyto_42807291"></div>

<ul id="group_42807291">
	<li id="hiddens_42807291" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42807445" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42807445" class="commentstatus"></div>
<div id="comment_42807445" class="cw">
	<div id="comment_top_42807445" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807445" name="comment_link_42807445" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807445" onclick="return D2.setFocusComment(42807445)" >Re:</a>


		 	<span id="comment_score_42807445" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807445); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~drinkypoo">drinkypoo</a>  <span class="uid"><a href="//slashdot.org/~drinkypoo">(153816)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807445"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807445"><p>Others have complained about limitations of R in this very thread, so it doesn't seem as cut-and-dried as you make it out to be. Python is the popular language of this particular fifteen-minute period, so it's the logical choice to put the effort into. Scientists would like to benefit from language popularity too.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42807445">

</div>
</div>

<div id="replyto_42807445"></div>

<ul id="group_42807445">
	<li id="hiddens_42807445" class="hide"></li>
</ul>

</li><li id="tree_42806171" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806171" class="commentstatus"></div>
<div id="comment_42806171" class="cw">
</div>

<div id="replyto_42806171"></div>

<ul id="group_42806171">
	<li id="hiddens_42806171" class="hide"></li>
</ul>

<ul id="commtree_42806171"><li id="tree_42806187" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806187" class="commentstatus"></div>
<div id="comment_42806187" class="cw">
	<div id="comment_top_42806187" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806187" name="comment_link_42806187" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806187" onclick="return D2.setFocusComment(42806187)" >Re:</a>


		 	<span id="comment_score_42806187" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806187); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~toQDuj">toQDuj</a>  <span class="uid"><a href="//slashdot.org/~toQDuj">(806112)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806187"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806187"><p>Perhaps. After all, it is in the nature of companies to ask as much money as possible for as little work as possible.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806187">

</div>
</div>

<div id="replyto_42806187"></div>

<ul id="group_42806187">
	<li id="hiddens_42806187" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42806145" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806145" class="commentstatus"></div>
<div id="comment_42806145" class="cw">
	<div id="comment_top_42806145" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806145" name="comment_link_42806145" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806145" onclick="return D2.setFocusComment(42806145)" >Good news for the Python community</a>


		 	<span id="comment_score_42806145" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806145); return false"><span class=opt>Score:</span>3</a>, Funny)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~kauaidiver">kauaidiver</a>  <span class="uid"><a href="//slashdot.org/~kauaidiver">(779239)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806145">		
		on Wednesday February 06, 2013 @04:04AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806145">#42806145</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806145"><p>As a full time Python developer for going on 6 years this is good to hear!  Now if we can get a Python-lite to replace Javascript in the browser.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806145">
	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Good news for the Python community by kauaidiver @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806145" data-title="Good news for the Python community">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Good news for the Python community by kauaidiver" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806145" data-title="Good news for the Python community">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Good news for the Python community by kauaidiver" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806145" data-title="Good news for the Python community">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806145" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806145"></div>

<ul id="group_42806145">
	<li id="hiddens_42806145" class="hide"></li>
</ul>

<ul id="commtree_42806145"><li id="tree_42807019" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42807019" class="commentstatus"></div>
<div id="comment_42807019" class="cw">
	<div id="comment_top_42807019" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807019" name="comment_link_42807019" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807019" onclick="return D2.setFocusComment(42807019)" >Re:</a>


		 	<span id="comment_score_42807019" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807019); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~lattyware">lattyware</a>  <span class="uid"><a href="//slashdot.org/~lattyware">(934246)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807019"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807019"><p>Yeah, the issue is that Python is pretty hard to sandbox, being the hugely dynamic language it is. I imagine it would take a lot to get the browsers to stop working on their JavaScript implementations that they have sunk insane amounts of time and effort into, and start something brand new.</p><p>Trust me, I'd love to see it happen, but I don't think it will.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42807019">

</div>
</div>

<div id="replyto_42807019"></div>

<ul id="group_42807019">
	<li id="hiddens_42807019" class="hide"></li>
</ul>

<ul id="commtree_42807019"><li id="tree_42810789" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42810789" class="commentstatus"></div>
<div id="comment_42810789" class="cw">
	<div id="comment_top_42810789" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42810789" name="comment_link_42810789" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42810789" onclick="return D2.setFocusComment(42810789)" >depends</a>


		 	<span id="comment_score_42810789" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42810789); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~luis_a_espinal">luis_a_espinal</a>  <span class="uid"><a href="//slashdot.org/~luis_a_espinal">(1810296)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42810789"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42810789"><p><div class="quote"><p>Yeah, the issue is that Python is pretty hard to sandbox, being the hugely dynamic language it is.</p><span class="substr"> </span></div><p>Forgive me but JavaScript is also hugely dynamic. How does this prevent effective sand boxing in the general sense?</p><p><div class="quote"><p>I imagine it would take a lot to get the browsers to stop working on their JavaScript implementations that they have sunk insane amounts of time and effort into, and start something brand new.</p></div><p>Another solution is to program in a subset of Python that gets verified at compile time with additional restrictions, and then compiled into JavaScript (the way CoffeeScript does.)  That way we re-capture the investment already made in browser-side JavaScript technology.</p><p><div class="quote"><p>Trust me, I'd love to see it happen, but I don't think it will.</p></div><p>That sounds more like a solution looking for a problem. No need to reinvent the browser vm wheel. Reuse what's there to greate</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42810789">

</div>
</div>

<div id="replyto_42810789"></div>

<ul id="group_42810789">
	<li id="hiddens_42810789" class="hide"></li>
</ul>

</li><li id="tree_42811699" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42811699" class="commentstatus"></div>
<div id="comment_42811699" class="cw">
	<div id="comment_top_42811699" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42811699" name="comment_link_42811699" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42811699" onclick="return D2.setFocusComment(42811699)" >Re:</a>


		 	<span id="comment_score_42811699" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42811699); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~thetoadwarrior">thetoadwarrior</a>  <span class="uid"><a href="//slashdot.org/~thetoadwarrior">(1268702)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42811699"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42811699">It could easily be done but there are too many people who are heavily invested in JS being broken.</div>
	</div>

	<div class="commentSub" id="comment_sub_42811699">

</div>
</div>

<div id="replyto_42811699"></div>

<ul id="group_42811699">
	<li id="hiddens_42811699" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42806237" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42806237" class="commentstatus"></div>
<div id="comment_42806237" class="cw">
	<div id="comment_top_42806237" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806237" name="comment_link_42806237" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806237" onclick="return D2.setFocusComment(42806237)" >So...</a>


		 	<span id="comment_score_42806237" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806237); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~CAIMLAS">CAIMLAS</a>  <span class="uid"><a href="//slashdot.org/~CAIMLAS">(41445)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806237">		
		on Wednesday February 06, 2013 @04:37AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806237">#42806237</a>)
		<small><a href="http://forums.boiledfrog.us/" title="http://forums.boiledfrog.us/" class="user_homepage_display">Homepage</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806237"><p>So, they're porting R and Perl PDL to Python, then?</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806237">
	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="So... by CAIMLAS @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806237" data-title="So...">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="So... by CAIMLAS" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806237" data-title="So...">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="So... by CAIMLAS" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42806237" data-title="So...">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42806237" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42806237"></div>

<ul id="group_42806237">
	<li id="hiddens_42806237" class="hide"></li>
</ul>

</li><li id="tree_42806271" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806271" class="commentstatus"></div>
<div id="comment_42806271" class="cw">
	<div id="comment_top_42806271" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806271" name="comment_link_42806271" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806271" onclick="return D2.setFocusComment(42806271)" >There is also Pandas</a>


		 	<span id="comment_score_42806271" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806271); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~siDDis">siDDis</a>  <span class="uid"><a href="//slashdot.org/~siDDis">(961791)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806271"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806271"><p>Pandas <a href="http://pandas.pydata.org/" title="pydata.org">http://pandas.pydata.org/</a> [pydata.org] is another great tool for data analysis. It use numpy and is highly optimized with critical code paths which is written in C.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42806271">

</div>
</div>

<div id="replyto_42806271"></div>

<ul id="group_42806271">
	<li id="hiddens_42806271" class="hide"></li>
</ul>

</li><li id="tree_42806953" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42806953" class="commentstatus"></div>
<div id="comment_42806953" class="cw">
	<div id="comment_top_42806953" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42806953" name="comment_link_42806953" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42806953" onclick="return D2.setFocusComment(42806953)" >There's more to XDATA</a>


		 	<span id="comment_score_42806953" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42806953); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~seekthirst">seekthirst</a>  <span class="uid"><a href="//slashdot.org/~seekthirst">(1457205)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42806953"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42806953">It's strange that this article focused on Python and Continuum when there is a much bigger story to be had. The XDATA program is being run in a very open source manner, and there will be a multitude of open source tools created and delivered by the end of the contract. The program is focusing on two major tasks: the analytics/algorithmic tools to process big data; and the visualization/interaction tools that go along with them.</div>
	</div>

	<div class="commentSub" id="comment_sub_42806953">

</div>
</div>

<div id="replyto_42806953"></div>

<ul id="group_42806953">
	<li id="hiddens_42806953" class="hide"></li>
</ul>

</li><li id="tree_42807179" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42807179" class="commentstatus"></div>
<div id="comment_42807179" class="cw">
	<div id="comment_top_42807179" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807179" name="comment_link_42807179" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807179" onclick="return D2.setFocusComment(42807179)" >Python?</a>


		 	<span id="comment_score_42807179" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807179); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Murdoch5">Murdoch5</a>  <span class="uid"><a href="//slashdot.org/~Murdoch5">(1563847)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807179">		
		on Wednesday February 06, 2013 @08:42AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807179">#42807179</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807179">Have they heard of Matlab?</div>
	</div>

	<div class="commentSub" id="comment_sub_42807179">
	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Python? by Murdoch5 @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807179" data-title="Python?">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Python? by Murdoch5" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807179" data-title="Python?">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Python? by Murdoch5" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807179" data-title="Python?">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42807179" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42807179"></div>

<ul id="group_42807179">
	<li id="hiddens_42807179" class="hide"></li>
</ul>

<ul id="commtree_42807179"><li id="tree_42808447" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42808447" class="commentstatus"></div>
<div id="comment_42808447" class="cw">
	<div id="comment_top_42808447" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42808447" name="comment_link_42808447" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42808447" onclick="return D2.setFocusComment(42808447)" >Re:</a>


		 	<span id="comment_score_42808447" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42808447); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~vgerclover">vgerclover</a>  <span class="uid"><a href="//slashdot.org/~vgerclover">(1186893)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42808447"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42808447">Have you heard of Open Source?</div>
	</div>

	<div class="commentSub" id="comment_sub_42808447">

</div>
</div>

<div id="replyto_42808447"></div>

<ul id="group_42808447">
	<li id="hiddens_42808447" class="hide"></li>
</ul>

<ul id="commtree_42808447"><li id="tree_42809319" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42809319" class="commentstatus"></div>
<div id="comment_42809319" class="cw">
	<div id="comment_top_42809319" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42809319" name="comment_link_42809319" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42809319" onclick="return D2.setFocusComment(42809319)" >Re:</a>


		 	<span id="comment_score_42809319" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42809319); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Murdoch5">Murdoch5</a>  <span class="uid"><a href="//slashdot.org/~Murdoch5">(1563847)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42809319"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42809319">Fine then use Octave or one of the other mathematical open source packages.  The issue is that they want to adapt a system instead of using an existing one.</div>
	</div>

	<div class="commentSub" id="comment_sub_42809319">

</div>
</div>

<div id="replyto_42809319"></div>

<ul id="group_42809319">
	<li id="hiddens_42809319" class="hide"></li>
</ul>

<ul id="commtree_42809319"><li id="tree_42810171" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42810171" class="commentstatus"></div>
<div id="comment_42810171" class="cw">
	<div id="comment_top_42810171" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42810171" name="comment_link_42810171" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42810171" onclick="return D2.setFocusComment(42810171)" >Re:</a>


		 	<span id="comment_score_42810171" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42810171); return false"><span class=opt>Score:</span>2</a>, Insightful)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span>Anonymous Coward</span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42810171"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42810171"><p>Okay, look.  I used Octave for a long time on Linux and on Windows.  On Linux (Ubuntu) it generally worked rather well and I used it for classwork where possible.  On Windows, it works well as long as you don't need to plot anything.  I can't tell you the number of times I installed/uninstalled various versions of Octave on Windows to find out that the plotting was broken in some way.  MATLAB is great until you run in to licensing issues.</p><p>Then I found out about the combination of IPython/Numpy/Scipy/Matplotl<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42810171">

</div>
</div>

<div id="replyto_42810171"></div>

<ul id="group_42810171">
	<li id="hiddens_42810171" class="hide"></li>
</ul>

<ul id="commtree_42810171"><li id="tree_42811127" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42811127" class="commentstatus"></div>
<div id="comment_42811127" class="cw">
	<div id="comment_top_42811127" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42811127" name="comment_link_42811127" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42811127" onclick="return D2.setFocusComment(42811127)" >Re:</a>


		 	<span id="comment_score_42811127" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42811127); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~naroom">naroom</a>  <span class="uid"><a href="//slashdot.org/~naroom">(1560139)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42811127"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42811127">Thanks! As a scientist looking to switch away from Matlab, this was really informative! Somebody get this guy some mod points<nobr> <wbr></nobr>:)</div>
	</div>

	<div class="commentSub" id="comment_sub_42811127">

</div>
</div>

<div id="replyto_42811127"></div>

<ul id="group_42811127">
	<li id="hiddens_42811127" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li><li id="tree_42810229" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42810229" class="commentstatus"></div>
<div id="comment_42810229" class="cw">
	<div id="comment_top_42810229" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42810229" name="comment_link_42810229" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42810229" onclick="return D2.setFocusComment(42810229)" >110 reasons to pick Python over Matlab</a>


		 	<span id="comment_score_42810229" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42810229); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~naroom">naroom</a>  <span class="uid"><a href="//slashdot.org/~naroom">(1560139)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42810229"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42810229"><a href="http://hammerprinciple.com/therighttool/items/matlab/python" title="hammerprinciple.com">Plenty of reasons.</a> [hammerprinciple.com]</div>
	</div>

	<div class="commentSub" id="comment_sub_42810229">

</div>
</div>

<div id="replyto_42810229"></div>

<ul id="group_42810229">
	<li id="hiddens_42810229" class="hide"></li>
</ul>

<ul id="commtree_42810229"><li id="tree_42810827" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42810827" class="commentstatus"></div>
<div id="comment_42810827" class="cw">
	<div id="comment_top_42810827" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42810827" name="comment_link_42810827" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42810827" onclick="return D2.setFocusComment(42810827)" >Re:</a>


		 	<span id="comment_score_42810827" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42810827); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Murdoch5">Murdoch5</a>  <span class="uid"><a href="//slashdot.org/~Murdoch5">(1563847)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42810827"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42810827">Well it's group voted on so it's not like I can argue the list.  How ever that being said, Matlab or any mathematical computing language is still better suited for big data, the lack of skill of a programmer should never be blamed on the language, it's an easy way out.</div>
	</div>

	<div class="commentSub" id="comment_sub_42810827">

</div>
</div>

<div id="replyto_42810827"></div>

<ul id="group_42810827">
	<li id="hiddens_42810827" class="hide"></li>
</ul>

<ul id="commtree_42810827"><li id="tree_42811047" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42811047" class="commentstatus"></div>
<div id="comment_42811047" class="cw">
	<div id="comment_top_42811047" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42811047" name="comment_link_42811047" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42811047" onclick="return D2.setFocusComment(42811047)" >Re:</a>


		 	<span id="comment_score_42811047" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42811047); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~naroom">naroom</a>  <span class="uid"><a href="//slashdot.org/~naroom">(1560139)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42811047"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42811047">You may not be familiar with SciPy / NumPy. They are the scientific computing side of Python. They support matrix operations and linear algebra at least as well as Matlab does. Underneath, both NumPy and Matlab are just LAPACK anyway. Here, have a <a href="http://en.wikipedia.org/wiki/NumPy" title="wikipedia.org">relevant wiki article</a> [wikipedia.org].</div>
	</div>

	<div class="commentSub" id="comment_sub_42811047">

</div>
</div>

<div id="replyto_42811047"></div>

<ul id="group_42811047">
	<li id="hiddens_42811047" class="hide"></li>
</ul>

</li></ul></li></ul></li><li id="tree_42811739" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42811739" class="commentstatus"></div>
<div id="comment_42811739" class="cw">
	<div id="comment_top_42811739" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42811739" name="comment_link_42811739" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42811739" onclick="return D2.setFocusComment(42811739)" >Re:</a>


		 	<span id="comment_score_42811739" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42811739); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~thetoadwarrior">thetoadwarrior</a>  <span class="uid"><a href="//slashdot.org/~thetoadwarrior">(1268702)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42811739"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42811739">Proprietary languages, lol.</div>
	</div>

	<div class="commentSub" id="comment_sub_42811739">

</div>
</div>

<div id="replyto_42811739"></div>

<ul id="group_42811739">
	<li id="hiddens_42811739" class="hide"></li>
</ul>

</li><li id="tree_42812411" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42812411" class="commentstatus"></div>
<div id="comment_42812411" class="cw">
	<div id="comment_top_42812411" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42812411" name="comment_link_42812411" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42812411" onclick="return D2.setFocusComment(42812411)" >Re:</a>


		 	<span id="comment_score_42812411" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42812411); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~steveha">steveha</a>  <span class="uid"><a href="//slashdot.org/~steveha">(103154)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42812411"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42812411"><p><span class="substr"> </span> <i>Have they heard of Matlab?</i> </p><p>Have you heard of SciPy?</p><p>I predict that a tipping point is coming, and after we reach that tipping point, Matlab will become a legacy language and all the new projects will be SciPy.</p><p>Right now Matlab is benefiting from network effect: everyone uses Matlab because everyone uses Matlab.  It's the standard, you expect to see everyone using it in certain industries.  But it's a proprietary product controlled by a single company that is doing its best to extract maximum revenue from it.</p><p>Me</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42812411">

</div>
</div>

<div id="replyto_42812411"></div>

<ul id="group_42812411">
	<li id="hiddens_42812411" class="hide"></li>
</ul>

<ul id="commtree_42812411"><li id="tree_42813009" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42813009" class="commentstatus"></div>
<div id="comment_42813009" class="cw">
	<div id="comment_top_42813009" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42813009" name="comment_link_42813009" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42813009" onclick="return D2.setFocusComment(42813009)" >Re:</a>


		 	<span id="comment_score_42813009" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42813009); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Murdoch5">Murdoch5</a>  <span class="uid"><a href="//slashdot.org/~Murdoch5">(1563847)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42813009"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42813009">Fine, then grab one of the other million and 1/2 great open source mathematical packages and run with it.  Basically a ton of money is being sunk into something that can be solved by moving platforms.  Open or not, there is software which fulfills the need and for  $100 million you can get a lot of anything.</div>
	</div>

	<div class="commentSub" id="comment_sub_42813009">

</div>
</div>

<div id="replyto_42813009"></div>

<ul id="group_42813009">
	<li id="hiddens_42813009" class="hide"></li>
</ul>

<ul id="commtree_42813009"><li id="tree_42814711" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42814711" class="commentstatus"></div>
<div id="comment_42814711" class="cw">
	<div id="comment_top_42814711" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42814711" name="comment_link_42814711" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42814711" onclick="return D2.setFocusComment(42814711)" >Re:</a>


		 	<span id="comment_score_42814711" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42814711); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~steveha">steveha</a>  <span class="uid"><a href="//slashdot.org/~steveha">(103154)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42814711"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42814711"><p><i>grab one of the other million and 1/2 great open source mathematical packages</i></p><p>Okay, why?</p><p>The scientific community is already coalescing around SciPy.  You are arguing that DARPA should send money to anything but SciPy but you didn't give a reason.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42814711">

</div>
</div>

<div id="replyto_42814711"></div>

<ul id="group_42814711">
	<li id="hiddens_42814711" class="hide"></li>
</ul>

<ul id="commtree_42814711"><li id="tree_42815185" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42815185" class="commentstatus"></div>
<div id="comment_42815185" class="cw">
	<div id="comment_top_42815185" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42815185" name="comment_link_42815185" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42815185" onclick="return D2.setFocusComment(42815185)" >Re:</a>


		 	<span id="comment_score_42815185" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42815185); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~Murdoch5">Murdoch5</a>  <span class="uid"><a href="//slashdot.org/~Murdoch5">(1563847)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42815185"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42815185"><p><div class="quote"><p>The scientific community is already coalescing around SciPy.</p></div><p> Maybe some it is but I'm going to bet the vaste majority aren't even touching python.  I would never use python for scientific computing, it's not designed for it, simply put.  Sure you can do light scrientific computing in SciPy maybe even some more advanced functions but if Python has to go balls to the wall, it simply wont measure up!  <br> <br>So if your looking for a system that can handle all your big data and your large storage why not look towards a system which can handle most of it out of the box, that's<span class="substr"> </span></p></div>
	</div>

	<div class="commentSub" id="comment_sub_42815185">

</div>
</div>

<div id="replyto_42815185"></div>

<ul id="group_42815185">
	<li id="hiddens_42815185" class="hide"></li>
</ul>

</li></ul></li></ul></li></ul></li></ul></li><li id="tree_42807293" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42807293" class="commentstatus"></div>
<div id="comment_42807293" class="cw">
	<div id="comment_top_42807293" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807293" name="comment_link_42807293" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807293" onclick="return D2.setFocusComment(42807293)" >YAY</a>


		 	<span id="comment_score_42807293" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807293); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~sproketboy">sproketboy</a>  <span class="uid"><a href="//slashdot.org/~sproketboy">(608031)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807293">		
		on Wednesday February 06, 2013 @09:05AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807293">#42807293</a>)
		<small> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807293"><p>Now China can win!</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42807293">
	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="YAY by sproketboy @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807293" data-title="YAY">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="YAY by sproketboy" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807293" data-title="YAY">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="YAY by sproketboy" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42807293" data-title="YAY">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42807293" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42807293"></div>

<ul id="group_42807293">
	<li id="hiddens_42807293" class="hide"></li>
</ul>

</li><li id="tree_42808527" class="comment full contain"><span class="ind"></span>
<div id="comment_status_42808527" class="commentstatus"></div>
<div id="comment_42808527" class="cw">
	<div id="comment_top_42808527" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42808527" name="comment_link_42808527" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42808527" onclick="return D2.setFocusComment(42808527)" >Big Data != Analytics</a>


		 	<span id="comment_score_42808527" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42808527); return false"><span class=opt>Score:</span>3</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~michaelmalak">michaelmalak</a>  <span class="uid"><a href="//slashdot.org/~michaelmalak">(91262)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42808527">		 &lt;<a href="mailto:michael%40michaelmalak.com">michael@michaelmalak.com</a>&gt;
		on Wednesday February 06, 2013 @11:15AM (<span class="ind"></span><a href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42808527">#42808527</a>)
		<small><a href="http://www.technicaltidbit.com/" title="http://www.technicaltidbit.com/" class="user_homepage_display">Homepage</a> </small>
</span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42808527"><p>The summary and article seem to conflate Big Data with Analytics.  These days the two often go together, but it's quite possible to have either one without the other.  Big Data is "more data than can fit on one machine", and analytics means "applying statistics to data".  E.g. many Big Data projects start out as "capture now, analyze a year or two from now," and maybe just do simple counts in the interim, which is not "analytics".  And of course, many useful analytics take place in the sub-terabyte range.</p><p>The irony with this story is that Python is useful for in-memory processing, and not "Big Data" per se.  To process "Big Data" typically requires (today, based on available tools, not inherent language advantages) JVM-based tools, namely Hadoop or GridGain, and distributed data processing tasks on those platforms require Java or Scala.  Both of those platforms leverage the uniformity of the JVM to launch distributed processes across a heterogeneous set of computers.</p><p>The real use case here is one first <i>reduces</i> Big Data using the JVM platform, and only then once it can fit into the RAM of a single workstation, use Python, R, etc. to analyze the reduced data.  So typically, yes, these Python libraries will be used in Big Data scenarios, but pedantically, analytics doesn't require Big Data and Python isn't even capable (generally, based on today's tools) of processing raw Big Data.</p></div>
	</div>

	<div class="commentSub" id="comment_sub_42808527">
	<a href="#" class="comment_share_toggle btn link">Share</a>
	<div class="comment_share sharethis-0 hide"><span class="au"></span>
		<a class="janrain t" href="#" data-provider="twitter" data-message="Big Data != Analytics by michaelmalak @slashdot" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42808527" data-title="Big Data != Analytics">twitter</a>
		<a class="janrain f" href="#" data-provider="facebook" data-message="Big Data != Analytics by michaelmalak" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42808527" data-title="Big Data != Analytics">facebook</a>
		<a class="janrain l" href="#" data-provider="linkedin" data-message="Big Data != Analytics by michaelmalak" data-url="http://developers.slashdot.org/comments.pl?sid=3437373&cid=42808527" data-title="Big Data != Analytics">linkedin</a>
		<a class="g" href="http://plus.google.com/share?url=http://developers.slashdot.org/comments.pl?sid=3437373%26cid=42808527" onclick="javascript:window.open(this.href,'', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"><img src="//www.gstatic.com/images/icons/gplus-16.png" alt="Share on Google+"/></a>
	</div>

</div>
</div>

<div id="replyto_42808527"></div>

<ul id="group_42808527">
	<li id="hiddens_42808527" class="hide"></li>
</ul>

</li><li id="tree_42808615" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42808615" class="commentstatus"></div>
<div id="comment_42808615" class="cw">
	<div id="comment_top_42808615" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42808615" name="comment_link_42808615" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42808615" onclick="return D2.setFocusComment(42808615)" >Imagine the research if we took all lobbying</a>


		 	<span id="comment_score_42808615" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42808615); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~tyrione">tyrione</a>  <span class="uid"><a href="//slashdot.org/~tyrione">(134248)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42808615"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42808615">cash and put it to advancing applied sciences to better the nation. We piss billions down the drain marketing to morons and yet whine about spending billions on DARPA, DoE and whatnot. This county is truly too stupid for its own well-being.</div>
	</div>

	<div class="commentSub" id="comment_sub_42808615">

</div>
</div>

<div id="replyto_42808615"></div>

<ul id="group_42808615">
	<li id="hiddens_42808615" class="hide"></li>
</ul>

</li><li id="tree_42806767" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806767" class="commentstatus"></div>
<div id="comment_42806767" class="cw">
</div>

<div id="replyto_42806767"></div>

<ul id="group_42806767">
	<li id="hiddens_42806767" class="hide"></li>
</ul>

<ul id="commtree_42806767"><li id="tree_42807023" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42807023" class="commentstatus"></div>
<div id="comment_42807023" class="cw">
	<div id="comment_top_42807023" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42807023" name="comment_link_42807023" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42807023" onclick="return D2.setFocusComment(42807023)" >Re:</a>


		 	<span id="comment_score_42807023" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42807023); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~lattyware">lattyware</a>  <span class="uid"><a href="//slashdot.org/~lattyware">(934246)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42807023"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42807023">Seriously? Sphinx makes beautiful documentation that is easy to find your way around. Compared to the ugly-ass JavaDocs that are painful to browse through, I wouldn't even give it a second thought.</div>
	</div>

	<div class="commentSub" id="comment_sub_42807023">

</div>
</div>

<div id="replyto_42807023"></div>

<ul id="group_42807023">
	<li id="hiddens_42807023" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806441" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806441" class="commentstatus"></div>
<div id="comment_42806441" class="cw">
</div>

<div id="replyto_42806441"></div>

<ul id="group_42806441">
	<li id="hiddens_42806441" class="hide"></li>
</ul>

<ul id="commtree_42806441"><li id="tree_42813633" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42813633" class="commentstatus"></div>
<div id="comment_42813633" class="cw">
	<div id="comment_top_42813633" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42813633" name="comment_link_42813633" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42813633" onclick="return D2.setFocusComment(42813633)" >Re:</a>


		 	<span id="comment_score_42813633" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42813633); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blueskies">blueskies</a>  <span class="uid"><a href="//slashdot.org/~blueskies">(525815)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42813633"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42813633">Pandas is right under: "Scientific &amp; Data Analysis Packages"

<a href="http://docs.continuum.io/index.html" title="continuum.io">http://docs.continuum.io/index.html</a> [continuum.io]</div>
	</div>

	<div class="commentSub" id="comment_sub_42813633">

</div>
</div>

<div id="replyto_42813633"></div>

<ul id="group_42813633">
	<li id="hiddens_42813633" class="hide"></li>
</ul>

</li></ul></li><li id="tree_42806147" class="comment hidden"><span class="ind"></span>
<div id="comment_status_42806147" class="commentstatus"></div>
<div id="comment_42806147" class="cw">
</div>

<div id="replyto_42806147"></div>

<ul id="group_42806147">
	<li id="hiddens_42806147" class="hide"></li>
</ul>

<ul id="commtree_42806147"><li id="tree_42814141" class="comment oneline"><span class="ind"></span>
<div id="comment_status_42814141" class="commentstatus"></div>
<div id="comment_42814141" class="cw">
	<div id="comment_top_42814141" class="commentTop newcomment">
		<div class="title">
			<h4><a id="comment_link_42814141" name="comment_link_42814141" href="//developers.slashdot.org/comments.pl?sid=3437373&amp;cid=42814141" onclick="return D2.setFocusComment(42814141)" >Re:</a>


		 	<span id="comment_score_42814141" class="score"> (<a href="#" onclick="getModalPrefs('modcommentlog', 'Moderation Comment Log', 42814141); return false"><span class=opt>Score:</span>2</a>)</span></h4>
		</div>
		<div class="details">
			<span class="by"><span class="byby">by </span><a href="//slashdot.org/~blueskies">blueskies</a>  <span class="uid"><a href="//slashdot.org/~blueskies">(525815)</a></span></a></span><span class="writes" style="display:none"> writes:</span> 
			<span class="otherdetails" id="comment_otherdetails_42814141"></span>
		</div>
	</div>
	<div class="commentBody">
		<div id="comment_body_42814141">Luckily all of the XData funded work is required to be open source.  This looks like the numpy work: <a href="http://blaze.pydata.org/" title="pydata.org">http://blaze.pydata.org/</a> [pydata.org]</div>
	</div>

	<div class="commentSub" id="comment_sub_42814141">

</div>
</div>

<div id="replyto_42814141"></div>

<ul id="group_42814141">
	<li id="hiddens_42814141" class="hide"></li>
</ul>

</li></ul></li>
			<li id="roothiddens" class="hide"></li>
		</ul>
	
	
	
	

<noscript><p><b>There may be more comments in this discussion. Without JavaScript enabled, you might want to <a href="//developers.slashdot.org/users.pl?op=editcomm">turn on Classic Discussion System</a> in your preferences instead.</b></p></noscript>
<div id="discussion_buttons" class="clearfix">






</div>


<div class="newcmnt"><div id="replyto_0"></div></div>


	<script type="text/javascript">
<!--
		D2.currents()['hidden']   = 0;
		D2.currents()['full']     = 21;
		D2.currents()['oneline']  = 79;
		// D2.currents_total(100);

		D2.abbrev_comments({42806245:528,42817155:3,42820351:558,42817125:3,42816119:512,42809667:512,42814371:515,42808967:1027,42818217:511,42809755:512,42810171:522,42807291:139,42806011:785,42807277:520,42842667:529,42818259:512,42806473:515,42806983:562,42806345:515,42819253:522,42809099:618,42808601:515,42812181:3,42809581:512,42807381:531,42815185:618,42810789:127,42812411:3,42807641:119,42815519:868,42806315:241,42820737:565});
		D2.noshow_comments([42808881,42809953,42808355,42806925,42810431,42811793,42823765,42815181,42806235,42806745,42808585,42806229,42806125,42806163,42806667,42808605,42806171,42806767,42806441,42806147]);
		D2.pieces_comments([42806011,42810801,42813171,42813117,42806107,42820351,42806999,42822261,42809099,42832075,42809919,42813253,42828783,42820737,42806225,42806267,42806245,42806315,42807641,42811253,42842667,42806983,42807381,42808601,42809581,42812181,42814371,42819253,42815519,42816077,42806687,42809833,42808967,42809779,42809463,42810781,42816119,42817125,42818259,42811099,42816165,42817155,42818217,42809667,42809755,42810587,42811223,42806867,42806345,42807277,42806065,42806637,42807267,42809155,42806473,42807291,42807445,42806187,42807019,42810789,42811699,42806271,42806953,42808447,42809319,42810171,42811127,42810229,42810827,42811047,42811739,42812411,42813009,42814711,42815185,42808615,42807023,42813633,42814141]);
		D2.init_hiddens([]);

		D2.finishLoading();



//-->
	</script>


</div>

</section>
									   </div>
									</section>
                                    <section class="grid_24" style="margin-top:20px;">
                                        <div class="railad">
<div id='div-gpt-ad-728x90_b'><script type='text/javascript'>
googletag.cmd.push(function(){
googletag.display('div-gpt-ad-728x90_b');});</script></div>
</div>
                                    </section>
<div id="InRead" style="margin: 10px auto 0px; width:  465px; padding-bottom: 30px; clear:both;"></div>
<script type="text/javascript">
var zflag_parent="InRead";
var zflag_vast_domain="http://xp1.zedo.com/";
var zflag_nid="2340";
var zflag_cid="219";
var zflag_sz="85";
var zflag_sid="76";
var zflag_width="425";
var zflag_height="330";
var zflag_bchan="218";
var zflag_dimension="1";
var zflag_breplay="1";
var zflag_preroll="1";
var zflag_autoclose="1";
</script>
<script type="text/javascript" src="//c5.zedo.com/jsc/c5/frd.js"></script>

								     </section>
								  </div>

	

<script type="text/javascript">
$(function(){
$('#firehose-filter').
	focus(function(event){
		gFocusedText = this;
	}).
	blur(function(event){
		if ( gFocusedText === this ) {
			gFocusedText = null;
		}
	});


apply_updates_when(		'at-end', true);
});
</script>


<!-- body end --></section>





<footer id="fhft" class="grid_24 nf aoc">
	<div id="logo_nf" class="fleft">
		<a href="//slashdot.org"><span>Slashdot</span></a>
	</div>
	<nav role="firehose footer">
			
				
				
				
				

				
					<button class="btn" disabled="disabled">Archived Discussion</button>
				
				<a class="btn hide" id="footer_moderate_button">Moderate</a>
				<a class="btn hide" id="footer_moderatorhelp_button">Moderator Help</a>
				<a class="btn hide" id="footer_delete_button" title="Checked comments will be deleted.">Delete</a>
				<script>
					(function($){
						var old_moderate_btn = $("#discussion_moderate_button");
						if (old_moderate_btn.length) {
							var moderate_btn = $("#footer_moderate_button");
							moderate_btn.click(
								function(){old_moderate_btn.click()}
							);
							moderate_btn.removeClass('hide');
						}

						var old_moderatorhelp_btn = $("#discussion_moderatorhelp_button");
						if (old_moderatorhelp_btn.length) {
							var moderatorhelp_btn = $("#footer_moderatorhelp_button");
							moderatorhelp_btn.click(
								function(){old_moderatorhelp_btn.click()}
							);
							moderatorhelp_btn.attr(
								'href', old_moderatorhelp_btn.attr('href')
							);
							moderatorhelp_btn.removeClass('hide');
						}

						var old_delete_btn = $("#discussion_delete_button");
						if (old_delete_btn.length) {
							var delete_btn = $("#footer_delete_button");
							delete_btn.click(
								function(){old_delete_btn.click()}
							);
							delete_btn.removeClass('hide');
						}

						$('#discussion_buttons').addClass('hide');
					})(Slash.jQuery); // (function($){
				</script>
				<ul class="fleft">
					
					<li class="fleft selected">
   						<span class="nbutton btn hide link reset" id="more_comments_button"><a href="#" onclick="D2.ajaxFetchComments(0,1); return false"><span id="more_comments_num_a" class="hide">Get more comments</span></a></span>
					</li>

					
					
					<li class="fleft"><span class="loadedcommentcnt">100</span> of <span class="totalcommentcnt">180</span> loaded</li>
					
				</ul>
				
					<script type="text/javascript">D2.finishLoading()</script>
				

<!-- below markup is for D1
				<ul class="fleft">
					<li class="fleft"><a href="">Moderator help</a></li>
					<li class="fleft"><a href="">Delete</a></li>
					<li class="fleft"><a href="">?</a></li>

					<li class="fleft"><a href="">__1_of_10_loaded__</a></li>

				</ul>
-->

			

	    
        <ul class="fright submitstory">
            <li class="fright"><a href="/submit">Submit<span class="opt"> Story</span></a></li>
        </ul>
	</nav>
</footer>
	<section class="bq"><blockquote class="msg grid_24" cite="http://slashdot.org"><p>We can found no scientific discipline, nor a healthy profession on the
technical mistakes of the Department of Defense and IBM.
		-- Edsger Dijkstra</p><span class="slant"></span></blockquote></section>
<footer id="ft" class="grid_24">
		<nav class="grid_10" role="footer">
		    <ul>
			<li><a href="//slashdot.org/faq">FAQ</a></li>
			<li><a href="//slashdot.org/archive.pl">Story Archive</a></li>
			<li><a href="//slashdot.org/hof.shtml">Hall of Fame</a></li>
			<li><a href="http://slashdotmedia.com/advertising-and-marketing-services/">Advertising</a></li>
			<li><a href="http://slashdot.org/job_board.pl">Jobs</a></li>
			<li><a href="http://slashdotmedia.com/terms-of-use/">Terms</a></li>
			<li><a href="http://slashdotmedia.com/privacy-statement/">Privacy</a></li>
			<li id="teconsent"></li>
			<li><a href="http://slashdotmedia.com/opt-out-choices/">Opt Out Choices</li>
			<li><a href="//slashdot.org/faq/slashmeta.shtml">About</a></li>
			<li><a href="mailto:feedback@slashdot.org">Feedback</a></li>
			<li><a href="http://slashdot.jp">Slashdot Japan</a></li>
			<li><a href="#" onclick="set_mobile_pref('mobile',1);return false;">Mobile View</a></li>
			<li><a href="//slashdot.org/?usebeta=1">Slashdot Beta</a></li>
		    </ul>
		</nav>

<br>
                
	        <div class="grid_14 tright tm">Trademarks property of their respective owners. Comments owned by the poster. <span class="nobr">Copyright &copy; 2014 Dice. All Rights Reserved.</span> <span class="nobr">Slashdot is a <a href="http://www.diceholdingsinc.com/phoenix.zhtml?c=211152&p=irol-landing" title="The Mother Ship">Dice Holdings, Inc.</a> service.</span></div>
</footer>

 
<div class="overlay"></div>
<div class="modal-box">
    <a href="#" id="close-modal">Close</a>
    <article class="modal-content">
    </article>
    <footer>
</div>




<div id="modal_cover" class="hide" onclick="hide_modal_box(); return false;"></div>
<div id="modal_box" class="hide">
      <div id="modal_box_content"></div>
      <header class="n">
                  <span class="fadeout"></span>
                  <span class="fadeoutfade"></span>
		  <span class="pf"><a class="ico close" onclick="hide_modal_box(); return false;" href="#"><span>Close</span></a></span>
		  <h3 class="pf"><div id="logo"><a href="//slashdot.org">Slashdot</a></div><span id="preference_title"></span></h3>
      </header>
</div>

<script type="text/javascript">
COMSCORE.beacon({
  c1:2,
  c2:6035546,
  c3:"",
  c4:"",
  c5:"",
  c6:"",
  c15:""
});
</script>
<noscript><img src="http://b.scorecardresearch.com/p?c1=2&amp;c2=6035546&amp;c3=&amp;c4=&amp;c5=&amp;c6=&amp;c15=&amp;cj=1" alt="comScore2"></noscript>


<!-- Google Remarketing tag -->
<script type="text/javascript">
/* <![CDATA[ */
var google_conversion_id = 1002083962;
var google_conversion_label = "G_uGCOaBlAQQ-qzq3QM";
var google_custom_params = window.google_tag_params;
var google_remarketing_only = true;
/* ]]> */
</script>
<script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js">
</script>
<noscript>
<div style="display:inline;">
<img height="1" width="1" style="border-style:none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/1002083962/?value=0&amp;label=G_uGCOaBlAQQ-qzq3QM&amp;guid=ON&amp;script=0"/>
</div>
</noscript>
<script id="after-content" type="text/javascript">
(function( $, fn, console ){
	$ && fn && $(function(){ fn($, console); });
})(window.jQuery, window.pageload_done, window.console);
</script>

<div class="busy genericspinner hide"><span>Working...</span></div>
<script>
  if(typeof(Storage)!=="undefined"){
		window.scrollTo(0,sessionStorage.scrollPos);
			$(window).scroll(function () { 
			//You've scrolled this much:
			sessionStorage.scrollPos = $(window).scrollTop();
		});
	}
	$(function(){
		$('a').click(function(){
			delete sessionStorage.scrollPos;
		})
	});
	// window.onbeforeunload = function () {
	// 	console.log('bakc button clicked');
	// 	delete sessionStorage.scrollPos;
	// }
	window.onpopstate=function() {
		delete sessionStorage.scrollPos;
	}
</script>

</body>
</html>