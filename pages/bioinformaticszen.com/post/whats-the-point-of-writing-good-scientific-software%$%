<!DOCTYPE html>
<html lang='en'>
  <head>
    <meta charset='utf-8'>
    <meta name="google-site-verification" content="3rmUqoTcd9sbLDSIn6V8l_9D1NDCYViQTarIb9MunsM" />
    <title>
      What's the point of writing good scientific software? Â· Bioinformatics Zen
    </title>
    <link href='http://feeds.feedburner.com/BioinformaticsZen' rel='alternate' type='application/rss+xml'>
    <link href='http://www.michaelbarton.me.uk' rel='author'>
    <link href='../../stylesheets/stylesheet.css' media='screen,projection' rel='stylesheet' type='text/css'>
    <link href='../../fancybox/styles.css' media='screen,projection' rel='stylesheet' type='text/css'>
    
    <script src='https://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js' type='text/javascript'></script>
    <script src='../../fancybox/javascript.js' type='text/javascript'></script>
    <script src='../../javascript/prettify.js' type='text/javascript'></script>
    <script src='../../javascript/bioinformaticszen.js' type='text/javascript'></script>
    <!--[if IE]>
      <script src='http://html5shiv.googlecode.com/svn/trunk/html5.js'></script>
    <![endif]-->
  </head>
  <body onload='prettyPrint()'>
    <div id='wrapper'>
      <div id='header'>
        <h1>
          <a class='brand' href='../../'>
            Bioinformatics Zen
          </a>
        </h1>
        <p>
          Michael Barton's bioinformatics notes
        </p>
      </div>
      <div id='content'>
        <div class='hentry'>
          <h3 id='entry-title'>
            <a href='./'>
              What's the point of writing good scientific software?
            </a>
            <abbr>
              &#183; Posted: Feb 08, 2013
            </abbr>
          </h3>
          <p>Software written by academics has a reputation of being poorer quality than
          that of software written by professional software developers. This poorer
          quality can be quantified by a lack of documentation, a non-intuitive
          interface, or bug-ridden with a tendency to crash.</p>
          
          <p>I assume, since youâre reading a bioinformatics blog, that youâve experienced
          trying to use code that you canât download, wonât compile, wonât run on your
          system, isnât documented, wonât work on your data, or just crashes without
          explanation. Speaking from personal experience this can be frustrating in the
          extreme. Consequently there are efforts to increase the quality of academic
          software including <a href="http://www.openresearchcomputation.com/">journals focused on publishing software with minimum
          standards</a> and <a href="http://software-carpentry.org/">workshops to help academics write better
          software</a>.</p>
          
          <p>What then does good quality software look like? I think this includes both unit
          and integration tests to ensure the software works as expected. Revision
          control to ensure that bugs can be removed by reverting to the last working
          version. Continuous integration to make sure that software always passes tests
          when new changes are committed. Finally documentation of available options with
          examples helps users understand how to use the software. A question I have been
          recently asking myself however is whatâs the point of spending the extra time
          to create better software?</p>
          
          <p>Pubmed shows the number of articles published by two journals, âBMC
          Bioinformaticsâ and âBioinformatics,â containing the word âsoftwareâ in the
          title or abstract is ~350 each year. I think this may an underestimate though
          since other journals also publish software articles and the terms âpipelineâ,
          âpackageâ and âsystemâ may also be used instead of âsoftware.â</p>
          
          <p>Considering around 1700 bioinformatics software articles published in the last
          five years, this represents a significant corpus. This leads me to the question
          what is the point of writing good quality software if the chances are small
          that anyone will read about, or download it? For every highly cited tool, such
          as SAM Tools or PAML, there are likely many other tools which are never
          downloaded or used. Does it make sense to invest the extra time in the
          documentation and interface if there is a good chance that no one else will
          ever use it?</p>
          
          <p>Let me illustrate with a concrete example. Iâm a post-doc working in microbial
          genomics. I found that I had to write various scripts to help with the
          finishing of my genome and the subsequent upload to GenBank. <a href="/post/reuse,-contribute,-create/">I have previously
          believed</a> that converting any code youâve created into a open-source
          library benefits the community and prevents reinvention of the wheel. Therefore
          I converted my scripts first into a tool called <a href="http://next.gs/">scaffolder</a> and then a
          subsequent tool called <a href="https://github.com/michaelbarton/genomer">genomer</a>. Both of these are tested with integration
          and unit tests, and I create documentation and <a href="http://www.youtube.com/watch?v=HfsdJOELFjs">screencasts</a>.</p>
          
          <p>I have however started to realise that perhaps something I thought would be
          very useful may be of little interest to anyone else. Furthermore the effort I
          have put into testing and documentation may not have been the best use of my
          time if no one but I will use it. As my time as a post doc is limited, the
          extra time effort spent on improving these tools could have instead have been
          spent elsewhere. Would it have been better if I have just completed the minimum
          to get them published then moved on to another project?</p>
          
          <p>I have begun to think now that the most important thing when writing software
          is to write the usable minimum. If then the tool becomes popular and other
          people begin to use it, then I should I work on the documentation and
          interface. This will then ensure then I make the best use of my time without
          sinking effort onto something that could have little interest. Given the choice
          I like writing robust, well documented software but this takes extra time and
          in a competitive academic job market I feel like this is a luxury.</p>
          <div class='hentry'>
            <p>
              Interested in bioinformatics and data analysis?
              <b><a href='http://twitter.com/bioinformatics'>Follow me on twitter.</a></b>
            </p>
          </div>
          <div class='hentry'>
              <script type='text/javascript'>
                var idcomments_acct     = '2fcd532c05e4f66ac57f8adfafbc9c11';
                var idcomments_post_id  = 'www.bioinformaticszen.com/post/whats-the-point-of-writing-good-scientific-software/';
                var idcomments_post_url = '/post/whats-the-point-of-writing-good-scientific-software/';
              </script>
              <span id='IDCommentsPostTitle' style='display:none'></span>
              <script src='http://www.intensedebate.com/js/genericCommentWrapperV2.js' type='text/javascript'></script>
          </div>
        </div>
      </div>
      <div id='sidebar'>
        <div class='widget'>
          <h3>about</h3>
          <p>
            I'm Michael Barton, a post-doctoral researcher in bioinformatics. I enjoy writing about data analysis and simple approaches to computational biology.
          </p>
          <p>
            Follow me on twitter as
            <b><a href='http://twitter.com/bioinformatics'>@bioinformatics</a></b>
          </p>
        </div>
        <div class='widget'>
          <h3>links</h3>
          <ul class='links'>
            <li>
              <a href='/'>
                index
              </a>
            </li>
            <li>
              <a href='http://www.michaelbarton.me.uk'>
                about
              </a>
            </li>
            <li>
              <a href='/faq'>
                FAQ
              </a>
            </li>
            <li>
              <a href='mailto:mail@bioinformaticszen.com'>
                email
              </a>
            </li>
            <li>
              <a href='http://www.youtube.com/user/bioinformaticszen'>
                youtube
              </a>
            </li>
            <li>
              <a href='http://feeds.feedburner.com/BioinformaticsZen'>
                feed
              </a>
            </li>
          </ul>
        </div>
        <div class='widget'>
          <h3>related</h3>
          <ul class='links'>
            <li>
              <a href='../unit-testing-in-python/'>
                Video: building robust Python programs using unit-tests
              </a>
            </li>
            <li>
              <a href='../simple-functional-programming-in-r/'>
                Simple functional programming in R
              </a>
            </li>
            <li>
              <a href='../snippet/'>
                Simple command-line clojure scripts
              </a>
            </li>
            <li>
              <a href='../using-a-database/'>
                Using a database
              </a>
            </li>
            <li>
              <a href='../scripting/'>
                Scripting
              </a>
            </li>
            <li>
              <a href='../why-write-good-software/'>
                Why write good software
              </a>
            </li>
            <li>
              <a href='../reuse,-contribute,-create/'>
                Reuse, contribute, create
              </a>
            </li>
            <li>
              <a href='../writing-good-code/'>
                Writing good code
              </a>
            </li>
          </ul>
        </div>
      </div>
    </div>
      <script>
          var _gaq = [['_setAccount', 'UA-1362555-1'], ['_trackPageview']];
          (function(d, t) {
              var g = d.createElement(t),
                  s = d.getElementsByTagName(t)[0];
              g.async = true;
              g.src = '//www.google-analytics.com/ga.js';
              s.parentNode.insertBefore(g, s);
          })(document, 'script');
      </script>
  </body>
</html>
