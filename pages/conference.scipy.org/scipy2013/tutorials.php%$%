

<!DOCTYPE html>
<html>
<head>


<title>SciPy 2013&nbsp;::&nbsp;Tutorials</title>

<meta http-equiv="content-type" content="text/html;charset=utf-8"/>
<link href='//fonts.googleapis.com/css?family=Michroma' rel='stylesheet' type='text/css'>
<link href='//fonts.googleapis.com/css?family=Lato:400,700' rel='stylesheet' type='text/css'>

<link href="inc/2013.css" rel="stylesheet"  type="text/css"/>
<link rel="shortcut icon" href="favicon.ico"/>


<link rel="shortcut icon" href="http://conference.scipy.org/scipy2013/favicon.ico" />
</head>

<body>

<!-- for facebook like button -->
<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div id="container">

<header id="page_header">

<div id="account_nav">
<a href="registered_login.php">Sign in</a> | <a href="create_account.php">Create Account</a>
  </div>
  <div class="header_logo">
    <a href="index.php"><img src="img/scipysticker.png" id="Python" alt="SciPy2013" width="359" height="99" /></a>
  </div>

  <div class="header_tagline">
    Scientific Computing with Python <br /> Austin, Texas &#8226; June 24-29<br />
    <span class="highlight" style="font-family: Arial, non-serif; padding: 0 4em 0 4em;">Registration - 0% Full</span>
  </div>
</header>

<div style="clear:both;"></div>

<div id="nav">
  <ul>
  <li><a href="about.php">About</a>
  <ul>
     <li><a href="about.php">About</a></li>
     <li><a href="john_hunter_plotting_contest.php">Plotting Contest</a></li>
     <li><a href="organizers.php">Organizers</a></li>
     <li><a href="diversity.php">Diversity</a></li>
     <li><a href="code_of_conduct.php">Code of Conduct</a></li>
  </ul></li>
  <li><a href="keynotes.php">Keynotes</a></li>
  <li><a href="program_schedule.php">Program</a>
  <ul>
    <li><a href="keynotes.php">Keynotes</a></li>
    <li><a href="conference_talks_schedule.php">Talk Schedule</a></li>
    <li><a href="mini_symposia_schedule.php">Mini Symposia</a></li>
    <li><a href="tutorials_schedule.php">Tutorial Schedule</a></li>
    <li><a href="posters.php">Poster Session</a></li>
    <li><a href="sprints.php">Sprints</a></li>
    <li><a href="sprints_schedule.php">Sprints Schedule</a></li>
    <li><a href="bofs.php">BoFs</a></li>
  </ul></li>  
  <li><a href="sponsor_overview.php">Sponsors</a>
  <ul>
    <li><a href="sponsor_overview.php">Sponsors</a><li>
    <li><a href="sponsor_levels.php">Sponsor Levels</a></li>
  </ul></li>
  <li><a href="location.php">Venue</a>
  <ul>
    <li><a href="location.php">Venue</a>
    <li><a href="location_floor_map.php">Venue Floor Maps</a>
    <li><a href="location_details.php">Lodging</a></li>
    <li><a href="location_directions_.php">Directions</a></li>
    <li><a href="location_food.php">Restaurants</a></li>
    <li><a href="location_entertain_.php">Entertainment</a></li>
    <li><a href="location_childcare.php">Childcare</a></li>
  </ul></li>
  <li><a href="registration.php">Registration</a>
  <ul>
    <li><a href="registration.php">Registration</a></li>
    <li><a href="reg_fin_aid.php">Fin. Assistance</a></li>
  </ul></li>
</ul></div>
<section id="sidebar">
  <div class="callout" style="width: 100%;">
<h1>Share your SciPy2013 experiences:</h1>
<p>Use these tags for your Twitter and g+ posts</p>
<ul style="margin: 0 1em;">
  <li>#scipy2013</li>
  <li>+ScipyConference</li>
</ul>
</div>

<h3 class="sponsor_level">Institutional Sponsor</h3>
<div class="sponsor_cell">
  <a href="http://www.enthought.com"><img src="img/sponsor_logos/enthought.png" alt="Enthought, Inc." width="251" height="56" class="align_center" /></a>
</div>

<h3 class="sponsor_level">Platinum Sponsors</h3>
<div class="sponsor_cell">
  <a href="http://www.lanl.gov/index.php"><img src="img/sponsor_logos/lanl.png" alt="LANL" width="225" height="54" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.google.com"><img src="img/sponsor_logos/Google.png" alt="Google" width="180" height="64" class="align_center" /></a>
</div>

<h3 class="sponsor_level">Silver Sponsors</h3>
<div class="sponsor_cell">
  <a href="http://continuum.io/"><img src="img/sponsor_logos/continuum_logo.jpg" alt="Continuum" width="178" height="86" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://github.com/"><img src="img/sponsor_logos/github.gif" alt="github" width="180" height="79" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.indeed.com/"><img src="img/sponsor_logos/indeed_logo.jpg" alt="github" width="183" height="66" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.kitware.com/"><img src="img/sponsor_logos/kitware.png" alt="Kitware" width="189" height="49" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://numfocus.org/"><img src="img/sponsor_logos/NumFOCUSfdtn.jpg" alt="NumFOCUS" width="170" height="85" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.python.org/psf/"><img src="img/sponsor_logos/psf_logo.png" alt="Python Software Foundation" width="190" height="72" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.schrodinger.com/"><img src="img/sponsor_logos/schrodinger_logo.png" alt="Schrodinger" width="180" height="68" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.wise.io/"><img src="img/sponsor_logos/wise_io.png" alt="wise.io" width="182" height="63" class="align_center" /></a>
</div>

<h3 class="sponsor_level">Sprint Sponsor</h3>
<div class="sponsor_cell">
  <a href="http://wingware.com/"><img src="img/sponsor_logos/wingware.png" alt="Wingware" width="181" height="93" class="align_center" /></a>
</div>


<h3 class="sponsor_level">Community and Media Sponsors</h3>
<div class="sponsor_cell">
  <a href="http://www.computer.org/portal/web/computingnow/cise"><img src="img/sponsor_logos/CiSE.png" alt="CiSE" width="170" height="51" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://nostarch.com/"><img src="img/sponsor_logos/nsp_logo_black2.png" alt="No Starch Press" width="187" height="29" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.oreilly.com"><img src="img/sponsor_logos/oralogo_cmyk.jpg" alt="O'Reilly" width="189" height="36" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.pyladies.com/"><img src="img/sponsor_logos/pyladies_logo.png" alt="pyladies" width="185" height="79" class="align_center" /></a>
</div>
<div class="sponsor_cell">
  <a href="http://www.pythonweekly.com/"><img src="img/sponsor_logos/python_weekly.png" alt="python weekly" width="191" height="35" class="align_center" /></a>
</div></section>


<section id="main-content">

<h1>SciPy 2013 Tutorials</h1>

<p>The conference always kicks off with two days of tutorials. These sessions provide extremely affordable access to expert training, and consistently receive fantastic feedback from participants. This year we are expanding the tutorial session to include three parallel tracks: introductory, intermediate and advanced.</p>

<hr />
<a name="ti-102"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>Data Processing with Python</h3>

<p>This tutorial is a crash course in data processing and analysis with Python. We will explore a wide variety of domains and data types (text, time-series, log files, etc.) and demonstrate how Python and a number of accompanying modules can be used for effective scientific expression. Starting with NumPy and Pandas, we will begin with loading, managing, cleaning and exploring real-world data right off the instrument. Next, we will return to NumPy and continue on with SciKit-Learn, focusing on a common dimensionality-reduction technique: PCA.</p>

<p>In the second half of the course, we will introduce Python for Big Data Analysis and introduce two common distributed solutions: IPython Parallel and MapReduce. We will develop several routines commonly used for simultaneous calculations and analysis. Using Disco -- a Python MapReduce framework -- we will introduce the concept of MapReduce and build up several scripts which can process a variety of public data sets. Additionally, users will also learn how to launch and manage their own clusters leveraging AWS and StarCluster.</p>
<p>See <a href="tutorial_detail.php?id=102 ">complete details</a></p><hr /><a name="ti-101"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>Guide to Symbolic Computing with SymPy</h3>

<p>SymPy is a pure Python library for symbolic mathematics. It aims to become a
full-featured computer algebra system (CAS) while keeping the code as simple as
possible in order to be comprehensible and easily extensible. SymPy is written
entirely in Python and does not require any external libraries.</p>

<p>In this tutorial we will introduce attendees to SymPy. We will start by showing
how to install and configure this Python module. Then we will proceed to the
basics of constructing and manipulating mathematical expressions in SymPy. We
will also discuss the most common issues and differences from other computer
algebra systems, and how to deal with them. In the last part of this tutorial
we will show how to solve simple, yet illustrative, mathematical problems with
SymPy.</p>

<p>This knowledge should be enough for attendees to start using SymPy for solving
mathematical problems and hacking SymPy's internals (though hacking core
modules may require additional expertise).</p>

<p>We expect attendees of this tutorial to have basic knowledge of Python and
mathematics. However, any more advanced topics will be explained during
presentation.</p>
<p>See <a href="tutorial_detail.php?id=101 ">complete details</a></p><hr /><a name="ti-100"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>NumPy and IPython</h3>

<p>This tutorial is a hands-on introduction to the two most basic
building-blocks of the scientific Python stack: the enhanced
interactive interpreter IPython and the fast numerical
container Numpy. Amongst other things you will learn how to
structure an interactive workflow for scientific computing and
how to create and manipulate numerical data efficiently. You
should have some basic familiarity with Python (variables,
loops, functions) and basic command-line usage (executing
commands, using history).</p>
<p>See <a href="tutorial_detail.php?id=100 ">complete details</a></p><hr /><a name="ti-105"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>Cython: Speed up Python and NumPy, Pythonize C, C++, and Fortran</h3>

<p>Cython is a flexible and multi-faceted tool that brings down the barrier
between Python and other languages. With cython, you can add type information
to your Python code to yield dramatic performance improvements. Cython also
allows you to wrap C, C++ and Fortran libraries to work with Python and NumPy.
It is used extensively in research environments and in end-user applications.</p>

<p>This hands-on tutorial will cover Cython from the ground up, and will include
the newest Cython features, including typed memoryviews.</p>

<p>Target audience:</p>

<p>Developers, researchers, scientists, and engineers who use Python and
NumPy and who routinely hit bottlenecks and need improved performance.</p>

<p>C / C++ / Fortran users who would like their existing code to work with
Python.</p>

<p>Expected level of knowledge:</p>

<p>Intermediate and / or regular user of Python and NumPy. Have used
Python's decorators, exceptions, and classes. Knowledge of NumPy arrays,
array views, fancy indexing, and NumPy dtypes. Have programmed in at
least one of C, C++, or Fortran.</p>

<p>Some familiarity with the Python or NumPy C-API a plus. Familiarity with
memoryviews and buffers a plus. Familiarity with OpenMP a plus.
Array-based inter-language programming between Python and C, C++, or
Fortran a plus.</p>

<p>Goals:</p>

<p>Overall goal: Cython familiarity for newcomers, Cython competence for
those with some experience.</p>

<p>Understand what Cython is, what benefit it brings, when it is appropriate
to use.</p>

<p>Know how to create and use a setup.py file that will create an extension
module using cython.</p>

<p>Know how to use Cython from within the IPython notebook.</p>

<p>Know how and why to add cython type declarations to Python code.</p>

<p>Know how to create cdef and cpdef functions and cdef classes in Cython.</p>

<p>Know how to use Cython's typed memoryviews to work with buffer objects and
C / C++ / Fortran arrays.</p>

<p>Know how to identify cython bottlenecks and speed them up.</p>

<p>Know how to wrap external C / C++ / Fortran 90 code with Cython.</p>

<p>Know how to handle inter-language error states with Cython.</p>

<p>Know how to apply Cython's OpenMP-based parallelism to straightforward
nested loops for further performance.</p>
<p>See <a href="tutorial_detail.php?id=105 ">complete details</a></p><hr /><a name="ti-103"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>Anatomy of Matplotlib</h3>

<p>This tutorial will be the introduction to matplotlib, intended for users who want to become familiar with python's predominate scientific plotting package. First, the plotting functions that are available will be introduced so users will know what kinds of graphs can be done. We will then cover the fundamental concepts and terminologies, starting from the figure object down to the artists. In an organized and logical fashion, the components of a matplotlib figure are introduced, such as the axes, axis, tickers, and labels. We will explain what an Artist is for, as well as explain the purpose behind Collections. Finally, we will take an overview of the major toolkits available to use, particularly AxesGrid, mplot3d and basemap.</p>
<p>See <a href="tutorial_detail.php?id=103 ">complete details</a></p><hr /><a name="ti-104"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>IPython in depth</h3>

<p>IPython provides tools for interactive and parallel computing that are widely used in scientific computing, but can benefit any Python developer.</p>

<p>We will show how to use IPython in different ways, as: an interactive shell, an embedded shell, a graphical console, a network-aware VM in GUIs, a web-based notebook with code, graphics and rich HTML, and a high-level framework for parallel computing.</p>
<p>See <a href="tutorial_detail.php?id=104 ">complete details</a></p><hr /><a name="ti-106"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>Version Control and Unit Testing for Scientific Software</h3>

<p>Writing software can be a frustrating process but developers have come up with ways to make it less stressful and error prone. Version control saves the history of your project and makes it easier for multiple people to participate in development. Unit testing and testing frameworks help ensure the correctness of your code and help you find errors by quickly executing and testing your entire code base. These tools can save you time and stress and are valuable to anyone writing software of any description.</p>

<p>This collaborative, hands-on tutorial will cover version control with Git plus writing and running unit tests in Python (and IPython!) using the nose testing framework. Attendees should be comfortable with the basics of Python and the command line but no experience with scientific Python is necessary.</p>
<p>See <a href="tutorial_detail.php?id=106 ">complete details</a></p><hr /><a name="ti-108"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>Diving into NumPy code</h3>

<p>Do you want to contribute to NumPy but find the codebase daunting ? Do you want
to extend NumPy (e.g. adding support for decimal, or arbitrary precision) ? Are
you curious to understand how NumPy works at all ? Then this tutorial is for
you.</p>

<p>The goal of this tutorial is do dive into NumPy codebase, in particular the
core C implementation. You will learn how to build NumPy from sources, how some
of the core concepts such as data types and ufuncs are implemented at the C
level and how it is hooked up to the Python runtime. You will also learn how to
add a new ufunc and a new data type.</p>

<p>During the tutorial, we will also have a look at various tools (unix-oriented)
that can help tracking bugs or follow a particular numpy expression from its
python representation to its low-level implementation.</p>

<p>While a working knowledge of C and Python is required, we do not assume a
preliminary knowledge of the NumPy codebase. An understanding of Python C
extensions is a plus, but not required either.</p>
<p>See <a href="tutorial_detail.php?id=108 ">complete details</a></p><hr /><a name="ti-107"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>An Introduction to scikit-learn (I)</h3>

<p>Machine Learning is the branch of computer science concerned with the development of algorithms which can learn from previously-seen data in order to make predictions about future data, and has become an important part of research in many scientific fields.  This set of tutorials will introduce the basics of machine learning, and how these learning tasks can be accomplished using Scikit-Learn, a machine learning library written in Python and built on NumPy, SciPy, and Matplotlib.  By the end of the tutorials, participants will be poised to take advantage of Scikit-learnâs wide variety of machine learning algorithms to explore their own data sets.  The tutorial will comprise two sessions, Session I in the morning (intermediate track), and Session II in the afternoon (advanced track).  Participants are free to attend either one or both, but to get the most out of the material, we encourage those attending in the afternoon to attend in the morning as well.</p>

<p>Session I will assume participants already have a basic knowledge of using numpy and matplotlib for manipulating and visualizing data.  It will require no prior knowledge of machine learning or scikit-learn.  The goals of Session I are to introduce participants to the basic concepts of machine learning, to give a hands-on introduction to using Scikit-learn for machine learning in Python, and give participants experience with several practical examples and applications of applying supervised learning to a variety of data.  It will cover basic classification and regression problems, regularization of learning models, basic cross-validation, and some examples from text mining and image processing, all using the tools available in scikit-learn.</p>
<p>See <a href="tutorial_detail.php?id=107 ">complete details</a></p><hr /><a name="ti-109"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>Statistical Data Analysis in Python</h3>

<p>This tutorial will introduce the use of Python for statistical data analysis, using data stored as Pandas <code>DataFrame</code> objects. Much of the work involved in analyzing data resides in importing, cleaning and transforming data in preparation for analysis. Therefore, the first half of the course is comprised of a 2-part overview of basic and intermediate Pandas usage that will show how to effectively manipulate datasets in memory. This includes tasks like indexing, alignment, join/merge methods, date/time types, and handling of missing data. Next, we will cover plotting and visualization using Pandas and Matplotlib, focusing on creating effective visual representations of your data, while avoiding common pitfalls. Finally, participants will be introduced to methods for statistical data modeling using some of the advanced functions in Numpy, Scipy and Pandas. This will include fitting your data to probability distributions, estimating relationships among variables using linear and non-linear models, and a brief introduction to Bayesian methods. Each section of the tutorial will involve hands-on manipulation and analysis of sample datasets, to be provided to attendees in advance.</p>

<p>The target audience for the tutorial includes all new Python users, though we recommend that users also attend the NumPy and IPython session in the introductory track.</p>

<p>Tutorial GitHub repo: <a href="https://github.com/fonnesbeck/statistical-analysis-python-tutorial">https://github.com/fonnesbeck/statistical-analysis-python-tutorial</a></p>
<p>See <a href="tutorial_detail.php?id=109 ">complete details</a></p><hr /><a name="ti-110"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>Using geospatial data with python</h3>

<p>Geographically referenced data is important in many scientific fields, and working with spatial data has become widespread in other domains as well (e.g. Google Maps, geolocated tweets, 4square checkins). Python has become an increasingly important language for working with geospatial data. In this tutorial, students will get experience in working with common geospatial formats in open source python libraries.</p>

<p>Python bindings are available for (nearly) all the standard libraries for working with geospatial data (proprietary and open source). Some of these libraries (including PROJ.4 and GDAL) will be discussed and used in this tutorial, along with more "pythonic" packages for accessing them, such as Shapely. Using spatially-aware databases will be discussed, with examples and an exercise using PostGIS, an extension to PostgreSQL. Python scripting extensions to Geographic Information Systems (GIS) packages such as QGIS and ArcView will be briefly discussed.</p>

<p>This tutorial should be accessible to anyone who has a basic understanding of NumPy and matplotlib. Prior familiarity with SQL database queries and the python DB API will be helpful for the PostGIS section.</p>
<p>See <a href="tutorial_detail.php?id=110 ">complete details</a></p><hr /><a name="ti-111"></a>
<p class="intra_page_nav"><a href="#top">[ back to top ]</a></p>
  <h3>An Introduction to scikit-learn (II)</h3>

<p>Machine Learning is the branch of computer science concerned with the development of algorithms which can learn from previously-seen data in order to make predictions about future data, and has become an important part of research in many scientific fields.  This set of tutorials will introduce the basics of machine learning, and how these learning tasks can be accomplished using Scikit-Learn, a machine learning library written in Python and built on NumPy, SciPy, and Matplotlib.  By the end of the tutorials, participants will be poised to take advantage of Scikit-learnâs wide variety of machine learning algorithms to explore their own data sets.  The tutorial will comprise two sessions, Session I in the morning (intermediate track), and Session II in the afternoon (advanced track).  Participants are free to attend either one or both, but to get the most out of the material, we encourage those attending in the afternoon to attend in the morning as well.</p>

<p>Session II will build upon Session I, and assume familiarity with the concepts covered there.  The goals of Session II are to introduce more involved algorithms and techniques which are vital for successfully applying machine learning in practice.  It will cover cross-validation and hyperparameter optimization, unsupervised algorithms, pipelines, and go into depth on a few extremely powerful learning algorithms available in Scikit-learn: Support Vector Machines, Random Forests, and Sparse Models.  We will finish with an extended exercise applying scikit-learn to a real-world problem.</p>
<p>See <a href="tutorial_detail.php?id=111 ">complete details</a></p><hr />
</section>

<div style="clear:both;"></div>
<footer id="page_footer">
<p>SciPy 2013 | <a href="privacy_policy.php">Privacy Policy</a> | contact: <a href="mailto:scipy-organizers@scipy.org">scipy-organizers@scipy.org</a></p>
</footer>
</div>

<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>

</body>

</html>