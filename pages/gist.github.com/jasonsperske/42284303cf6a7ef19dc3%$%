<!DOCTYPE html>
<html class="  ">
<head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

  <title>A simple Python program that can read DOOM.Hexen IWAD and PWAD files and render them as SVG see examples at http://jason.sperske.com/wad/</title>

  <meta content="authenticity_token" name="csrf-param" />
<meta content="vV/BNtcGTXttAemo6QbYmJA3wm5AZmmk/BxVJ/Rq85t1EeTcgJ37aQUkY0TTl9aGrg4dDImk44q2BAotVUvcIQ==" name="csrf-token" />
  <meta name="viewport" content="width=960">


    <link type="text/plain" rel="author" href="https://github.com/humans.txt" />
    <meta content="gist" name="octolytics-app-id" /><meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="1FDCC814:1CCC:5560E9F:53B15AFB" name="octolytics-dimension-request_id" />
  <link rel="assets" href="https://gist-assets.github.com/">
  

  <link href="https://gist-assets.github.com/assets/application-fd589be2b984cbefe452bd44dea56735.css" media="screen, print" rel="stylesheet" />
  <script src="https://gist-assets.github.com/assets/application-43fec3440ac90fab50d4ef5feff0fd47.js"></script>

      <meta name="twitter:card" content="summary">
  <meta name="twitter:site" content="@github">
  <meta property="og:title" content="jasonsperske/WADParser.py">
  <meta property="og:type" content="githubog:gist">
  <meta property="og:url" content="https://gist.github.com/jasonsperske/42284303cf6a7ef19dc3">
  <meta property="og:image" content="https://avatars0.githubusercontent.com/u/125513?s=140">
  <meta property="og:site_name" content="GitHub Gists">
  <meta property="og:description" content="A simple Python program that can read DOOM.Hexen IWAD and PWAD files and render them as SVG see examples at http://jason.sperske.com/wad/ - Gist is a simple way to share snippets of text and code with others.">
  <meta name="description" content="A simple Python program that can read DOOM.Hexen IWAD and PWAD files and render them as SVG see examples at http://jason.sperske.com/wad/ - Gist is a simple way to share snippets of text and code with others.">


</head>

<body class=" "
  data-plan="">

  <div id="wrapper">
    

    <div id="header" class="header header-logged-out">
      <div class="container" class="clearfix">
        <a class="header-logo-wordmark" href="https://gist.github.com/"></a>

        <div class="header-actions">
          <a class="button primary" href="https://github.com/signup?return_to=gist">Sign up for a GitHub account</a>
          <a class="button" href="https://gist.github.com/login?return_to=%2Fjasonsperske%2F42284303cf6a7ef19dc3" data-skip-pjax>Sign in</a>
        </div>
        <div class="divider-vertical"></div>
        <div class="topsearch">
  <form id="top_search_form" action="/search" data-pjax-remote=push accept-charset="UTF-8">
    <div class="search">
      <input type="text" class="search js-search js-navigation-enable " name="q" placeholder="Search&#x2026;" data-hotkey="/" autocomplete=off autocorrect=off value="" >

    </div>
    <div class="divider-vertical"></div>
  </form>
  <ul class="top-nav">
    <li class="explore"><a href="/discover">All Gists</a></li>
  </ul>
</div>

      </div>
    </div>

    <div class="site-content" id="js-pjax-container" data-pjax-container>
      <div id="js-flash-container" class="site-container js-site-container" data-url="/jasonsperske/42284303cf6a7ef19dc3">
  
  

<meta content="true" name="octolytics-dimension-public" /><meta content="11930461" name="octolytics-dimension-gist_id" /><meta content="42284303cf6a7ef19dc3" name="octolytics-dimension-gist_name" /><meta content="false" name="octolytics-dimension-anonymous" /><meta content="125513" name="octolytics-dimension-owner_id" /><meta content="jasonsperske" name="octolytics-dimension-owner_login" /><meta content="false" name="octolytics-dimension-forked" />

<div class="pagehead repohead">
  <div class="container">
    <div class="title-actions-bar">
      <ul class="pagehead-actions">


      </ul>
      <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public" >
  <span class="repo-label"><span class="" >public</span></span>
  <span class="mega-octicon octicon-gist" ></span>
  <div class="meta">
    <div class="gist-author">
      <img src="https://avatars0.githubusercontent.com/u/125513?s=140" width="26" height="26">
        <span class="author vcard">
            <span itemprop="title"><a href="/jasonsperske">jasonsperske</a></span>
        </span> /
      <strong><a href="/jasonsperske/42284303cf6a7ef19dc3" class="js-current-repository">WADParser.py</a></strong>
    </div>
    <div class="gist-timestamp">
        <span class="datetime">Last active <time datetime="2014-05-26T20:37:58Z" is="relative-time">May 26, 2014</time></span>
    </div>
</h1>

    </div>

  </div>
</div>


<div class="container">
  <div class="gist js-gist-container gist-with-sidebar with-full-navigation"
    data-version="5f79a41bf21556fa149524431351c032714182f5"
    data-created="false"
    data-updated="false">

      <div class="gist-sidebar clearfix">
  <div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
    <div class="sunken-menu-contents">
      <ul class="sunken-menu-group">
        <li class="tooltipped tooltipped-w" aria-label="Code">
          <a aria-label="Code" class="sunken-menu-item selected" data-pjax="true" href="/jasonsperske/42284303cf6a7ef19dc3">
            <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
            <img alt="" class="mini-loader" height="16" src="https://gist-assets.github.com/assets/spinners/octocat-spinner-32-4ae22f00973f33151cb92eea73616c5c.gif" width="16" />
</a>        </li>

          <li class="tooltipped tooltipped-w" aria-label="Revisions">
            <a aria-label="Revisions" class="sunken-menu-item" data-pjax="true" href="/jasonsperske/42284303cf6a7ef19dc3/revisions">
              <span class="octicon octicon-git-commit"></span> <span class="full-word">Revisions</span>
              <img alt="" class="mini-loader" height="16" src="https://gist-assets.github.com/assets/spinners/octocat-spinner-32-4ae22f00973f33151cb92eea73616c5c.gif" width="16" />
              <span class='counter'>5</span>
</a>          </li>

          <li class="tooltipped tooltipped-w" aria-label="Stars">
            <a aria-label="Stars" class="sunken-menu-item" data-pjax="true" href="/jasonsperske/42284303cf6a7ef19dc3/stars">
              <span class="octicon octicon-star"></span> <span class="full-word">Stars</span>
              <img alt="" class="mini-loader" height="16" src="https://gist-assets.github.com/assets/spinners/octocat-spinner-32-4ae22f00973f33151cb92eea73616c5c.gif" width="16" />
              <span class='counter'>17</span>
</a>          </li>

          <li class="tooltipped tooltipped-w" aria-label="Forks">
            <a aria-label="Forks" class="sunken-menu-item" data-pjax="true" href="/jasonsperske/42284303cf6a7ef19dc3/forks">
              <span class="octicon octicon-git-branch"></span> <span class="full-word">Forks</span>
              <img alt="" class="mini-loader" height="16" src="https://gist-assets.github.com/assets/spinners/octocat-spinner-32-4ae22f00973f33151cb92eea73616c5c.gif" width="16" />
              <span class='counter'>2</span>
</a>          </li>
      </ul>
    </div><!-- /.sunken-menu-group -->
  </div><!-- /.sunken-menu-contents -->

  <div class="only-with-full-nav">

    <div class="embed-url open" style="display: block;">
      <h3><strong>Embed</strong> URL</h3>
      <div class="clone-url-box">
        <input type="text" class="clone js-url-field" value="&lt;script src=&quot;https://gist.github.com/jasonsperske/42284303cf6a7ef19dc3.js&quot;&gt;&lt;/script&gt;" readonly="readonly">
        <span class="url-box-clippy">
          <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="&lt;script src=&quot;https://gist.github.com/jasonsperske/42284303cf6a7ef19dc3.js&quot;&gt;&lt;/script&gt;" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
        </span>
      </div>
    </div>
    <p class="clone-options"></p>

      
<div class="clone-url open" data-protocol-type="http" data-url="https://gist.github.com/42284303cf6a7ef19dc3.git">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone url-field js-url-field" value="https://gist.github.com/42284303cf6a7ef19dc3.git" readonly="readonly">
    <span class="url-box-clippy">
      <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://gist.github.com/42284303cf6a7ef19dc3.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url " data-protocol-type="ssh" data-url="git@gist.github.com:/42284303cf6a7ef19dc3.git">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone url-field js-url-field" value="git@gist.github.com:/42284303cf6a7ef19dc3.git" readonly="readonly">
    <span class="url-box-clippy">
      <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@gist.github.com:/42284303cf6a7ef19dc3.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>.
</p>


    <a aria-label="Download WADParser.py as a zip file" class="minibutton sidebar-button" href="/jasonsperske/42284303cf6a7ef19dc3/download" rel="nofollow" title="Download WADParser.py as a zip file">
      <span class="octicon octicon-cloud-download"></span>
      Download Gist
</a>  </div><!-- /.only-with-full-nav -->

</div>


    <div class="gist-content">
          <div class="gist-meta">
            <div class="gist-description">
              <p><div>A simple Python program that can read DOOM.Hexen IWAD and PWAD files and render them as SVG see examples at <a href="http://jason.sperske.com/wad/" rel="noreferrer">http://jason.sperske.com/wad/</a>
</div></p>
            </div>
          </div>

      <div class="files">
            <div id="file-wadparser-py" class="file ">
    <a href="/jasonsperske/42284303cf6a7ef19dc3" class="link-overlay">
    <span class="link">View <strong>WADParser.py</strong> <span class="octicon octicon-arrow-right"></span></span>
  </a>
  <div class="meta clearfix">
    <div class="info file-name">
      <span class="icon">
        <b class="octicon octicon-gist"></b>
      </span>
      <a aria-label="Permalink" href="#file-wadparser-py" class="tooltipped tooltipped-s permalink"><strong class="file-name js-selectable-text">WADParser.py</strong></a>
    </div>
    <div class="actions">
      <div class="button-group">
        <a aria-label="View Raw"
          href="/jasonsperske/42284303cf6a7ef19dc3/raw/58eab0ae54c501f07b992336c6280ff9708c6d69/WADParser.py"
          data-skip-pjax class="minibutton raw-url js-view-raw">Raw</a>
      </div>
    </div>
  </div>
  <div class="suppressed">
    <a class="js-show-suppressed-file">File suppressed. Click to show.</a>
  </div>
  <div class="blob-wrapper data type-python js-blob-data">
    



    <div class="file-data">
      <table cellpadding="0" cellspacing="0" class="lines highlight">
        <tr>
          <td class="line-numbers">
            <span class="line-number" id="file-wadparser-py-L1" rel="file-wadparser-py-L1">1</span>
            <span class="line-number" id="file-wadparser-py-L2" rel="file-wadparser-py-L2">2</span>
            <span class="line-number" id="file-wadparser-py-L3" rel="file-wadparser-py-L3">3</span>
            <span class="line-number" id="file-wadparser-py-L4" rel="file-wadparser-py-L4">4</span>
            <span class="line-number" id="file-wadparser-py-L5" rel="file-wadparser-py-L5">5</span>
            <span class="line-number" id="file-wadparser-py-L6" rel="file-wadparser-py-L6">6</span>
            <span class="line-number" id="file-wadparser-py-L7" rel="file-wadparser-py-L7">7</span>
            <span class="line-number" id="file-wadparser-py-L8" rel="file-wadparser-py-L8">8</span>
            <span class="line-number" id="file-wadparser-py-L9" rel="file-wadparser-py-L9">9</span>
            <span class="line-number" id="file-wadparser-py-L10" rel="file-wadparser-py-L10">10</span>
            <span class="line-number" id="file-wadparser-py-L11" rel="file-wadparser-py-L11">11</span>
            <span class="line-number" id="file-wadparser-py-L12" rel="file-wadparser-py-L12">12</span>
            <span class="line-number" id="file-wadparser-py-L13" rel="file-wadparser-py-L13">13</span>
            <span class="line-number" id="file-wadparser-py-L14" rel="file-wadparser-py-L14">14</span>
            <span class="line-number" id="file-wadparser-py-L15" rel="file-wadparser-py-L15">15</span>
            <span class="line-number" id="file-wadparser-py-L16" rel="file-wadparser-py-L16">16</span>
            <span class="line-number" id="file-wadparser-py-L17" rel="file-wadparser-py-L17">17</span>
            <span class="line-number" id="file-wadparser-py-L18" rel="file-wadparser-py-L18">18</span>
            <span class="line-number" id="file-wadparser-py-L19" rel="file-wadparser-py-L19">19</span>
            <span class="line-number" id="file-wadparser-py-L20" rel="file-wadparser-py-L20">20</span>
            <span class="line-number" id="file-wadparser-py-L21" rel="file-wadparser-py-L21">21</span>
            <span class="line-number" id="file-wadparser-py-L22" rel="file-wadparser-py-L22">22</span>
            <span class="line-number" id="file-wadparser-py-L23" rel="file-wadparser-py-L23">23</span>
            <span class="line-number" id="file-wadparser-py-L24" rel="file-wadparser-py-L24">24</span>
            <span class="line-number" id="file-wadparser-py-L25" rel="file-wadparser-py-L25">25</span>
            <span class="line-number" id="file-wadparser-py-L26" rel="file-wadparser-py-L26">26</span>
            <span class="line-number" id="file-wadparser-py-L27" rel="file-wadparser-py-L27">27</span>
            <span class="line-number" id="file-wadparser-py-L28" rel="file-wadparser-py-L28">28</span>
            <span class="line-number" id="file-wadparser-py-L29" rel="file-wadparser-py-L29">29</span>
            <span class="line-number" id="file-wadparser-py-L30" rel="file-wadparser-py-L30">30</span>
            <span class="line-number" id="file-wadparser-py-L31" rel="file-wadparser-py-L31">31</span>
            <span class="line-number" id="file-wadparser-py-L32" rel="file-wadparser-py-L32">32</span>
            <span class="line-number" id="file-wadparser-py-L33" rel="file-wadparser-py-L33">33</span>
            <span class="line-number" id="file-wadparser-py-L34" rel="file-wadparser-py-L34">34</span>
            <span class="line-number" id="file-wadparser-py-L35" rel="file-wadparser-py-L35">35</span>
            <span class="line-number" id="file-wadparser-py-L36" rel="file-wadparser-py-L36">36</span>
            <span class="line-number" id="file-wadparser-py-L37" rel="file-wadparser-py-L37">37</span>
            <span class="line-number" id="file-wadparser-py-L38" rel="file-wadparser-py-L38">38</span>
            <span class="line-number" id="file-wadparser-py-L39" rel="file-wadparser-py-L39">39</span>
            <span class="line-number" id="file-wadparser-py-L40" rel="file-wadparser-py-L40">40</span>
            <span class="line-number" id="file-wadparser-py-L41" rel="file-wadparser-py-L41">41</span>
            <span class="line-number" id="file-wadparser-py-L42" rel="file-wadparser-py-L42">42</span>
            <span class="line-number" id="file-wadparser-py-L43" rel="file-wadparser-py-L43">43</span>
            <span class="line-number" id="file-wadparser-py-L44" rel="file-wadparser-py-L44">44</span>
            <span class="line-number" id="file-wadparser-py-L45" rel="file-wadparser-py-L45">45</span>
            <span class="line-number" id="file-wadparser-py-L46" rel="file-wadparser-py-L46">46</span>
            <span class="line-number" id="file-wadparser-py-L47" rel="file-wadparser-py-L47">47</span>
            <span class="line-number" id="file-wadparser-py-L48" rel="file-wadparser-py-L48">48</span>
            <span class="line-number" id="file-wadparser-py-L49" rel="file-wadparser-py-L49">49</span>
            <span class="line-number" id="file-wadparser-py-L50" rel="file-wadparser-py-L50">50</span>
            <span class="line-number" id="file-wadparser-py-L51" rel="file-wadparser-py-L51">51</span>
            <span class="line-number" id="file-wadparser-py-L52" rel="file-wadparser-py-L52">52</span>
            <span class="line-number" id="file-wadparser-py-L53" rel="file-wadparser-py-L53">53</span>
            <span class="line-number" id="file-wadparser-py-L54" rel="file-wadparser-py-L54">54</span>
            <span class="line-number" id="file-wadparser-py-L55" rel="file-wadparser-py-L55">55</span>
            <span class="line-number" id="file-wadparser-py-L56" rel="file-wadparser-py-L56">56</span>
            <span class="line-number" id="file-wadparser-py-L57" rel="file-wadparser-py-L57">57</span>
            <span class="line-number" id="file-wadparser-py-L58" rel="file-wadparser-py-L58">58</span>
            <span class="line-number" id="file-wadparser-py-L59" rel="file-wadparser-py-L59">59</span>
            <span class="line-number" id="file-wadparser-py-L60" rel="file-wadparser-py-L60">60</span>
            <span class="line-number" id="file-wadparser-py-L61" rel="file-wadparser-py-L61">61</span>
            <span class="line-number" id="file-wadparser-py-L62" rel="file-wadparser-py-L62">62</span>
            <span class="line-number" id="file-wadparser-py-L63" rel="file-wadparser-py-L63">63</span>
            <span class="line-number" id="file-wadparser-py-L64" rel="file-wadparser-py-L64">64</span>
            <span class="line-number" id="file-wadparser-py-L65" rel="file-wadparser-py-L65">65</span>
            <span class="line-number" id="file-wadparser-py-L66" rel="file-wadparser-py-L66">66</span>
            <span class="line-number" id="file-wadparser-py-L67" rel="file-wadparser-py-L67">67</span>
            <span class="line-number" id="file-wadparser-py-L68" rel="file-wadparser-py-L68">68</span>
            <span class="line-number" id="file-wadparser-py-L69" rel="file-wadparser-py-L69">69</span>
            <span class="line-number" id="file-wadparser-py-L70" rel="file-wadparser-py-L70">70</span>
            <span class="line-number" id="file-wadparser-py-L71" rel="file-wadparser-py-L71">71</span>
            <span class="line-number" id="file-wadparser-py-L72" rel="file-wadparser-py-L72">72</span>
            <span class="line-number" id="file-wadparser-py-L73" rel="file-wadparser-py-L73">73</span>
            <span class="line-number" id="file-wadparser-py-L74" rel="file-wadparser-py-L74">74</span>
            <span class="line-number" id="file-wadparser-py-L75" rel="file-wadparser-py-L75">75</span>
            <span class="line-number" id="file-wadparser-py-L76" rel="file-wadparser-py-L76">76</span>
            <span class="line-number" id="file-wadparser-py-L77" rel="file-wadparser-py-L77">77</span>
            <span class="line-number" id="file-wadparser-py-L78" rel="file-wadparser-py-L78">78</span>
            <span class="line-number" id="file-wadparser-py-L79" rel="file-wadparser-py-L79">79</span>
            <span class="line-number" id="file-wadparser-py-L80" rel="file-wadparser-py-L80">80</span>
            <span class="line-number" id="file-wadparser-py-L81" rel="file-wadparser-py-L81">81</span>
            <span class="line-number" id="file-wadparser-py-L82" rel="file-wadparser-py-L82">82</span>
            <span class="line-number" id="file-wadparser-py-L83" rel="file-wadparser-py-L83">83</span>
            <span class="line-number" id="file-wadparser-py-L84" rel="file-wadparser-py-L84">84</span>
            <span class="line-number" id="file-wadparser-py-L85" rel="file-wadparser-py-L85">85</span>
            <span class="line-number" id="file-wadparser-py-L86" rel="file-wadparser-py-L86">86</span>
            <span class="line-number" id="file-wadparser-py-L87" rel="file-wadparser-py-L87">87</span>
            <span class="line-number" id="file-wadparser-py-L88" rel="file-wadparser-py-L88">88</span>
            <span class="line-number" id="file-wadparser-py-L89" rel="file-wadparser-py-L89">89</span>
            <span class="line-number" id="file-wadparser-py-L90" rel="file-wadparser-py-L90">90</span>
            <span class="line-number" id="file-wadparser-py-L91" rel="file-wadparser-py-L91">91</span>
            <span class="line-number" id="file-wadparser-py-L92" rel="file-wadparser-py-L92">92</span>
            <span class="line-number" id="file-wadparser-py-L93" rel="file-wadparser-py-L93">93</span>
            <span class="line-number" id="file-wadparser-py-L94" rel="file-wadparser-py-L94">94</span>
            <span class="line-number" id="file-wadparser-py-L95" rel="file-wadparser-py-L95">95</span>
            <span class="line-number" id="file-wadparser-py-L96" rel="file-wadparser-py-L96">96</span>
            <span class="line-number" id="file-wadparser-py-L97" rel="file-wadparser-py-L97">97</span>
            <span class="line-number" id="file-wadparser-py-L98" rel="file-wadparser-py-L98">98</span>
            <span class="line-number" id="file-wadparser-py-L99" rel="file-wadparser-py-L99">99</span>
            <span class="line-number" id="file-wadparser-py-L100" rel="file-wadparser-py-L100">100</span>
            <span class="line-number" id="file-wadparser-py-L101" rel="file-wadparser-py-L101">101</span>
            <span class="line-number" id="file-wadparser-py-L102" rel="file-wadparser-py-L102">102</span>
            <span class="line-number" id="file-wadparser-py-L103" rel="file-wadparser-py-L103">103</span>
            <span class="line-number" id="file-wadparser-py-L104" rel="file-wadparser-py-L104">104</span>
            <span class="line-number" id="file-wadparser-py-L105" rel="file-wadparser-py-L105">105</span>
            <span class="line-number" id="file-wadparser-py-L106" rel="file-wadparser-py-L106">106</span>
            <span class="line-number" id="file-wadparser-py-L107" rel="file-wadparser-py-L107">107</span>
            <span class="line-number" id="file-wadparser-py-L108" rel="file-wadparser-py-L108">108</span>
            <span class="line-number" id="file-wadparser-py-L109" rel="file-wadparser-py-L109">109</span>
            <span class="line-number" id="file-wadparser-py-L110" rel="file-wadparser-py-L110">110</span>
            <span class="line-number" id="file-wadparser-py-L111" rel="file-wadparser-py-L111">111</span>
            <span class="line-number" id="file-wadparser-py-L112" rel="file-wadparser-py-L112">112</span>
            <span class="line-number" id="file-wadparser-py-L113" rel="file-wadparser-py-L113">113</span>
            <span class="line-number" id="file-wadparser-py-L114" rel="file-wadparser-py-L114">114</span>
            <span class="line-number" id="file-wadparser-py-L115" rel="file-wadparser-py-L115">115</span>
            <span class="line-number" id="file-wadparser-py-L116" rel="file-wadparser-py-L116">116</span>
            <span class="line-number" id="file-wadparser-py-L117" rel="file-wadparser-py-L117">117</span>
            <span class="line-number" id="file-wadparser-py-L118" rel="file-wadparser-py-L118">118</span>
            <span class="line-number" id="file-wadparser-py-L119" rel="file-wadparser-py-L119">119</span>
            <span class="line-number" id="file-wadparser-py-L120" rel="file-wadparser-py-L120">120</span>
            <span class="line-number" id="file-wadparser-py-L121" rel="file-wadparser-py-L121">121</span>
            <span class="line-number" id="file-wadparser-py-L122" rel="file-wadparser-py-L122">122</span>
          </td>
          <td class="line-data">
            <pre class="line-pre"><div class="line" id="file-wadparser-py-LC1"><span class="c">#!/usr/bin/env python3</span></div><div class="line" id="file-wadparser-py-LC2">&nbsp;</div><div class="line" id="file-wadparser-py-LC3"><span class="kn">import</span> <span class="nn">struct</span></div><div class="line" id="file-wadparser-py-LC4"><span class="kn">import</span> <span class="nn">re</span></div><div class="line" id="file-wadparser-py-LC5">&nbsp;</div><div class="line" id="file-wadparser-py-LC6"><span class="k">class</span> <span class="nc">Wad</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC7">    <span class="sd">&quot;&quot;&quot;Encapsulates the data found inside a WAD file&quot;&quot;&quot;</span></div><div class="line" id="file-wadparser-py-LC8">&nbsp;</div><div class="line" id="file-wadparser-py-LC9">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">wadFile</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC10">        <span class="sd">&quot;&quot;&quot;Each WAD files contains definitions for global attributes as well as map level attributes&quot;&quot;&quot;</span></div><div class="line" id="file-wadparser-py-LC11">        <span class="bp">self</span><span class="o">.</span><span class="n">levels</span> <span class="o">=</span> <span class="p">[]</span></div><div class="line" id="file-wadparser-py-LC12">        <span class="bp">self</span><span class="o">.</span><span class="n">wad_format</span> <span class="o">=</span> <span class="s">&#39;DOOM&#39;</span> <span class="c">#Assume DOOM format unless &#39;BEHAVIOR&#39; </span></div><div class="line" id="file-wadparser-py-LC13">        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">wadFile</span><span class="p">,</span> <span class="s">&quot;rb&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC14">            <span class="n">header_size</span> <span class="o">=</span> <span class="mi">12</span></div><div class="line" id="file-wadparser-py-LC15">            <span class="bp">self</span><span class="o">.</span><span class="n">wad_type</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span></div><div class="line" id="file-wadparser-py-LC16">            <span class="bp">self</span><span class="o">.</span><span class="n">num_lumps</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&quot;&lt;I&quot;</span><span class="p">,</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span></div><div class="line" id="file-wadparser-py-LC17">            <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&quot;&lt;I&quot;</span><span class="p">,</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">4</span><span class="p">))[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">header_size</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC18">&nbsp;</div><div class="line" id="file-wadparser-py-LC19">            <span class="n">current_level</span> <span class="o">=</span> <span class="n">Level</span><span class="p">(</span><span class="bp">None</span><span class="p">)</span> <span class="c">#The first few records of a WAD are not associated with a level</span></div><div class="line" id="file-wadparser-py-LC20">&nbsp;</div><div class="line" id="file-wadparser-py-LC21">            <span class="n">lump</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span> <span class="c">#Each offset is is part of a packet 16 bytes</span></div><div class="line" id="file-wadparser-py-LC22">            <span class="k">while</span> <span class="nb">len</span><span class="p">(</span><span class="n">lump</span><span class="p">)</span> <span class="o">==</span> <span class="mi">16</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC23">                <span class="n">filepos</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&quot;&lt;I&quot;</span><span class="p">,</span> <span class="n">lump</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">header_size</span></div><div class="line" id="file-wadparser-py-LC24">                <span class="n">size</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&quot;&lt;I&quot;</span><span class="p">,</span> <span class="n">lump</span><span class="p">[</span><span class="mi">4</span><span class="p">:</span><span class="mi">8</span><span class="p">])[</span><span class="mi">0</span><span class="p">]</span></div><div class="line" id="file-wadparser-py-LC25">                <span class="n">name</span> <span class="o">=</span> <span class="n">lump</span><span class="p">[</span><span class="mi">8</span><span class="p">:</span><span class="mi">16</span><span class="p">]</span><span class="o">.</span><span class="n">decode</span><span class="p">(</span><span class="s">&#39;UTF-8&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">rstrip</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\0</span><span class="s">&#39;</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC26">                <span class="k">print</span><span class="p">(</span><span class="n">name</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC27">                <span class="k">if</span><span class="p">(</span><span class="n">re</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s">&#39;E\dM\d|MAP\d\d&#39;</span><span class="p">,</span> <span class="n">name</span><span class="p">)):</span></div><div class="line" id="file-wadparser-py-LC28">                    <span class="c">#Level nodes are named things like E1M1 or MAP01</span></div><div class="line" id="file-wadparser-py-LC29">                    <span class="k">if</span><span class="p">(</span><span class="n">current_level</span><span class="o">.</span><span class="n">is_valid</span><span class="p">()):</span></div><div class="line" id="file-wadparser-py-LC30">                        <span class="bp">self</span><span class="o">.</span><span class="n">levels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">current_level</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC31">                    </div><div class="line" id="file-wadparser-py-LC32">                    <span class="n">current_level</span> <span class="o">=</span> <span class="n">Level</span><span class="p">(</span><span class="n">name</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC33">                <span class="k">elif</span> <span class="n">name</span> <span class="o">==</span> <span class="s">&#39;BEHAVIOR&#39;</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC34">                    <span class="c">#This node only appears in Hexen formated WADs</span></div><div class="line" id="file-wadparser-py-LC35">                    <span class="bp">self</span><span class="o">.</span><span class="n">wad_format</span> <span class="o">=</span> <span class="s">&#39;HEXEN&#39;</span></div><div class="line" id="file-wadparser-py-LC36">                <span class="k">else</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC37">                    <span class="n">current_level</span><span class="o">.</span><span class="n">lumps</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="n">filepos</span><span class="p">:</span><span class="n">filepos</span><span class="o">+</span><span class="n">size</span><span class="p">]</span></div><div class="line" id="file-wadparser-py-LC38">&nbsp;</div><div class="line" id="file-wadparser-py-LC39">                <span class="n">lump</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC40">            <span class="k">if</span><span class="p">(</span><span class="n">current_level</span><span class="o">.</span><span class="n">is_valid</span><span class="p">()):</span></div><div class="line" id="file-wadparser-py-LC41">                <span class="bp">self</span><span class="o">.</span><span class="n">levels</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">current_level</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC42">&nbsp;</div><div class="line" id="file-wadparser-py-LC43">        <span class="k">for</span> <span class="n">level</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">levels</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC44">            <span class="n">level</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">wad_format</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC45">&nbsp;</div><div class="line" id="file-wadparser-py-LC46"><span class="k">class</span> <span class="nc">Level</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC47">    <span class="sd">&quot;&quot;&quot;Represents a level inside a WAD which is a collection of lumps&quot;&quot;&quot;</span></div><div class="line" id="file-wadparser-py-LC48">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC49">        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span></div><div class="line" id="file-wadparser-py-LC50">        <span class="bp">self</span><span class="o">.</span><span class="n">lumps</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">()</span></div><div class="line" id="file-wadparser-py-LC51">        <span class="bp">self</span><span class="o">.</span><span class="n">vertices</span> <span class="o">=</span> <span class="p">[]</span></div><div class="line" id="file-wadparser-py-LC52">        <span class="bp">self</span><span class="o">.</span><span class="n">lower_left</span> <span class="o">=</span> <span class="bp">None</span></div><div class="line" id="file-wadparser-py-LC53">        <span class="bp">self</span><span class="o">.</span><span class="n">upper_right</span> <span class="o">=</span> <span class="bp">None</span></div><div class="line" id="file-wadparser-py-LC54">        <span class="bp">self</span><span class="o">.</span><span class="n">shift</span> <span class="o">=</span> <span class="bp">None</span></div><div class="line" id="file-wadparser-py-LC55">        <span class="bp">self</span><span class="o">.</span><span class="n">lines</span> <span class="o">=</span> <span class="p">[]</span></div><div class="line" id="file-wadparser-py-LC56">&nbsp;</div><div class="line" id="file-wadparser-py-LC57">    <span class="k">def</span> <span class="nf">is_valid</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC58">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span> <span class="ow">and</span> <span class="s">&#39;VERTEXES&#39;</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">lumps</span> <span class="ow">and</span> <span class="s">&#39;LINEDEFS&#39;</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">lumps</span></div><div class="line" id="file-wadparser-py-LC59">&nbsp;</div><div class="line" id="file-wadparser-py-LC60">    <span class="k">def</span> <span class="nf">normalize</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">point</span><span class="p">,</span> <span class="n">padding</span><span class="o">=</span><span class="mi">5</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC61">        <span class="k">return</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">shift</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">point</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">padding</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">shift</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">point</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="n">padding</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC62">&nbsp;</div><div class="line" id="file-wadparser-py-LC63">    <span class="k">def</span> <span class="nf">load</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">wad_format</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC64">        <span class="k">for</span> <span class="n">vertex</span> <span class="ow">in</span> <span class="n">packets_of_size</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">lumps</span><span class="p">[</span><span class="s">&#39;VERTEXES&#39;</span><span class="p">]):</span></div><div class="line" id="file-wadparser-py-LC65">            <span class="n">x</span><span class="p">,</span><span class="n">y</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&#39;&lt;hh&#39;</span><span class="p">,</span> <span class="n">vertex</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">])</span></div><div class="line" id="file-wadparser-py-LC66">            <span class="bp">self</span><span class="o">.</span><span class="n">vertices</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">))</span></div><div class="line" id="file-wadparser-py-LC67">&nbsp;</div><div class="line" id="file-wadparser-py-LC68">        <span class="bp">self</span><span class="o">.</span><span class="n">lower_left</span> <span class="o">=</span> <span class="p">(</span><span class="nb">min</span><span class="p">((</span><span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">vertices</span><span class="p">)),</span> <span class="nb">min</span><span class="p">((</span><span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">vertices</span><span class="p">)))</span></div><div class="line" id="file-wadparser-py-LC69">        <span class="bp">self</span><span class="o">.</span><span class="n">upper_right</span> <span class="o">=</span> <span class="p">(</span><span class="nb">max</span><span class="p">((</span><span class="n">v</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">vertices</span><span class="p">)),</span> <span class="nb">max</span><span class="p">((</span><span class="n">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">vertices</span><span class="p">)))</span></div><div class="line" id="file-wadparser-py-LC70">&nbsp;</div><div class="line" id="file-wadparser-py-LC71">        <span class="bp">self</span><span class="o">.</span><span class="n">shift</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="o">-</span><span class="bp">self</span><span class="o">.</span><span class="n">lower_left</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="mi">0</span><span class="o">-</span><span class="bp">self</span><span class="o">.</span><span class="n">lower_left</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span></div><div class="line" id="file-wadparser-py-LC72">        </div><div class="line" id="file-wadparser-py-LC73">        <span class="n">packet_size</span> <span class="o">=</span> <span class="mi">16</span> <span class="k">if</span> <span class="n">wad_format</span> <span class="ow">is</span> <span class="s">&#39;HEXEN&#39;</span> <span class="k">else</span> <span class="mi">14</span></div><div class="line" id="file-wadparser-py-LC74">        <span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">packets_of_size</span><span class="p">(</span><span class="n">packet_size</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">lumps</span><span class="p">[</span><span class="s">&#39;LINEDEFS&#39;</span><span class="p">]):</span></div><div class="line" id="file-wadparser-py-LC75">            <span class="bp">self</span><span class="o">.</span><span class="n">lines</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">Line</span><span class="p">(</span><span class="n">data</span><span class="p">))</span></div><div class="line" id="file-wadparser-py-LC76">&nbsp;</div><div class="line" id="file-wadparser-py-LC77">    <span class="k">def</span> <span class="nf">save_svg</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC78">        <span class="sd">&quot;&quot;&quot; Scale the drawing to fit inside a 1024x1024 canvas (iPhones don&#39;t like really large SVGs even if they have the same detail) &quot;&quot;&quot;</span></div><div class="line" id="file-wadparser-py-LC79">        <span class="kn">import</span> <span class="nn">svgwrite</span></div><div class="line" id="file-wadparser-py-LC80">        <span class="n">view_box_size</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">normalize</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">upper_right</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC81">        <span class="k">if</span> <span class="n">view_box_size</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">view_box_size</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span></div><div class="line" id="file-wadparser-py-LC82">            <span class="n">canvas_size</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1024</span><span class="p">,</span> <span class="nb">int</span><span class="p">(</span><span class="mi">1024</span><span class="o">*</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">view_box_size</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="n">view_box_size</span><span class="p">[</span><span class="mi">0</span><span class="p">])))</span></div><div class="line" id="file-wadparser-py-LC83">        <span class="k">else</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC84">            <span class="n">canvas_size</span> <span class="o">=</span> <span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="mi">1024</span><span class="o">*</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">view_box_size</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="n">view_box_size</span><span class="p">[</span><span class="mi">1</span><span class="p">])),</span> <span class="mi">1024</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC85">&nbsp;</div><div class="line" id="file-wadparser-py-LC86">        <span class="n">dwg</span> <span class="o">=</span> <span class="n">svgwrite</span><span class="o">.</span><span class="n">Drawing</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="o">+</span><span class="s">&#39;.svg&#39;</span><span class="p">,</span> <span class="n">profile</span><span class="o">=</span><span class="s">&#39;tiny&#39;</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="n">canvas_size</span> <span class="p">,</span> <span class="n">viewBox</span><span class="o">=</span><span class="p">(</span><span class="s">&#39;0 0 </span><span class="si">%d</span><span class="s"> </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">view_box_size</span><span class="p">))</span></div><div class="line" id="file-wadparser-py-LC87">        <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">lines</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC88">            <span class="n">a</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">normalize</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">vertices</span><span class="p">[</span><span class="n">line</span><span class="o">.</span><span class="n">a</span><span class="p">])</span></div><div class="line" id="file-wadparser-py-LC89">            <span class="n">b</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">normalize</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">vertices</span><span class="p">[</span><span class="n">line</span><span class="o">.</span><span class="n">b</span><span class="p">])</span></div><div class="line" id="file-wadparser-py-LC90">            <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">is_one_sided</span><span class="p">():</span></div><div class="line" id="file-wadparser-py-LC91">                <span class="n">dwg</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">dwg</span><span class="o">.</span><span class="n">line</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">stroke</span><span class="o">=</span><span class="s">&#39;#333&#39;</span><span class="p">,</span> <span class="n">stroke_width</span><span class="o">=</span><span class="mi">10</span><span class="p">))</span></div><div class="line" id="file-wadparser-py-LC92">            <span class="k">else</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC93">                <span class="n">dwg</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">dwg</span><span class="o">.</span><span class="n">line</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">stroke</span><span class="o">=</span><span class="s">&#39;#999&#39;</span><span class="p">,</span> <span class="n">stroke_width</span><span class="o">=</span><span class="mi">3</span><span class="p">))</span></div><div class="line" id="file-wadparser-py-LC94">&nbsp;</div><div class="line" id="file-wadparser-py-LC95">        <span class="n">dwg</span><span class="o">.</span><span class="n">save</span><span class="p">()</span></div><div class="line" id="file-wadparser-py-LC96">&nbsp;</div><div class="line" id="file-wadparser-py-LC97"><span class="k">class</span> <span class="nc">Line</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC98">    <span class="sd">&quot;&quot;&quot;Represents a Linedef inside a WAD&quot;&quot;&quot;</span></div><div class="line" id="file-wadparser-py-LC99">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">data</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC100">        <span class="bp">self</span><span class="o">.</span><span class="n">a</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">b</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&#39;&lt;hh&#39;</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">4</span><span class="p">])</span></div><div class="line" id="file-wadparser-py-LC101">        <span class="bp">self</span><span class="o">.</span><span class="n">left_side</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">right_side</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">unpack</span><span class="p">(</span><span class="s">&#39;&lt;hh&#39;</span><span class="p">,</span> <span class="n">data</span><span class="p">[</span><span class="o">-</span><span class="mi">4</span><span class="p">:])</span></div><div class="line" id="file-wadparser-py-LC102">&nbsp;</div><div class="line" id="file-wadparser-py-LC103">    <span class="k">def</span> <span class="nf">is_one_sided</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC104">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">left_side</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="ow">or</span> <span class="bp">self</span><span class="o">.</span><span class="n">right_side</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span></div><div class="line" id="file-wadparser-py-LC105">&nbsp;</div><div class="line" id="file-wadparser-py-LC106"><span class="k">def</span> <span class="nf">packets_of_size</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span></div><div class="line" id="file-wadparser-py-LC107">    <span class="n">size</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)</span></div><div class="line" id="file-wadparser-py-LC108">    <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span></div><div class="line" id="file-wadparser-py-LC109">    <span class="k">while</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">size</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC110">        <span class="k">yield</span> <span class="n">data</span><span class="p">[</span><span class="n">index</span> <span class="p">:</span> <span class="n">index</span><span class="o">+</span><span class="n">n</span><span class="p">]</span></div><div class="line" id="file-wadparser-py-LC111">        <span class="n">index</span> <span class="o">=</span> <span class="n">index</span> <span class="o">+</span> <span class="n">n</span></div><div class="line" id="file-wadparser-py-LC112">    <span class="k">return</span></div><div class="line" id="file-wadparser-py-LC113">&nbsp;</div><div class="line" id="file-wadparser-py-LC114"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC115">    <span class="kn">import</span> <span class="nn">sys</span></div><div class="line" id="file-wadparser-py-LC116">&nbsp;</div><div class="line" id="file-wadparser-py-LC117">    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC118">        <span class="n">wad</span> <span class="o">=</span> <span class="n">Wad</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span></div><div class="line" id="file-wadparser-py-LC119">        <span class="k">for</span> <span class="n">level</span> <span class="ow">in</span> <span class="n">wad</span><span class="o">.</span><span class="n">levels</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC120">            <span class="n">level</span><span class="o">.</span><span class="n">save_svg</span><span class="p">()</span></div><div class="line" id="file-wadparser-py-LC121">    <span class="k">else</span><span class="p">:</span></div><div class="line" id="file-wadparser-py-LC122">        <span class="k">print</span><span class="p">(</span><span class="s">&#39;You need to pass a WAD file as the only argument&#39;</span><span class="p">)</span></div></pre>
          </td>
        </tr>
      </table>
    </div>

  </div>
</div>


        <div class="discussion-timeline js-quote-selection-container">

          <div class="js-discussion">
            
<div class="timeline-comment-wrapper js-comment-container">
  <a href="/Slipyx"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/694193?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-1234524" class="comment js-comment js-task-list-container" data-body-version="1deeff29a4f5ddc209e1bc0dea4a1e7b">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/Slipyx">Slipyx</a>
          </strong>

          commented

            <a href="#comment-1234524" class="timestamp"><time datetime="2014-05-24T00:27:05Z" is="relative-time">May 24, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Nice job. I did something similar a while ago in C here <a href="https://github.com/Slipyx/wadslip/" rel="noreferrer">https://github.com/Slipyx/wadslip/</a>. I'm amazed at how yours is significantly less code, although could be the language used. Mine also doesn't do anything other than DOOM well.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/kmonsoor"><img class="timeline-comment-avatar" src="https://avatars3.githubusercontent.com/u/1219418?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-1234867" class="comment js-comment js-task-list-container" data-body-version="f38f265141fd8e5d9f620eca8b44e9fa">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/kmonsoor">kmonsoor</a>
          </strong>

          commented

            <a href="#comment-1234867" class="timestamp"><time datetime="2014-05-25T11:08:22Z" is="relative-time">May 25, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Neat job, buddy ...</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/jasonsperske"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/125513?s=140" width="48" height="48"></a>
  <div class="timeline-comment owner-comment">
    <div id="comment-1235311" class="comment js-comment js-task-list-container" data-body-version="e5f2c64f93558afc22671e93055850e2">
      <div class="timeline-comment-header">

          <span class="timeline-comment-label">Owner</span>


        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/jasonsperske">jasonsperske</a>
          </strong>

          commented

            <a href="#comment-1235311" class="timestamp"><time datetime="2014-05-26T17:42:16Z" is="relative-time">May 26, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Thanks Slipyx, I really can't too much credit for the brevity, Python (specifically list comprehensions and the excellent <code>struct.unpack()</code> is making things a lot cleaner).  My longer term plan is to make something like my <a href="http://sndtst.com" rel="noreferrer">http://sndtst.com</a> site but for doom/hexen/Wolf3d/Duke3d levels :)</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/jasonsperske"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/125513?s=140" width="48" height="48"></a>
  <div class="timeline-comment owner-comment">
    <div id="comment-1235366" class="comment js-comment js-task-list-container" data-body-version="14c6155655e7d66e2b8b68116b772477">
      <div class="timeline-comment-header">

          <span class="timeline-comment-label">Owner</span>


        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/jasonsperske">jasonsperske</a>
          </strong>

          commented

            <a href="#comment-1235366" class="timestamp"><time datetime="2014-05-26T20:38:12Z" is="relative-time">May 26, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Moved to python3 :)</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/RobertATfm"><img class="timeline-comment-avatar" src="https://avatars1.githubusercontent.com/u/7881856?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-1245674" class="comment js-comment js-task-list-container" data-body-version="d4403468607524a8bd551ad00c55dd80">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/RobertATfm">RobertATfm</a>
          </strong>

          commented

            <a href="#comment-1245674" class="timestamp"><time datetime="2014-06-13T15:53:22Z" is="relative-time">June 13, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Great script; I'm using it to create "Deathkings of the Dark Citadel" maps for the Doom Wiki (<em>the</em> Doom Wiki, not the new one).</p>

<p>Is anyone else having the problem that the maps created are flipped vertically? Fortunately this is just a slight annoyance, and soon fixed using Inkscape.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

          </div>

          <div class="discussion-timeline-actions">
              <div class="signed-out-comment">
	<a class="button primary" href="https://github.com/signup?return_to=gist" rel="nofollow">Sign up for free</a>
	<strong>to join this conversation on GitHub</strong>.
	Already have an account?
  <a href="https://gist.github.com/login?return_to=%2Fjasonsperske%2F42284303cf6a7ef19dc3" rel="nofollow">Sign in to comment</a>
</div>


          </div>
        </div><!-- /.discussion-timeline -->
      </div><!-- /.gist-content -->
    </div>
  </div>
</div><!-- /.container -->

  <div class="context-overlay"></div>
</div>

    </div>
    <div class="slow-loading-overlay"></div>
  </div>

  <div id="ajax-error-message" class="flash flash-error">
    <div class="container">
      <span class="octicon octicon-alert"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="octicon octicon-x ajax-error-dismiss"></a>
    </div>
  </div>


  <footer>
    <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="https://github.com/blog">Blog</a></li>
      <li><a href="https://github.com/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub "></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.03047s from github-fe102-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
        <li><a href="https://github.com/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->

  </footer>

  <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
        <div class="suggester-container">
            <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                data-url="/jasonsperske/42284303cf6a7ef19dc3/suggestions">
            </div>
        </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>


</body>
</html>
