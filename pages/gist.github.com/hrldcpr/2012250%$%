<!DOCTYPE html>
<html class="  ">
<head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

  <title>one-line tree in python</title>

  <meta content="authenticity_token" name="csrf-param" />
<meta content="OFY7rlRWJAYrTYMMKFKxqob9lan3Fl0KHLXKfq6g8qvEHk3G5pzabh4aZd1xCfCsM+AyntMdnHBsTdeXBO0y/g==" name="csrf-token" />
  <meta name="viewport" content="width=960">


    <link type="text/plain" rel="author" href="https://github.com/humans.txt" />
    <meta content="gist" name="octolytics-app-id" /><meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="1FDCC814:1CCC:555F34E:53B15AE8" name="octolytics-dimension-request_id" />
  <link rel="assets" href="https://gist-assets.github.com/">
  

  <link href="https://gist-assets.github.com/assets/application-fd589be2b984cbefe452bd44dea56735.css" media="screen, print" rel="stylesheet" />
  <script src="https://gist-assets.github.com/assets/application-43fec3440ac90fab50d4ef5feff0fd47.js"></script>

      <meta name="twitter:card" content="summary">
  <meta name="twitter:site" content="@github">
  <meta property="og:title" content="hrldcpr/tree.md">
  <meta property="og:type" content="githubog:gist">
  <meta property="og:url" content="https://gist.github.com/hrldcpr/2012250">
  <meta property="og:image" content="https://avatars2.githubusercontent.com/u/796849?s=140">
  <meta property="og:site_name" content="GitHub Gists">
  <meta property="og:description" content="one-line tree in python - Gist is a simple way to share snippets of text and code with others.">
  <meta name="description" content="one-line tree in python - Gist is a simple way to share snippets of text and code with others.">


</head>

<body class=" "
  data-plan="">

  <div id="wrapper">
    

    <div id="header" class="header header-logged-out">
      <div class="container" class="clearfix">
        <a class="header-logo-wordmark" href="https://gist.github.com/"></a>

        <div class="header-actions">
          <a class="button primary" href="https://github.com/signup?return_to=gist">Sign up for a GitHub account</a>
          <a class="button" href="https://gist.github.com/login?return_to=%2Fhrldcpr%2F2012250" data-skip-pjax>Sign in</a>
        </div>
        <div class="divider-vertical"></div>
        <div class="topsearch">
  <form id="top_search_form" action="/search" data-pjax-remote=push accept-charset="UTF-8">
    <div class="search">
      <input type="text" class="search js-search js-navigation-enable " name="q" placeholder="Search&#x2026;" data-hotkey="/" autocomplete=off autocorrect=off value="" >

    </div>
    <div class="divider-vertical"></div>
  </form>
  <ul class="top-nav">
    <li class="explore"><a href="/discover">All Gists</a></li>
  </ul>
</div>

      </div>
    </div>

    <div class="site-content" id="js-pjax-container" data-pjax-container>
      <div id="js-flash-container" class="site-container js-site-container" data-url="/hrldcpr/2012250">
  
  

<meta content="true" name="octolytics-dimension-public" /><meta content="2012250" name="octolytics-dimension-gist_id" /><meta content="2012250" name="octolytics-dimension-gist_name" /><meta content="false" name="octolytics-dimension-anonymous" /><meta content="796849" name="octolytics-dimension-owner_id" /><meta content="hrldcpr" name="octolytics-dimension-owner_login" /><meta content="false" name="octolytics-dimension-forked" />

<div class="pagehead repohead">
  <div class="container">
    <div class="title-actions-bar">
      <ul class="pagehead-actions">


      </ul>
      <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public" >
  <span class="repo-label"><span class="" >public</span></span>
  <span class="mega-octicon octicon-gist" ></span>
  <div class="meta">
    <div class="gist-author">
      <img src="https://avatars2.githubusercontent.com/u/796849?s=140" width="26" height="26">
        <span class="author vcard">
            <span itemprop="title"><a href="/hrldcpr">hrldcpr</a></span>
        </span> /
      <strong><a href="/hrldcpr/2012250" class="js-current-repository">tree.md</a></strong>
    </div>
    <div class="gist-timestamp">
        <span class="datetime">Last active <time datetime="2013-01-13T21:05:16Z" is="relative-time">January 13, 2013</time></span>
    </div>
</h1>

    </div>

  </div>
</div>


<div class="container">
  <div class="gist js-gist-container gist-with-sidebar with-full-navigation"
    data-version="bb16a1d0cc4880a439184ffbec2601e39476eb50"
    data-created="false"
    data-updated="false">

      <div class="gist-sidebar clearfix">
  <div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
    <div class="sunken-menu-contents">
      <ul class="sunken-menu-group">
        <li class="tooltipped tooltipped-w" aria-label="Code">
          <a aria-label="Code" class="sunken-menu-item selected" data-pjax="true" href="/hrldcpr/2012250">
            <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
            <img alt="" class="mini-loader" height="16" src="https://gist-assets.github.com/assets/spinners/octocat-spinner-32-4ae22f00973f33151cb92eea73616c5c.gif" width="16" />
</a>        </li>

          <li class="tooltipped tooltipped-w" aria-label="Revisions">
            <a aria-label="Revisions" class="sunken-menu-item" data-pjax="true" href="/hrldcpr/2012250/revisions">
              <span class="octicon octicon-git-commit"></span> <span class="full-word">Revisions</span>
              <img alt="" class="mini-loader" height="16" src="https://gist-assets.github.com/assets/spinners/octocat-spinner-32-4ae22f00973f33151cb92eea73616c5c.gif" width="16" />
              <span class='counter'>50</span>
</a>          </li>

          <li class="tooltipped tooltipped-w" aria-label="Stars">
            <a aria-label="Stars" class="sunken-menu-item" data-pjax="true" href="/hrldcpr/2012250/stars">
              <span class="octicon octicon-star"></span> <span class="full-word">Stars</span>
              <img alt="" class="mini-loader" height="16" src="https://gist-assets.github.com/assets/spinners/octocat-spinner-32-4ae22f00973f33151cb92eea73616c5c.gif" width="16" />
              <span class='counter'>479</span>
</a>          </li>

          <li class="tooltipped tooltipped-w" aria-label="Forks">
            <a aria-label="Forks" class="sunken-menu-item" data-pjax="true" href="/hrldcpr/2012250/forks">
              <span class="octicon octicon-git-branch"></span> <span class="full-word">Forks</span>
              <img alt="" class="mini-loader" height="16" src="https://gist-assets.github.com/assets/spinners/octocat-spinner-32-4ae22f00973f33151cb92eea73616c5c.gif" width="16" />
              <span class='counter'>110</span>
</a>          </li>
      </ul>
    </div><!-- /.sunken-menu-group -->
  </div><!-- /.sunken-menu-contents -->

  <div class="only-with-full-nav">

    <div class="embed-url open" style="display: block;">
      <h3><strong>Embed</strong> URL</h3>
      <div class="clone-url-box">
        <input type="text" class="clone js-url-field" value="&lt;script src=&quot;https://gist.github.com/hrldcpr/2012250.js&quot;&gt;&lt;/script&gt;" readonly="readonly">
        <span class="url-box-clippy">
          <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="&lt;script src=&quot;https://gist.github.com/hrldcpr/2012250.js&quot;&gt;&lt;/script&gt;" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
        </span>
      </div>
    </div>
    <p class="clone-options"></p>

      
<div class="clone-url open" data-protocol-type="http" data-url="https://gist.github.com/2012250.git">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone url-field js-url-field" value="https://gist.github.com/2012250.git" readonly="readonly">
    <span class="url-box-clippy">
      <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://gist.github.com/2012250.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url " data-protocol-type="ssh" data-url="git@gist.github.com:/2012250.git">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone url-field js-url-field" value="git@gist.github.com:/2012250.git" readonly="readonly">
    <span class="url-box-clippy">
      <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@gist.github.com:/2012250.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>.
</p>


    <a aria-label="Download tree.md as a zip file" class="minibutton sidebar-button" href="/hrldcpr/2012250/download" rel="nofollow" title="Download tree.md as a zip file">
      <span class="octicon octicon-cloud-download"></span>
      Download Gist
</a>  </div><!-- /.only-with-full-nav -->

</div>


    <div class="gist-content">
          <div class="gist-meta">
            <div class="gist-description">
              <p><div>one-line tree in python</div></p>
            </div>
          </div>

      <div class="files">
            <div id="file-tree-md" class="file ">
    <a href="/hrldcpr/2012250" class="link-overlay">
    <span class="link">View <strong>tree.md</strong> <span class="octicon octicon-arrow-right"></span></span>
  </a>
  <div class="meta clearfix">
    <div class="info file-name">
      <span class="icon">
        <b class="octicon octicon-gist"></b>
      </span>
      <a aria-label="Permalink" href="#file-tree-md" class="tooltipped tooltipped-s permalink"><strong class="file-name js-selectable-text">tree.md</strong></a>
    </div>
    <div class="actions">
      <div class="button-group">
        <a aria-label="View Raw"
          href="/hrldcpr/2012250/raw/1df0c8768d4382863f56430ffd15629d1f9b9a2e/tree.md"
          data-skip-pjax class="minibutton raw-url js-view-raw">Raw</a>
      </div>
    </div>
  </div>
  <div class="suppressed">
    <a class="js-show-suppressed-file">File suppressed. Click to show.</a>
  </div>
  <div class="blob-wrapper data type-markdown js-blob-data">
    

    <div class="readme context-loader-container context-loader-overlay">
      <article class="markdown-body js-file "
        data-task-list-update-url="https://gist.github.com/hrldcpr/2012250/file/tree.md">
        <h1>
<a name="user-content-one-line-tree-in-python" class="anchor" href="#one-line-tree-in-python" rel="noreferrer"><span class="octicon octicon-link"></span></a>One-line Tree in Python</h1>

<p>Using Python's built-in <a href="http://docs.python.org/library/collections.html#collections.defaultdict" rel="noreferrer">defaultdict</a> we can easily define a tree data structure:</p>

<div class="highlight highlight-python"><pre><span class="k">def</span> <span class="nf">tree</span><span class="p">():</span> <span class="k">return</span> <span class="n">defaultdict</span><span class="p">(</span><span class="n">tree</span><span class="p">)</span>
</pre></div>

<p>That's it!</p>

<p>It simply says that a tree is a dict whose default values are trees.</p>

<p>(If you're following along at home, make sure to <code>from collections import defaultdict</code>)</p>

<p>(Also: Hacker News reader @zbuc points out that this is called <a href="https://en.wikipedia.org/wiki/Autovivification" rel="noreferrer">autovivification</a>. Cool!)</p>

<h2>
<a name="user-content-examples" class="anchor" href="#examples" rel="noreferrer"><span class="octicon octicon-link"></span></a>Examples</h2>

<h3>
<a name="user-content-json-esque" class="anchor" href="#json-esque" rel="noreferrer"><span class="octicon octicon-link"></span></a>JSON-esque</h3>

<p>Now we can create JSON-esque nested dictionaries without explicitly creating sub-dictionaries—they magically come into existence as we reference them:</p>

<div class="highlight highlight-python"><pre><span class="n">users</span> <span class="o">=</span> <span class="n">tree</span><span class="p">()</span>
<span class="n">users</span><span class="p">[</span><span class="s">'harold'</span><span class="p">][</span><span class="s">'username'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'hrldcpr'</span>
<span class="n">users</span><span class="p">[</span><span class="s">'handler'</span><span class="p">][</span><span class="s">'username'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'matthandlersux'</span>
</pre></div>

<p>We can print this as json with <code>print(json.dumps(users))</code> and we get the expected:</p>

<div class="highlight highlight-python"><pre><span class="p">{</span><span class="s">"harold"</span><span class="p">:</span> <span class="p">{</span><span class="s">"username"</span><span class="p">:</span> <span class="s">"hrldcpr"</span><span class="p">},</span> <span class="s">"handler"</span><span class="p">:</span> <span class="p">{</span><span class="s">"username"</span><span class="p">:</span> <span class="s">"matthandlersux"</span><span class="p">}}</span>
</pre></div>

<h3>
<a name="user-content-without-assignment" class="anchor" href="#without-assignment" rel="noreferrer"><span class="octicon octicon-link"></span></a>Without assignment</h3>

<p>We can even create structure with no assignment at all:</p>

<div class="highlight highlight-python"><pre><span class="n">taxonomy</span> <span class="o">=</span> <span class="n">tree</span><span class="p">()</span>
<span class="n">taxonomy</span><span class="p">[</span><span class="s">'Animalia'</span><span class="p">][</span><span class="s">'Chordata'</span><span class="p">][</span><span class="s">'Mammalia'</span><span class="p">][</span><span class="s">'Carnivora'</span><span class="p">][</span><span class="s">'Felidae'</span><span class="p">][</span><span class="s">'Felis'</span><span class="p">][</span><span class="s">'cat'</span><span class="p">]</span>
<span class="n">taxonomy</span><span class="p">[</span><span class="s">'Animalia'</span><span class="p">][</span><span class="s">'Chordata'</span><span class="p">][</span><span class="s">'Mammalia'</span><span class="p">][</span><span class="s">'Carnivora'</span><span class="p">][</span><span class="s">'Felidae'</span><span class="p">][</span><span class="s">'Panthera'</span><span class="p">][</span><span class="s">'lion'</span><span class="p">]</span>
<span class="n">taxonomy</span><span class="p">[</span><span class="s">'Animalia'</span><span class="p">][</span><span class="s">'Chordata'</span><span class="p">][</span><span class="s">'Mammalia'</span><span class="p">][</span><span class="s">'Carnivora'</span><span class="p">][</span><span class="s">'Canidae'</span><span class="p">][</span><span class="s">'Canis'</span><span class="p">][</span><span class="s">'dog'</span><span class="p">]</span>
<span class="n">taxonomy</span><span class="p">[</span><span class="s">'Animalia'</span><span class="p">][</span><span class="s">'Chordata'</span><span class="p">][</span><span class="s">'Mammalia'</span><span class="p">][</span><span class="s">'Carnivora'</span><span class="p">][</span><span class="s">'Canidae'</span><span class="p">][</span><span class="s">'Canis'</span><span class="p">][</span><span class="s">'coyote'</span><span class="p">]</span>
<span class="n">taxonomy</span><span class="p">[</span><span class="s">'Plantae'</span><span class="p">][</span><span class="s">'Solanales'</span><span class="p">][</span><span class="s">'Solanaceae'</span><span class="p">][</span><span class="s">'Solanum'</span><span class="p">][</span><span class="s">'tomato'</span><span class="p">]</span>
<span class="n">taxonomy</span><span class="p">[</span><span class="s">'Plantae'</span><span class="p">][</span><span class="s">'Solanales'</span><span class="p">][</span><span class="s">'Solanaceae'</span><span class="p">][</span><span class="s">'Solanum'</span><span class="p">][</span><span class="s">'potato'</span><span class="p">]</span>
<span class="n">taxonomy</span><span class="p">[</span><span class="s">'Plantae'</span><span class="p">][</span><span class="s">'Solanales'</span><span class="p">][</span><span class="s">'Convolvulaceae'</span><span class="p">][</span><span class="s">'Ipomoea'</span><span class="p">][</span><span class="s">'sweet potato'</span><span class="p">]</span>
</pre></div>

<p>We'll prettyprint this time, which requires us to convert to standard dicts first:</p>

<div class="highlight highlight-python"><pre><span class="k">def</span> <span class="nf">dicts</span><span class="p">(</span><span class="n">t</span><span class="p">):</span> <span class="k">return</span> <span class="p">{</span><span class="n">k</span><span class="p">:</span> <span class="n">dicts</span><span class="p">(</span><span class="n">t</span><span class="p">[</span><span class="n">k</span><span class="p">])</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">t</span><span class="p">}</span>
</pre></div>

<p>Now we can prettyprint the structure with <code>pprint(dicts(taxonomy))</code>:</p>

<div class="highlight highlight-python"><pre><span class="p">{</span><span class="s">'Animalia'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Chordata'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Mammalia'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Carnivora'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Canidae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Canis'</span><span class="p">:</span> <span class="p">{</span><span class="s">'coyote'</span><span class="p">:</span> <span class="p">{},</span>
                                                                            <span class="s">'dog'</span><span class="p">:</span> <span class="p">{}}},</span>
                                                      <span class="s">'Felidae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Felis'</span><span class="p">:</span> <span class="p">{</span><span class="s">'cat'</span><span class="p">:</span> <span class="p">{}},</span>
                                                                  <span class="s">'Panthera'</span><span class="p">:</span> <span class="p">{</span><span class="s">'lion'</span><span class="p">:</span> <span class="p">{}}}}}}},</span>
 <span class="s">'Plantae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Solanales'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Convolvulaceae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Ipomoea'</span><span class="p">:</span> <span class="p">{</span><span class="s">'sweet potato'</span><span class="p">:</span> <span class="p">{}}},</span>
                           <span class="s">'Solanaceae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Solanum'</span><span class="p">:</span> <span class="p">{</span><span class="s">'potato'</span><span class="p">:</span> <span class="p">{},</span>
                                                      <span class="s">'tomato'</span><span class="p">:</span> <span class="p">{}}}}}}</span>
</pre></div>

<p>So the substructures we referenced now exist as dicts, with empty dicts at the leaves.</p>

<h3>
<a name="user-content-iteration" class="anchor" href="#iteration" rel="noreferrer"><span class="octicon octicon-link"></span></a>Iteration</h3>

<p>This tree can be fun to iteratively walk through, again because structure comes into being simply by referring to it.</p>

<p>For example, suppose we are parsing a list of new animals to add to our taxonomy above, so we want to call a function like:</p>

<div class="highlight highlight-python"><pre><span class="n">add</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span>
    <span class="s">'Animalia,Chordata,Mammalia,Cetacea,Balaenopteridae,Balaenoptera,blue whale'</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">))</span>
</pre></div>

<p>We can implement this simply as:</p>

<div class="highlight highlight-python"><pre><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">keys</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">t</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
</pre></div>

<p>Again we are never assigning to the dictionary, but just by referencing the keys we have created our new structure:</p>

<div class="highlight highlight-python"><pre><span class="p">{</span><span class="s">'Animalia'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Chordata'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Mammalia'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Carnivora'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Canidae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Canis'</span><span class="p">:</span> <span class="p">{</span><span class="s">'coyote'</span><span class="p">:</span> <span class="p">{},</span>
                                                                            <span class="s">'dog'</span><span class="p">:</span> <span class="p">{}}},</span>
                                                      <span class="s">'Felidae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Felis'</span><span class="p">:</span> <span class="p">{</span><span class="s">'cat'</span><span class="p">:</span> <span class="p">{}},</span>
                                                                  <span class="s">'Panthera'</span><span class="p">:</span> <span class="p">{</span><span class="s">'lion'</span><span class="p">:</span> <span class="p">{}}}},</span>
                                        <span class="s">'Cetacea'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Balaenopteridae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Balaenoptera'</span><span class="p">:</span> <span class="p">{</span><span class="s">'blue whale'</span><span class="p">:</span> <span class="p">{}}}}}}},</span>
 <span class="s">'Plantae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Solanales'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Convolvulaceae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Ipomoea'</span><span class="p">:</span> <span class="p">{</span><span class="s">'sweet potato'</span><span class="p">:</span> <span class="p">{}}},</span>
                           <span class="s">'Solanaceae'</span><span class="p">:</span> <span class="p">{</span><span class="s">'Solanum'</span><span class="p">:</span> <span class="p">{</span><span class="s">'potato'</span><span class="p">:</span> <span class="p">{},</span>
                                                      <span class="s">'tomato'</span><span class="p">:</span> <span class="p">{}}}}}}</span>
</pre></div>

<h2>
<a name="user-content-conclusion" class="anchor" href="#conclusion" rel="noreferrer"><span class="octicon octicon-link"></span></a>Conclusion</h2>

<p>This probably isn't very useful, and it makes for some perplexing code (see <code>add()</code> above).</p>

<p>But if you like Python then I hope this was fun to think about or worthwhile to understand.</p>

<p>There was a <a href="http://news.ycombinator.com/item?id=3881171" rel="noreferrer">good discussion</a> of this gist on Hacker News.</p>

      </article>
    </div>



  </div>
</div>


        <div class="discussion-timeline js-quote-selection-container">

          <div class="js-discussion">
            
<div class="timeline-comment-wrapper js-comment-container">
  <a href="/Ceasar"><img class="timeline-comment-avatar" src="https://avatars3.githubusercontent.com/u/625822?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-274362" class="comment js-comment js-task-list-container" data-body-version="49fccc0bca541007885f1c45b27a33e7">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/Ceasar">Ceasar</a>
          </strong>

          commented

            <a href="#comment-274362" class="timestamp"><time datetime="2012-04-23T22:54:37Z" is="relative-time">April 23, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Nice write-up! I actually had <a href="http://stackoverflow.com/questions/6780952/how-to-change-behavior-of-dict-for-an-instance" rel="noreferrer">discovered</a> this with a friend (@AlexeyMk) last summer. It's a fun trick. The only thing I dislike about this code is that defaultdicts print in an ugly manner, so I prefer the solution offered in the SO post, but it's the same thing in the end.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/hrldcpr"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/796849?s=140" width="48" height="48"></a>
  <div class="timeline-comment owner-comment">
    <div id="comment-274373" class="comment js-comment js-task-list-container" data-body-version="441e4bf10971cf291fccbc5c303bdd71">
      <div class="timeline-comment-header">

          <span class="timeline-comment-label">Owner</span>


        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/hrldcpr">hrldcpr</a>
          </strong>

          commented

            <a href="#comment-274373" class="timestamp"><time datetime="2012-04-23T23:26:57Z" is="relative-time">April 23, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Nice! Defining it using <code>__missing__</code> is pretty awesome, I didn't know about that.<br>
I figured other people must have done this before, but I'm glad to be spreading the word regardless ;)<br>
(In fact it turns out the exact code is already in the autovivification wikipedia article...)</p>

<p>I agree the unprintability is annoying. But I really like how concise the one-line definition is, so for a writeup like this clarity wins.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/md2perpe"><img class="timeline-comment-avatar" src="https://avatars1.githubusercontent.com/u/543239?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-274640" class="comment js-comment js-task-list-container" data-body-version="fbb30d0b1cb64a62cceaf80aaff931b6">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/md2perpe">md2perpe</a>
          </strong>

          commented

            <a href="#comment-274640" class="timestamp"><time datetime="2012-04-24T05:53:07Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Giving Python what has existed in PHP since the dinosaur era...</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/pferreir"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/2699?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-274752" class="comment js-comment js-task-list-container" data-body-version="aba005e408c8099744900bd462a1f56e">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/pferreir">pferreir</a>
          </strong>

          commented

            <a href="#comment-274752" class="timestamp"><time datetime="2012-04-24T06:56:46Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>I didn't know about <code>__missing__</code>. Great!</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/cblp"><img class="timeline-comment-avatar" src="https://avatars1.githubusercontent.com/u/63495?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-274956" class="comment js-comment js-task-list-container" data-body-version="b28f1101b2c944de4804886b20a5be60">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/cblp">cblp</a>
          </strong>

          commented

            <a href="#comment-274956" class="timestamp"><time datetime="2012-04-24T07:46:38Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p><code>tree = lambda: defaultdict (tree)</code> is shorter</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/JakubOboza"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1188?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275030" class="comment js-comment js-task-list-container" data-body-version="3544699b64917d1b3c8def9a1bee6b58">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/JakubOboza">JakubOboza</a>
          </strong>

          commented

            <a href="#comment-275030" class="timestamp"><time datetime="2012-04-24T08:03:58Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Isn't tree in hash both memory waste and making access of element slow. You lose both <em>features</em> of this two data structures.<br>
In my opinion its not the best idea :)</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/jul"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/130171?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275096" class="comment js-comment js-task-list-container" data-body-version="090184fdd7dd50961bd9766878e62842">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/jul">jul</a>
          </strong>

          commented

            <a href="#comment-275096" class="timestamp"><time datetime="2012-04-24T08:31:57Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Funny coincidence ;  I began a package that is oriented as using defaultdict as a k-ary unordered rooted trees (the specific kind of trees you build with defaultdict)<br>
<a href="http://readthedocs.org/docs/vectordict/en/latest/" rel="noreferrer">http://readthedocs.org/docs/vectordict/en/latest/</a></p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/WoLpH"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/270571?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275516" class="comment js-comment js-task-list-container" data-body-version="c8b818eacb86baa0c3dfa59b97848ce7">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/WoLpH">WoLpH</a>
          </strong>

          commented

            <a href="#comment-275516" class="timestamp"><time datetime="2012-04-24T11:22:39Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@JakubOboza: it might be a memory waste but it's not really making the access of the element slower.</p>

<p>If you want a recursive structure you should be prepared to handle the results of that. If you have a tree with <code>n</code> total items and <code>m</code> levels deep and you want to get an item that's <code>m</code> levels deep than you'll have a time complexity of <code>O(m)</code> which is pretty good if you ask me. And if you're going to get multiple items from depth <code>m-1</code> than you can just store the intermediate result to make all lookups <code>O(1)</code> again.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/JakubOboza"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1188?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275530" class="comment js-comment js-task-list-container" data-body-version="258c4aa630948dde04013380fe131a66">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/JakubOboza">JakubOboza</a>
          </strong>

          commented

            <a href="#comment-275530" class="timestamp"><time datetime="2012-04-24T11:34:07Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@WoLpH not that i'm expert on algorithms but...<br>
It depends on a tree type if it is AVL, BST or RB tree then access should be O(logn) whish is fast.  with BST in worst case you get O(n) so it is not always "O(m)". Depends if the tree is balanced or not.</p>

<p>Lets think about how hash works you get in theory O(1) but it is O(k) where k is time spend on hashing function. this 1 in ( ) is marking CONTANT time, it is not changing while data set is growing. </p>

<p>Now space and memory. Hashtables have hash function that gives you index of the element. lets do a very basic example Char -&gt; Int<br>
so for A index of 65 or J you get 74. So you have potentially 24 keys A-Z. </p>

<p>Now important thing you have to allocate for each dict 24 spaces in memory even if you store there 1 key-value pair.</p>

<p>Now if you build tree in hash you get memory cluster fuck and access is much worse because you have tree layers and hashing function for key and this tree is not balanced so in worst scenario you are still at O(n)</p>

<p>Do you now understand what i said in previous comment ?</p>

<p>With regular tree in list / array or something you would be right. But if you will put it into hash you are screwed.  </p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/WoLpH"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/270571?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275539" class="comment js-comment js-task-list-container" data-body-version="ff583fe2602398b5fc10d1eb8eb8e063">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/WoLpH">WoLpH</a>
          </strong>

          commented

            <a href="#comment-275539" class="timestamp"><time datetime="2012-04-24T11:59:18Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@JakubOboza: I'm far from an expert either. I think you and I are talking about different datastructures here.<br>
This structure is more like a btree right now, it is a very simple recursive storage object. AVL/BS/RB trees are sorted structures, since this is based on a dictionary/hash it is not and cannot be sorted.</p>

<p>This data structure is much simpler than AVL/BS/RB trees, although it could be used as a building-block for that, I wouldn't recommend it.</p>

<p>The way I understood it is that this data structure gives you simple access to a recursive data structure without having to define it in advance and accessing it won't be "give me the largest element" or anything but more something like "give me element <code>X</code>" where <code>X</code> is a multi-dimensional key. In that case the lookup time is the amount of dimensions (see <a href="http://wiki.python.org/moin/TimeComplexity#dict" rel="noreferrer">http://wiki.python.org/moin/TimeComplexity#dict</a> for more info).</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/JakubOboza"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1188?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275659" class="comment js-comment js-task-list-container" data-body-version="7760d21c007ab88994c325398ebfebd9">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/JakubOboza">JakubOboza</a>
          </strong>

          commented

            <a href="#comment-275659" class="timestamp"><time datetime="2012-04-24T13:22:12Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>I'm not saying tree is  bad i'm saying this way of implementation is massively suboptimal in terms of memory and access time :)  </p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/jul"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/130171?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275675" class="comment js-comment js-task-list-container" data-body-version="6cbfb177503457f6cfae8c718db6d12a">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/jul">jul</a>
          </strong>

          commented

            <a href="#comment-275675" class="timestamp"><time datetime="2012-04-24T13:36:31Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Well, a (more than) suboptimal solutions that can be implemented easily can still fit in  the functionnal domain in which a software is supposed to work. Therefore it may often be no big deals. (And the computer being very cheap slaves that feel no pain, I strictly feel no remorse in making them burn their CPU on suboptimal code if it significiantly lowers the very expensive developper fees). <br>
Thinking of complexity is nice. But overthinking about complexity when you have largely enough cheap resources is very close to procrastination.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/JakubOboza"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1188?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275683" class="comment js-comment js-task-list-container" data-body-version="370433a05d5a634d95383422431b4dc1">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/JakubOboza">JakubOboza</a>
          </strong>

          commented

            <a href="#comment-275683" class="timestamp"><time datetime="2012-04-24T13:40:57Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@jul no.<br>
I think people should build things in right way :) Not say something is cheap, if you will build server software it will not be cheap anymore i see where we have 64 gb ram servers and we see this kind of things, refactor and save few gigs of ram instantly.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/hrldcpr"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/796849?s=140" width="48" height="48"></a>
  <div class="timeline-comment owner-comment">
    <div id="comment-275687" class="comment js-comment js-task-list-container" data-body-version="bcaf791d852ab79c73ec8b204c8d55e3">
      <div class="timeline-comment-header">

          <span class="timeline-comment-label">Owner</span>


        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/hrldcpr">hrldcpr</a>
          </strong>

          commented

            <a href="#comment-275687" class="timestamp"><time datetime="2012-04-24T13:44:06Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@JakubOboza I agree that this tree implementation would be a bad choice for e.g. a filesystem, but at the same time, implementing a B-tree for storing your small JSON objects is also a bad idea. There is sometimes a tradeoff between code complexity and performance, and if you don't need high performance then the simplest solution is often the best.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/WoLpH"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/270571?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275690" class="comment js-comment js-task-list-container" data-body-version="5884524fecd6d16bd0646cd7bfd9f812">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/WoLpH">WoLpH</a>
          </strong>

          commented

            <a href="#comment-275690" class="timestamp"><time datetime="2012-04-24T13:46:02Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@JakubOboza: agreed, but that's not the point here I think.</p>

<p>If you want to have a search tree, than this is the wrong structure. If you just want to store data which you always find by entering the key (say... settings, json data, etc...) than this is a good data structure.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/hrldcpr"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/796849?s=140" width="48" height="48"></a>
  <div class="timeline-comment owner-comment">
    <div id="comment-275692" class="comment js-comment js-task-list-container" data-body-version="04ae71e2b151061838a7227b65495f0e">
      <div class="timeline-comment-header">

          <span class="timeline-comment-label">Owner</span>


        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/hrldcpr">hrldcpr</a>
          </strong>

          commented

            <a href="#comment-275692" class="timestamp"><time datetime="2012-04-24T13:46:46Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@JakubOboza and more generally, "the right way" does not equate to "the fastest way" — when building real software one of the skills is knowing when <em>not</em> to waste time optimizing.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/JakubOboza"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1188?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275693" class="comment js-comment js-task-list-container" data-body-version="5b96077a4922dcf9af5134411394487a">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/JakubOboza">JakubOboza</a>
          </strong>

          commented

            <a href="#comment-275693" class="timestamp"><time datetime="2012-04-24T13:47:06Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Why B-tree is bad for representing JSON objects ?</p>

<p>You have same interface then in case of hash<br>
object["key"] = value, it is only under the hood implemented in a different way.<br>
Performance wise on small hashes you will be even faster then on hashes because of the hashing function. So you have option to be faster and more space efficient :)</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/JakubOboza"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1188?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275698" class="comment js-comment js-task-list-container" data-body-version="b205c0e584eeb134aac46877f72bc2ce">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/JakubOboza">JakubOboza</a>
          </strong>

          commented

            <a href="#comment-275698" class="timestamp"><time datetime="2012-04-24T13:49:27Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@hrldcpr<br>
You are right it is wrong, same as using 1 line hacks :)</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/WoLpH"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/270571?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275700" class="comment js-comment js-task-list-container" data-body-version="04ace85a112aea7a69a1d8ef353e7d65">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/WoLpH">WoLpH</a>
          </strong>

          commented

            <a href="#comment-275700" class="timestamp"><time datetime="2012-04-24T13:50:41Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>JakubOboza: a B-tree is 1-dimensional from the users perspective, this object is multi-dimensional from the users perspective. They are 2 completely different things.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/JakubOboza"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1188?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275706" class="comment js-comment js-task-list-container" data-body-version="1f6a3ab7e08dcee0766d597f28c606c2">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/JakubOboza">JakubOboza</a>
          </strong>

          commented

            <a href="#comment-275706" class="timestamp"><time datetime="2012-04-24T13:54:03Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@WoLpH now you talk about syntax :) i'm not hater or something i just pointed out that i like this in form of hack but i don't like when people use this type of hacks in real software :) </p>

<p>If Python would be like Ocaml or Scheme you could implement multi dimensional syntax also :) So i don't wanna talk about syntax :&gt;</p>

<p>Cheers! </p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/WoLpH"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/270571?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275731" class="comment js-comment js-task-list-container" data-body-version="33fa5303225abed1d7df15b5933a78ec">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/WoLpH">WoLpH</a>
          </strong>

          commented

            <a href="#comment-275731" class="timestamp"><time datetime="2012-04-24T14:10:20Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@JakubOboza it is not about syntax, it is about a completely different data structure and matching usage.</p>

<p>But please do amuse me a little here, what kind of data structure would you use to store recursive objects which don't require sorting? I am genuinely interested, I think this structure is fairly optimal for that usage pattern.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/aJanuary"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/615131?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-275802" class="comment js-comment js-task-list-container" data-body-version="e41cd5a96e35fdb4bea4e486d046c826">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/aJanuary">aJanuary</a>
          </strong>

          commented

            <a href="#comment-275802" class="timestamp"><time datetime="2012-04-24T14:47:13Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@JakubOboza You're talking about searching the tree, while @WoLpH was talking about walking it.</p>

<p>Walking from root to a particular node without use of an auxiliary data structure will take O(m) (where m is the distance from root to node) no matter how the tree is sorted.</p>

<p>If you want to find a node that meets a particular condition you can sort the tree in such a way as to not need to walk the entire tree (worst case O(n) where n is the number of nodes).</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/valm-"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1625961?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-276384" class="comment js-comment js-task-list-container" data-body-version="5f155953ed0701de118cc36671a192fc">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/valm-">valm-</a>
          </strong>

          commented

            <a href="#comment-276384" class="timestamp"><time datetime="2012-04-24T17:34:08Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>I recently implemented a similar dict inside of dict data structure for a simple search program. @JakubOboza is correct, it was a memory disaster.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/crazy4groovy"><img class="timeline-comment-avatar" src="https://avatars3.githubusercontent.com/u/1110812?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-276944" class="comment js-comment js-task-list-container" data-body-version="c14d978ddb3258ecbf7ea1ee926f9aea">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/crazy4groovy">crazy4groovy</a>
          </strong>

          commented

            <a href="#comment-276944" class="timestamp"><time datetime="2012-04-24T21:11:51Z" is="relative-time">April 24, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Nice inspiration for a similar Groovy implementation at: <a href="https://gist.github.com/2478499" rel="noreferrer">https://gist.github.com/2478499</a></p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/jul"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/130171?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-277115" class="comment js-comment js-task-list-container" data-body-version="492d8c566e2d0e71f136bdf9b4be3769">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/jul">jul</a>
          </strong>

          commented

            <a href="#comment-277115" class="timestamp"><time datetime="2012-04-25T00:08:37Z" is="relative-time">April 25, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>@JakubOboza : abstract data structures are mainly APIs with properties (index, keys, values, parent, next .... whatever). And API is a view on an implementation. <br>
If you badly need a property and it worths it, then API matters. </p>

<p>Complexity is mostly an implementation problem,which performance  will vary according to your real case of use. With python's duck typing and ctypes, performance will mostly not lie in the API but in the implementation. </p>

<p>For instance matrix  are either 1D array accessed by [ index % line_length + int(index/line_length * line_length) ] or a 2D array, or a dict (sparse matrix). Performance is (mostly) not a matter of data API but a matter of use case and implementation. o(n) are only best case implementation. Life is not always best case, even with well known data structures. </p>

<p>So, I still do think that reasoning on  best case complexity instead of API is a premature optimisation. </p>

<p>API matters, since what you mean matters. If you need, it worths it. Complexity is just an implementation detail, which is a concern for 0.01% of <em>real</em> developpers. </p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/markwatson"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/37636?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-278791" class="comment js-comment js-task-list-container" data-body-version="f05d3d2df19d101d1d1c4500a3e041d6">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/markwatson">markwatson</a>
          </strong>

          commented

            <a href="#comment-278791" class="timestamp"><time datetime="2012-04-25T21:08:36Z" is="relative-time">April 25, 2012</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Here's some code I'm using for pretty printing without json in older versions of python (that don't have dictionary comprehensions):</p>

<div class="highlight highlight-python"><pre><span class="k">def</span> <span class="nf">dicts</span><span class="p">(</span><span class="n">t</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">return</span> <span class="nb">dict</span><span class="p">((</span><span class="n">k</span><span class="p">,</span> <span class="n">dicts</span><span class="p">(</span><span class="n">t</span><span class="p">[</span><span class="n">k</span><span class="p">]))</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">t</span><span class="p">)</span>
    <span class="k">except</span> <span class="ne">TypeError</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">t</span>
</pre></div>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/westurner"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/50891?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-696852" class="comment js-comment js-task-list-container" data-body-version="aaa46f57b86699bdf1d86e2d7f2781bd">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/westurner">westurner</a>
          </strong>

          commented

            <a href="#comment-696852" class="timestamp"><time datetime="2013-01-03T09:47:40Z" is="relative-time">January 03, 2013</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>You can add a field delimiter and 'flatten' the keys if you would like to avoid the additional lookup overhead.</p>

<p>e.g. instead of data['one']['two']['three'], it's just data['one.two.three'], or data[('one','two','three')]</p>

<p>@JakubOboza : a trie would be faster. There are many implementations of tries for Python.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/westurner"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/50891?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-696858" class="comment js-comment js-task-list-container" data-body-version="0ad48def40425cb075301176a32fa133">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/westurner">westurner</a>
          </strong>

          commented

            <a href="#comment-696858" class="timestamp"><time datetime="2013-01-03T09:50:06Z" is="relative-time">January 03, 2013</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>There exist implementations of DefaultOrderedDict : <a href="http://stackoverflow.com/a/6190500" rel="noreferrer">http://stackoverflow.com/a/6190500</a></p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/westurner"><img class="timeline-comment-avatar" src="https://avatars0.githubusercontent.com/u/50891?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-696861" class="comment js-comment js-task-list-container" data-body-version="7dd45ac41e2c90a4d004352719eb4340">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/westurner">westurner</a>
          </strong>

          commented

            <a href="#comment-696861" class="timestamp"><time datetime="2013-01-03T09:53:45Z" is="relative-time">January 03, 2013</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>This works well for serializing to Unicode:</p>

<div class="highlight highlight-python"><pre><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">obj</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</pre></div>

<p>A custom JSONEncoder with support for ISO datetimes can be helpful: <a href="http://stackoverflow.com/a/2680060" rel="noreferrer">http://stackoverflow.com/a/2680060</a></p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/iElectric"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/126339?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-697132" class="comment js-comment js-task-list-container" data-body-version="5d03f342064d6f6b602d7721cb5c8014">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/iElectric">iElectric</a>
          </strong>

          commented

            <a href="#comment-697132" class="timestamp"><time datetime="2013-01-03T12:43:53Z" is="relative-time">January 03, 2013</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Exactly the trick that I use in mr.bob (<a href="http://mrbob.readthedocs.org/en/latest/" rel="noreferrer">http://mrbob.readthedocs.org/en/latest/</a>) to make namespace of keys :) </p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/bj0"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/1139347?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-776742" class="comment js-comment js-task-list-container" data-body-version="345fb9112f67eab6e6ac7c3158deaab1">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/bj0">bj0</a>
          </strong>

          commented

            <a href="#comment-776742" class="timestamp"><time datetime="2013-02-18T22:46:23Z" is="relative-time">February 18, 2013</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Adding a simple subclass:</p>

<div class="highlight highlight-python"><pre><span class="k">class</span> <span class="nc">mydefaultdict</span><span class="p">(</span><span class="n">defaultdict</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__getattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">attr</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">[</span><span class="n">attr</span><span class="p">]</span>
    <span class="k">def</span> <span class="nf">__setattr__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">attr</span><span class="p">,</span> <span class="n">val</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">[</span><span class="n">attr</span><span class="p">]</span> <span class="o">=</span> <span class="n">val</span>

<span class="k">def</span> <span class="nf">tree</span><span class="p">():</span> <span class="k">return</span> <span class="n">mydefaultdict</span><span class="p">(</span><span class="n">tree</span><span class="p">)</span>
</pre></div>

<p>will turn:</p>

<div class="highlight highlight-python"><pre><span class="n">taxonomy</span><span class="p">[</span><span class="s">'Animalia'</span><span class="p">][</span><span class="s">'Chordata'</span><span class="p">][</span><span class="s">'Mammalia'</span><span class="p">][</span><span class="s">'Carnivora'</span><span class="p">][</span><span class="s">'Felidae'</span><span class="p">][</span><span class="s">'Felis'</span><span class="p">][</span><span class="s">'cat'</span><span class="p">]</span>
</pre></div>

<p>into:</p>

<div class="highlight highlight-python"><pre><span class="n">taxonomy</span><span class="o">.</span><span class="n">Animalia</span><span class="o">.</span><span class="n">Chordata</span><span class="o">.</span><span class="n">Mammalia</span><span class="o">.</span><span class="n">Carnivora</span><span class="o">.</span><span class="n">Felidae</span><span class="o">.</span><span class="n">Felis</span><span class="o">.</span><span class="n">cat</span>
</pre></div>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/dgagnon"><img class="timeline-comment-avatar" src="https://avatars3.githubusercontent.com/u/1037561?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-941983" class="comment js-comment js-task-list-container" data-body-version="a2970acd4a19972899c37b40162c0427">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/dgagnon">dgagnon</a>
          </strong>

          commented

            <a href="#comment-941983" class="timestamp"><time datetime="2013-11-01T16:42:50Z" is="relative-time">November 01, 2013</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>You can use the same trick to edit the files as well:</p>

<div class="highlight highlight-python"><pre><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">tkeys</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
  <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
  <span class="n">keys</span> <span class="o">=</span> <span class="n">tkeys</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'.'</span><span class="p">)</span>
  <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
    <span class="n">i</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">keys</span><span class="p">)</span> <span class="ow">and</span> <span class="n">value</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
      <span class="n">t</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">t</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
</pre></div>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/ashumeow"><img class="timeline-comment-avatar" src="https://avatars1.githubusercontent.com/u/5597047?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-944617" class="comment js-comment js-task-list-container" data-body-version="565191d99508e883b476229223ad9494">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/ashumeow">ashumeow</a>
          </strong>

          commented

            <a href="#comment-944617" class="timestamp"><time datetime="2013-11-05T20:05:13Z" is="relative-time">November 05, 2013</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Good! =)</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/metaperl"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/21293?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-1188571" class="comment js-comment js-task-list-container" data-body-version="06deb78b24b1bb8f22ce732b8739197c">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/metaperl">metaperl</a>
          </strong>

          commented

            <a href="#comment-1188571" class="timestamp"><time datetime="2014-03-11T14:51:19Z" is="relative-time">March 11, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Very cool. I tend to resort to objects and methods for everything. And you did this in 1-2 lines.</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/gVallverdu"><img class="timeline-comment-avatar" src="https://avatars2.githubusercontent.com/u/5417018?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-1199221" class="comment js-comment js-task-list-container" data-body-version="101f10747e6453de09833c0d313af864">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/gVallverdu">gVallverdu</a>
          </strong>

          commented

            <a href="#comment-1199221" class="timestamp"><time datetime="2014-03-26T10:15:59Z" is="relative-time">March 26, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Nice solution !<br>
I wrote that lines to print the tree :</p>

<div class="highlight highlight-python"><pre><span class="k">def</span> <span class="nf">ptr</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">depth</span> <span class="o">=</span> <span class="mi">0</span><span class="p">):</span>
    <span class="sd">""" print a tree """</span>
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">t</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="si">%s</span><span class="s"> </span><span class="si">%2d</span><span class="s"> </span><span class="si">%s</span><span class="s">"</span> <span class="o">%</span> <span class="p">(</span><span class="s">""</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">depth</span> <span class="o">*</span> <span class="p">[</span><span class="s">"    "</span><span class="p">]),</span> <span class="n">depth</span><span class="p">,</span> <span class="n">k</span><span class="p">))</span>
        <span class="n">depth</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="n">ptratree</span><span class="p">(</span><span class="n">t</span><span class="p">[</span><span class="n">k</span><span class="p">],</span> <span class="n">depth</span><span class="p">)</span>
        <span class="n">depth</span> <span class="o">-=</span> <span class="mi">1</span>
</pre></div>

<p>using your example it gives :</p>

<pre><code>  0 Animalia
      1 Chordata
          2 Mammalia
              3 Carnivora
                  4 Canidae
                      5 Canis
                          6 coyote
                          6 dog
                  4 Felidae
                      5 Felis
                          6 cat
                      5 Panthera
                          6 lion
  0 Plantae
      1 Solanales
          2 Convolvulaceae
              3 Ipomoea
                  4 sweet potato
          2 Solanaceae
              3 Solanum
                  4 tomato
                  4 potato
</code></pre>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/drasko"><img class="timeline-comment-avatar" src="https://avatars3.githubusercontent.com/u/149944?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-1230803" class="comment js-comment js-task-list-container" data-body-version="699e149e095e0bf835e53a5acda39524">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/drasko">drasko</a>
          </strong>

          commented

            <a href="#comment-1230803" class="timestamp"><time datetime="2014-05-18T21:39:15Z" is="relative-time">May 18, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>In case someone needs it off-the-shelf, code to create JSON representation of the file tree using this technique:</p>

<div class="highlight highlight-python"><pre><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">collections</span>
<span class="kn">import</span> <span class="nn">json</span>

<span class="k">def</span> <span class="nf">tree</span><span class="p">():</span> <span class="k">return</span> <span class="n">collections</span><span class="o">.</span><span class="n">defaultdict</span><span class="p">(</span><span class="n">tree</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="n">keys</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">t</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>

<span class="n">s</span> <span class="o">=</span> <span class="n">tree</span><span class="p">()</span>

<span class="c"># Set the directory you want to start from</span>
<span class="n">path</span> <span class="o">=</span> <span class="s">'path/to/directory'</span>

<span class="k">for</span> <span class="n">root</span><span class="p">,</span> <span class="n">dirs</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="o">.</span><span class="n">walk</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">f</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
        <span class="n">l</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'/'</span><span class="p">)</span>
        <span class="n">l</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>

        <span class="n">add</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">l</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span> <span class="n">sort_keys</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
</pre></div>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

<div class="timeline-comment-wrapper js-comment-container">
  <a href="/Kzinglzy"><img class="timeline-comment-avatar" src="https://avatars3.githubusercontent.com/u/5821522?s=140" width="48" height="48"></a>
  <div class="timeline-comment ">
    <div id="comment-1241937" class="comment js-comment js-task-list-container" data-body-version="38bebde76dbe298b2299ba16643d2519">
      <div class="timeline-comment-header">



        <div class="timeline-comment-header-text">
          <strong>
            <a class="author" href="/Kzinglzy">Kzinglzy</a>
          </strong>

          commented

            <a href="#comment-1241937" class="timestamp"><time datetime="2014-06-07T03:12:33Z" is="relative-time">June 07, 2014</time></a>
        </div>
      </div>

    <div class="comment-content">

      <div class="edit-comment-hide">
        <div class="comment-body markdown-body  js-comment-body">
            <p>Wow! It is amazing. Thanks</p>
        </div>
      </div>

    </div>
  </div>
  </div>
  </div>

          </div>

          <div class="discussion-timeline-actions">
              <div class="signed-out-comment">
	<a class="button primary" href="https://github.com/signup?return_to=gist" rel="nofollow">Sign up for free</a>
	<strong>to join this conversation on GitHub</strong>.
	Already have an account?
  <a href="https://gist.github.com/login?return_to=%2Fhrldcpr%2F2012250" rel="nofollow">Sign in to comment</a>
</div>


          </div>
        </div><!-- /.discussion-timeline -->
      </div><!-- /.gist-content -->
    </div>
  </div>
</div><!-- /.container -->

  <div class="context-overlay"></div>
</div>

    </div>
    <div class="slow-loading-overlay"></div>
  </div>

  <div id="ajax-error-message" class="flash flash-error">
    <div class="container">
      <span class="octicon octicon-alert"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="octicon octicon-x ajax-error-dismiss"></a>
    </div>
  </div>


  <footer>
    <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="https://github.com/blog">Blog</a></li>
      <li><a href="https://github.com/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub "></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.14854s from github-fe103-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
        <li><a href="https://github.com/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->

  </footer>

  <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
        <div class="suggester-container">
            <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                data-url="/hrldcpr/2012250/suggestions">
            </div>
        </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>


</body>
</html>
