<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html dir='ltr' xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'>
<head>
<meta content='b5Oph/lSY8IRPl3Z8PgknHijRLW887WRW1Em28tx0N4=' name='verify-v1'/>
<link href='http://47v2na.bay.livefilestore.com/y1papI_3C3-wMDteIfVqgP95XnuZxIRFLux8W713N5wJJkEbdphfGealoZEGl4lwo1A2YGZOr6JDYi-qSD2CR_EFA/moserware.ico' rel='shortcut icon' type='image/vnd.microsoft.icon'/>
<meta content='Jeff Moser' name='author'/>
<meta content='Jeff Moser' name='copyright'/>
<meta content='Jeff, Moser, Software, Moserware, .NET, C#, Fishers' name='keywords'/>
<meta content='Jeff Moser on software development' name='description'/>
<meta content='The Technical Blog of Jeff Moser' name='DC.title'/>
<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'/>
<script type="text/javascript">(function() { var b=window,f="chrome",g="tick",k="jstiming";(function(){function d(a){this.t={};this.tick=function(a,d,c){var e=void 0!=c?c:(new Date).getTime();this.t[a]=[e,d];if(void 0==c)try{b.console.timeStamp("CSI/"+a)}catch(h){}};this[g]("start",null,a)}var a;b.performance&&(a=b.performance.timing);var n=a?new d(a.responseStart):new d;b.jstiming={Timer:d,load:n};if(a){var c=a.navigationStart,h=a.responseStart;0<c&&h>=c&&(b[k].srt=h-c)}if(a){var e=b[k].load;0<c&&h>=c&&(e[g]("_wtsrt",void 0,c),e[g]("wtsrt_","_wtsrt",h),e[g]("tbsd_","wtsrt_"))}try{a=null,
b[f]&&b[f].csi&&(a=Math.floor(b[f].csi().pageT),e&&0<c&&(e[g]("_tbnd",void 0,b[f].csi().startE),e[g]("tbnd_","_tbnd",c))),null==a&&b.gtbExternal&&(a=b.gtbExternal.pageT()),null==a&&b.external&&(a=b.external.pageT,e&&0<c&&(e[g]("_tbnd",void 0,b.external.startE),e[g]("tbnd_","_tbnd",c))),a&&(b[k].pt=a)}catch(p){}})();b.tickAboveFold=function(d){var a=0;if(d.offsetParent){do a+=d.offsetTop;while(d=d.offsetParent)}d=a;750>=d&&b[k].load[g]("aft")};var l=!1;function m(){l||(l=!0,b[k].load[g]("firstScrollTime"))}b.addEventListener?b.addEventListener("scroll",m,!1):b.attachEvent("onscroll",m);
 })();</script>
<meta content='blogger' name='generator'/>
<link href='http://www.moserware.com/favicon.ico' rel='icon' type='image/x-icon'/>
<link href='http://www.moserware.com/' rel='canonical'/>
<link rel="alternate" type="application/atom+xml" title="Moserware - Atom" href="http://www.moserware.com/feeds/posts/default" />
<link rel="alternate" type="application/rss+xml" title="Moserware - RSS" href="http://www.moserware.com/feeds/posts/default?alt=rss" />
<link rel="service.post" type="application/atom+xml" title="Moserware - Atom" href="http://www.blogger.com/feeds/6800934446457898793/posts/default" />
<link rel="me" href="http://www.blogger.com/profile/16074905903060665396" />
<link rel="openid.server" href="http://www.blogger.com/openid-server.g" />
<link rel="openid.delegate" href="http://www.moserware.com/" />
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<title>Moserware</title>
<link type='text/css' rel='stylesheet' href='https://www.blogger.com/static/v1/widgets/3841957138-widget_css_bundle.css' />
<link type='text/css' rel='stylesheet' href='https://www.blogger.com/dyn-css/authorization.css?targetBlogID=6800934446457898793&zx=b1525dd7-88f3-46e1-9db2-06be765f0114' />
<style id='page-skin-1' type='text/css'><!--
/*
/*
-----------------------------------------------
Blogger Template Style
Name:     Minima Stretch
Designer: Douglas Bowman / Darren Delaye
URL:      www.stopdesign.com
Date:     26 Feb 2004
----------------------------------------------- *//* Variable definitions
====================
<Variable name="bgcolor" description="Page Background Color"
type="color" default="#fff">
<Variable name="textcolor" description="Text Color"
type="color" default="#333">
<Variable name="linkcolor" description="Link Color"
type="color" default="#58a">
<Variable name="pagetitlecolor" description="Blog Title Color"
type="color" default="#666">
<Variable name="descriptioncolor" description="Blog Description Color"
type="color" default="#999">
<Variable name="titlecolor" description="Post Title Color"
type="color" default="#c60">
<Variable name="bordercolor" description="Border Color"
type="color" default="#ccc">
<Variable name="sidebarcolor" description="Sidebar Title Color"
type="color" default="#999">
<Variable name="sidebartextcolor" description="Sidebar Text Color"
type="color" default="#666">
<Variable name="visitedlinkcolor" description="Visited Link Color"
type="color" default="#999">
<Variable name="bodyfont" description="Text Font"
type="font" default="normal normal 100% Georgia, Serif">
<Variable name="headerfont" description="Sidebar Title Font"
type="font"
default="normal normal 78% 'Trebuchet MS',Trebuchet,Arial,Verdana,Sans-serif">
<Variable name="pagetitlefont" description="Blog Title Font"
type="font"
default="normal normal 200% Georgia, Serif">
<Variable name="descriptionfont" description="Blog Description Font"
type="font"
default="normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif">
<Variable name="postfooterfont" description="Post Footer Font"
type="font"
default="normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif">
*//* Use this with templates/template-twocol.html */body {
background:#ffffff;
margin:0;
color:#333333;
font:x-small Georgia Serif;
font-size/* */:/**/small;
font-size: /**/small;
text-align: center;
}
a:link {
color:#5588aa;
text-decoration:none;
}
a:visited {
color:#999999;
text-decoration:none;
}
a:hover {
color:#cc6600;
text-decoration:underline;
}
a img {
border-width:0;
}/* Header
-----------------------------------------------
*/#header-wrapper {
margin:0 2% 10px;
border:1px solid #cccccc;
}#header {
margin: 5px;
border: 1px solid #cccccc;
text-align: center;
color:#666666;
}#header h1 {
margin:5px 5px 0;
padding:15px 20px .25em;
line-height:1.2em;
text-transform:uppercase;
letter-spacing:.2em;
font: normal normal 200% Georgia, Serif;
}#header a {
color:#666666;
text-decoration:none;
}#header a:hover {
color:#666666;
}#header .description {
margin:0 5px 5px;
padding:0 20px 15px;
text-transform:uppercase;
letter-spacing:.2em;
line-height: 1.4em;
font: normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif;
color: #999999;
}/* Outer-Wrapper
----------------------------------------------- */
#outer-wrapper {
margin:0;
padding:10px;
text-align:left;
font: normal normal 100% Georgia, Serif;
}#main-wrapper {
margin-left: 1%;
width: 67%;
float: left;
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;     /* fix for long non-text content breaking IE sidebar float */
}html > body #main-wrapper {
margin-left: 2%;
}#sidebar-wrapper {
margin-right: 1%;
width: 25%;
float: right;
word-wrap: break-word; /* fix for long text breaking sidebar float in IE */
overflow: hidden;     /* fix for long non-text content breaking IE sidebar float */
}html > body #sidebar-wrapper {
margin-right: 2%;
}/* Headings
----------------------------------------------- */h2 {
margin:1.5em 0 .75em;
font:normal normal 78% 'Trebuchet MS',Trebuchet,Arial,Verdana,Sans-serif;
line-height: 1.4em;
text-transform:uppercase;
letter-spacing:.2em;
color:#999999;
}/* Posts
-----------------------------------------------
*/
h2.date-header {
margin:1.5em 0 .5em;
}.post {
margin:.5em 0 1.5em;
border-bottom:1px dotted #cccccc;
padding-bottom:1.5em;
}
.post h3 {
margin:.25em 0 0;
padding:0 0 4px;
font-size:140%;
font-weight:normal;
line-height:1.4em;
color:#cc6600;
}.post h3 a, .post h3 a:visited, .post h3 strong {
display:block;
text-decoration:none;
color:#cc6600;
font-weight:normal;
}.post h3 strong, .post h3 a:hover {
color:#333333;
}.post p {
margin:0 0 .75em;
line-height:1.6em;
}.post-footer {
margin: .75em 0;
color:#999999;
text-transform:uppercase;
letter-spacing:.1em;
font: normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif;
line-height: 1.4em;
}.comment-link {
margin-left:.6em;
}
.post img {
padding:4px;
border:1px solid #cccccc;
}
.post blockquote {
margin:1em 20px;
}
.post blockquote p {
margin:.75em 0;
}/* Comments
----------------------------------------------- */
#comments h4 {
margin:1em 0;
font-weight: bold;
line-height: 1.4em;
text-transform:uppercase;
letter-spacing:.2em;
color: #999999;
}#comments-block {
margin:1em 0 1.5em;
line-height:1.6em;
}
#comments-block .comment-author {
margin:.5em 0;
}
#comments-block .comment-body {
margin:.25em 0 0;
}
#comments-block .comment-footer {
margin:-.25em 0 2em;
line-height: 1.4em;
text-transform:uppercase;
letter-spacing:.1em;
}
#comments-block .comment-body p {
margin:0 0 .75em;
}
.deleted-comment {
font-style:italic;
color:gray;
}.feed-links {
clear: both;
line-height: 2.5em;
}#blog-pager-newer-link {
float: left;
}
#blog-pager-older-link {
float: right;
}
#blog-pager {
text-align: center;
}/* Sidebar Content
----------------------------------------------- */
.sidebar {
color: #666666;
line-height: 1.5em;
}.sidebar ul {
list-style:none;
margin:0 0 0;
padding:0 0 0;
}
.sidebar li {
margin:0;
padding:0 0 .25em 15px;
text-indent:-15px;
line-height:1.5em;
}.sidebar .widget, .main .widget {
border-bottom:1px dotted #cccccc;
margin:0 0 1.5em;
padding:0 0 1.5em;
}.main .Blog {
border-bottom-width: 0;
}/* Profile
----------------------------------------------- */
.profile-img {
float: left;
margin: 0 5px 5px 0;
padding: 4px;
border: 1px solid #cccccc;
}.profile-data {
margin:0;
text-transform:uppercase;
letter-spacing:.1em;
font: normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif;
color: #999999;
font-weight: bold;
line-height: 1.6em;
}.profile-datablock {
margin:.5em 0 .5em;
}.profile-textblock {
margin: 0.5em 0;
line-height: 1.6em;
}.profile-link {
font: normal normal 78% 'Trebuchet MS', Trebuchet, Arial, Verdana, Sans-serif;
text-transform: uppercase;
letter-spacing: .1em;
}/* Footer
----------------------------------------------- */
#footer {
width:660px;
clear:both;
margin:0 auto;
padding-top:15px;
line-height: 1.6em;
text-transform:uppercase;
letter-spacing:.1em;
text-align: center;
}/** Page structure tweaks for layout editor wireframe */
body#layout #header {
margin-left: 0px;
margin-right: 0px;
}

--></style>
<script type='text/javascript'> 
 
  var _gaq = _gaq || []; 
  _gaq.push(['_setAccount', 'UA-2987024-1']); 
  _gaq.push(['_trackPageview']); 
 
  (function() { 
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; 
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; 
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); 
  })(); 
 
</script>
<script type="text/javascript">var a="indexOf",b="&m=1",e="(^|&)m=",f="?",g="?m=1";function h(){var c=window.location.href,d=c.split(f);switch(d.length){case 1:return c+g;case 2:return 0<=d[1].search(e)?null:c+b;default:return null}}var k=navigator.userAgent;if(-1!=k[a]("Mobile")&&-1!=k[a]("WebKit")&&-1==k[a]("iPad")||-1!=k[a]("Opera Mini")||-1!=k[a]("IEMobile")){var l=h();l&&window.location.replace(l)};
</script><script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('headEnd');
</script></head>
<body>
<div class='navbar section' id='navbar'><div class='widget Navbar' id='Navbar1'><script type="text/javascript">
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener('load',
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent('onload', function(){ object[attribute] = val; });
      }
    }
  </script>
<div id="navbar-iframe-container"></div>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<script type="text/javascript">
        gapi.load("gapi.iframes:gapi.iframes.style.bubble", function() {
          if (gapi.iframes && gapi.iframes.getContext) {
            gapi.iframes.getContext().openChild({
                url: 'https://www.blogger.com/navbar.g?targetBlogID\0756800934446457898793\46blogName\75Moserware\46publishMode\75PUBLISH_MODE_HOSTED\46navbarType\75SILVER\46layoutType\75LAYOUTS\46searchRoot\75http://www.moserware.com/search\46blogLocale\75en_US\46v\0752\46homepageUrl\75http://www.moserware.com/\46vt\0756220006690219000993',
                where: document.getElementById("navbar-iframe-container"),
                id: "navbar-iframe"
            });
          }
        });
      </script><script type="text/javascript">
(function() {
var script = document.createElement('script');
script.type = 'text/javascript';
script.src = '//pagead2.googlesyndication.com/pagead/js/google_top_exp.js';
var head = document.getElementsByTagName('head')[0];
if (head) {
head.appendChild(script);
}})();
</script>
</div></div>
<div id='outer-wrapper'><div id='wrap2'>
<!-- skip links for text browsers -->
<span id='skiplinks' style='display:none;'>
<a href='#main'>skip to main </a> |
      <a href='#sidebar'>skip to sidebar</a>
</span>
<div id='header-wrapper'>
<div class='header section' id='header'><div class='widget Header' id='Header1'>
<div id='header-inner'>
<div class='titlewrapper'>
<h1 class='title'>
Moserware
</h1>
</div>
<div class='descriptionwrapper'>
<p class='description'><span>Jeff Moser's software development adventures.</span></p>
</div>
</div>
</div></div>
</div>
<div id='content-wrapper'>
<div id='crosscol-wrapper' style='text-align:center'>
<div class='crosscol section' id='crosscol'></div>
</div>
<div id='main-wrapper'>
<div class='main section' id='main'><div class='widget Blog' id='Blog1'>
<div class='blog-posts hfeed'>
<!-- google_ad_section_start(name=default) -->

          <div class="date-outer">
        
<h2 class='date-header'><span>Monday, November 21, 2011</span></h2>

          <div class="date-posts">
        
<div class='post-outer'>
<div class='post hentry uncustomized-post-template' itemprop='blogPost' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'>
<meta content='http://3.bp.blogspot.com/-IBcyywvqnWA/TsEou9240BI/AAAAAAAAZBE/a5aM-FeH49I/s320/Grandma+and+Jeff.jpg' itemprop='image_url'/>
<meta content='6800934446457898793' itemprop='blogId'/>
<meta content='86529977875835325' itemprop='postId'/>
<a name='86529977875835325'></a>
<h3 class='post-title entry-title' itemprop='name'>
<a href='http://www.moserware.com/2011/11/life-death-and-splitting-secrets.html'>Life, Death, and Splitting Secrets</a>
</h3>
<div class='post-header'>
<div class='post-header-line-1'></div>
</div>
<div class='post-body entry-content' id='post-body-86529977875835325' itemprop='description articleBody'>
<p>(<strong>Summary</strong>: I created <a href="https://github.com/moserware/SecretSplitter">a program</a> to help back up important data like your master password in case something happens to you. By splitting your secret into pieces, it provides a circuit breaker against a single point of failure. I&#8217;m giving it away as a free open source program with the hope that others might find it useful in addressing this aspect of our lives. Feel free to <a href="https://github.com/moserware/SecretSplitter/releases/latest">use the program</a> and follow along with just the screenshots below or read all sections of this post if you want more context.)</p><h4>Background</h4><p>I just couldn&#8217;t do it.</p><p><img alt="Grandma and Jeff" title="Grandma and Jeff" src="http://3.bp.blogspot.com/-IBcyywvqnWA/TsEou9240BI/AAAAAAAAZBE/a5aM-FeH49I/s320/Grandma+and+Jeff.jpg" align="right" style="border:0; margin: 0px 0px 15px 15px; display: inline" />My grandma died at this time last year from a stroke. She was a great woman. I still miss her. In that emotional last week, I was reminded of great memories with her and the fragility of life. I was also reminded about important documents that I still didn&#8217;t have.</p><p>When something happens to you, be it death or incapacitation, there are some important steps that need to occur that can be greatly assisted by legal documents.  For example:</p><ol><li>An <a href="http://en.wikipedia.org/wiki/Advance_health_care_directive">advance health care directive</a> (aka &#8220;Living Will&#8221;) specifies what actions should (or shouldn&#8217;t) be taken with regards to your healthcare if you&#8217;re no longer able to make decisions for yourself.</li><li>A <a href="http://en.wikipedia.org/wiki/Power_of_attorney#Durable_power_of_attorney"> durable power of attorney</a> allows you to designate someone to legally act as you if you become incapacitated.</li><li>A <a href="http://en.wikipedia.org/wiki/Will_(law)" >last will and testament</a> allows you to legally assign caregivers for <a href="http://en.wikipedia.org/wiki/Minor_(law)" title="Typically 18 and younger.">minor children</a> as well as designate where you'd like your possessions to go.</li></ol><p>My grandma had these and it helped reduce stress and anxiety in this difficult time. We knew what she would have wanted and these documents helped legally enforce that.</p><p>I had assumed that these documents were expensive and time-consuming to  create. Furthermore, as a guy in my 20&#8217;s, death still seems like <a href="http://quotationsbook.com/quote/10024/" title="&#8220;Death is a distant rumor to the young.&#8221; - Andy Rooney (1919 - 2011)">a distant rumor</a>. As a Christian, I&#8217;m <a href="http://www.biblegateway.com/passage/?search=Philippians%201:21&amp;version=ESV">not overly concerned</a> <a href="http://www.biblegateway.com/passage/?search=1%20Corinthians%2015:54-57&amp;version=ESV">about death itself</a>, but my grandma&#8217;s death reminded me that these documents  are not really for me, but rather the people I&#8217;d leave behind. I knew that if something  happened to me, I&#8217;d potentially be leaving behind a mess, and that concern of  irresponsibility compelled me to investigate what I could do.</p><p>It turns out that creating these documents is essentially a matter of filling  out a form template. I <a href="http://www.amazon.com/gp/product/B004DLCQZ4/ref=as_li_ss_tl?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=217145&amp;creative=399369&amp;creativeASIN=B004DLCQZ4" title="I used Quicken Willmaker 2011 Premium edition. I liked the premium edition because it came with a lot of extra books that made for fun reading. The 2012 version will probably be available soon."> bought a program</a> that made it about as easy as preparing taxes online. In  most cases, you just need disinterested third parties, such as friends or coworkers,  to witness you signing them to make them fully legal. At most, you might have to  get them notarized or filed in your county for a small fee.</p><p>One of the steps involved in filling out the &#8220;Information for Caregivers  and Survivors&#8221; document is to list &#8220;<a href="http://www.nolo.com/legal-encyclopedia/help-executor-secured-places-passwords-29669.html">Secured  Places and Passwords</a>.&#8221; It&#8217;s a helpful section that your  <a href="http://en.wikipedia.org/wiki/Executor">executor</a> can turn  to if something happened to you in order to do things like unlock your cell phone  or access your online accounts. Sure, your survivors might be able use legal force  to get access without it, but only after months of  <a href="https://mail.google.com/support/bin/answer.py?answer=14300">sending official documentation</a>.  That&#8217;s a lot of hassle to put someone through. Also, it&#8217;s very likely that  a lot of important things will be missed and no one would ever know they  existed.</p><p>It&#8217;s <a href="http://research.microsoft.com/apps/pubs/?id=80436" title="&#8220;The Rational Rejection of Security Advice by Users&#8221; provides some interesting counterpoints to security advice out there.">probably  rational</a> to just write your passwords down and put them in a safe which your  executor knows the location of and can access in a timely matter. Alternatively,  you could pay for an attorney or a  <a href="http://mashable.com/2010/10/11/social-media-after-death/">third-party service</a> and leave your password list with them.  However, this seemed like it would cause a maintenance problem, especially as I  might add or update my passwords frequently. These options would also force me to trust someone I haven&#8217;t known for a long time. Most importantly, the thought of writing  down my passwords on a piece of paper, even if it was in a relatively safe place,  went against every fiber of my security being.</p> <p>I just couldn&#8217;t do it.</p> <p><strong>DISCLAIMER</strong>: The above simple approaches are probably fine and have worked  for a lot of people over the years. <strong>If you&#8217;re comfortable with these basic approaches,  by all means use them and ignore this post</strong>. These simpler approaches have less moving  parts and are easy to understand. However, if you want a little more security, or need to liven up this process with a little spy novel-esque fun, read on.</p> <h4>The Modern Password &amp; Encryption Problem</h4> <p>As an online citizen, you don&#8217;t want to be that person. You know, the one  whose password was so <a href="http://blogs.wsj.com/digits/2010/12/13/the-top-50-gawker-media-passwords/" title="If nothing else, promise me that none of your passwords are on this list!"> easy to guess</a> that his email account was broken into and who &#8220;<a href="http://www.nbclosangeles.com/news/tech/Email-Scams-83600577.html">wrote</a>&#8221;  to you saying that he decided to go to Europe on a whim this past weekend but now  needs you to wire him money right now and he&#8217;ll explain everything later: <em>that</em> guy.</p> <p>You&#8217;ve learned that passwords like &#8220;thunder&#8221;, &#8220;thunder56&#8221;, and even &#8220;L0u|&gt;Thund3r&#8221;  are terrible because they&#8217;re <a href="http://www.wired.com/politics/security/commentary/securitymatters/2007/01/72458?currentPage=all" title="Password recovery tools are pretty good these days."> easily guessed</a>. You now know that the most important aspect of a password is  its <a href="http://xkcd.com/936/" title="&#8220;correct horse battery staple&#8221; is a start, but character variation and padding help a lot">length</a> combined with <a href="https://www.grc.com/haystack.htm" title="Steve Gibson&#8217;s Password Haystacks page is worth at least a quick glance.">basic padding and character variation</a>  such as &#8220;/* Thunder is coming! */&#8221;, &#8220;I hear &lt;em&gt;thunder&lt;/em&gt;!&#8221;, or &#8220;1.big.BOOM@thunder.mil&#8221;.</p> <p>In fact, you&#8217;re probably clever enough that you don&#8217;t create or remember  most of your passwords anymore. You use a <a href="http://en.wikipedia.org/wiki/Password_manager">password manager</a> like <a href="https://lastpass.com/">LastPass</a> or <a href="http://keepass.info/">KeePass</a>  to automatically generate and store unique and completely random passwords for all  of your accounts. This has simplified your life so that you only have to remember  your &#8220;master password&#8221; that will get you into where you keep all the rest of your  usernames and passwords.</p> <p> <img alt="Skeleton Key" height="320" src="http://3.bp.blogspot.com/-8NBM4ONkCGg/TsRkc_qt7QI/AAAAAAAAZG8/3jYrTXbui-8/s320/450px-Llave_bronce[1].jpg" align="left" style="border:0; margin: 0px 15px 15px 0px; display: inline" width="240"></p> <p>You also understand that your email account credentials are a &#8220;<a href="http://www.codinghorror.com/blog/2008/06/please-give-us-your-email-password.html" title="It was especially sad in the Web&#8217;s early day when so many sites asked for your email login to effectively spam your contacts. It&#8217;s just inexcusable that some sites still do today.">skeleton  key</a>&#8221; for almost everything else due to the widespread use of simple password  reset emails. For this very reason, you probably realize that it&#8217;s critical to <a href="http://googleblog.blogspot.com/2011/06/ensuring-your-information-is-safe.html" title="If you do use Gmail, really consider enabling this for your own safety and to prevent yourself from being *that* guy."> protect your email login with &#8220;two-factor&#8221; authentication</a>. That is, your email  account should at least be protected by:</p> <ol>  <li>Something you know (your password) <em>and</em> </li>  <li>Something you have (your cellphone), that creates or receives a one-time   use code when you want to login.</li> </ol> <p>On top of all of this, you try your best to follow the trusty advice that  your passwords should be ones that nobody could guess and you never ever <a href="http://www.schneier.com/blog/archives/2005/06/write_down_your.html" title="Actually, it&#8217;s probably reasonable to write them down in keep them in your wallet">write  them</a> <a href="http://blog.jgc.org/2010/12/write-your-passwords-down.html">down</a>.</p> <p>But what if something happens to you? If you&#8217;ve done everything &#8220;right,&#8221;  then your master password and all your second factor details go with you.  </p> <p>And then there are your encrypted files. Maybe you&#8217;re keeping a <a href="http://www.youtube.com/watch?feature=player_embedded&amp;v=R4vkVHijdQk" title="You could use an encrypted journal or a separate email account. I wonder if &#8220;dear.sophie.lee@gmail.com&#8221; had two-factor authentication enabled on it. I mean, what happens if she writes back too early?"> private journal</a> for your children to read when they grow up. Perhaps you&#8217;re  living in some spy novel life where you&#8217;re worried that people will take you  out to prevent something you know from being discovered. Wherever you fall on the  spectrum, what do you do with such encrypted data?</p> <p>Modern encryption is a bit scary because it&#8217;s so good. If you use a decent  encryption program with a good password/key, then it&#8217;s very likely that no one,  <a href="http://www.extremetech.com/computing/105931-full-disk-encryption-is-too-good-says-us-intelligence-agency">not even a major government</a>, could decrypt the file even after hundreds of years.  Encryption is great for keeping prying eyes out, but it could sadden survivors that  you want to have access to your data. The thought of something being lost forever might  make you almost yearn for the days when you just put everything into a good  safe that&#8217;s rated by how many <a href="http://en.wikipedia.org/wiki/Safe#Class_TL-15" title="For example, a TL-15 safe will resist abuse for about 15 minutes from people who know what they&#8217;re doing.">minutes</a> it might slow  somebody down.</p> <p>On a much lighter note, the &#8220;something&#8221; that happens to you doesn&#8217;t have  to be so grim. Maybe you had a really relaxing three week vacation and now you can&#8217;t  remember the exact keyboard combination of your password. Given that our brains  have to <a href="http://www.radiolab.org/2007/jun/07/eternal-sunshine-of-the-spotless-rat/" title="Start listening at 16:45 to find out more about this interesting idea."> recreate memories each time you recall something</a>, it&#8217;s possible  that you could stress yourself out so much trying to remember your password that  you effectively &#8220;forget&#8221; it. What do you do then? </p> <p>When you put all your eggs into a password manager basket, you really want  to <a href="http://herbison.com/herbison/broken_eggs_watch.html" title="Whether it was Carnegie or Twain, the phrase &#8220;Put all your eggs in one basket and --- WATCH THAT BASKET!&#8221; is some good advice.">watch that basket</a>.  Fortunately, creating a basic plan isn&#8217;t that hard. </p> <h4>A Proposed Solution</h4> <a href="http://en.wikipedia.org/wiki/Permissive_Action_Link"> <img alt="Example nuclear launch keys" height="320" src="http://2.bp.blogspot.com/-ndwAfLFbKIE/TsHnCT1FN0I/AAAAAAAAZBY/fILw-KRvtfY/s320/Nuclear_missile_launch_keys[1].jpg" align="right" style="border:0; margin: 0px 0px 15px 15px; display: inline" width="212"></a> <p>Let&#8217;s borrow an <a href="http://www.biblegateway.com/passage/?search=Numbers%2035:30&version=ESV" title="For example, the 2-3 witnesses concept appears several times in the Bible.">ancient</a> yet incredibly  useful idea: if it&#8217;s really important to get your facts right about something, be  sure to have at least two or three witnesses. This is especially true concerning  matters of life and death but it also comes up when protecting really valuable things.</p> <p>By the 20th century, this &#8220;<a href="http://en.wikipedia.org/wiki/Two-man_rule">two-man  rule</a>&#8221; was implemented in hardware to protect nuclear missiles  from being launched by a lone rogue person without proper authorization. The main  vault at <a href="http://en.wikipedia.org/wiki/United_States_Bullion_Depository#Construction_and_security" title="Also known as the &#8220;United States Buillion Depository&#8221;"> Fort Knox</a> is locked by multiple combinations such that no single person is entrusted  with all of them. On the Internet, the master key for protecting the new secure  domain name system (<a href="http://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions">DNSSEC</a>) <a href="http://www.schneier.com/blog/archives/2010/07/dnssec_root_key.html">is  split between among 7 people from 6 different countries</a> such that at least 5  people are needed to reconstruct it in the event of an Internet catastrophe.</p> <p>If this idea is good enough for protecting nuclear weapons, the Fort Knox  vault, and one of the most critical security aspects on the Internet, it&#8217;s probably  good enough for your password list. Besides, it can make a somewhat uncomfortable  process a little more fun.</p> <p>Let&#8217;s start with a simple example. Let&#8217;s say that your master password  is &#8220;1.big.BOOM@thunder.mil&#8221;. You could  just write it out on a piece of paper and then use scissors to cut it up. This would  work if you wanted to split it among 2 people, but it has some notable downsides:</p> <ol>  <li>It doesn&#8217;t work if you want redundancy (i.e. any 2 of 3 people being   able to reconstruct it)</li>  <li>Each piece would tell you something about the password and thus has   value on its own. Ideally, we&#8217;d like the pieces to be worthless unless a threshold   of people came together.</li>  <li>It doesn&#8217;t really work for more complicated scenarios like requiring 5   of 7 people.</li> </ol> <p>Fortunately, some clever math can fix these issues and give you this ability  for free. I created a program called  <a href="https://github.com/moserware/SecretSplitter">SecretSplitter</a> to automate  all of this to hopefully make the whole process painless.</p> <p>Let&#8217;s say you want to require at least 2 witnesses to agree that something  happened to you before your secret is available. You also want to build in  redundancy such that <em>any</em> pair of people can find out your password. For this scenario, you keep the can use the default settings and press the &#8220;split&#8221; button:</p> <p> <a href="http://4.bp.blogspot.com/-2key0wl4WCA/TsmS2sduePI/AAAAAAAAZIU/xU5sv04g6l0/s1600/SplitMessageSpecifyMessageThresholdAndShares.png" title="Specify the message &#8220;1.big.BOOM@thunder.mil&#8221;"> <img alt="Specifying message" height="353" src="http://4.bp.blogspot.com/-2key0wl4WCA/TsmS2sduePI/AAAAAAAAZIU/xU5sv04g6l0/s576/SplitMessageSpecifyMessageThresholdAndShares.png" width="576" /></a></p> <p>You&#8217;ll get this list of split pieces: </p> <p> <a href="http://3.bp.blogspot.com/-Or-lhAwWbYo/TsmfaToakII/AAAAAAAAZIg/zN2D719yU8s/s1600/SplitMessageShares.png" title="List of message shares"> <img alt="List of message shares" height="428" src="http://3.bp.blogspot.com/-Or-lhAwWbYo/TsmfaToakII/AAAAAAAAZIg/zN2D719yU8s/s576/SplitMessageShares.png" width="576"></a></p> <p>Notice that each piece is twice as long as your original message (about  twice the size of a package tracking number). This is by design. </p> <p>Now comes the hard part: you have to select three people you trust. You  should have high confidence in anyone you&#8217;d entrust with a secret piece. It&#8217;s easy to  get caught up in <a href="http://xkcd.com/538/">gee-whiz cryptography</a> and miss  fundamentals: you ultimately have to <a href="http://cm.bell-labs.com/who/ken/trust.html" title="&#8220;Reflections on Trusting Trust&#8221; is a fascinating read about the fundamentals of security.">trust something</a>, especially  with important matters. SecretSplitter provides a trust circuit breaker just  in case (because even well-meaning people can <a href="http://abcnews.go.com/WN/president-bill-clinton-lost-nuclear-codes-office-book/story?id=11930878" title="Like the nuclear biscuit"> lose</a> <a href="http://www.theatlantic.com/politics/archive/2010/10/why-clintons-losing-the-nuclear-biscuit-was-really-really-bad/65009/" title="Thankfully it wasn&#8217;t needed">important things</a>). The splitting process adds a bit of complexity, but so do real circuit breakers.  If you trust no one, then you can&#8217;t have anyone help you if something happens.</p><p> For  demonstration purposes, let&#8217;s say you trust 3 people. </p> <p>You now have to distribute these secret pieces. You could do all sorts  of clever things like <a href="http://www.hulu.com/watch/24493/back-to-the-future-part-ii-letter-from-doc" title="Like Doc did to Marty in &#8220;Back to the Future III&#8221;"> send letters to people that will be delivered far in the future</a> or read them  over the phone. However, distributing them in person is a pretty good option:</p> <p> <a href="http://1.bp.blogspot.com/-GlUFOp6vyNM/TsSJI4i3XpI/AAAAAAAAZHs/54reXSGrrfA/s1600/CreateShareEnvelope.JPG"> <img alt="Creating an envelope with a share" height="432" src="http://1.bp.blogspot.com/-GlUFOp6vyNM/TsSJI4i3XpI/AAAAAAAAZHs/54reXSGrrfA/s576/CreateShareEnvelope.JPG" width="576"></a></p> <p>It can make the upcoming holiday table discussions even more fun:</p> <p> <a href="http://3.bp.blogspot.com/-Tme-qGpMt3w/TsSIfYsPoYI/AAAAAAAAZHg/1VhIRxy_yCs/s1600/ShareHandoff.JPG"> <img alt="Handing over the envelope with the secret piece" height="432" src="http://3.bp.blogspot.com/-Tme-qGpMt3w/TsSIfYsPoYI/AAAAAAAAZHg/1VhIRxy_yCs/s576/ShareHandoff.JPG" width="576"></a></p> <p>Let&#8217;s pretend that something happened to you. Two of the three family members that you gave pieces to would  come together and agree that &#8220;something&#8221; indeed has happened to you. What happens  now?</p> <p> <a href="http://2.bp.blogspot.com/-bOPvXCcnFP0/TsSJkvTNn5I/AAAAAAAAZH4/jhNLjOp1r5k/s1600/TwoEnvelopesOpened.JPG"> <img alt="Two opened envelopes with secret shares" height="576" src="http://2.bp.blogspot.com/-bOPvXCcnFP0/TsSJkvTNn5I/AAAAAAAAZH4/jhNLjOp1r5k/s576/TwoEnvelopesOpened.JPG" width="432"></a></p> <p>Well, either you included a note with each secret piece or you emailed  them previously with instructions that they&#8217;d just need to download and run  this small program. The pair comes together at a laptop and they each type their piece in quickly and then press &#8220;Recover&#8221;:</p> <p> <a href="http://2.bp.blogspot.com/-x3K9S0BJ0bw/TsminW_VM1I/AAAAAAAAZIs/FV_MZWOj0Yc/s1600/RecoverMessageWithTypo.png"> <img alt="Typing in secret shares with a typo" height="355" src="http://2.bp.blogspot.com/-x3K9S0BJ0bw/TsminW_VM1I/AAAAAAAAZIs/FV_MZWOj0Yc/s576/RecoverMessageWithTypo.png" width="572"></a></p> <p>Oops... they typed so quickly that they mixed up one of the digits. It  told us where to look:</p> <p> <a href="http://4.bp.blogspot.com/-eEgbphrpUvQ/TsmjFmbmHEI/AAAAAAAAZI4/5xqF-rX2MIo/s1600/RecoverMessageTypoWarning.png"> <img alt="Warning about typo" height="359" src="http://4.bp.blogspot.com/-eEgbphrpUvQ/TsmjFmbmHEI/AAAAAAAAZI4/5xqF-rX2MIo/s576/RecoverMessageTypoWarning.png" width="576"></a></p> <p>They fix the typo and press recover again:</p> <p> <a href="http://1.bp.blogspot.com/-gKwkODAk2tk/TsmoVJV5ZqI/AAAAAAAAZJc/rNwb7aXqfnk/s1600/RecoverMessageTypoFixed.png"> <img alt="Fixed the typo" height="355" src="http://1.bp.blogspot.com/-gKwkODAk2tk/TsmoVJV5ZqI/AAAAAAAAZJc/rNwb7aXqfnk/s576/RecoverMessageTypoFixed.png" width="572"></a></p> <p>And immediately they see:</p> <p> <a href="http://3.bp.blogspot.com/-WLjHmSNf0O4/Tsmo8cCS3XI/AAAAAAAAZJo/kGqfPTGLvE0/s1600/RecoveredMessage.png"> <img alt="Recovered message" height="355" src="http://3.bp.blogspot.com/-WLjHmSNf0O4/Tsmo8cCS3XI/AAAAAAAAZJo/kGqfPTGLvE0/s576/RecoveredMessage.png" width="572" /></a></p> <p>Password recovered! They could now use this master password to log into  your password manager where you&#8217;ve stored further details.</p> <p>This &#8220;message&#8221; approach is useful if you have a small amount of data such as a  password that you could write on a piece of paper. One downside is that each piece is twice the size of the text message.  If your message becomes much larger then it will no longer be feasible to type it in manually.</p> <p>One alternative approach is to bundle together all of your important files  into a zip file:</p> <p> <a href="http://1.bp.blogspot.com/-ipAnpuK26Hg/TsKAGXULYBI/AAAAAAAAZDE/Zqf6Wdmfklc/s1600/CompressedFileExample.png"> <img alt="Example of a compressed file contents" height="242" src="http://1.bp.blogspot.com/-ipAnpuK26Hg/TsKAGXULYBI/AAAAAAAAZDE/Zqf6Wdmfklc/s576/CompressedFileExample.png" width="296"></a></p> <p>To split this file, you&#8217;d click the &#8220;Create&#8221; tab and then find the file,  set the number of shares and click &#8220;Save&#8221;:</p> <p> <a href="http://3.bp.blogspot.com/-WZ9IT1nQ9_8/TsmrHgVFQhI/AAAAAAAAZJ0/SLsA5a_5dGg/s1600/SplitFileSpecifyFileAndShares.png"> <img alt="Splitting up a file" height="299" src="http://3.bp.blogspot.com/-WZ9IT1nQ9_8/TsmrHgVFQhI/AAAAAAAAZJ0/SLsA5a_5dGg/s576/SplitFileSpecifyFileAndShares.png" width="525" /></a></p> <p>You&#8217;ll then be told:</p> <p> <a href="http://3.bp.blogspot.com/-TOIejemR5HI/TsmsE7ng-XI/AAAAAAAAZKA/37dVpipm_TE/s1600/SplitFileSaveMessageBox.png"> <img alt="MessageBox asking you to save the file" height="171" src="http://3.bp.blogspot.com/-TOIejemR5HI/TsmsE7ng-XI/AAAAAAAAZKA/37dVpipm_TE/s576/SplitFileSaveMessageBox.png" width="431" /></a></p> <p>And then you pick where to save the encrypted file:</p> <p> <a href="http://4.bp.blogspot.com/-K6EedSHTiSM/TsKDt1ngRVI/AAAAAAAAZDo/jXogw62iqQQ/s1600/SplitFileSaveDialog.png"> <img alt="Save file dialog" height="102" src="http://4.bp.blogspot.com/-K6EedSHTiSM/TsKDt1ngRVI/AAAAAAAAZDo/jXogw62iqQQ/s576/SplitFileSaveDialog.png" width="576"></a></p> <p>Finally, you&#8217;ll see this screen:</p> <p> <a href="http://4.bp.blogspot.com/-oENayRV6e_Y/TsmtUsGS1aI/AAAAAAAAZKM/HKs8T2qVpqk/s1600/SplitFileShares.png"> <img alt="Split file pieces" height="556" src="http://4.bp.blogspot.com/-oENayRV6e_Y/TsmtUsGS1aI/AAAAAAAAZKM/HKs8T2qVpqk/s576/SplitFileShares.png" width="557" /></a></p> <p>This creates a slightly more complicated scenario because you now have 2 things  to share: the secret pieces and the encrypted file with all your data. The  encrypted file doesn&#8217;t have to be secret at all. You can safely email it to people  that have a secret piece:</p> <p> <a href="http://4.bp.blogspot.com/-6tgMfuudCcE/TsKKnwFAokI/AAAAAAAAZEQ/er0vI1PDRGw/s1600/SplitFileEmail.png"> <img alt="Sending the fun email" height="365" src="http://4.bp.blogspot.com/-6tgMfuudCcE/TsKKnwFAokI/AAAAAAAAZEQ/er0vI1PDRGw/s576/SplitFileEmail.png" width="576"></a></p> <p>Now, if something happens to you, they&#8217;d run the program, and type in two  shares and press &#8220;Recover&#8221;:</p> <p> <a href="http://2.bp.blogspot.com/-2ycvvqebjac/Tsmu_SrtvXI/AAAAAAAAZKY/1RlJksqIe5E/s1600/RecoverFileShares.png"> <img alt="Entering in file shares" height="398" src="http://2.bp.blogspot.com/-2ycvvqebjac/Tsmu_SrtvXI/AAAAAAAAZKY/1RlJksqIe5E/s576/RecoverFileShares.png" width="525" /></a></p> <p>It&#8217;ll then tell them:</p> <p> <a href="http://4.bp.blogspot.com/-wTvIkMC4n50/TsmvzpNij-I/AAAAAAAAZKk/nlHumsCNVsQ/s1600/RecoverFileSpecifyEncryptedFileMessageBox.png"> <img alt="Specify encrypted file MessageBox" height="184" src="http://4.bp.blogspot.com/-wTvIkMC4n50/TsmvzpNij-I/AAAAAAAAZKk/nlHumsCNVsQ/s576/RecoverFileSpecifyEncryptedFileMessageBox.png" width="496" /></a></p> <p>They&#8217;d then go to their email and search for the email from you that includes  your encrypted file:</p> <p> <a href="http://2.bp.blogspot.com/-UIG-SCT_EMM/TsKM-la3y6I/AAAAAAAAZE0/e4ZXnzLP_DE/s1600/RecoverEmailSearch.png"> <img alt="Searching email" height="38" src="http://2.bp.blogspot.com/-UIG-SCT_EMM/TsKM-la3y6I/AAAAAAAAZE0/e4ZXnzLP_DE/s576/RecoverEmailSearch.png" width="370" /></a></p> <p>Then they&#8217;d find the single message (or the latest one if you sent out  updates) and download your encrypted attachment:</p> <p> <a href="http://2.bp.blogspot.com/-07Lvyv3E9OU/TsKOQcUYQtI/AAAAAAAAZFM/SaCiYXOISJs/s1600/RecoverEmailFound.png"> <img alt="Found email" height="29" src="http://2.bp.blogspot.com/-07Lvyv3E9OU/TsKOQcUYQtI/AAAAAAAAZFM/SaCiYXOISJs/s576/RecoverEmailFound.png" width="392" /></a></p> <p>They&#8217;d then go back to the program to open it up:</p> <p> <a href="http://1.bp.blogspot.com/-p17NqyGAuzQ/TsKPIS3DCJI/AAAAAAAAZFY/XuRjjlQ6qUI/s1600/RecoverFileOpen.png"> <img alt="Opening the file" height="71" src="http://1.bp.blogspot.com/-p17NqyGAuzQ/TsKPIS3DCJI/AAAAAAAAZFY/XuRjjlQ6qUI/s576/RecoverFileOpen.png" width="542" /></a></p> <p>and then they&#8217;d see a message to be careful where they saved it:</p> <p> <a href="http://1.bp.blogspot.com/-Boue_w0B6p4/TsmxNb_4voI/AAAAAAAAZKw/c4LwB75ZhxI/s1600/RecoverFileSafetyWarning.png"> <img alt="Will you keep the data safe?" height="199" src="http://1.bp.blogspot.com/-Boue_w0B6p4/TsmxNb_4voI/AAAAAAAAZKw/c4LwB75ZhxI/s576/RecoverFileSafetyWarning.png" width="490" /></a></p> <p>and then they&#8217;d save it:</p> <p> <a href="http://2.bp.blogspot.com/-7EBY2HrKshc/TsKQrF5NGsI/AAAAAAAAZF8/SFf_3srCKmw/s1600/SaveDecryptedFile.png"> <img alt="Save decrypted" height="96" src="http://2.bp.blogspot.com/-7EBY2HrKshc/TsKQrF5NGsI/AAAAAAAAZF8/SFf_3srCKmw/s576/SaveDecryptedFile.png" width="554" /></a></p> <p>They'd then be asked if they want to open the decrypted file, which they&#8217;d say &#8220;Yes&#8221;:</p> <p> <a href="http://2.bp.blogspot.com/-g8X74oYh63M/Tsmz9ED6cII/AAAAAAAAZK8/rj_RK1FIZUQ/s1600/RecoverFileOpenDecryptedFileMessageBox.png"> <img alt="Open decrypted file?" height="171" src="http://2.bp.blogspot.com/-g8X74oYh63M/Tsmz9ED6cII/AAAAAAAAZK8/rj_RK1FIZUQ/s576/RecoverFileOpenDecryptedFileMessageBox.png" width="342" /></a></p> <p>Now they can see everything:</p> <p> <a href="http://1.bp.blogspot.com/-ipAnpuK26Hg/TsKAGXULYBI/AAAAAAAAZDE/Zqf6Wdmfklc/s1600/CompressedFileExample.png"> <img alt="Example of a compressed file contents" height="242" src="http://1.bp.blogspot.com/-ipAnpuK26Hg/TsKAGXULYBI/AAAAAAAAZDE/Zqf6Wdmfklc/s576/CompressedFileExample.png" width="296"></a></p><p>It might sound complicated, but if you&#8217;re familiar with the process, it  might only take a minute. If you&#8217;re not tech savvy and have never done it before  and type slowly, it might take 30 minutes. In either case, it&#8217;s faster than having  to drive to your home and search around for a folder and it contains everything  you wanted people to know (especially when things are time sensitive).</p> <p>That&#8217;s it! Your master password and important data are now backed up. The  risk is distributed: if any one piece is compromised (i.e. gets lost or misplaced),  you can have everyone else destroy their secret piece and nothing will be leaked. Also,  the program has an advance feature that lets you save the file encryption key. This feature  allows you to send out updated encrypted files that can be decrypted with the pieces  you&#8217;ve already established in person.</p> <p>SecretSplitter implements a &#8220;(t,n) <a href="http://en.wikipedia.org/wiki/Threshold_cryptosystem">threshold cryptosystem</a>&#8221;  which can be thought of as a mathematical generalization of the physical two-man  rule. The idea is that you split up a secret into pieces (called &#8220;shares&#8221;) and require  at least a threshold of &#8220;t&#8221; shares to be present in order to recover the secret.  If you have less than &#8220;t&#8221; shares, you gain no information about the secret. Whatever  threshold you use, it&#8217;s really important that each &#8220;shareholder&#8221; know the threshold  number of shares.</p> <p>You can be quite creative in setting the threshold and distributing shares.  For example, you can trust your spouse more by giving her more shares than anyone else. The key idea  is that <strong>a share is an atomic unit of trust</strong>. You can give more than one unit of trust  to a person, but you can never give less.</p> <p>Another important practical concern is that you should consider adding  redundancy to any threshold system. This is easily achieved by creating more shares  than the threshold number. The reason is that if you&#8217;re going out of your way to  use a threshold system, then you probably want to make sure you have a backup plan  in case one or more of the shares are unavailable.</p> <p><strong>IMPORTANT LEGAL NOTE</strong>: It&#8217;s tempting to keep everything, including the important  directives and your will in only electronic form (even when they&#8217;re signed). Unfortunately,  most states require the original signed documents to be considered legal and most courts will  not accept a copy. For this reason, you should still have the paper originals somewhere  such as a fireproof safe. However, be careful where you put the originals: although  it might sound convenient to put them in a bank safety deposit box, there&#8217;s usually  a rather long waiting period before a before a bank can legally provide access to  your box to a survivor, so don&#8217;t put any time sensitive items there. My recommendation  at the current time would be to include copies of the signed originals in your encrypted  file and also include detailed instructions on where the originals are located and  how to access them.</p> <h4>How It Works</h4> <p>Given the sensitive nature of the data being protected, I wanted to make  sure I understood every part of the mathematics involved and literally every bit  of the encrypted file. You&#8217;re more than welcome to just use the program without  fully understanding the details, but I encourage people to verify my math and code  if you&#8217;re able and curious. </p> <p>To get started, recall that computers work with <a href="http://en.wikipedia.org/wiki/Bit">bits</a>: 1&#8217;s and 0&#8217;s that can represent  anything. For example, the <a href="http://en.wikipedia.org/wiki/UTF-8">most popular  way of encoding text</a> will encode &#8220;thunder&#8221; in binary as </p> <p>01110100 01101000 01110101 01101110 01100100 01100101 01110010</p> <p>We can write this more efficiently using <a href="http://en.wikipedia.org/wiki/Hexadecimal">hexadecimal</a> notation as:  74 68 75 6E 64 65 72. We can also treat this entire sequence of bits as a single  55 bit number whose decimal representation just happens to be 32,765,950,870,971,762.  In fact, <em>any</em> piece of data can be converted to a single number.</p> <p>Now that we have a single number, let&#8217;s go back to your algebra class and  remember the equation for a <a href="http://en.wikipedia.org/wiki/Line_(geometry)">line</a>:&nbsp; y=mx+b.</p> <p> <a href="http://4.bp.blogspot.com/-GxROrVUIspY/TsZ0uhWdD1I/AAAAAAAAZII/T2hs8dwPZGk/s1600/LineShowingIntercept.png"> <img alt="Line showing intercept" height="351" src="http://4.bp.blogspot.com/-GxROrVUIspY/TsZ0uhWdD1I/AAAAAAAAZII/T2hs8dwPZGk/s576/LineShowingIntercept.png" width="346"></a></p> <p>In this equation, &#8220;b&#8221; is the &#8220;<a href="http://en.wikipedia.org/wiki/Y-intercept">y-intercept</a>&#8221;,  which is where the line crosses the y-axis. The &#8220;m&#8221; value is the  <a href="http://en.wikipedia.org/wiki/Slope">slope</a> and represents  how steep the line is (i.e. its &#8220;<a href="http://en.wikipedia.org/wiki/Grade_(slope)">grade</a>&#8221;  if it were a hill).<br /> </p> <p>This is all the core math you need to understand splitting secrets. In  our particular case, our secret message is always represented by the y-intercept  (i.e. &#8220;b&#8221; in y=mx+b). We want to create a line that will go through this point.  Recall that a line could go through this point at any angle. The slope (i.e. &#8220;m&#8221;  in y=mx+b) will direct us where it goes. For things to work securely, the slope  must be a random number.</p> <p>Although we use large numbers in practice for security reasons, let&#8217;s keep  it simple here. Let&#8217;s say our secret number is &#8220;7&#8221; and our random slope is &#8220;3.&#8221;  These choices generate this line:</p> <p> <a href="http://4.bp.blogspot.com/-IasTDH3sDpU/TsMzQA6quLI/AAAAAAAAZGY/CracopxkEBY/s1600/Line3xp7.png"> <img alt="y=3x+7" height="369" src="http://4.bp.blogspot.com/-IasTDH3sDpU/TsMzQA6quLI/AAAAAAAAZGY/CracopxkEBY/s576/Line3xp7.png" width="440"></a></p> <p>With this equation, we can generate an infinite number of points on the  line. For example, we can pick the first three points: (1, 10), (2,  13), and (3, 16):</p> <p> <a href="http://3.bp.blogspot.com/-PegkAHn5TSk/TsM1TG4VLLI/AAAAAAAAZGk/ZTZbRW5nmOU/s1600/Line3points.png"> <img alt="3 points" height="492" src="http://3.bp.blogspot.com/-PegkAHn5TSk/TsM1TG4VLLI/AAAAAAAAZGk/ZTZbRW5nmOU/s576/Line3points.png" width="576"></a></p> <p>You can see that if you had any two of these points, you could find  the y-intercept.</p> <p>It&#8217;s critical to realize that having just one of these points gives us  no useful information about the line. However, having any other point on the line  would allow us to use a ruler and draw a straight line to the y-intercept and thus  reveal the secret (we could also work it out algebraically). Each point represents a secret piece or &#8220;share&#8221; and has a unique  &#8220;x&#8221; and &#8220;y&#8221; value.</p> <p>The mathematically fascinating part about this idea is that a line is just  a simple <a href="http://en.wikipedia.org/wiki/Polynomial">polynomial</a> (curve)  and this technique works for polynomials of arbitrarily large <a href="http://en.wikipedia.org/wiki/Polynomial#Degree">degrees</a>. For example,  a second degree polynomial is a <a href="http://en.wikipedia.org/wiki/Parabola"> parabola</a> that requires 3 unique points to completely define it (one more than  a line). Its equation is of the form y=ax^2 + bx + c. In our case &#8220;c&#8221; is the y-intercept  and &#8220;a&#8221; and &#8220;b&#8221; are random as in y = 2x^2 + 3x + 7:</p> <p>Given this equation, we can generate as many &#8220;shares&#8221; as we&#8217;d like: (1,12),  (2,21), (3,34), (4,51), etc.</p> <p>Keep in mind that a parabola requires three points to uniquely define  it. If you just had two points, as in (1,12) and (2,21), you could create an infinite  number of parabolas going through these points and thus have infinite choices  for what the y-intercept (i.e. your secret) could be:</p> <p> <a href="http://2.bp.blogspot.com/-1isSzAsFj_o/TsPeiJxUYLI/AAAAAAAAZGw/L3Lz5K9abCA/s1600/Parabola6Curves.png"> <img alt="6 parabolas going through the same two points" height="387" src="http://2.bp.blogspot.com/-1isSzAsFj_o/TsPeiJxUYLI/AAAAAAAAZGw/L3Lz5K9abCA/s576/Parabola6Curves.png" width="503"></a></p> <p>However, a third point will define the parabola and its y-intercept  exactly:</p> <p> <a href="http://4.bp.blogspot.com/-nZwrzYySLmY/TsRmAjsT2xI/AAAAAAAAZHI/Hj4Q9fwFZDI/s1600/ParabolaSingleCurve.png"> <img alt="Unique parabola" height="351" src="http://4.bp.blogspot.com/-nZwrzYySLmY/TsRmAjsT2xI/AAAAAAAAZHI/Hj4Q9fwFZDI/s576/ParabolaSingleCurve.png" width="498"></a></p> <p>You&#8217;ve just learned that splitting a secret that requires three people is just a matter of creating a parabola. Requiring more people is just a matter of creating a higher-degree polynomial such as a <a href="http://en.wikipedia.org/wiki/Cubic_function">cubic</a> or <a href="http://en.wikipedia.org/wiki/Quartic_function">quartic</a> polynomial. If you understand this basic idea,  the rest is just details:</p> <ol>  <li>Instead of using numbers, we translate the data to a big polynomial  <a href="http://en.wikipedia.org/wiki/GF(2)">with binary coefficients</a>.</li>  <li>Instead of using middle school algebra, we use a &#8220;<a href="http://en.wikipedia.org/wiki/Finite_field">finite   field</a>.&#8221; This helps keep results about the same size as the input and adds   some security.</li> </ol> <p>Don&#8217;t be intimidated by these changes. The core ideas are the same as the  basic case. The only noticeable difference is that you have to think of operations  like multiplication and division in a more abstract way. For details, check out my source  code&#8217;s use of <a href="https://github.com/moserware/SecretSplitter/blob/1b54b72a87d4bdcc5c84b12b36f17fca382d551d/SecretSplitter/Algebra/FiniteFieldPolynomial.cs#L40">Horner&#8217;s scheme</a>  for evaluating polynomials, <a href="https://github.com/moserware/SecretSplitter/blob/1b54b72a87d4bdcc5c84b12b36f17fca382d551d/SecretSplitter/Algebra/FiniteFieldPolynomial.cs#L63">peasant multiplication</a>, <a href="https://github.com/moserware/SecretSplitter/blob/1b54b72a87d4bdcc5c84b12b36f17fca382d551d/SecretSplitter/Algebra/IrreduciblePolynomial.cs#L12">irreducible polynomials</a> <a href="http://math.stackexchange.com/questions/14787/finding-irreducible-polynomials-over-gf2-with-the-fewest-terms"> with the fewest terms</a>,  <a href="https://github.com/moserware/SecretSplitter/blob/1b54b72a87d4bdcc5c84b12b36f17fca382d551d/SecretSplitter/Algebra/LagrangeInterpolator.cs#L22">Lagrange polynomial interpolation</a> to find the y-intercept, and using  <a href="https://github.com/moserware/SecretSplitter/blob/1b54b72a87d4bdcc5c84b12b36f17fca382d551d/SecretSplitter/Algebra/FiniteFieldPolynomial.cs#L106">Euclidean inverses</a> for division.</p> <p>Again, it probably sounds more complicated than it really is. At its core,  it&#8217;s simple. This technique is formally known as a <a href="http://securespeech.cs.cmu.edu/reports/shamirturing.pdf" title="See &#8220;How to Share a Secret&#8221; by Adi Shamir">Shamir Secret  Sharing Scheme</a> and it was discovered in the 1970&#8217;s.</p> <p>I didn&#8217;t want to invent anything new unless I felt I absolutely had to.  There was already a good tool called &#8220;<a href="http://point-at-infinity.org/ssss/">ssss-split</a>&#8221; that generates  shares similar to how I wanted. This program adds a special twist by scrambling  the resulting y-intercept point and therefore adds an extra layer of protection. Since this program  was already the de-facto standard, I wanted to be fully compatible with it. To make  sure I was compatible, I had to copy its method of &#8220;diffusing&#8221; (i.e. scrambling)  the bits using the public domain <a href="http://en.wikipedia.org/wiki/XTEA">XTEA  algorithm</a>. However, to ensure complete fidelity, I had to look at the source  code. The only problem was that it was originally released under the <a href="http://www.gnu.org/copyleft/gpl.htmlhttp://www.gnu.org/copyleft/gpl.html">GNU Public  License </a> (GPL) and it used  <a href="http://en.wikipedia.org/wiki/GNU_Multiple_Precision_Arithmetic_Library">a GPL library for working with large numbers</a>. My goal was to make my implementation as open as I could, so I asked  the author if I could look at his code to derive my own implementation that I&#8217;d release  under the more permissive  <a href="http://www.opensource.org/licenses/mit-license.php">MIT license</a> and he graciously allowed me to do this.</p> <p>To prove the compatibility, you can use the <a href="http://point-at-infinity.org/ssss/demo.html">ssss-split demo page</a> and  paste the results  <a href="https://github.com/moserware/SecretSplitter/releases/latest">into SecretSplitter</a> and it&#8217;ll work just fine. In addition, I  <a href="https://github.com/moserware/SecretSplitter/releases">created  command line programs from scratch</a> that are fully compatible with ssss-split and ssss-combine.</p> <p>After some basic usability testing, I decided to make one small adjustment. The &#8220;ssss-split&#8221;  command allows you to attach a prefix that it ignores. I wanted to add a special prefix that would  tell what type of share it was (i.e. a message or a file) as well as a <a href="http://en.wikipedia.org/wiki/SHA-1">simple checksum</a> because  with all those digits it&#8217;s easy to mistype one. </p> <p>Now, you can understand all the pieces of the long share:</p> <p> <a href="http://3.bp.blogspot.com/-z_DjRnzLXEo/TsRtr-yV1oI/AAAAAAAAZHU/pr4h62fFI_k/s1600/ShareComponents.png"> <img alt="Share components" height="77" src="http://3.bp.blogspot.com/-z_DjRnzLXEo/TsRtr-yV1oI/AAAAAAAAZHU/pr4h62fFI_k/s576/ShareComponents.png" width="576"></a></p> <p>In theory, you could &#8220;encrypt&#8221; a large file directly using this technique.  In practice, it doesn&#8217;t work well because each share would be huge and not something  you&#8217;d be able to write down by hand or say over the phone, even using the <a href="http://en.wikipedia.org/wiki/NATO_phonetic_alphabet">phonetic alphabet</a>.</p> <p>For lots of data, we use a hybrid approach: encrypt the file using standard  file encryption with a random key and then split the small &#8220;key&#8221; into pieces.</p> <p>For file encryption, I again didn&#8217;t want to invent anything new. I decided  to use the <a href="http://tools.ietf.org/html/rfc4880">OpenPGP Message Format</a>,  the same format used by <a href="http://en.wikipedia.org/wiki/Pretty_Good_Privacy">PGP</a> and <a href="http://www.gnupg.org/">GNU Privacy Guard</a> (GPG). I didn&#8217;t want to have  to worry about licensing restrictions or including a <a href="http://www.bouncycastle.org/" title="Like Bouncy Castle">third-party library</a>, so I wrote my own  implementation from scratch that did exactly what I wanted. I <a href="http://commondatastorage.googleapis.com/rhuang/rfc4880.mobi" title="I'm a bit embarrassed to admit I read it on my Kindle by the beach. On the subject, I must admit that RFC2MOBI is a great free app for converting text-based RFCs to Kindle MOBI files. It does a remarkably decent job.">read RFC4880</a>  and started sketching out what I needed to do. A few bug fixes later and I  had a working implementation that was able to interoperate with GPG. To simplify  my implementation, I only support a limited subset of features:</p> <ol>  <li>I always use   <a href="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES</a> with a 256-bit key for encryption, even if users select a smaller   effective key size. This means that users can pick any size key they want and thus balance security and share length. I picked AES because it&#8217;s strong and  <a href="http://www.moserware.com/2009/09/stick-figure-guide-to-advanced.html">  understandable with stick figures</a>.</li>  <li>The actual file encryption key is always a  <a href="http://tools.ietf.org/html/rfc4880#section-3.7.1.3">hashed, salted,   and stretched version</a> of the reconstructed shares text.</li>  <li>The encrypted file has an  <a href="http://tools.ietf.org/html/rfc4880#section-5.13">integrity protection   packet</a> to detect if the file has been modified and ensure it was decrypted correctly.</li> </ol> <p>Since I used common formats, you can verify the correctness of the generated  files using a Linux shell. You can also create files using the shell and  have them interoperate with SecretSplitter. I included  <a href="https://github.com/moserware/SecretSplitter/blob/master/Compatibility.txt">a sample of how to do this  with the source code</a>.</p> <h4>Help Wanted / Future Possibilities</h4> <p>SecretSplitter still looks and feels like a prototype. There are lots of  possible improvements that could be made:</p> <ol>  <li>Secret splitting is a relatively complicated idea. In  <a href="http://www.amazon.com/gp/product/0470474246/ref=as_li_ss_tl?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=217145&amp;creative=399369&amp;creativeASIN=0470474246">  Cryptography Engineering</a>, the authors write &#8220;secret sharing schemes are   rarely used because they are too complex. They are complex to implement, but   more importantly, they are complex to administrate and operate.&#8221; <br />  <br />  Although I tried to simplify the user experience for broad use, it could still   use some user experience enhancements to simplify it further. </li>  <li>I wrote it in C# for the .net platform because that is what I&#8217;m most   familiar with (and it has some built-in powerful primitives like BigIntegers,   AES, and hash functions). I suspect that an HTML5 version using JavaScript, a   nice interface, and coming from a trusted domain would get much broader usage.   In addition, since this is a problem that affects everyone, having great internationalization   support would be a nice touch. It also would be nice to have a polished look with a good logo and other graphics.</li>  <li>You could use more  <a href="http://en.wikipedia.org/wiki/Verifiable_secret_sharing">elaborate secret   sharing schemes</a> than what I implemented in SecretSplitter. I considered   these, but ultimately wanted to use a technique that was already compatible   with widely deployed tools. I also considered enhancing shares with  <a href="http://www.google.com/url?q=http%3A%2F%2Fen.wikipedia.org%2Fwiki%2FTime-based_One-time_Password_Algorithm&amp;sa=D&amp;sntz=1&amp;usg=AFQjCNEG4XPPcQbdiivr7kuRUBxExU6Aqw">  two-factor</a> support or using  <a href="http://en.wikipedia.org/wiki/Public_key_infrastructure">existing public   key infrastructure</a>, but decided that added too much complexity. Perhaps   it&#8217;s possible to incorporate these in a good design.</li>  <li>It&#8217;d be neat if this scheme or something similar to it was integrated   into LastPass and KeyPass as a core feature. </li>  <li>Obviously the shares themselves are long. I tried making them shorter   but the downsides outweighed the upsides. Perhaps it could be better. Also, a compelling   graphically designed share card might make it more fun for broader use. The long length   is somewhat of a safety mechanism that prevents people from memorizing with   a quick glance. Also, it discourages overhasty use much like <a href="http://vimeo.com/5735591" title="Although, as this video demonstrates a hammer allows for quick access. However, at least you&#8217;d be making a conscious decision at that point.">freezing a credit card</a>.</li>  <li>I kept the codes in a format that would be easy to write as well as read over the phone. I used a simple character set that avoids ambiguities like &#8220;O&#8221; vs &#8220;0&#8221;.   One additional strategy could be to embed the share as a  <a href="http://qrcodenet.codeplex.com/">QR code</a> or something similar. I   didn&#8217;t pursue this approach in favor of simplicity, but this could be an option.</li>  <li>Really paranoid people might want to back up their encrypted file to   paper.  <a href="http://www.codinghorror.com/blog/2009/07/the-paper-data-storage-option.html">  This is possible</a>, but I&#8217;m not sure if it should belong inside the program   itself.</li>  <li>It&#8217;d be good to have suggestions on how to exchange shares or perhaps   borrow ideas from PGP  <a href="http://en.wikipedia.org/wiki/Key_signing_party">key signing parties</a>.   I suspect that if secret splitting were to become popular, then &#8220;<a href="http://en.wikipedia.org/wiki/Web_of_trust">web   of trust</a>&#8221; scenarios would naturally occur (i.e. &#8220;I&#8217;ll hold your secret share   if you hold mine&#8221;).</li>  <li>It&#8217;d be fun to compile a list of non-obvious uses for SecretSplitter   to share with others. For example, it could make for interesting scavenger hunt   clues. </li> </ol> <p>If you&#8217;d like to donate your time to any of the above ideas, I&#8217;d encourage  you to just give it a go. You don&#8217;t have to ask for my permission but it would be  nice if you posted your results somewhere or left a comment to this post. You can  use my code for whatever purpose you&#8217;d like. My only hope is that you might get  some benefit out of it.</p> <h4>Conclusion</h4> <p>SecretSplitter is just a tool that gives another option for backing up  very sensitive information by splitting it up into pieces. It&#8217;s not a full solution,  only a tool. By relying on people I trust instead of  <a href="http://mashable.com/2010/10/11/social-media-after-death/" title="Besides, I don't want to have to worry about a third-party company &#8220;dying&#8221; before I do.">a third-party company</a>, it helped me remove one excuse I had for not  preparing somewhat unpleasant but important documents that we should all probably  have. I still don&#8217;t have this all figured out, but writing SecretSplitter help me get started. </p> <p>If you&#8217;re young, don&#8217;t have any <a href="http://en.wikipedia.org/wiki/Minor_(law)">minor children</a>, and don&#8217;t  care at all what happens to your stuff, then you could run some mental actuarial  model and convince yourself that the probability of you or your survivors needing  these documents or password recovery procedure anytime soon is low, but you&#8217;re not  given any guarantees. </p> <p>At the very least, it&#8217;s a good idea to make sure all of your financial  assets and life insurance policies have a named beneficiary and at perhaps at least  one alternate. You can also declare things like organ donor preferences on your  driver&#8217;s license instead of making declarations in other documents. It&#8217;s also a good  idea to have an &#8220;<a href="http://en.wikipedia.org/wiki/In_case_of_emergency" title="In Case of Emergency">ICE</a>&#8221;  entry in your cell phone. However, going the extra step and making very basic final  documents doesn&#8217;t require that much more work. Besides, once you have baseline documents, keeping them fresh is just a matter of occasional updates due to life events.</p> <p>The increasing digitization of our lives means that more personal things will only be stored digitally. From our journals to email to videos  to health records, all of this will eventually only exist digitally and likely hidden  behind passwords. This future needs some safety net for backing up sensitive things in  a safe and accessible way.</p> <p>Everything doesn&#8217;t need to be backed up. There are also lots of files,  usernames and passwords that don&#8217;t really matter. Don&#8217;t include those. SecretSplitter  was built with the assumption that everything that really mattered could be stored  in a file small enough to email to others. This helps focus and pare down to what  really matters.</p> <p>It&#8217;s also good to have a healthy dose of common sense. Instead of holding out a secret until after your death, maybe you should get  that resolved today. You&#8217;ll probably live better. My general view is that these  final &#8220;secrets&#8221; should be mostly boring by just containing account details and  credentials.</p> <p>Finally, on a more personal level, I think it&#8217;s healthy to be reminded  about our own mortality at least once every year or so. It&#8217;s a helpful reminder  of how much a gift every day is and helps focus what we do and not worry about things  that don&#8217;t matter. </p> <p>If a little bit of fancy math can help you sleep better at night, well  then, I&#8217;d consider it a success.</p> <p><em>Special thanks to B. Poettering for creating the original </em> <a href="http://point-at-infinity.org/ssss/"><em>ssss</em></a><em> program and allowing me to  clone its format.</em></p>
<div style='clear: both;'></div>
</div>
<div class='post-footer'>
<div class='post-footer-line post-footer-line-1'>
<span class='post-author vcard'>
Posted by
<span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'>
<meta content='http://www.blogger.com/profile/16074905903060665396' itemprop='url'/>
<a class='g-profile' href='http://www.blogger.com/profile/16074905903060665396' rel='author' title='author profile'>
<span itemprop='name'>Jeff Moser</span>
</a>
</span>
</span>
<span class='post-timestamp'>
at
<meta content='http://www.moserware.com/2011/11/life-death-and-splitting-secrets.html' itemprop='url'/>
<a class='timestamp-link' href='http://www.moserware.com/2011/11/life-death-and-splitting-secrets.html' rel='bookmark' title='permanent link'><abbr class='published' itemprop='datePublished' title='2011-11-21T08:43:00-05:00'>8:43 AM</abbr></a>
</span>
<span class='reaction-buttons'>
</span>
<span class='star-ratings'>
</span>
<span class='post-comment-link'>
<a class='comment-link' href='http://www.blogger.com/comment.g?blogID=6800934446457898793&amp;postID=86529977875835325' onclick=''>
31 comments:
    </a>
</span>
<span class='post-backlinks post-comment-link'>
</span>
<span class='post-icons'>
<span class='item-control blog-admin pid-1605934091'>
<a href='http://www.blogger.com/post-edit.g?blogID=6800934446457898793&postID=86529977875835325&from=pencil' title='Edit Post'>
<img alt='' class='icon-action' height='18' src='http://img2.blogblog.com/img/icon18_edit_allbkg.gif' width='18'/>
</a>
</span>
</span>
<div class='post-share-buttons goog-inline-block'>
</div>
</div>
<div class='post-footer-line post-footer-line-2'>
<span class='post-labels'>
</span>
</div>
<div class='post-footer-line post-footer-line-3'>
<span class='post-location'>
</span>
</div>
</div>
</div>
</div>

            </div></div>
          

          <div class="date-outer">
        
<h2 class='date-header'><span>Tuesday, October 26, 2010</span></h2>

          <div class="date-posts">
        
<div class='post-outer'>
<div class='post hentry uncustomized-post-template' itemprop='blogPost' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'>
<meta content='http://4.bp.blogspot.com/_Zfbv3mHcYrc/TMMv2y_zyKI/AAAAAAAAXkA/JKpA8oOpCiE/s200/1000px-PHP-logo.svg.png' itemprop='image_url'/>
<meta content='6800934446457898793' itemprop='blogId'/>
<meta content='5145078661665722279' itemprop='postId'/>
<a name='5145078661665722279'></a>
<h3 class='post-title entry-title' itemprop='name'>
<a href='http://www.moserware.com/2010/10/notes-from-porting-c-code-to-php.html'>Notes from porting C# code to PHP</a>
</h3>
<div class='post-header'>
<div class='post-header-line-1'></div>
</div>
<div class='post-body entry-content' id='post-body-5145078661665722279' itemprop='description articleBody'>
<p>(<strong>Summary</strong>: I ported my TrueSkill implementation from <a href="http://github.com/moserware/Skills">C#</a> to PHP and <a title="Patches welcome :)" href="http://github.com/moserware/PHPSkills">posted it on GitHub</a>. It was my first real encounter with PHP and I learned a few things.)</p> <p>I braced for the worst. <a href="http://php.net/download-logos.php"><img style="display: inline; margin-left: 15px; margin-right: 0px; border:0px" align="right" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/TMMv2y_zyKI/AAAAAAAAXkA/JKpA8oOpCiE/s200/1000px-PHP-logo.svg.png"/></a></p> <p>After years of hearing <a title="Jeff Atwood's: 'PHP Sucks, But It Doesn't Matter.' Jeff has gone on record many times bemoaning the PHP language." href="http://www.codinghorror.com/blog/2008/05/php-sucks-but-it-doesnt-matter.html">negative</a> <a title="Stack Overflow Question: 'Defend PHP; convince me it isn't horrible'" href="http://stackoverflow.com/questions/309300/defend-php-convince-me-it-isnt-horrible">things</a> about PHP, I had been led to believe that touching it would rot my brain. Ok, maybe that&#8217;s a <em>bit</em> much, but its <a title="In the 'Homerun' episode of 'This Developer's Life', David Heinemeier Hansson mentioned that one of the reasons why he switched to Ruby and created Rails was that he basically thought PHP (and Java) were beyond hope." href="http://thisdeveloperslife.com/post/1270441885/1-0-5-homerun">reputation</a> had me believe it was full of <a href="http://www.softwarebyrob.com/2006/11/17/single-important-rule-retaining-software-developers/" title="To quote Paul Graham: 'Not every kind of hard is good. There is good pain and bad pain. You want the kind of pain you get from going running, not the kind you get from stepping on a nail. A difficult problem could be good for a designer, but a fickle client or unreliable materials would not be.' The basic idea is that bad problems just wear you out without giving you any benefit or insight.">bad problems</a>. Even the <a href="http://www.mailchimp.com/blog/ewww-you-use-php/#more-10515" title="The guys at MailChimp recently wrote about how they're having some difficulties hiring programmers because their site is in PHP. This is probably indicative of a larger trend, especially among alpha geeks.">cool kids</a> <a href="http://news.ycombinator.com/item?id=1818954" title="I think some of the general attitude can be summed up by this quote by pilif on Hacker News: 'While I really hate some aspects of PHP by now and I would love to have a Ruby or Python codebase to work with instead, rewriting all of this is out of the question.' which I can respect.">had</a> <a href="http://www.reddit.com/r/programming/comments/dutgs/ewww_you_use_php/" title="Selected comment from skillet-thief on Reddit: 'PHP hinders you on a lot of levels: the community has such a wide range of skill levels, including a huge class of users who mostly know how to install and uninstall and reinstall until something works; code reuse is much harder than in other languages because there is a lot of bad code out there, the good code is packaged in a way that makes it hard to share (as a stand-alone tool a lot of times). Abstractions are generally harder to make too. There were no real anonymous functions until very recently.'">issues</a> with PHP. But I thought that it couldn&#8217;t be too bad because there was <a href="http://www.facebook.com/" title="Formerly known as thefacebook">that one website</a> that gets a few hits using a <a href="http://github.com/facebook/hiphop-php/wiki" title="I think that Zuckerberg's usage of PHP is similar to most people's in that it was easy to get started. Throw in lots of programmers and bam! You have a large codebase and a ship that's not feasible to rewrite. This probably justified the whole HipHop compiler rather than a rewrite. This is similar to FogBugz programmers using Wasabi to avoid rewriting VBScript code.">dialect of it</a>. When <a href="http://kaggle.com/">Kaggle</a> offered to sponsor a port of my <a href="http://www.moserware.com/2010/03/computing-your-skill.html">TrueSkill</a> <a href="http://github.com/moserware/Skills">C# code</a> to PHP, I thought I&#8217;d finally have my first real encounter with PHP.</p> <div> <pre><br /><span style="color: blue;">&lt;?php</span><span style="color: gray;"> </span><span style="color: green;">echo</span><span style="color: gray;"> </span><span style="color: darkred;">"</span><span style="color: red;">Disclaimer:</span><span style="color: darkred;">"</span><span style="color: gray;">; </span><span style="color: blue;">?&gt;</span><br /></pre></div> <p>To make the port quick, I kept most of the design and class structure from my C# implementation. This led to a less-than-optimal result since PHP really <a href="http://michaelkimsal.com/blog/php-is-not-object-oriented/" title="Yes, it has the 'class' keyword, but that was bolted on relatively late and wasn't the primary focus in PHP's design.">isn&#8217;t object-oriented</a>. I didn&#8217;t do a deep dive on redesigning it in the native PHP way. I stuck with the philosophy that you can <a href="http://queue.acm.org/detail.cfm?id=1039535" title="The classic phrase is: 'You can write Fortran in any language.' By not catering to PHP's strengths, I might have brought too much C#-ness to PHP without better factoring things.">write quasi-C# in any language</a>. Also, I didn&#8217;t use any of the web and database features that motivate most people to choose PHP in the first place. In other words, I didn&#8217;t cater to PHP&#8217;s <a href="http://stackoverflow.com/questions/694246/how-is-php-done-the-right-way">specialty</a>, so my reflections are probably an unfair and biased comparison as I was not using PHP the way it was intended. I <a href="http://www.lessonsoffailure.com/developers/language-flamewars-blub-paradox/">expect</a> that I missed tons of great things about PHP.</p> <p>Personal disclaimers aside, even PHP book authors don&#8217;t claim that it&#8217;s the nicest language. Instead, they highlight the language&#8217;s popularity. I sort of got the feeling that people mainly choose PHP in lieu of languages like C# because of its <a href="http://www.tiobe.com/index.php/paperinfo/tpci/PHP.html">current popularity</a> and its perception of having a lower upfront cost, especially among cash-strapped startups. Matt Doyle, author of <a href="http://www.amazon.com/gp/product/0470413964?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0470413964">Beginning PHP 5.3</a>, wrote the following while comparing PHP to other languages:</p> <blockquote><a href="http://www.amazon.com/gp/product/0470413964?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0470413964" title="Beginning PHP 5.3"><img align="right" border="0" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/TMTf53q9ydI/AAAAAAAAXkI/ZvqNfJgzgaY/s1600/BeginningPHPBookCover.jpg"/></a><img src="http://www.assoc-amazon.com/e/ir?t=moserware-20&amp;l=as2&amp;o=1&amp;a=0470413964" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;"/>&#8220;Many would argue that C# is a nicer, better-organized language to program in than PHP, although C# is arguably harder to learn. Another advantage of ASP.NET is that C# is a compiled language, which generally means it runs faster than PHP&#8217;s interpreted scripts (although PHP compilers are available).&#8221; - p.5</blockquote> <p>He continued:</p> <blockquote>&#8220;ASP and ASP.NET have a couple of other disadvantages compared to PHP. First of all, they have a commercial license, which can mean spending additional money on server software, and hosting is often more expensive as a result. Secondly, ASP and ASP.NET are fairly heavily tied to the Windows platform, whereas the other technologies in this list are much more cross-platform.&#8221; - p.5</blockquote> <p>Next, he hinted that Ruby might eventually replace PHP&#8217;s reign:</p> <blockquote>&#8220;Like Python, Ruby is another general-purpose language that has gained a lot of traction with Web developers in recent years. This is largely due to the excellent Ruby on Rails application framework, which uses the Model-View-Controller (MVC) pattern, along with Ruby&#8217;s extensive object-oriented programming features, to make it easy to build a complete Web application very quickly. As with Python, Ruby is fast becoming a popular choice among Web developers, but for now, PHP is much more popular.&#8221; - p.6</blockquote> <p>and then elaborating on why PHP might be popular today:</p> <blockquote>&#8220;[T]his middle ground partly explains the popularity of PHP. The fact that you don&#8217;t need to learn a framework or import tons of libraries to do basic Web tasks makes the language easy to learn and use. On the other hand, if you need the extra functionality of libraries and frameworks, they&#8217;re there for you.&#8221; - p.7</blockquote> <p>Fair enough. However, to really understand the language, I needed to dive in personally and experience it firsthand. I took notes during the dive about some of the things that stuck out.</p> <h4>The <a href="http://www.amazon.com/gp/product/0596517742?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0596517742" title="This section title comes from the subtitle of my favorite JavaScript book">Good</a> Parts</h4> <ul> <li>It&#8217;s relatively easy to learn and get started with PHP. As a C# developer, I was able to pick up PHP in a few hours after a brief overview of the syntax from <a href="http://www.amazon.com/gp/product/0470413964?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0470413964">a book</a>. Also, PHP has some decent <a href="http://php.net/manual/en/index.php">online help</a>.</li> <li>PHP is available on almost all web hosts these days at no extra charge (in contrast with ASP.NET hosting). I can&#8217;t emphasize this enough because it&#8217;s a reason why I would still consider writing a small website in it.</li> <li>I was pleasantly surprised to have unit test support with <a href="http://www.phpunit.de/">PHPUnit</a>. This made me feel at home and made it easier to develop and debug code.</li> <li>It&#8217;s very easy and reasonable to create a website in PHP using techniques like Model-View-Controller (MVC) designs that separate the view from the actual database model. The language doesn&#8217;t seem to pose any hindrance to this.</li> <li>PHP has a &#8220;<a href="http://php.net/manual/en/language.oop5.static.php">static</a>&#8221; keyword that is sort of like a static version of a &#8220;this&#8221; reference. This was useful in creating a quasi-static &#8220;subclass&#8221; of my &#8220;<a href="http://github.com/moserware/PHPSkills/blob/master/Skills/Numerics/Range.php">Range</a>&#8221; class for validating <a href="http://github.com/moserware/PHPSkills/blob/master/Skills/PlayersRange.php">player</a> and <a href="http://github.com/moserware/PHPSkills/blob/master/Skills/TeamsRange.php">team</a> sizes. This feature is formally known as <a href="http://en.wikipedia.org/wiki/Late_static_binding#Late_static">late static binding</a>.</li> </ul> <h4>The &#8220;<a href="http://en.wiktionary.org/wiki/when_in_Rome,_do_as_the_Romans_do" title="Si fueris Romae, Romano vivito more; Si fueris alibi, vivito sicut ibi.">When in Rome</a>...&#8221; Parts</h4> <ul> <li>Class names use PascalCase while functions tend to use lowerCamelCase like Java whereas C# tends to use PascalCase for both. In addition, .NET in general seems to have <a href="http://www.moserware.com/2008/12/private-life-of-public-api.html">more universally accepted naming conventions</a> than PHP has.</li> <li>PHP variables have a &#8216;$&#8217; prefix which makes variables stick out: <div> <pre><br /><span style="color: green;">function</span><span style="color: gray;"> </span><span style="color: blue;">increment</span><span style="color: olive;">(</span><span style="color: darkblue;">$someNumber</span><span style="color: olive;">)</span><br /><span style="color: olive;">{</span><br />    <span style="color: darkblue;">$result</span><span style="color: gray;"> = </span><span style="color: darkblue;">$someNumber</span><span style="color: gray;"> + </span><span style="color: maroon;">1</span><span style="color: gray;">;</span><br />    <span style="color: green;">return</span><span style="color: gray;"> </span><span style="color: darkblue;">$result</span><span style="color: gray;">;</span><br /><span style="color: olive;">}</span><br /></pre></div> This convention was probably copied from <a href="http://en.wikipedia.org/wiki/Perl#Data_types">Perl&#8217;s scalar variable sigil</a>. This makes sense because PHP <a href="http://en.wikipedia.org/wiki/PHP#History">was originally</a> a set of Perl scripts intended to be a simpler Perl.</li> <li>You access class members and functions using an arrow operator (&#8220;-&gt;&#8221;) like C++ instead of the C#/Java dot notation (&#8220;.&#8221;). That is, in PHP you say &#8220;<span style="color: darkblue;">$someClass</span><span style="color: gray;">-&gt;</span><span style="color: blue;">someMethod</span><span style="color: olive;">(</span><span style="color: olive;">)</span>&#8221; instead of &#8220;<span style="color: darkblue;">someClass</span><span style="color: gray;">.</span><span style="color: blue;">someMethod</span><span style="color: olive;">(</span><span style="color: olive;">)</span>&#8221;</li> <li>The arguments in a &#8220;<a href="http://php.net/manual/en/control-structures.foreach.php">foreach</a>&#8221; statement are reversed from what C# uses. In PHP, you write: <div> <pre><br /><span style="color: green;">foreach</span><span style="color: olive;">(</span><span style="color: darkblue;">$allItems</span><span style="color: gray;"> </span><span style="color: green;">as</span><span style="color: gray;"> </span><span style="color: darkblue;">$currentItem</span><span style="color: olive;">)</span><span style="color: gray;"> </span><span style="color: olive;">{</span><span style="color: gray;"> ... </span><span style="color: olive;">}</span><br /></pre></div> instead of the C# way: <div> <pre><br /><span style="color: gray;"><span style="color: green;">foreach</span><span style="color: olive;">(</span><span style="color: darkblue;">currentItem</span><span style="color: gray;"> </span><span style="color: green;">in</span><span style="color: gray;"> </span><span style="color: darkblue;">allItems</span><span style="color: olive;">)</span><span style="color: gray;"> </span><span style="color: olive;">{</span><span style="color: gray;"> ... </span><span style="color: olive;">}</span></span><br /></pre></div> One advantage to the PHP way is its special syntax that makes iterating through key/value pairs in an map easier: <div> <pre><br /><span style="color: gray;"><span style="color: green;">foreach</span><span style="color: olive;">(</span><span style="color: darkblue;">$someArray</span><span style="color: gray;"> </span><span style="color: green;">as</span><span style="color: gray;"> </span><span style="color: darkblue;">$key</span><span style="color: gray;"> =&gt; </span><span style="color: darkblue;">$value</span><span style="color: olive;">)</span><span style="color: gray;"> </span><span style="color: olive;">{</span><span style="color: gray;"> ... </span><span style="color: olive;">}</span></span><br /></pre></div> vs. the C# way of something like this: <div> <pre><br /><span style="color: green;">foreach</span><span style="color: olive;">(</span><span style="color: green;">var</span> <span style="color: darkblue;">pair</span><span style="color: gray;"> </span><span style="color: green;">in</span><span style="color: gray;"> </span><span style="color: darkblue;">someDictionary</span>)<span style="color: gray;"> </span><br /><span style="color: olive;">{</span><br />    <span style="color: orange;">// use pair.Key and pair.Value</span><br /><span style="color: olive;">}</span><br /></pre></div> </li> <li>The &#8220;=&gt;&#8221; operator in PHP denotes a map entry as in <div> <pre><br /><span style="color: darkblue;">$numbers</span><span style="color: gray;"> = </span><span style="color: green;">array</span><span style="color: olive;">(</span><span style="color: maroon;">1</span><span style="color: gray;"> =&gt; &#8216;</span><span style="color: blue;">one</span><span style="color: gray;">&#8217;, </span><span style="color: maroon;">2</span><span style="color: gray;"> =&gt; &#8216;</span><span style="color: blue;">two</span><span style="color: gray;">&#8217;, ...</span><span style="color: olive;">)</span><br /></pre></div> In C#, the arrow &#8220;=&gt;&#8221; is instead used for a lightweight <a href="http://msdn.microsoft.com/en-us/library/bb308966.aspx#csharp3.0overview_topic7">lambda expression syntax</a>: <div> <pre><br /><span style="color: darkblue;">x</span><span style="color: gray;"> =&gt; </span><span style="color: darkblue;">x</span><span style="color: gray;"> * </span><span style="color: darkblue;">x</span><br /></pre></div> To define the rough equivalent of the PHP array, you&#8217;d have to write this in C# <div> <pre><br /><span style="color: green;">var</span> <span style="color: darkblue;">numbers</span><span style="color: gray;"> = </span><span style="color: green;">new</span> <span style="color: blue;">Dictionary</span>&lt;<span style="color: green;">int</span>, <span style="color: green;">string</span>&gt;<span style="color: olive;">{ {</span><span style="color: maroon;">1</span>, <span style="color: darkred;">"</span><span style="color: red;">one</span><span style="color: darkred;">"</span> <span style="color: olive;">}</span>, <span style="color: olive;">{</span><span style="color: maroon;">2</span>, <span style="color: darkred;">"</span><span style="color: red;">two</span><span style="color: darkred;">"</span><span style="color: olive;">} }</span>;<br /></pre></div> On the one hand, the PHP notations for maps is cleaner, but it comes at a cost of having no lightweight lambda syntax (more on that later).</li> <li>PHP has some &#8220;<a href="http://php.net/manual/en/language.oop5.magic.php">magical methods</a>&#8221; such as &#8220;<a href="http://www.php.net/manual/en/language.oop5.decon.php#language.oop5.decon.constructor">__construct</a>&#8221; and &#8220;<a href="http://www.php.net/manual/en/language.oop5.magic.php#language.oop5.magic.tostring">__toString</a>&#8221; for the equivalent of C#&#8217;s <a href="http://msdn.microsoft.com/en-us/library/ms173115.aspx">constructor</a> and <a href="http://msdn.microsoft.com/en-us/library/system.object.tostring.aspx">ToString</a> functionality. I like C#&#8217;s approach here, but I&#8217;m biased.</li> </ul> <h4>The &#8220;Ok, <em>I guess</em>&#8221; Parts</h4> <ul> <li>The free <a href="http://netbeans.org/features/php/index.html">NetBeans IDE for PHP</a> is pretty <a href="http://stackoverflow.com/questions/6166/any-good-php-ide-preferably-free-or-cheap/6169#6169" title="I first learned about NetBeans through the StackOverflow question 'Any good PHP IDE, preferably free or cheap?'">decent</a> for writing PHP code. Using it in conjunction with PHP&#8217;s <a href="http://www.xdebug.org/">XDebug</a> debugger functionality is a must. After my initial attempts at writing code with a <a href="http://www.flos-freeware.ch/notepad2.html">basic notepad</a>, I found NetBeans to be a very capable editor. My only real complaint with it is that I had some occasional cases where the editor would lock up and the debugger wouldn&#8217;t support things like watching variables. That said, it&#8217;s still good for being a free editor.</li> <li>By default, PHP passes function arguments by value instead of by reference like C# does it. This probably caused the <a href="http://github.com/moserware/PHPSkills/commit/4c7cfef8d6c602e733f47965a59676080a81f860" title="As you can tell by my many git commits, it took awhile to figure this out... and I still probably missed something.">most</a> <a href="http://github.com/moserware/PHPSkills/commit/803a0816a84879ebfa651ec975664c6ba2f7b93f">difficulty</a> with the port. Complicating things further is that <a href="http://www.php.net/manual/en/language.references.return.php" title="They're more like symlinks on a filesystem than pointers">PHP references are not like references in other languages</a>. For example, using references usually incurs a performance penalty since extra work is required. <a href="http://www.php.net/manual/en/language.references.return.php"></a></li> <li>You <a href="http://bugs.php.net/bug.php?id=47872">can&#8217;t</a> import types via namespaces alone like you can in C# (and Java for that matter). In PHP, you have to import each type manually: <div> <pre><br /><span style="color: green;">use</span> Moserware\Skills\FactorGraphs\ScheduleLoop;<br /><span style="color: green;">use</span> Moserware\Skills\FactorGraphs\ScheduleSequence;<br /><span style="color: green;">use</span> Moserware\Skills\FactorGraphs\ScheduleStep;<br /><span style="color: green;">use</span> Moserware\Skills\FactorGraphs\Variable;<br /></pre></div> whereas in C# you can just say: <div> <pre><br /><span style="color: green;">using</span> Moserware.Skills.FactorGraphs;<br /></pre></div> PHP&#8217;s way makes things explicit and I can see that viewpoint, but it was a bit of a surprising requirement given how PHP usually required less syntax.</li> <li>PHP lacks support for C#-like <a href="http://msdn.microsoft.com/en-us/library/512aeb7t(v=VS.100).aspx">generics</a>. On the one hand, I missed the generic type safety and performance benefits, but on the other hand it forced me to redesign some classes to not have an army of angle brackets (e.g. compare <a href="http://github.com/moserware/Skills/blob/master/Skills/FactorGraphs/Factor.cs">this class in C#</a> to <a href="http://github.com/moserware/PHPSkills/blob/master/Skills/FactorGraphs/Factor.php">its PHP equivalent</a>).</li> <li>You have to manually call your parent class&#8217;s constructor in PHP if you want that feature: <div> <pre><br /><span style="color: green;">class</span><span style="color: gray;"> </span><span style="color: blue;">BaseClass</span><span style="color: gray;"> <br /></span><span style="color: olive;">{</span><span style="color: gray;"> <br />  </span><span style="color: green;">function</span><span style="color: gray;"> </span><span style="color: blue;">__construct</span><span style="color: olive;">(</span><span style="color: olive;">)</span><span style="color: gray;"> </span><span style="color: olive;">{</span><span style="color: gray;"> ... </span><span style="color: olive;">}</span><br /><span style="color: olive;">}</span><span style="color: gray;"> <br /><br /></span><span style="color: green;">class</span><span style="color: gray;"> </span><span style="color: blue;">DerivedClass</span><span style="color: gray;"> </span><span style="color: green;">extends</span><span style="color: gray;"> </span><span style="color: blue;">BaseClass</span><span style="color: gray;"> <br /></span><span style="color: olive;">{</span><span style="color: gray;"> <br />  </span><span style="color: green;">function</span><span style="color: gray;"> </span><span style="color: blue;">__construct</span><span style="color: olive;">(</span><span style="color: olive;">)</span><span style="color: gray;"> <br />  </span><span style="color: olive;">{</span><span style="color: gray;"> <br />      </span><span style="color: orange;">//</span><span style="color: orange;"> this line is optional, but if you omit it, the BaseClass constructor will *not* be called </span><span style="color: gray;"><br />      </span><span style="color: blue;">parent</span><span style="color: gray;">::</span><span style="color: blue;">__construct</span><span style="color: olive;">(</span><span style="color: olive;">)</span><span style="color: gray;">; <br />  </span><span style="color: olive;">}</span><span style="color: gray;"> <br /></span><span style="color: olive;">}</span><br /></pre></div> This gives you more flexibility, but it doesn&#8217;t enforce C#-like assumptions that your parent class&#8217;s constructor was called.</li> <li>PHP doesn&#8217;t seem to have the concept of an implicit &#8220;$this&#8221; inside of a class. This forces you to always qualify class member variables with $this: <div> <pre><br /><span style="color: green;">class</span><span style="color: gray;"> </span><span style="color: blue;">SomeClass</span><span style="color: gray;"> <br /></span><span style="color: olive;">{</span><span style="color: gray;"> <br />    </span><span style="color: green;">private</span><span style="color: gray;"> </span><span style="color: darkblue;">$_someLocalVariable</span><span style="color: gray;">; <br />    </span><span style="color: green;">function</span><span style="color: gray;"> </span><span style="color: blue;">someMethod</span><span style="color: olive;">(</span><span style="color: olive;">)</span><span style="color: gray;"> <br />    </span><span style="color: olive;">{</span><span style="color: gray;"> <br />        </span><span style="color: darkblue;">$someMethodVariable</span><span style="color: gray;"> = </span><span style="color: darkblue;">$this</span><span style="color: gray;">-&gt;</span><span style="color: blue;">_someLocalVariable</span><span style="color: gray;"> + </span><span style="color: maroon;">1</span><span style="color: gray;">; <br />        ... <br />    </span><span style="color: olive;">}</span><span style="color: gray;"> <br /></span><span style="color: olive;">}</span><br /></pre></div> I put this in the &#8220;OK&#8221; category because some C# developers <a href="http://blogs.msdn.com/b/omars/archive/2004/02/05/67687.aspx">prefer</a> to always be explicit on specifying &#8220;this&#8221; as well.</li> <li>PHP allows you to specify the type of some (but not all kinds) of the arguments of a function: <div> <pre><br /><span style="color: green;">function</span><span style="color: gray;"> </span><span style="color: blue;">myFunction</span><span style="color: olive;">(</span><span style="color: blue;">SomeClass</span><span style="color: gray;"> </span><span style="color: darkblue;">$someClass</span><span style="color: gray;">, </span><span style="color: green;">array</span><span style="color: gray;"> </span><span style="color: darkblue;">$someArray</span><span style="color: gray;">, </span><span style="color: darkblue;">$someString</span><span style="color: olive;">)</span><span style="color: gray;"> </span><span style="color: olive;">{</span><span style="color: gray;"> ... </span><span style="color: olive;">}</span><br /></pre></div> This is called &#8220;<a href="http://php.net/manual/en/language.oop5.typehinting.php">type hinting</a>.&#8221; It seems that it is designed for enforcing API contracts instead of general IDE help as it actually causes a <a href="http://stackoverflow.com/questions/3580628/is-type-hinting-helping-the-performance-of-php-scripts/3580660#3580660">decrease in performance</a>.</li> <li>PHP doesn&#8217;t have the concept of <a href="http://msdn.microsoft.com/en-us/netframework/aa904594.aspx">LINQ</a>, but it does support some similar functional-like concepts like <a href="http://php.net/manual/en/function.array-map.php">array_map</a> and <a href="http://www.php.net/manual/en/function.array-reduce.php">array_reduce</a>.</li> <li>PHP has support for <a href="http://php.net/manual/en/functions.anonymous.php">anonymous functions</a> by using the &#8220;<span style="color: green;">function</span><span style="color: olive;">(</span><span style="color: darkblue;">$arg1</span><span style="color: gray;">, ...</span><span style="color: olive;">)</span> <span style="color: olive;">{</span><span style="color: olive;">}</span>&#8221; syntax. This is sort of reminiscent of how C# did the same thing in version 2.0 where you had to type out &#8220;<a href="http://msdn.microsoft.com/en-us/library/0yw3tz5k(v=VS.100).aspx">delegate</a>.&#8221; C# 3.0 simplified this with a lighter weight version (e.g. &#8220;<span style="color: darkblue;">x</span> <span style="color: gray;">=&gt;</span> <span style="color: darkblue;">x</span> <span style="color: gray;">*</span> <span style="color: darkblue;">x</span>&#8221;). I&#8217;ve found that this seemingly tiny change &#8220;isn&#8217;t about doing the same thing faster, it allows me to work in a <a title="The quote comes from Linus talking about how git's speed changes how you work. The full quote is: 'that is the kind of performance that changes how you work. It&#8217;s no longer doing the same thing faster, it&#8217;s allowing you to work in a completely different manner.'" href="http://www.youtube.com/watch?v=4XpnKHJAok8#t=54m47s">completely different manner</a>&#8221; by employing functional concepts without thinking. It&#8217;s sort of a shame PHP didn&#8217;t elevate this concept with concise syntax. When C#&#8217;s lambda syntax was introduced in 3.0, it made me want to use them much more often. PHP&#8217;s lack of something similar is a strong discourager to the functional style and is a lesson that <a href="http://herbsutter.com/2010/10/07/c-and-beyond-session-lambdas-lambdas-everywhere/">C++ guys have recently learned</a>.</li> <li>Item 4 of <a href="http://www.php.net/license/index.php#faq-lic">the PHP license</a> states:<blockquote>Products derived from this software may not be called &#8220;PHP&#8221;, nor may &#8220;PHP&#8221; appear in their name, without prior written permission from group@php.net. You may indicate that your software works in conjunction with PHP by saying &#8220;Foo for PHP&#8221; instead of calling it &#8220;PHP Foo&#8221; or &#8220;phpfoo&#8221;</blockquote> This explains why you see carefully worded names like &#8220;<a href="http://developers.facebook.com/blog/post/358">HipHop for PHP</a>&#8221; rather than something like &#8220;php2cpp.&#8221; This technically doesn&#8217;t stop you doesn&#8217;t stop you from having a project with the PHP name in it (e.g. <a href="http://www.phpunit.de/">PHPUnit</a>) so long as the official PHP code is not included in it. However, it&#8217;s clear that the PHP group is trying to clean up its name from tarnished projects like <a href="http://en.wikipedia.org/wiki/PHP-Nuke">PHP-Nuke</a>. I understand their frustration, but this leads to an official preference for names like <a href="http://www.zope.org/">Zope</a> and <a href="http://www.smarty.net/">Smarty</a> that seem to be less clear on what the project actually does. This position would be like Microsoft declaring that you couldn&#8217;t use the &#8220;#&#8221; suffix or the &#8220;Implementation Running On .Net (<a href="http://stackoverflow.com/questions/1194309/why-are-many-ports-of-languages-to-net-prefixed-with-iron">Iron</a>)&#8221; prefix in your project name (but maybe that would lead to more creativity?).</li> </ul> <h4>The <a href="http://www.joelonsoftware.com/uibook/chapters/fog0000000057.html" title="Like Joel mentions in this post from 2000, tiny frustrations add up to a really bad experience">Frustrating</a> Parts:</h4> <ul> <li>As someone who&#8217;s primarily worked with a statically typed language for the past 15 years, I prefer upfront compiler errors and warnings that C# offers and agree with <a href="http://en.wikipedia.org/wiki/Anders_Hejlsberg">Anders Hejlsberg</a>&#8217;s <a href="http://www.se-radio.net/2008/05/episode-97-interview-anders-hejlsberg/" title="The quote begins around 35:45">philosophy</a>: <blockquote>&#8220;I think one of the reasons that languages like Ruby for example (or Python) are becoming popular is really in many ways in spite of the fact that they are not typed... but because of the fact that they [have] very good metaprogramming support. I don&#8217;t see a lot of downsides to static typing other than the fact that it may not be practical to put in place, and it <em>is</em> harder to put in place and therefore takes longer for us to get there with static typing, but once you do have static typing. I mean, gosh, you know, like hey -- the compiler is going to report the errors before the space shuttle flies instead of whilst it&#8217;s flying, that&#8217;s a good thing!&#8221;</blockquote> But more dynamic languages like PHP have their supporters. For example, <a href="http://en.wikipedia.org/wiki/Douglas_Crockford">Douglas Crockford</a> <a title="See video starting at the -18:14 mark" href="http://video.yahoo.com/watch/111596/1710658">raves</a> about JavaScript&#8217;s dynamic aspects: <blockquote>&#8220;I found over the years of working with JavaScript... I used to be of the religion that said &#8216;Yeah, absolutely brutally strong type systems. Figure it all out at compile time.&#8217; I've now been converted to the other camp. I've found that the expressive power of JavaScript is so great. I've not found that I've lost anything in giving up the early protection [of statically compiled code]&#8221;</blockquote> I still haven&#8217;t seen where Crockford is coming from given my recent work with PHP. Personally, I think that given C# 4.0&#8217;s optional support of <a href="http://msdn.microsoft.com/en-us/library/dd264736.aspx">dynamic</a> objects, the lines between the two worlds are grayer and that with C# you get the best of both worlds, but I&#8217;m probably biased here.</li> <li>You don&#8217;t have to define <a href="http://www.php.net/manual/en/language.variables.basics.php">variables</a> in PHP. This reduces some coding &#8220;<a href="http://msdn.microsoft.com/en-us/magazine/dd419655.aspx" title="There's a lot of talk out there about ceremony vs essence.">ceremony</a>&#8221; to get to the essence of your code, but I think it removes a <a href="http://podcasts.pragprog.com/2007-10/michael-nygard-interview.mp3" title="Quote is at 3:46 - 'We should have shock absorbers and circuit breakers so that [our systems] can be resilient to failure.'">shock absorber/circuit-breaker</a> that can be built into the language. This &#8220;feature&#8221; <a href="http://github.com/moserware/PHPSkills/commit/fa10d276d6121f390b930b655a66edd9376e114e#L0L24">turned my typo into a bug</a> and led to a runtime error. Fortunately, options like <a href="http://php.net/manual/en/errorfunc.configuration.php">E_NOTICE</a> can catch these, but it caught me off guard. Thankfully, NetBean&#8217;s auto-completion saved me from most of these types of errors.</li><li>PHP has built-in support for associative arrays, but you <a href="http://php.net/manual/en/language.types.array.php">can&#8217;t use objects as keys</a> or else you&#8217;ll get an &#8220;Illegal Offset Type&#8221; error. Because my C# API heavily relied on this ability and I didn&#8217;t want to redesign the structure, I <a href="http://github.com/moserware/PHPSkills/blob/master/Skills/HashMap.php">created my own hashmap</a> that supports object keys. This omission tended to reinforce the belief that <a href="http://michaelkimsal.com/blog/php-is-not-object-oriented/">PHP is not really object oriented</a>. That said, I&#8217;m probably missing something and did it wrong.</li> <li>PHP <a href="http://bugs.php.net/bug.php?id=9331&amp;edit=1">doesn&#8217;t support operator overloading</a>. This made my <a href="http://github.com/moserware/PHPSkills/blob/master/Skills/Numerics/GaussianDistribution.php">GaussianDistribution</a> and <a href="http://github.com/moserware/PHPSkills/blob/master/Skills/Numerics/Matrix.php">Matrix</a> classes a little harder to work with by having to invent explicit names for the operators.</li> <li>PHP lacks support for a C#-like <a href="http://msdn.microsoft.com/en-us/library/x9fsa0sw(v=VS.100).aspx">property syntax</a>. Having to write getters and setters made me feel like I was back programming in Java again.</li> <li>My code ran <a href="http://twitter.com/GregB/status/27244912213">slower in PHP</a>. To be fair, most of the performance problem was in <a href="http://github.com/moserware/PHPSkills/blob/master/Skills/Numerics/Matrix.php">my horribly naive matrix implementation</a> which could be improved with a better implementation. Regardless, it seems that larger sites deal with PHP&#8217;s performance problem by writing critical parts in compiled languages <a href="http://news.ycombinator.com/item?id=1820451">like C/C++</a> or by using caching layers such as <a href="http://en.wikipedia.org/wiki/Memcached">memcached</a>. One interesting observation is that the performance issue isn't really with the <a href="http://en.wikipedia.org/wiki/Zend_Engine">Zend Engine</a> per-se but rather the semantics of the PHP language itself. Haiping Zhao on the HipHop for PHP team <a href="http://www.youtube.com/watch?v=p5S1K60mhQU#t=51m44s" title="From the Stanford lecture on HipHop for PHP">gave a good overview of the issue</a>: <blockquote>&#8220;Around the time that we started the [HipHop for PHP] project, we absolutely looked into the Zend Engine. The first question you ask is 'The Zend Engine must be terribly implemented. That&#8217;s why it&#8217;s slow, right?' So we looked into the Zend Engine and tried different places, we looked at the hash functions to see if it&#8217;s sufficient and look some of the profiles the Zend Engine has and different parts of the Zend Engine. You finally realize that the Zend Engine is pretty compact. It just does what it promises. If you have that kind of semantics you just cannot avoid the dynamic function table, you cannot avoid the variable table, you just cannot avoid a lot of the things that they built... that&#8217;s the point that [you realize] PHP can also be called C++Script because the syntax is so similar then you ask yourself, 'What is the difference between the speed of these two different languages and those are the items that are... different like the dynamic symbol lookup (it&#8217;s not present in C++), the weak typing is not present in C++, everything else is pretty much the same. The Zend Engine is very close to C implementation. The layer is very very thin. I don&#8217;t think we can blame the Zend Engine for the slowness PHP has.&#8221;</blockquote> That said, I don&#8217;t think that performance alone would stop me from using PHP. It&#8217;s good enough for most things. Furthermore, I'm sure optimizers could use tricks like what the <a href="http://en.wikipedia.org/wiki/Dynamic_Language_Runtime">DLR</a> and <a href="http://code.google.com/p/v8/">V8</a> use to squeak out more performance. However, I think that in practice, there is a case of <a href="http://en.wikipedia.org/wiki/Amdahl's_law">diminishing returns</a> where I/O (and not CPU time) typically become the limiting factor.</li> </ul> <h4>Parting Thoughts</h4> <p>Despite my brief encounter, I feel that I learned quite a bit and feel comfortable around PHP code now. I think my quick ramp-up highlights a core value of PHP: its simplicity. I did miss C#-like compiler warnings and type safety, but maybe that&#8217;s my own personal acquired taste. Although PHP <em>does</em> have some <a href="http://www.reddit.com/r/programming/comments/dst56/today_i_learned_about_php_variable_variables/c12n0w9">dubious features</a>, it&#8217;s not nearly as bad as some people make it out to be. I think that its simplicity makes it a very respectable choice for the type of things it was originally designed to do like <a href="http://wordpress.org/extend/themes/" title="e.g. Wordpress ones">web templates</a>. Although I still wouldn&#8217;t pick PHP as my <a href="http://weblogs.asp.net/scottgu/archive/tags/MVC/default.aspx">first choice</a> as a general purpose web programming language, I can now look at its features in a much more balanced way.</p> <p><strong>P.S.</strong> I&#8217;d love to hear suggestions on how to improve my implementation and learn where I did something wrong. Please feel free to use <a href="http://github.com/moserware/PHPSkills">my PHP TrueSkill code</a> and submit <a href="http://help.github.com/pull-requests/">pull requests</a>. As always, feel free to fork the code and port it to another language like <a href="http://github.com/nsp">Nate Parsons</a> did with his <a href="http://github.com/nsp/JSkills">JSkills Java port</a>.</p>
<div style='clear: both;'></div>
</div>
<div class='post-footer'>
<div class='post-footer-line post-footer-line-1'>
<span class='post-author vcard'>
Posted by
<span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'>
<meta content='http://www.blogger.com/profile/16074905903060665396' itemprop='url'/>
<a class='g-profile' href='http://www.blogger.com/profile/16074905903060665396' rel='author' title='author profile'>
<span itemprop='name'>Jeff Moser</span>
</a>
</span>
</span>
<span class='post-timestamp'>
at
<meta content='http://www.moserware.com/2010/10/notes-from-porting-c-code-to-php.html' itemprop='url'/>
<a class='timestamp-link' href='http://www.moserware.com/2010/10/notes-from-porting-c-code-to-php.html' rel='bookmark' title='permanent link'><abbr class='published' itemprop='datePublished' title='2010-10-26T08:34:00-04:00'>8:34 AM</abbr></a>
</span>
<span class='reaction-buttons'>
</span>
<span class='star-ratings'>
</span>
<span class='post-comment-link'>
<a class='comment-link' href='http://www.blogger.com/comment.g?blogID=6800934446457898793&amp;postID=5145078661665722279' onclick=''>
39 comments:
    </a>
</span>
<span class='post-backlinks post-comment-link'>
<a class='comment-link' href='http://www.moserware.com/2010/10/notes-from-porting-c-code-to-php.html#links'>Links to this post</a>
</span>
<span class='post-icons'>
<span class='item-control blog-admin pid-1605934091'>
<a href='http://www.blogger.com/post-edit.g?blogID=6800934446457898793&postID=5145078661665722279&from=pencil' title='Edit Post'>
<img alt='' class='icon-action' height='18' src='http://img2.blogblog.com/img/icon18_edit_allbkg.gif' width='18'/>
</a>
</span>
</span>
<div class='post-share-buttons goog-inline-block'>
</div>
</div>
<div class='post-footer-line post-footer-line-2'>
<span class='post-labels'>
</span>
</div>
<div class='post-footer-line post-footer-line-3'>
<span class='post-location'>
</span>
</div>
</div>
</div>
</div>

            </div></div>
          

          <div class="date-outer">
        
<h2 class='date-header'><span>Thursday, March 18, 2010</span></h2>

          <div class="date-posts">
        
<div class='post-outer'>
<div class='post hentry uncustomized-post-template' itemprop='blogPost' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'>
<meta content='http://3.bp.blogspot.com/_Zfbv3mHcYrc/S2Q_xffP38I/AAAAAAAAKYo/YcgBWcpjYtI/s320/100M_dash_Osaka07_D2A_Torri_Edwards.jpg' itemprop='image_url'/>
<meta content='6800934446457898793' itemprop='blogId'/>
<meta content='793968235021421709' itemprop='postId'/>
<a name='793968235021421709'></a>
<h3 class='post-title entry-title' itemprop='name'>
<a href='http://www.moserware.com/2010/03/computing-your-skill.html'>Computing Your Skill</a>
</h3>
<div class='post-header'>
<div class='post-header-line-1'></div>
</div>
<div class='post-body entry-content' id='post-body-793968235021421709' itemprop='description articleBody'>
<p><strong>Summary</strong>: I describe how the <a href="http://research.microsoft.com/en-us/projects/trueskill/">TrueSkill algorithm</a> works using concepts you're already familiar with. TrueSkill is used on <a href="http://www.xbox.com/en-US/LIVE/" title="I'm actually not a gamer myself, I just like the math of their ranking algorithm :-)">Xbox Live</a> to rank and match players and it serves as a great way to understand how statistical machine learning is actually applied today. I&#8217;ve also created an <a href="http://github.com/moserware/Skills">open source project</a> where I implemented TrueSkill three different times in increasing complexity and capability. In addition, I've created a <a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf" title="It's over 40 pages because I had a fun time with the equation editor.">detailed supplemental math paper</a> that works out equations that I gloss over here. Feel free to jump to sections that look interesting and ignore ones that seem boring. Don't worry if this post seems a bit long, there are <em>lots</em> of pictures.</p><h4>Introduction</h4><p>It seemed easy enough: I wanted to create a database to track the skill levels of my coworkers in <a href="http://en.wikipedia.org/wiki/Chess">chess</a> and <a href="http://en.wikipedia.org/wiki/Table_football">foosball</a>. I already knew that I wasn&#8217;t very good at foosball and would bring down better players. I was curious if an algorithm could do a better job at creating well-balanced matches. I also wanted to see if I was improving at chess. I knew I needed to have an easy way to collect results from everyone and then use an algorithm that would keep getting better with <a title="Peter Norvig's 'Theorizing From Data' talk is fantastic, I highly recommend it." href="http://www.facebook.com/techtalks#/video/video.php?v=644326502463">more</a> <a title="Microsoft Research put out this interesting book on how massive amounts of data will dominate scientific discoveries." href="http://research.microsoft.com/en-us/collaboration/fourthparadigm/">data</a>. I was looking for a way to compress all that data and distill it down to some simple knowledge of how skilled people are. Based on some <a title="I think the lasting legacy of the Netflix prize is that if you make something interesting and put it online, it shouldn't be a surprise that you can get PhDs to work on it for a dollar an hour or less. There's probably a deep lesson there for most tech companies." href="http://bits.blogs.nytimes.com/2009/09/21/netflix-awards-1-million-prize-and-starts-a-new-contest/?ref=technology">previous</a> <a title="If you haven't seen it yet, you should check out the PBS NOVA episode that covered this." href="http://www.pbs.org/wgbh/nova/darpa/">things</a> that I had heard about, this seemed like a good fit for &#8220;<a href="http://tv.theiet.org/technology/infopro/turing-2010.cfm" title="If you want a friendly introduction to machine learning, especially how it's applied at Microsoft, then Christopher Bishop's 2010 Turing lecture is a fantastic high level overview.">machine learning</a>.&#8221;</p><p>But, there&#8217;s a problem.</p><p>Machine learning is a <em>hot</em> area in Computer Science&#8212; but it&#8217;s intimidating. Like most subjects, there&#8217;s <a href="http://measuringmeasures.com/blog/2010/3/12/learning-about-machine-learning-2nd-ed.html">a lot</a> <a title="There are lots of machine learning resources out there, unfortunately most of them scare off beginners." href="http://news.ycombinator.com/item?id=1055042">to learn</a> to be an expert in the field. I didn&#8217;t need to go very deep; I just needed to understand enough to solve my problem. I found a link to <a href="http://research.microsoft.com/apps/pubs/default.aspx?id=67956">the paper</a> describing the TrueSkill algorithm and I read it several times, but it didn&#8217;t make sense. It was only 8 pages long, but it seemed beyond my capability to understand. I felt dumb. Even so, I was too stubborn to give up. Jamie Zawinski <a title="The quote comes from Coders @ Work" href="http://books.google.com/books?id=nneBa6-mWfgC&amp;printsec=frontcover&amp;dq=coders+at+work&amp;ei=hVFeS6CSI5G2NJadyPQC&amp;cd=1#v=onepage&amp;q=%22Not%20knowing%20something%20doesn%27t%20mean%20you%27re%20dumb%22&amp;f=false">said it well</a>:</p><blockquote><br />    &#8220;Not knowing something doesn&#8217;t mean you&#8217;re dumb&#8212; it just means you don&#8217;t know it.&#8221;<br />  </blockquote><p>I learned that the problem isn&#8217;t the difficulty of the ideas themselves, but rather that the ideas make too big of a jump from <a title="If you're like most people, then top of your math career was calculus. Although it has interesting concepts, you probably don't use it anymore. You would have been far better off learning more about statistics to handle all the data you're faced with. Arthur Benjamin's 2009 TED talk goes into this." href="http://www.ted.com/talks/arthur_benjamin_s_formula_for_changing_math_education.html">the math</a> that <a title="We spend way too much tyime learning how calculate, long-divide, integrate by parts, yadda yadda, instead of learning why you'd want to do that or what it's actually useful for. In the era of Moore's law, you can bank on computers getting better at doing computational grunt work, but it's sad that you can't depend on the education system teaching kids how to take advantage of all that power. Although *slightly* biased towards using tools like Mathematica, this talk by Conrad Wolfram shares a similar viewpoint." href="http://www.youtube.com/watch?v=TsvPE1EqwQ8">we typically learn</a> <a href="http://news.ycombinator.com/item?id=1058584" title="To prove this, start talking about even concepts in this blog post at your next party and look at the reaction.">in school</a>. This is sad because underneath the apparent complexity lies some beautiful concepts. In hindsight, the algorithm seems relatively simple, but it took me several months to arrive at that conclusion. My hope is that I can short-circuit the haphazard and slow process I went through and take you directly to the beauty of <em>understanding</em> what&#8217;s inside the gem that is the TrueSkill algorithm.</p><h4>Skill &#8776; Probability of Winning</h4><p><a href="http://en.wikipedia.org/wiki/File:Osaka07_D2A_Torri_Edwards.jpg"><img alt="Women runners in the 100 meter dash." style="border:0; border:0; float:right; margin: 10px 0px; width: 320px; display: inline; height: 260px; border:0;" id="BLOGGER_PHOTO_ID_5432537170014363586" name="BLOGGER_PHOTO_ID_5432537170014363586" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S2Q_xffP38I/AAAAAAAAKYo/YcgBWcpjYtI/s320/100M_dash_Osaka07_D2A_Torri_Edwards.jpg" title="World Athletics Championships 2007 in Osaka. Photo from Wikipedia by Eckhard Pecher. Used under the Creative Commons Attribution 2.5 Generic License" /></a>Skill is tricky to measure. Being good at something takes <a href="http://www.moserware.com/2008/03/what-does-it-take-to-become-grandmaster.html">deliberate practice</a> and sometimes a bit of luck. How do you measure that in a person? You could just ask someone if they&#8217;re skilled, but this would only give a rough approximation since people tend to be <a title="It's worth reading about the overconfidence effect if you haven't done it before" href="http://en.wikipedia.org/wiki/Overconfidence_effect">overconfident</a> in their ability. Perhaps a better question is &#8220;what would the <a title="for example, meters, seconds, etc." href="http://en.wikipedia.org/wiki/Units_of_measurement">units</a> of skill be?&#8221; For something like the 100 meter dash, you could just average the number of seconds of several recent sprints. However, for a game like chess, it&#8217;s harder because all that&#8217;s really important is if you win, lose, or draw.</p><p>It might make sense to just tally the total number of wins and losses, but this wouldn&#8217;t be fair to people that played a lot (or a little). Slightly better is to record the percent of games that you win. However, this wouldn&#8217;t be fair to people that <a title="Jeff Atwood discussed the concept further." href="http://www.codinghorror.com/blog/archives/000961.html">beat up on far worse players</a> or players who got decimated but maybe learned a thing or two. The goal of most games is to win, but if you win <em>too</em> much, then you&#8217;re probably not challenging yourself. Ideally, if all players won about half of their games, we&#8217;d say things are balanced. In this ideal scenario, everyone would have a near 50% win ratio, making it impossible to compare using that metric.</p><p>Finding universal units of skill is too hard, so we&#8217;ll just give up and not use <em>any</em> units. The only thing we really care about is roughly who&#8217;s better than whom and by how much. One way of doing this is coming up with a <a title="There's a lot of cool stuff you can do with scales, specifically things like the Thurstone Case V and Bradley-Terry models, but there just wasn't enough space to cover these in detail, so I'm only going to passively mention them here, but encourage you to check them out." href="http://en.wikipedia.org/wiki/Scale_%28social_sciences%29">scale</a> where each person has a unit-less number expressing their rating that you could use for comparison. If a player has a skill rating much higher than someone else, we&#8217;d expect them to win if they played each other.</p><p>The key idea is that a single skill number is meaningless. What&#8217;s important is how that number compares with others. This is an important point worth repeating: <strong>skill only makes sense if it&#8217;s relative to something else</strong>. We&#8217;d like to come up with a system that gives us numbers that are useful for comparing a person&#8217;s skill. In particular, we&#8217;d like to have a skill rating system that we could use to predict the probability of winning, losing, or drawing in matches based on a numerical rating.</p><p>We&#8217;ll spend the rest of our time coming up with a system to calculate and update these skill numbers with the assumption that they can be used to determine the probability of an outcome.</p><h4>What Exactly is Probability Anyway?</h4><p>You can learn about probability if you&#8217;re willing to flip a coin&#8212; <em>a lot</em>. You flip a few times:</p><a href="http://www.flickr.com/photos/matthiasxc/3600131465/"><img alt="Heads" style="border:0; border:0; width: 240px; height: 240px" id="BLOGGER_PHOTO_ID_5431258503464036242" name="BLOGGER_PHOTO_ID_5431258503464036242" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S1-01TZLJ5I/AAAAAAAAKXg/kXFh6ZAiC-U/s400/pennyheads.jpg" title="Photo by matthiasxc on Flickr. Used under the Creative Commons Attribution License" /></a><a href="http://www.flickr.com/photos/matthiasxc/3600131465/"><img alt="Heads" style="border:0; width: 240px; height: 240px" id="BLOGGER_PHOTO_ID_5431258503464036242" name="BLOGGER_PHOTO_ID_5431258503464036242" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S1-01TZLJ5I/AAAAAAAAKXg/kXFh6ZAiC-U/s400/pennyheads.jpg" title="Photo by matthiasxc on Flickr. Used under the Creative Commons Attribution License" /></a><a href="http://www.flickr.com/photos/matthiasxc/3600942160/in/photostream/"><img alt="Tails" style="border:0; width: 239px; height: 240px" id="BLOGGER_PHOTO_ID_5431259976545222946" name="BLOGGER_PHOTO_ID_5431259976545222946" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S1-2LDDGQSI/AAAAAAAAKXo/MuDWpGPPW3A/s400/pennytails_matthiasxc.jpg" title="Photo by matthiasxc on Flickr. Used under the Creative Commons Attribution License" /></a><p>Heads, heads, tails!</p><p>Each flip has a <a title="It turns out that flipping a coin is actually biased towards the side that is face up when you flip it." href="http://www.codingthewheel.com/archives/the-coin-flip-a-fundamentally-unfair-proposition">seemingly</a> random outcome. However, &#8220;random&#8221; usually means that you haven&#8217;t looked long enough to see a pattern emerge. If we take the total number of heads and divide it by the total number of flips, we see a very definite pattern emerge:</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S1-2xT-xuBI/AAAAAAAAKXw/xxEPk9xd4Bo/s1600-h/headspercentage.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5431260633925531666" name="BLOGGER_PHOTO_ID_5431260633925531666" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S1-2xT-xuBI/AAAAAAAAKXw/xxEPk9xd4Bo/s576/headspercentage.png" /></a><p>But you knew that it was going to be a 50-50 chance <em>in the long run</em>. When saying something is random, we often mean it&#8217;s bounded within some range. <a title="Photo is 'Wee!' by 'M i x y' on Flickr. Used under the Creative Commons Attribution License." href="http://www.flickr.com/photos/ladymixy-uk/4063190403/"><img style="border:0; margin: 10px 0px 0px 15px; width: 320px; display: inline; height: 213px" id="BLOGGER_PHOTO_ID_5432550112612764338" name="BLOGGER_PHOTO_ID_5432550112612764338" align="right" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S2RLi2bKyrI/AAAAAAAAKYw/brunlUsQIQA/s320/target_ladymixy_uk.jpg" /></a></p><p>It turns out that a better metaphor is to think of a bullseye that archers shoot at. Each arrow will land somewhere near that center. It would be extraordinary to see an arrow hit the bullseye exactly. Most of the arrows will seem to be randomly scattered around it. Although &#8220;random,&#8221; it&#8217;s far more likely that arrows will be near the target than, for example, way out in the woods (well, except if <em>I</em> was the archer).</p><p>This isn&#8217;t a new metaphor; the Greek word &#963;&#964;&#972;&#967;&#959;&#962; (stochos) refers to a stick set up to aim at. It&#8217;s where statisticians get the word <a title="besides, stow chass tick is just fun to pronounce" href="http://blogs.wnyc.org/radiolab/2009/06/15/stochasticity/">stochastic</a>: a fancy, but slightly more correct word than random. The distribution of arrows brings up another key point:</p><p><strong>All things are possible, but not all things are <em>probable</em>.</strong></p><p>Probability has <a title="This is a great talk about the history of probability by Keith Devlin. This specific point comes up around the 5 minute mark." href="http://www.youtube.com/watch?v=3pRM4v0O29o#t=5m00s">changed how ordinary people think</a>, a feat that rarely happens in mathematics. The very idea that you could understand <em>anything</em> about future outcomes is such a big leap in thought that it <a title="This is the book that is described in the video of the previous link. It's a quick read and interesting to see how mathematics is really developed." href="http://www.amazon.com/gp/product/0465009107?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0465009107">baffled Blaise Pascal</a>, one of the best mathematicians in history.</p><p>In the summer of 1654, Pascal exchanged a <a title="You can read the letters here" href="http://www.york.ac.uk/depts/maths/histstat/pascal.pdf">series of letters</a> with <a href="http://en.wikipedia.org/wiki/Pierre_de_Fermat">Pierre de Fermat</a>, another brilliant mathematician, concerning an &#8220;unfinished game.&#8221; Pascal wanted to know how to divide money among gamblers if they have to leave before the game is finished. Splitting the money fairly required some notion of the probability of outcomes if the game would have been played until the end. This problem gave birth to the field of probability and laid the foundation for lots of fun things like life insurance, casino games, and scary <a title="Warren Buffet calls them financial weapons of mass destruction" href="http://en.wikipedia.org/wiki/Derivative_%28finance%29">financial derivatives</a>.</p><p>But probability is more general than predicting the future&#8212; it&#8217;s a measure of your ignorance of something. It doesn&#8217;t matter if the event is set to happen in the future or if it happened months ago. All that matters is that <em>you lack knowledge in something</em>. Just because we lack knowledge doesn&#8217;t mean we can&#8217;t do anything useful, but we&#8217;ll have to do a lot more coin flips to see it.</p><h4>Aggregating Observations</h4><p>The real magic happens when we aggregate a lot of observations. What would happen if you flipped a coin 1000 times and counted the number of heads? Lots of things are possible, but in my case I got 505 heads. That&#8217;s about half, so it&#8217;s not surprising. I can graph this by creating a bar chart and put all the possible outcomes (getting 0 to 1000 heads) on the bottom and the total number of times that I got that particular count of heads on the vertical axis. For 1 outcome of 505 total heads it would look like this:</p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S2EMQZLJ1SI/AAAAAAAAKX4/bZXU0-gOScw/s1600-h/totalheads1.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5431636101360637218" name="BLOGGER_PHOTO_ID_5431636101360637218" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S2EMQZLJ1SI/AAAAAAAAKX4/bZXU0-gOScw/s576/totalheads1.png" /></a><p>Not too exciting. But what if we did it again? This time I got 518 heads. I can add that to the chart:</p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S2EMqwPrFwI/AAAAAAAAKYA/6_zLD6matE4/s1600-h/totalheads2.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5431636554230208258" name="BLOGGER_PHOTO_ID_5431636554230208258" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S2EMqwPrFwI/AAAAAAAAKYA/6_zLD6matE4/s576/totalheads2.png" /></a><p>Doing it 8 more times gave me 489, 515, 468, 508, 492, 475, 511, and once again, I got 505. The chart now looks like this:</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S2EM_2oh3mI/AAAAAAAAKYI/x7ytLC1LFeo/s1600-h/totalheads10.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5431636916722327138" name="BLOGGER_PHOTO_ID_5431636916722327138" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S2EM_2oh3mI/AAAAAAAAKYI/x7ytLC1LFeo/s576/totalheads10.png" /></a><p>And after a billion times, a total of one <em>trillion</em> flips, I got this:</p><a href="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S2RUBHvAW5I/AAAAAAAAKY4/2erLR25Cpyc/s1600-h/totalheads1e9.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5432559428748467090" title="In case you're wondering, I used a cryptographically strong random number generator and kept all my two CPU cores busy for a few hours running it as an idle job." name="BLOGGER_PHOTO_ID_5432559428748467090" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S2RUBHvAW5I/AAAAAAAAKY4/2erLR25Cpyc/s576/totalheads1e9.png" /></a><p>In all the flips, I never got less than 407 total heads and I never got more than 600. Just for fun, we can zoom in on this region:</p><a href="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S2RUR_oRMCI/AAAAAAAAKZA/xytGIDIXH5I/s1600-h/totalheads1e9_zoomed.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5432559718630502434" name="BLOGGER_PHOTO_ID_5432559718630502434" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S2RUR_oRMCI/AAAAAAAAKZA/xytGIDIXH5I/s576/totalheads1e9_zoomed.png" /></a><p>As we do more sets of flips, the <a title="The jagged edges are actually part of a Binomial Distribution. This is discussed more in the accompanying math paper to this article." href="http://en.wikipedia.org/wiki/Binomial_distribution">jagged edges</a> smooth out to give us the famous &#8220;<a href="http://en.wikipedia.org/wiki/Normal_distribution">bell curve</a>&#8221; that you&#8217;ve probably seen before. Math guys love to refer to it as a &#8220;<a href="http://en.wikipedia.org/wiki/Gaussian_function">Gaussian</a>&#8221; curve because it was used by the German mathematician Carl Gauss in 1809 to investigate errors in astronomical data. He came up with an exact formula of what to expect if we flipped a coin an infinite number of times (so that we don&#8217;t have to). This is such a famous result that you can see the curve and its equation if you look closely at the middle of an old 10 Deutsche Mark banknote bearing Gauss&#8217;s face:</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S2L0-j7yViI/AAAAAAAAKYg/HhzizCzK2wI/s1600-h/10_DM_Gauss_Cropped.jpg"><img style="border:0;" id="BLOGGER_PHOTO_ID_5432173456197309986" title="I wonder: what is the probability of having a mathematician on (legal) USA currency?" name="BLOGGER_PHOTO_ID_5432173456197309986" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S2L0-j7yViI/AAAAAAAAKYg/HhzizCzK2wI/s576/10_DM_Gauss_Cropped.jpg" /></a><p>Don&#8217;t miss the forest from all the flippin&#8217; trees. The curve is showing you the density of all possible outcomes. By density, I mean how tall the curve gets at a certain point. For example, in counting the total number of heads out of 1000 flips, I expected that 500 total heads would be the most popular outcome and indeed it was. I saw 25,224,637 out of a billion sets that had exactly 500 heads. This works out to about 2.52% of all outcomes. In contrast, if we look at the bucket for 450 total heads, I only saw this happen 168,941 times, or roughly 0.016% of the time. This confirms your observation that the curve is denser, that is, <em>taller</em> at the mean of 500 than further away at 450.</p><p>This confirms the key point: <strong>all things are possible, but outcomes are not all equally probable</strong>. There are <a title="Here's a This American Life episode dedicated to longshots" href="http://www.thisamericanlife.org/Radio_Episode.aspx?episode=398">longshots</a>. Professional athletes <a title="It's interesting to read Gladwell's description of the difference between these two." href="http://www.gladwell.com/2000/2000_08_21_a_choking.htm">panic or &#8216;choke&#8217;</a>. The <a title="Ok, so Kasparov might have had a simple mistake in the last game, but given enough time with Moore's law, it was going to happen eventually, it just so happened that it was him." href="http://en.wikipedia.org/wiki/Deep_Blue_%E2%80%93_Kasparov,_1997,_Game_6">world&#8217;s best chess players have bad days</a>. Additionally, tales about underdogs <a title="I think the best part about Mine That Bird winning the Kentucky Derby in 2009 is that it took the TV announcer about 10 seconds to get the horse's name once it took the lead at the end." href="http://www.youtube.com/watch?v=Hv8x9x5A49s">make us smile</a>&#8212; the longer the odds the better. Unexpected outcomes happen, but there&#8217;s still a lot of predictability out there.</p><p>It&#8217;s not just coin flips. The bell curve shows up in lots of places like casino games, to the thickness of tree bark, to the measurements of a person&#8217;s IQ. Lots of people have looked at the world and have come up with Gaussian models. It&#8217;s easy to think of the world as one big, bell shaped playground.</p><p>But the real world isn&#8217;t always Gaussian. History books are full of &#8220;<a title="The story goes that people used to use the phrase 'black swan' to have the same meaning as 'when pigs fly' until black swans were actually discovered to exist." href="http://www.amazon.com/gp/product/1400063515?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1400063515">Black Swan</a>&#8221; events. Stock market crashes and the invention of the computer are statistical outliers that Gaussian models tend not to predict well, but these events shock the world and forever change it. This type of reality isn&#8217;t covered by the bell curve, what Black Swan author <a href="http://www.fooledbyrandomness.com/">Nassim Teleb</a> calls the &#8220;<a href="http://books.google.com/books?id=YdOYmYA2TJYC&amp;lpg=PA229&amp;dq=%22the%20bell%20curve%20that%20great%20intellectual%20fraud%22&amp;pg=PA229#v=onepage&amp;q=%22the%20bell%20curve%20that%20great%20intellectual%20fraud%22&amp;f=false">Great Intellectual Fraud</a>.&#8221; These events would have such low probability that no one would predict them actually happening. There&#8217;s a different view of randomness that is a fascinating playground of <a href="http://en.wikipedia.org/wiki/Beno%C3%AEt_Mandelbrot">Beno&#238;t Mandelbrot</a> <a href="http://www.amazon.com/gp/product/0465043577/ref=pd_lpo_k2_dp_sr_1?pf_rd_p=486539851&amp;pf_rd_s=lpo-top-stripe-1&amp;pf_rd_t=201&amp;pf_rd_i=0465043550&amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_r=1J3P8AMPM2MT0QD3S5K3#noop">and his fractals</a> that better explain some of these events, but we will ignore all of this to keep things simple. We&#8217;ll acknowledge that the Gaussian view of the world isn&#8217;t <em>always</em> right, no more than a map of the world is the actual terrain.</p><p>The Gaussian worldview assumes everything will typically be some average value and then treats everything else as increasingly less likely &#8220;errors&#8221; as you exponentially drift away from the center (Gauss used the curve to measure <em>errors</em> in astronomical data after all). However, it&#8217;s not fair to treat real observations from the world as &#8220;errors&#8221; any more than it is to say that a person is an &#8220;error&#8221; from the &#8220;average human&#8221; that is half male and half female. Some of these same problems can come up treating a person as having skill that is Gaussian. Disclaimers aside, we&#8217;ll go along with George Box&#8217;s <a title="See the bottom of page 61 here, although he said it much earlier, at least in 1987. I first heard of this quote in a talk by Peter Norvig on the usefulness of even poor models given lots of data." href="http://books.google.com/books?id=63v--IZrNtsC&amp;lpg=PA61&amp;dq=%22all%20models%20are%20wrong%22%20george%20box&amp;pg=PA61#v=onepage&amp;q=&amp;f=false">view</a> that &#8220;all models are wrong, but some models are useful.&#8221;</p><h4>Gaussian Basics</h4><p>Gaussian curves are completely described by two values:</p><ol><li>The mean (average) value which is often represented by the Greek letter &#956; (mu)</li><li>The standard deviation, represented by the Greek letter &#963; (sigma). This indicates how far apart the data is spread out.</li></ol><p>In counting the total number heads in 1000 flips, the mean was 500 and the standard deviation was <a title="I go into this in more details in the accompanying math paper." href="http://www.wolframalpha.com/input/?i=sqrt%281000*.5*%281-.5%29%29">about 16</a>. In general, 68% of the outcomes will be within &#177; 1 standard deviation (e.g. 484-516 in the experiment), 95% within 2 standard deviations (e.g. 468-532) and 99.7% within 3 standard deviations (452-548):</p><a title="I got the idea for this diagram from the Wikipedia article on the normal distribution. However, the color and look didn't match the rest of the post, so I recreated it in Excel." href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5LAgkPdWsI/AAAAAAAAKgI/o3kJX5ccxWU/s1600-h/NormalDistributionWithPercentages.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5445626565161212610" name="BLOGGER_PHOTO_ID_5445626565161212610" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5LAgkPdWsI/AAAAAAAAKgI/o3kJX5ccxWU/s576/NormalDistributionWithPercentages.png" /></a><p>An important takeaway is that the bell curve allows for <em>all</em> possibilities, but each possibility is most definitely not equally likely. The bell curve gives us a model to calculate how likely something should be given an average value and a spread. Notice how outcomes sharply become less probable as we drift further away from the mean value.</p><p>While we&#8217;re looking at the Gaussian curve, it&#8217;s important to look at -3&#963; away from the mean on the left side. As you can see, <em>most</em> of the area under the curve is to the right of this point. I mention this because <strong>the TrueSkill algorithm uses the -3&#963; mark as a (very) conservative estimate for your skill</strong>. You&#8217;re probably better than this conservative estimate, but you&#8217;re most likely not worse than this value. Therefore, it&#8217;s a stable number for comparing yourself to others and is useful for use in sorting a leaderboard.</p><h4>3D Bell Curves: Multivariate Gaussians</h4><p>A non-intuitive observation is that Gaussian distributions can occur in more than the two dimensions that we&#8217;ve seen so far. You can sort of think of a Gaussian in three dimensions as a mountain. Here&#8217;s an example:</p><a href="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S4sa2VEcR-I/AAAAAAAAKe8/tLV8OSenBS8/s1600-h/Gaussian_3D_Circular.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443474095278409698" title="In case you're wondering, I used GNU Plot to make this. See the accompanying math paper for more details." name="BLOGGER_PHOTO_ID_5443474095278409698" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S4sa2VEcR-I/AAAAAAAAKe8/tLV8OSenBS8/s720/Gaussian_3D_Circular.png" /></a><p>In this plot, taller regions represent higher probabilities. As you can see, not all things are equally probable. The most probable value is the mean value that is right in the middle and then things sharply decline away from it.</p><p>In maps of <em>real</em> mountains, you often see a 2D contour plot where each line represents a different elevation (e.g. every 100 feet):</p><a title="I took this snapshot from the 7.5-Minute Series Topographic Map of Pikes Peak Quadrangle from the U.S. Geological Survey (USGS). My wife and I went to Pikes Peak the day we landed in Colorado from Indianapolis. One thing is certain: I felt those elevation lines :). For best experiences, acclimate yourself for a few days and then go." href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5XJiVAPfoI/AAAAAAAAKgg/hPMzakmsZEo/s1600-h/PikesPeakTopoMap.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5446480915965378178" name="BLOGGER_PHOTO_ID_5446480915965378178" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5XJiVAPfoI/AAAAAAAAKgg/hPMzakmsZEo/s640/PikesPeakTopoMap.png" /></a><p>The closer the lines on the map, the sharper the inclines. You can do something similar for 2D representations of 3D Gaussians. In textbooks, you often just see 2D representation that looks like this:</p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4segBlQOSI/AAAAAAAAKfE/OQNx_Zcg9FA/s1600-h/Gaussian_2D_Contour.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443478110136711458" title="It's unfortunate that most books never show the 3D perspective, it's much easier to see where it comes from." name="BLOGGER_PHOTO_ID_5443478110136711458" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4segBlQOSI/AAAAAAAAKfE/OQNx_Zcg9FA/s640/Gaussian_2D_Contour.png" /></a><p>This is called an &#8220;isoprobability contour&#8221; plot. It&#8217;s just a fancy way of saying &#8220;things that have the same probability will be the same color.&#8221; Note that it&#8217;s still in three dimensions. In this case, the third dimension is color intensity instead of the height you saw on a surface plot earlier. I like to think of contour plots as treasure maps for playing the &#8220;you&#8217;re getting warmer...&#8221; game. In this case, black means &#8220;you&#8217;re cold,&#8221; red means &#8220;you&#8217;re getting warmer...,&#8221; and yellow means &#8220;you&#8217;re on fire!&#8221; which corresponds to the highest probability.</p><p>See? Now you understand Gaussians and know that &#8220;<a href="http://en.wikipedia.org/wiki/Multivariate_normal_distribution">multivariate Gaussians</a>&#8221; aren&#8217;t as scary as they sound.</p><h4>Let&#8217;s Talk About Chess</h4><a title="'Chess Set' by Alan Light on Wikipedia, retouched by Andre Riemann. Licensed under the Creative Commons Attribution ShareAlike 3.0 License." href="http://en.wikipedia.org/wiki/File:ChessSet.jpg"><img style="border:0; margin: 0px 0px 5px 10px; display: inline" id="BLOGGER_PHOTO_ID_5446484220132842210" name="BLOGGER_PHOTO_ID_5446484220132842210" align="right" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S5XMip_J2uI/AAAAAAAAKgo/n0AB8I5DVLg/s160/ChessSet.jpg" /></a><p>There&#8217;s still more to learn, but we&#8217;ll pick up what we need along the way. We already have enough tools to do something useful. To warm up, let&#8217;s talk about chess because ratings are well-defined there.</p><p>In chess, a bright beginner is expected to have a rating around 1000. Keep in mind that ratings have no units; it&#8217;s just a number that is only meaningful when compared to someone else&#8217;s number. By <a href="http://www.chessbase.com/newsdetail.asp?newsid=4326" title="This 200 point class tradition was established by the Harkness system developed in the early 1950's. It was a popular precursor to the Elo system that we'll cover shortly.">tradition</a>, a difference of 200 indicates the better ranked player is expected to win 75% of the time. Again, nothing is special about the number 200, it was just chosen to be the difference needed to get a 75% win ratio and effectively defines a &#8220;class&#8221; of player.</p><p>I&#8217;ve slowly been practicing and have a rating around 1200. This means that if I play a bright beginner with a rating of 1000, I&#8217;m expected to win three out of four games.</p><p>We can start to visualize a match between me and bright beginner by drawing two bell curves that have a mean of 1000 and 1200 respectively with both having a standard deviation of 200:</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S2Tx3mUnG9I/AAAAAAAAKZo/N3CZWIlhjoI/s1600-h/bell_curves_of_bright_beginner_vs_jeff_before.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5432732987997756370" name="BLOGGER_PHOTO_ID_5432732987997756370" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S2Tx3mUnG9I/AAAAAAAAKZo/N3CZWIlhjoI/s576/bell_curves_of_bright_beginner_vs_jeff_before.png" /></a><p>The above graph shows what the ratings represent: they&#8217;re an indicator of how we&#8217;re <em>expected</em> to perform if we play a game. The most likely performance is exactly what the rating is (the mean value). One non-obvious point is that you can <a title="This subtraction idea is also covered more in the accompanying math paper." href="http://mathworld.wolfram.com/NormalDifferenceDistribution.html">subtract two bell curves and get another bell curve</a>. The new center is the difference of the means and the resulting curve is a bit wider than the previous curves. By taking my skill curve (red) and subtracting the beginner&#8217;s curve (blue), you&#8217;ll get this resulting curve (purple):</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S2TvsakEvuI/AAAAAAAAKZg/1caIpEXPH0Q/s1600-h/bell_curves_difference.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5432730596839571170" name="BLOGGER_PHOTO_ID_5432730596839571170" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S2TvsakEvuI/AAAAAAAAKZg/1caIpEXPH0Q/s576/bell_curves_difference.png" /></a><p>Note that it&#8217;s centered at 1200 - 1000 = 200. Although interesting to look on its own, it gives some useful information. This curve is representing all possible game outcomes between me and the beginner. The middle shows that I&#8217;m expected to be 200 points better. The far left side shows that there is a tiny chance that the beginner has a game where he plays as if he&#8217;s 700 points better than I am. The far right shows that there is a tiny chance that I&#8217;ll play as if I&#8217;m 1100 points better. The curve actually goes on forever in both ways, but the expected probability for those outcomes is so small that it&#8217;s effectively zero.</p><p>As a player, you really only care about one very specific point on this curve: zero. Since I have a higher rating, I&#8217;m interested in all possible outcomes where the difference is positive. These are the outcomes where I&#8217;m expected to outperform the beginner. On the other hand, the beginner is keeping his eye on everything to the left of zero. These are the outcomes where the performance difference is negative, implying that&#160;he outperforms me.</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S2XY9WNERII/AAAAAAAAKZw/nNzg4ZvrpQM/s1600-h/performance_difference_shaded_to_zero.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5432987073936376962" name="BLOGGER_PHOTO_ID_5432987073936376962" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S2XY9WNERII/AAAAAAAAKZw/nNzg4ZvrpQM/s576/performance_difference_shaded_to_zero.png" /></a><p>We can plug a few numbers into <a title="For example: Wolfram Alpha or Excel" href="http://www.wolframalpha.com/input/?i=CDF%5BNormalDistribution%5B200%2C+200+*+Sqrt%5B2%5D%5D%2C+0%5D">a calculator</a> and see that there is about a 24% probability that the performance difference will be negative, implying the beginner wins, and a 76% chance that the difference will be positive, meaning that I win. This is roughly the 75% that we were expecting for a 200 point difference.</p><p>This has been a bit too concrete for my particular match with a beginner. We can generalize it by creating another curve where the horizontal axis represents the difference in player ratings and the vertical axis represents the total probability of winning given that rating difference:</p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S2X1k7iXRTI/AAAAAAAAKaA/UEwV2FQA5Hk/s1600-h/cdf_chess_given_rating_difference.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5433018540298290482" name="BLOGGER_PHOTO_ID_5433018540298290482" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S2X1k7iXRTI/AAAAAAAAKaA/UEwV2FQA5Hk/s640/cdf_chess_given_rating_difference.png" /></a><p>As expected, having two players with equal ratings, and thus a rating difference of 0, implies the odds of winning are 50%. Likewise, if you look at the -200 mark, you see the curve is at the 24% that we calculated earlier. Similarly, +200 is at the 76% mark. This also shows that outcomes on the far left side are quite unlikely. For example, the odds of me winning a game against <a href="http://en.wikipedia.org/wiki/Magnus_Carlsen" title="Since Kasparov stopped playing professionally, Magnus is the top guy. Not surprisingly, Kasparov is now Magnus's teacher.">Magnus Carlsen</a>, who is at the top of the <a title="The 19 year old Magnus was at the top of the FIDE leaderboard at the time of this writing (March 2010)" href="http://ratings.fide.com/top.phtml?list=men">chess leaderboard</a> with a rating of 2813, would be at the -1613 mark (1200 - 2813) on this chart and have a probability near one in a <em>billion</em>. I won&#8217;t hold my breath. (Actually, most chess groups use a slightly different curve, but the ideas are the same. See the <a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf">accompanying math paper</a> for details.)</p><p>All of these curves were probabilities of what <em>might</em> happen, not what <em>actually</em> happened. In actuality, let&#8217;s say I lost the game by some silly blunder (oops!). The question that the beginner wants to know is how much his rating will go up. It also makes sense that my rating will go down as a punishment for the loss. The harder question is just <em>how much</em> should the ratings change?</p><p>By winning, the beginner demonstrated that he was probably better than the 25% winning probability we thought he would have. One way of updating ratings is to imagine that each player bets a certain amount of his rating on each game. The amount of the bet is determined by the probability of the outcome. In addition, we decide how dramatic the ratings change should be for an individual game. If you believe the most recent game should count 100%, then you&#8217;d expect my rating to go down a lot and his to go up a lot. The decision of how much the most recent game should count leads to what chess guys call the multiplicative &#8220;K-factor.&#8221;</p><p>The K-Factor is what we multiply a probability by to get the total amount of a rating change. It reflects the maximum possible change in a person&#8217;s rating. A reasonable choice of a weight is that the most recent game counts about 7% which leads to a K-factor of 24. New players tend to have more fluctuations than well-established players, so new players might get a K-Factor of 32 while grand masters have a K-factor around 10. Here&#8217;s how the K-Factor changes with respect to how much the latest game should count:</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5ZZF5xos8I/AAAAAAAAKg0/K4Whs0yA79Y/s1600-h/KFactorAlphaImpact.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5446638757294420930" name="BLOGGER_PHOTO_ID_5446638757294420930" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5ZZF5xos8I/AAAAAAAAKg0/K4Whs0yA79Y/s576/KFactorAlphaImpact.png" /></a><p>Using a K-Factor of 24 means that my rating will now be lowered to 1182 and the beginner&#8217;s will rise to 1018. Our curves are now closer together:</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5ZfF6pBUwI/AAAAAAAAKg8/mW6ndagfFDI/s1600-h/BeginnerVsJeffAfterUpdate.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5446645354596487938" name="BLOGGER_PHOTO_ID_5446645354596487938" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5ZfF6pBUwI/AAAAAAAAKg8/mW6ndagfFDI/s576/BeginnerVsJeffAfterUpdate.png" /></a><p>Note that our standard deviations never change. Here are the probabilities if we were to play again:</p><p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5aDq4_xYXI/AAAAAAAAKhE/RSM0V6uki_Y/s1600-h/performance_difference_shaded_to_zero_after.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5446685572228800882" name="BLOGGER_PHOTO_ID_5446685572228800882" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5aDq4_xYXI/AAAAAAAAKhE/RSM0V6uki_Y/s576/performance_difference_shaded_to_zero_after.png" /></a></p><p>This method is known as the <a href="http://en.wikipedia.org/wiki/Elo_rating_system">Elo rating system</a>, named after <a href="http://en.wikipedia.org/wiki/Arpad_Elo">Arpad Elo</a>, the chess enthusiast who created it. It&#8217;s relatively simple to implement and most games that calculate skill end here.</p><h4>I Thought You Said You&#8217;d Talk About TrueSkill?</h4><p>Everything so far has just been prerequisites to the main event; the TrueSkill paper assumes you&#8217;re already familiar with it. It was all sort of new to me, so it took awhile to get comfortable with the Elo ideas. Although the Elo model will get you far, there are a few notable things it doesn&#8217;t handle well:</p><ol><li><strong>Newbies</strong> - In the Elo system, you&#8217;re typically assigned a &#8220;provisional&#8221; rating for the first 20 games. These games tend to have a higher K-factor associated with them in order to let the algorithm determine your skill faster before it&#8217;s slowed down by a non-provisional (and smaller) K-factor. We would like an algorithm that converges quickly onto a player&#8217;s true skill (get it?) to not waste their time having unbalanced matches. This means the algorithm should start giving reasonable approximations of skill within 5-10 games.</li><li><strong>Teams</strong> - Elo was explicitly designed for two players. Efforts to adapt it to work for multiple people on multiple teams have primarily been unsophisticated hacks. One such approach is to treat teams as individual players that duel against the other players on the opposing teams and then apply the average of the duels. This is the &#8220;duelling heuristic&#8221; mentioned in the TrueSkill paper. I implemented it in the <a href="http://github.com/moserware/Skills">accompanying project</a>. It&#8217;s ok, but seems a bit too hackish and doesn&#8217;t converge well.</li><li><strong>Draws</strong> - Elo treats draws as a half win and half loss. This doesn&#8217;t seem fair because draws can tell you a lot. Draws imply you were evenly paired whereas a win indicates you&#8217;re better, but unsure how much better. Likewise, a loss indicates you did worse, but you don&#8217;t really know how much worse. So it seems that a draw is important to explicitly model.</li></ol><p>The TrueSkill algorithm generalizes Elo by keeping track of two variables: your average (mean) skill <em>and</em> the system&#8217;s uncertainty about that estimate (your standard deviation). It does this instead of relying on a something like a fixed K-factor. Essentially, this gives the algorithm a dynamic k-factor. This addresses the newbie problem because it removes the need to have &#8220;provisional&#8221; games. In addition, it addresses the other problems in a nice statistical manner. Tracking these two values are so fundamental to the algorithm that Microsoft researchers informally referred to it as the &#956;&#963; (mu-sigma) system until the marketing guys gave it the name TrueSkill.</p><p>We&#8217;ll go into the details shortly, but it&#8217;s helpful to get a quick visual overview of what TrueSkill does. Let&#8217;s say we have Eric, an experienced player that has played a lot and established his rating over time. In addition, we have newbie: Natalia.</p><p>Here&#8217;s what their skill curves might look like before a game:</p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S5cJKZ6voeI/AAAAAAAAKhM/BW_oakG7pRU/s1600-h/TrueSkillCurvesBeforeExample.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5446832348688523746" name="BLOGGER_PHOTO_ID_5446832348688523746" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S5cJKZ6voeI/AAAAAAAAKhM/BW_oakG7pRU/s576/TrueSkillCurvesBeforeExample.png" /></a><p>And after Natalia wins:</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5cJlUXV0LI/AAAAAAAAKhU/F-1jRnH7mHk/s1600-h/TrueSkillCurvesAfterExample.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5446832811054321842" name="BLOGGER_PHOTO_ID_5446832811054321842" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5cJlUXV0LI/AAAAAAAAKhU/F-1jRnH7mHk/s576/TrueSkillCurvesAfterExample.png" /></a><p>Notice how Natalia&#8217;s skill curve becomes narrower and taller (i.e. makes a big update) while Eric&#8217;s curve barely moves. This shows that the TrueSkill algorithm thinks that she&#8217;s probably better than Eric, but doesn&#8217;t how much better. Although TrueSkill is a little more confident about Natalia&#8217;s mean after the game (i.e. it&#8217;s now taller in the middle), it&#8217;s still very uncertain. Looking at her updated bell curve shows that her skill could be between 15 and 50.</p><p>The rest of this post will explain how calculations like this occurred and how much more complicated scenarios can occur. But to understand it well enough to implement it, we&#8217;ll need to learn a couple of new things.</p><h4>Bayesian Probability</h4><a href="http://www.amazon.com/gp/product/B00000IWDR?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=B00000IWDR"></a><p>Most basic statistics classes focus on frequencies of events occurring. For example, the probability of getting a red marble when randomly drawing from a jar that has 3 red marbles and 7 blue marbles is 30%. Another example is that the probability of rolling two dice and getting a total of 7 is <a href="http://www.wolframalpha.com/input/?i=probability+getting+7+two+dice">about 17%</a>. The key idea in both of these examples is that you can count each type of outcome and then compute the <em>frequency</em> directly. Although helpful in calculating your odds at casino games, &#8220;frequentist&#8221; thinking is not that helpful with many practical applications, like finding your skill in a team.</p><p>A different approach is to think of probability as degree of belief in something. The basic idea is that you have some <strong>prior belief</strong> and then you observe some <strong>evidence</strong> that updates your belief leaving you with an updated <strong>posterior</strong> belief. As you might expect, learning about new evidence will typically make you more certain about your belief.</p><p>Let&#8217;s assume that you&#8217;re trying to find a treasure on a map. The treasure could be anywhere on the map, but you have a hunch that it&#8217;s probably around the center of the map and increasingly less likely as you move away from the center. We could track the probability of finding the treasure using the 3D multivariate Gaussian we saw earlier:</p><a href="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S4sa2VEcR-I/AAAAAAAAKe8/tLV8OSenBS8/s1600-h/Gaussian_3D_Circular.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443474095278409698" name="BLOGGER_PHOTO_ID_5443474095278409698" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S4sa2VEcR-I/AAAAAAAAKe8/tLV8OSenBS8/s576/Gaussian_3D_Circular.png" /></a><p>Now, let&#8217;s say that after studying a book about the treasure, you&#8217;ve learned that there&#8217;s a strong likelihood that treasure is somewhere along the diagonal line on the map. Perhaps this was based on some secret clue. Your clue information doesn&#8217;t necessarily mean the treasure will be <em>exactly</em> on that line, but rather that the treasure will most-likely be near it. The <strong>likelihood function</strong> might look like this in 3D:</p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4smc_4B1DI/AAAAAAAAKfM/cw28slVmK4E/s1600-h/Gaussian_3D_Likelihood.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443486854232003634" name="BLOGGER_PHOTO_ID_5443486854232003634" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4smc_4B1DI/AAAAAAAAKfM/cw28slVmK4E/s576/Gaussian_3D_Likelihood.png" /></a><p>We&#8217;d like to use our <em>prior</em> information and this new <em>likelihood</em> information to come up with a better <em>posterior</em> guess of the treasure. It turns out that we can just multiply the prior and likelihood to obtain a posterior distribution that looks like this:</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S4snAilcqWI/AAAAAAAAKfU/KQgGACxlMkk/s1600-h/Gaussian_3D_Posterior.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443487464844732770" name="BLOGGER_PHOTO_ID_5443487464844732770" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S4snAilcqWI/AAAAAAAAKfU/KQgGACxlMkk/s576/Gaussian_3D_Posterior.png" /></a><p>This is giving us a smaller and more concentrated area to look at.</p><p>If you look at most textbooks, you typically just see this information using 2D isoprobability contour plots that we learned about earlier. Here&#8217;s the same information in 2D:</p><p>Prior:</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S4snWvA5YrI/AAAAAAAAKfc/J31SDnp-09s/s1600-h/Gaussian_2D_Prior.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443487846138208946" name="BLOGGER_PHOTO_ID_5443487846138208946" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S4snWvA5YrI/AAAAAAAAKfc/J31SDnp-09s/s576/Gaussian_2D_Prior.png" /></a><p>Likelihood:</p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4sneX0nRNI/AAAAAAAAKfk/_N5AAMmuIO4/s1600-h/Gaussian_2D_Likelihood.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443487977351627986" name="BLOGGER_PHOTO_ID_5443487977351627986" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4sneX0nRNI/AAAAAAAAKfk/_N5AAMmuIO4/s576/Gaussian_2D_Likelihood.png" /></a><p>Posterior:</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S4snj-YISVI/AAAAAAAAKfs/eAZD78TsGKs/s1600-h/Gaussian_2D_Posterior.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443488073600485714" name="BLOGGER_PHOTO_ID_5443488073600485714" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S4snj-YISVI/AAAAAAAAKfs/eAZD78TsGKs/s576/Gaussian_2D_Posterior.png" /></a><p>For fun, let&#8217;s say we found additional information saying the treasure is along the other diagonal with the following likelihood:</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5hDR3bT4xI/AAAAAAAAKhc/BOoitWBwmPU/s1600-h/Gaussian_2D_Likelihood_Opposite_Direction.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5447177723519951634" name="BLOGGER_PHOTO_ID_5447177723519951634" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5hDR3bT4xI/AAAAAAAAKhc/BOoitWBwmPU/s576/Gaussian_2D_Likelihood_Opposite_Direction.png" /></a><p>To incorporate this information, we&#8217;re able to <a title="The fancy term for the being able to do this is called the 'conjugate prior' since the prior and posterior are 'conjoined' like twins. That is, they're of the same class of function." href="http://en.wikipedia.org/wiki/Conjugate_prior">take our last posterior and make that the prior for the next iteration</a> using the new likelihood information to get this updated posterior:</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5hDivDzF3I/AAAAAAAAKhs/8i9SWy-SNhs/s1600-h/Gaussian_2D_Posterior_Updated.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5447178013331625842" name="BLOGGER_PHOTO_ID_5447178013331625842" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S5hDivDzF3I/AAAAAAAAKhs/8i9SWy-SNhs/s576/Gaussian_2D_Posterior_Updated.png" /></a><p>This is a much more focused estimate than our original belief! We could iterate the procedure and potentially get an even smaller search area.</p><p><a title="Thomas Bayes (c. 1702 - 17 April 1761)" href="http://en.wikipedia.org/wiki/Thomas_Bayes"><img style="border:0;" id="BLOGGER_PHOTO_ID_5435310499900212850" name="BLOGGER_PHOTO_ID_5435310499900212850" align="right" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S24aGiaAxnI/AAAAAAAAKas/PY0bAN-PDpM/s220/Thomas_Bayes.gif" /></a>And that&#8217;s basically all there is to it. In TrueSkill, the buried treasure that we look for is a person&#8217;s skill. This approach to probability is called &#8220;Bayesian&#8221; because it was discovered by a Presbyterian minister in the 1700&#8217;s named <a title="More precisely, it was Bayes' friend Richard Price who found this unpublished paper after Bayes' death and saw that it was useful and then decided to publish it." href="http://en.wikipedia.org/wiki/Thomas_Bayes">Thomas Bayes</a> who liked to dabble in math.</p><p>The central ideas to Bayesian statistics are the prior, the likelihood, and the posterior. There&#8217;s detailed math that goes along with this and is in the <a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf">accompanying paper</a>, but understanding these basic ideas is more important:</p><blockquote><p>&#8220;When you understand something, then you can find the math to express that understanding. The math doesn&#8217;t provide the understanding.&#8221;&#8212; <a href="http://www.reddit.com/r/programming/comments/bblt4/lamport_when_you_understand_something_then_you/">Lamport</a></p></blockquote><p>Bayesian methods have only recently become popular in the computer age because computers can quickly iterate through several tedious rounds of priors and posteriors. Bayesian methods have historically been popular inside of Microsoft Research (where TrueSkill was invented). Way <a href="http://people.cs.ubc.ca/~murphyk/Bayes/la.times.html">back in 1996</a>, Bill Gates considered Bayesian statistics to be Microsoft Research&#8217;s secret sauce.</p><p>As we&#8217;ll see later on, we can use the Bayesian approach to calculate a person&#8217;s skill. In general, it&#8217;s highly useful to update your belief based off previous evidence (e.g. your performance in previous games). This <em>usually</em> works out well. However, sometimes &#8220;<a href="http://www.amazon.com/gp/product/1400063515?ie=UTF8&amp;tag=moserware-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1400063515">Black Swans</a>&#8221; are present. For example, <a title="In general, this is called the Problem of Inductive Knowledge and is discussed in the book." href="http://books.google.com/books?id=gWW4SkJjM08C&amp;lpg=PR2&amp;dq=black%20swan&amp;pg=PA40#v=onepage&amp;q=&amp;f=false">a turkey</a> using Bayesian inference would have a very specific posterior distribution of the kindness of a farmer who feeds it every day for 1000 days only to be surprised by a Thanksgiving event that was so many standard deviations away from the turkey&#8217;s mean belief that he never would have saw it coming. Skill has similar potential for a &#8220;Thanksgiving&#8221; event where an average player beats the best player in the world. We&#8217;ll acknowledge that small possibility, but ignore it to simplify things (and give the unlikely winner a great story for the rest of his life).</p><p>TrueSkill claims that it is Bayesian, so you can be sure that there is going to be a concept of a prior and a likelihood in it&#8212; and there is. We&#8217;re getting closer, but we still need to learn a few more details.</p><h4>The Marginalized, but Not Forgotten Distribution</h4><p><a title="'Running against the light' by clairity on Flickr. Used under the Creative Commons Attribution License" href="http://www.flickr.com/photos/clairity/145758101/"><img style="border:0; margin: 0px 0px 0px 10px; width: 400px; display: inline; height: 300px" id="BLOGGER_PHOTO_ID_5435222701540710050" name="BLOGGER_PHOTO_ID_5435222701540710050" align="right" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S23KQAB5FqI/AAAAAAAAKak/Ugc3ijWuvYI/s400/clarity_man_running_at_crosswalk.jpg" /></a>Next we need to learn about &#8220;<a href="http://en.wikipedia.org/wiki/Marginal_distribution">marginal distributions</a>&#8221;, often just called &#8220;marginals.&#8221; Marginals are a way of distilling information to focus on what you care about. Imagine you have a table of sales for each month for the past year. Let&#8217;s say that you only care about total sales for the year. You could take out your calculator and add up all the sales in each month to get the total aggregate sales for the year. Since you care about this number and it wasn&#8217;t in the original report, you could add it in the <em>margin</em> of the table. That&#8217;s roughly where &#8220;margin-al&#8221; got its name.</p><p>Wikipedia has a great <a title="This illustration came from the article on Marginal distribution that helped me finally get marginals" href="http://en.wikipedia.org/wiki/Marginal_distribution">illustration</a> on the topic: consider a guy that ignores his mom&#8217;s advice and <em>never</em> looks both ways when crossing the street. Even worse, he&#8217;s too engrossed in listening to his iPod that he doesn&#8217;t look <em>any</em> way, he just always crosses.</p><p>What&#8217;s the probability of him getting hit by a car at a specific intersection? Let&#8217;s simplify things by saying that it just depends on whether the light is red, yellow, or green.</p><table><tbody><tr><td>Light State</td><td>Red</td><td>Yellow</td><td>Green</td></tr><tr><td>Probability of getting hit given light state</td><td>1%</td><td>9%</td><td>90%</td></tr></tbody></table><p>This is helpful, but it doesn&#8217;t tell us what we want. We also need to know how long the light stays a given color</p><table><tbody><tr><td>Light color</td><td>Red</td><td>Yellow</td><td>Green</td></tr><tr><td>% Time in Color</td><td>60%</td><td>10%</td><td>30%</td></tr></tbody></table><p>There&#8217;s a bunch of probability data here that&#8217;s a bit overwhelming. If we join the probabilities together, we&#8217;ll have a &#8220;joint distribution&#8221; that&#8217;s just a big complicated system that tells us <em>too much</em> information.</p><p>We can start to distill this information down by calculating the probability of getting hit given each light state:</p><table><tbody><tr><td>&#160;</td><td>Red</td><td>Yellow</td><td>Green</td><td>Total</td></tr><tr><td>Probability of Getting Hit</td><td>1%*60% = 0.6%</td><td>9%*10% = 0.9%</td><td>90%*30% = 27%</td><td>28.5%</td></tr></tbody></table><p>In the right <em>margin</em> of the table we get the value that really matters to this guy. There&#8217;s a 28.5% <em>marginal probability</em> of getting hit if the guy never looks for cars and just always crosses the street. We obtained it by &#8220;summing out&#8221; the individual components. That is, we simplified the problem by eliminating variables and we eliminated variables by just focusing on the total rather than the parts.</p><p>This idea of marginalization is very general. The central question in this article is &#8220;computing your skill,&#8221; but your skill is complicated. When using Bayesian statistics, we often can&#8217;t observe something directly, so we have to come up with a probability distribution that&#8217;s more complicated and then &#8220;marginalize&#8221; it to get the distribution that we really want. We&#8217;ll need to marginalize your skill by doing a similar &#8220;summing-out&#8221; procedure as we did for the reckless guy above.</p><p>But before we do that, we need to learn another technique to make calculations simpler.</p><h4>What&#8217;s a Factor Graph, and Why Do I Care?</h4><p>Remember your algebra class when you worked with expressions like this?</p><a href="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S43UlXqqNeI/AAAAAAAAKf4/NCcMQ--IOcU/s1600-h/equation_not_factored.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5444241263033988578" name="BLOGGER_PHOTO_ID_5444241263033988578" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S43UlXqqNeI/AAAAAAAAKf4/NCcMQ--IOcU/s640/equation_not_factored.png" /></a><p>Your teacher showed you that you could simplify this by &#8220;factor-ing&#8221; out w, like this:</p><a href="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S4rSsD2a2kI/AAAAAAAAKds/i6ehQ1bdg_c/s1600-h/expression_factored.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443394754020301378" name="BLOGGER_PHOTO_ID_5443394754020301378" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S4rSsD2a2kI/AAAAAAAAKds/i6ehQ1bdg_c/s576/expression_factored.png" /></a><p>We often factor expressions to make them easier to understand and to simplify calculations. Let&#8217;s replace the variables above with w=4, x=1, y=2, and z=3.</p><p>Let&#8217;s say the numbers on our calculator are circles and the operators are squares. We could come up with an &#8220;<a href="http://msdn.microsoft.com/en-us/library/bb397951.aspx">expression tree</a>&#8221; to describe the calculation like this:</p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4rMBS94shI/AAAAAAAAKdU/qdxmo3QhFK0/s1600-h/factor_graph_complicated_factorization.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443387422274007570" name="BLOGGER_PHOTO_ID_5443387422274007570" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4rMBS94shI/AAAAAAAAKdU/qdxmo3QhFK0/s576/factor_graph_complicated_factorization.png" /></a><p>You can tell how tedious this computation is by counting 11 &#8220;buttons&#8221; we&#8217;d have to push. We could also factor it like this</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S4rQpZ8baSI/AAAAAAAAKdc/kacyqjdOm28/s1600-h/factor_graph_complicated_simplified.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443392509388220706" name="BLOGGER_PHOTO_ID_5443392509388220706" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S4rQpZ8baSI/AAAAAAAAKdc/kacyqjdOm28/s576/factor_graph_complicated_simplified.png" /></a><p>This &#8220;factorization&#8221; has a total of 7 buttons, a savings of 4 buttons. It might not seem like much here, but factorizing is a big idea.</p><p>We face a similar problem of how to factor things when we&#8217;re looking to simplify a complicated probability distribution. We&#8217;ll soon see how your skill is composed of several &#8220;factors&#8221; in a joint distribution. We can simplify computations based on how variables are related to these factors. We&#8217;ll break up the joint distribution into a bunch of factors on a graph. <strong>This graph that links factors and variables is called a &#8220;factor graph.&#8221;</strong></p><p>The key idea about a factor graph is that we represent the marginal conditional probabilities as variables and then represent each major function of those variables as a &#8220;factor.&#8221; We&#8217;ll take advantage of how the graph &#8220;factorizes&#8221; and imagine that each factor is a node on a network that&#8217;s optimized for efficiency. A key efficiency trick is that factor nodes send &#8220;messages&#8221; to other nodes. These messages help simplify further marginal computations. The &#8220;message passing&#8221; is very important and thus will be highlighted with arrows in the upcoming graphs; gray arrows represent messages going &#8220;down&#8221; the graph and black show messages coming &#8220;up&#8221; the graph.</p><p>The accompanying <a href="http://github.com/moserware/Skills">code</a> and <a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf">math paper</a> go into details about exactly how this happens, but it&#8217;s important to realize the high level idea first. That is, we want to look at all the factors that go into creating the likelihood function for updating a person&#8217;s skill based on a game outcome. Representing this information in a factor graph helps us see how things are related.</p><p>Now we have all the foundational concepts that we&#8217;re ready for the main event: the TrueSkill factor graph!</p><h4>Enough Chess, Let&#8217;s Rank Something Harder!</h4><p>The TrueSkill algorithm is Bayesian because it&#8217;s composed of a prior multiplied by a likelihood. I&#8217;ve highlighted these two components in the sample factor graph from the TrueSkill paper that looks scary at first glance:</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5vdXDRz9UI/AAAAAAAAKiU/Y5oPcSl4eck/s1600-h/TrueSkillFullFactorgraph.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5448191562321491266" name="BLOGGER_PHOTO_ID_5448191562321491266" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5vdXDRz9UI/AAAAAAAAKiU/Y5oPcSl4eck/s720/TrueSkillFullFactorgraph.png" /></a><p>This factor graph shows the outcome of a match that had 3 teams all playing against each other. The first team (on the left) only has one player, but this player was able to defeat both of the other teams. The second team (in the middle) had two players and this team tied the third team (on the right) that had just one player.</p><p>In TrueSkill, we just care about a player&#8217;s marginal skill. However, as is often the case with Bayesian models, we have to explicitly model other things that impact the variable we care about. We&#8217;ll briefly cover each factor (more details are in the <a href="http://github.com/moserware/Skills">code</a> and <a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf">math paper</a>).</p><h4>Factor #1: What Do We Already Know About Your Skill?</h4><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S4rh00sIxBI/AAAAAAAAKe0/dVIZsc_f6wk/s1600-h/Layer1_priors.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443411397243880466" name="BLOGGER_PHOTO_ID_5443411397243880466" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S4rh00sIxBI/AAAAAAAAKe0/dVIZsc_f6wk/s576/Layer1_priors.png" /></a><p>The first factor starts the whole process. It&#8217;s where we get a player&#8217;s previous skill level from somewhere (e.g. a player database). At this point, we add some uncertainty to your skill&#8217;s standard deviation to keep game dynamics interesting and prevent the standard deviation from hitting zero since the rest of algorithm will make it smaller (since the whole point is to learn about you and become more certain).</p><p>There is a factor and a variable for each player. Each factor is a function that remembers a player&#8217;s previous skill. Each variable node holds the current value of a player&#8217;s skill. I say &#8220;current&#8221; because this is the value that we&#8217;ll want to know about after the whole algorithm is completed. Note that the message arrow on the factor only goes one way; we never go back to the prior factor. It just gets things going. However, we will come back to the variable.</p><p>But we&#8217;re getting ahead of ourselves.</p><h4>Factor #2: How Are You Going To Perform?</h4><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4raUAX5XAI/AAAAAAAAKeM/VVg3AgoHFK8/s1600-h/Layer2_likelihood.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443403136863132674" name="BLOGGER_PHOTO_ID_5443403136863132674" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S4raUAX5XAI/AAAAAAAAKeM/VVg3AgoHFK8/s576/Layer2_likelihood.png" /></a><p>Next, we add in beta (&#946;). You can think of beta as the number of skill points to guarantee about an 80% chance of winning. The TrueSkill inventors <a title="This occurred during a GameFest 2007 presentation. Although this talk gets cut short due to an audio problem, it's pretty good at giving an overview." href="http://www.microsoft.com/downloads/details.aspx?FamilyID=1acc9bf7-920d-477b-a7b1-4945b3cb04dd&amp;DisplayLang=en">refer</a> to beta as defining the length of a &#8220;skill chain.&#8221;</p><p><a title="The faceless people and chain in this picture came from the Open Clip Art project and are in the public domain. The idea for this image came from Ralf Herbrich's 2007 GameFest presentation that I linked to in the previous link." href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5locWxUbTI/AAAAAAAAKiE/q0A0x8O_KSQ/s1600-h/BetaSkillChainIllustration.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5447500060639391026" name="BLOGGER_PHOTO_ID_5447500060639391026" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5locWxUbTI/AAAAAAAAKiE/q0A0x8O_KSQ/s640/BetaSkillChainIllustration.png" /></a></p><p>The skill chain is composed of the worst player on the far left and the best player on the far right. Each subsequent person on the skill chain is &#8220;beta&#8221; points better and has an 80% win probability against the weaker player. This means that a small beta value indicates a high-skill game (e.g. <a href="http://en.wikipedia.org/wiki/Go_%2528game%2529">Go</a>) since smaller differences in points lead to the 80%:20% ratio. Likewise, a game based on chance (e.g. <a href="http://en.wikipedia.org/wiki/Uno_%2528card_game%2529">Uno</a>) is a low-skill game that would have a higher beta and smaller skill chain.</p><p>Factor #3: How is Your Team Going to Perform?</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S4rcFykRwGI/AAAAAAAAKeU/leCuvBNE-lI/s1600-h/Layer3_team_sum.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443405091662053474" name="BLOGGER_PHOTO_ID_5443405091662053474" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S4rcFykRwGI/AAAAAAAAKeU/leCuvBNE-lI/s576/Layer3_team_sum.png" /></a><p>Now we&#8217;re ready for one of the most controversial aspects of TrueSkill: computing the performance of a team as a whole. In TrueSkill, we assume the team&#8217;s performance is the sum of each team member&#8217;s performance. I say that it&#8217;s &#8220;controversial&#8221; because some members of the team probably work harder than others. Additionally, sometimes special dynamics occur that make the sum greater than the parts. However, we&#8217;ll fight the urge to make it much more complicated and heed <a title="See page 452, second column, item a" href="http://www.forecastingprinciples.com/files/pdf/Makridakia-The%20M3%20Competition.pdf">Makridakis&#8217;s advice</a>:</p><blockquote><p>&#8220;Statistically sophisticated or complex methods do not necessarily provide more accurate forecasts than simpler ones&#8221;</p></blockquote><p>One cool thing about this factor is that you can weight each team member&#8217;s contribution by the amount of time that they played. For example, if two players are on a team but each player only played half of the time (e.g. <a href="http://en.wiktionary.org/wiki/tag_team">a tag team</a>), then we would treat them differently than if these two players played the entire time. This is officially known as &#8220;partial play.&#8221; Xbox game titles report the percentage of time a player was active in a game under the &#8220;X_PROPERTY_PLAYER_PARTIAL_PLAY_PERCENTAGE&#8221; property that is recorded for each player (it defaults to 100%). This information is used by TrueSkill to perform a fairer update. I implemented this feature in the <a href="http://github.com/moserware/Skills">accompanying source code</a>.</p><h4>Factor #4: How&#8217;d Your Team Compare?</h4><p>Next, we compare team performances in pairs. We do this by subtracting team performances to come up with pairwise differences:</p><a href="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S5venQ1MtsI/AAAAAAAAKic/LWYIxzYoKUo/s1600-h/Layer4_Team_Diff.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5448192940349109954" name="BLOGGER_PHOTO_ID_5448192940349109954" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S5venQ1MtsI/AAAAAAAAKic/LWYIxzYoKUo/s576/Layer4_Team_Diff.png" /></a><p>This is similar to what we did earlier with Elo and subtracting curves to get a new curve.</p><h4>Factor #5: How Should We Interpret the Team Differences?</h4><p>The bottom of the factor graph contains a comparison factor based on the team performance differences we just calculated:</p><p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S5vVGmEepLI/AAAAAAAAKiM/Yt8B7bB7sBA/s1600-h/Layer5_Diff_Comparison.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5448182483510011058" name="BLOGGER_PHOTO_ID_5448182483510011058" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S5vVGmEepLI/AAAAAAAAKiM/Yt8B7bB7sBA/s400/Layer5_Diff_Comparison.png" /></a></p><p>The comparison depends on whether the pairwise difference was considered a &#8220;win&#8221; or a &#8220;draw.&#8221; Obviously, this depends on the rules of the game. It&#8217;s important to realize that TrueSkill only cares about these two types of results. TrueSkill doesn&#8217;t care if you won by a little or a lot, the only thing that matters is if you won. Additionally, in TrueSkill we imagine that there is a buffer of space called a &#8220;draw margin&#8221; where performances are equivalent. For example, in Olympic swimming, two swimmers can &#8220;draw&#8221; because their times are equivalent to 0.01 seconds even though the times differ by several thousandths of a second. In this case, the &#8220;draw margin&#8221; is relatively small around 0.005 seconds. Draws are very common in chess at the grandmaster level, so the draw margin would be much greater there.</p><p><strong>The output of the comparison factor directly relates to how much your skill&#8217;s mean and standard deviation will change</strong>.</p><p>The exact math involved in this factor <a title="Ok, so it's quite complicated" href="http://research.microsoft.com/apps/pubs/default.aspx?id=74554">is complicated</a>, but the core idea is simple:</p><ul><li>Expected outcomes cause small updates because the algorithm already had a good guess of your skill.</li><li>Unexpected outcomes (upsets) cause larger updates to make the algorithm more likely to predict the outcome in the future.</li></ul><p>The <a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf">accompanying math paper</a> goes into detail, but conceptually you can think of the performance difference as a number on the bottom (x-axis) of a graph. It represents the difference between the expected winner and the expected loser. A large negative number indicates a big upset (e.g. an underdog won) and a large positive number means the expected person won. The exact update of your skill&#8217;s mean will depend on the probability of a draw, but you can get a feel for it by looking at this graph:</p><a href="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5v-xI1fggI/AAAAAAAAKik/DBq_48qmtzE/s1600-h/VWinFunctionWithDrawProbabilities.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5448228294373638658" name="BLOGGER_PHOTO_ID_5448228294373638658" src="http://1.bp.blogspot.com/_Zfbv3mHcYrc/S5v-xI1fggI/AAAAAAAAKik/DBq_48qmtzE/s576/VWinFunctionWithDrawProbabilities.png" /></a><p>Similarly, the update to a skill&#8217;s standard deviation (i.e. uncertainty) depends on how expected the outcome was. An expected outcome shrinks the uncertainty by a small amount (e.g. we already knew it was going to happen). Likewise, an unexpected outcome shrinks the standard deviation more because it was new information that we didn&#8217;t already have:</p><p><a href="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S5v_HtoWDdI/AAAAAAAAKis/kz1N8gQmRAQ/s1600-h/WWinFunctionWithDrawProbabilities.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5448228682207727058" name="BLOGGER_PHOTO_ID_5448228682207727058" src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/S5v_HtoWDdI/AAAAAAAAKis/kz1N8gQmRAQ/s576/WWinFunctionWithDrawProbabilities.png" /></a></p><p>One problem with this comparison factor is that we use some fancy math that just makes an approximation (a good approximation, but still an approximation). We&#8217;ll refine the approximation in the next step.</p><h4>The Inner Schedule: Iterate, Iterate, Iterate!</h4><p>We can make a better approximation of the team difference factors by passing around the messages that keep getting updated in the following loop:</p><a href="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S4rfGRP2SvI/AAAAAAAAKes/M6g1XAbhOzw/s1600-h/Layer_Iterate_Inner.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5443408398432750322" name="BLOGGER_PHOTO_ID_5443408398432750322" src="http://4.bp.blogspot.com/_Zfbv3mHcYrc/S4rfGRP2SvI/AAAAAAAAKes/M6g1XAbhOzw/s576/Layer_Iterate_Inner.png" /></a><p>After a few iterations of this loop, the changes will be less dramatic and we&#8217;ll arrive at stable values for each marginal.</p><h4>Enough Already! Give Me My New Rating!</h4><p>Once the inner schedule has stabilized the values at the bottom of the factor graph, we can reverse the direction of each factor and propagate messages back up the graph. These reverse messages are represented by black arrows in the graph of each factor. <strong>Each player&#8217;s new skill rating will be the value of player&#8217;s skill marginal variable once messages have reached the top of the factor graph.</strong></p><p>By default, we give everyone a &#8220;full&#8221; skill update which is the result of the above procedure. However, there are times when a game title might want to not make the match outcome count much because of less optimal playing conditions (e.g. there was a lot of network lag during the game). Games can do this with a &#8220;partial update&#8221; that is just a way to apply only a fraction of the full update. Game titles specify this via the X_PROPERTY_PLAYER_SKILL_UPDATE_WEIGHTING_FACTOR variable. I implemented this feature in the <a href="http://github.com/moserware/Skills/blob/master/Skills/PartialPlay.cs">accompanying source code</a> and describe it in the <a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf">math paper</a>.</p><h4>Results</h4><p>There are some more details left, but we&#8217;ll stop for now. The <a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf">accompanying math paper</a> and <a href="http://github.com/moserware/Skills">source code</a> fill in most of the missing pieces. One of the best ways to learn the details is to implement TrueSkill yourself. Feel free to create a port of the <a href="http://github.com/moserware/Skills">accompanying project</a> in your favorite language and share it with the world. Writing your own implementation will help solidify all the concepts presented here.</p><p>The most rewarding part of implementing the TrueSkill algorithm is to see it work well in practice. My coworkers have commented on how it&#8217;s almost &#8220;eerily&#8221; accurate at computing the right skill for everyone relatively quickly. After several months of playing foosball, the top of the leaderboard (sorted by TrueSkill: the mean minus 3 standard deviations) was very stable. Recently, a very good player started playing and is now the #2 player. Here&#8217;s a graph of the most recent changes in TrueSkill for the top 5 (of around 40) foosball players:</p><a href="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S51C7AczIRI/AAAAAAAAKi0/8NcEXy98hrw/s1600-h/MostRecentFoosballTrueSkill.png"><img style="border:0;" id="BLOGGER_PHOTO_ID_5448584705688674578" name="BLOGGER_PHOTO_ID_5448584705688674578" src="http://3.bp.blogspot.com/_Zfbv3mHcYrc/S51C7AczIRI/AAAAAAAAKi0/8NcEXy98hrw/s720/MostRecentFoosballTrueSkill.png" /></a><p>(Note: Look how quickly the system detected how good this new #2 player is even though his win ratio is right at 50%)</p><p>Another interesting aspect of implementing TrueSkill is that it has raised an awareness of ratings among players. People that otherwise wouldn&#8217;t have played together now occasionally play each other because they know they&#8217;re similarly matched and will have a good game. One advantage of TrueSkill is that it&#8217;s not that big of a deal to lose to a much better player, so it&#8217;s still ok to have unbalanced games. In addition, having ratings has been a good way to judge if you&#8217;re improving in ability with a new shot technique in foosball or learning more chess theory.</p><h4>Fun Things from Here</h4><p>The obvious direction to go from here is to add more games to the system and see if TrueSkill handles them equally well. Given that TrueSkill is the default ranking system on Xbox live, this will probably work out well. Another direction is to see if there&#8217;s a big difference in TrueSkill based on position in a team (e.g. midfield vs. goalie in foosball). Given TrueSkill&#8217;s sound statistics based on ranking and matchmaking, you might even have some success in using it to decide between to several options. You could have each option be a &#8220;player&#8221; and decide each &#8220;match&#8221; based on your personal whims of the day. If nothing else, this would be an interesting way to pick your next vacation spot or even your child&#8217;s name.</p><p>If you broaden the scope of your search to using the ideas that we&#8217;ve learned along the way, there&#8217;s a lot more applications. Microsoft&#8217;s <a href="http://videolectures.net/nipsworkshops09_graepel_pmlca/">AdPredictor</a> (i.e. the part that delivers relevant ads on <a href="http://www.bing.com/">Bing</a>) was created by the TrueSkill team and uses similar math, but is a different application.</p><p>As for me, it was rewarding to work with an algorithm that has fun social applications as well as picking up machine learning tidbits along the way. It&#8217;s too bad all of that didn&#8217;t help me hit the top of any of the leaderboards.</p><p>Oh well, it&#8217;s been a fun journey. I&#8217;d love to hear if you dived into the algorithm after reading this and would especially appreciate any updates to <a href="http://github.com/moserware/Skills">my code</a> or other language forks.</p><p>Links:</p><ul><li><a href="http://moserware.blob.core.windows.net/blog/Skill/The%20Math%20Behind%20TrueSkill.pdf">The Math Behind TrueSkill</a> - A math-filled paper that fills in some of the details left out of this post.</li><li><a href="http://github.com/moserware/Skills">Moserware.Skills</a> Project on GitHub - My full implementation of Elo and TrueSkill in C#. Please feel free to create your own language forks.</li><li>Microsoft's online <a href="http://research.microsoft.com/en-us/projects/trueskill/calculators.aspx">TrueSkill Calculators</a> - Allows you to play with the algorithm without having to download anything. My implementation matches the results of these calculators.</li></ul><p><em>Special thanks to <a href="http://research.microsoft.com/en-us/people/rherb/">Ralf Herbrich</a>, <a href="http://research.microsoft.com/en-us/um/people/minka/">Tom Minka</a>, and <a href="http://research.microsoft.com/en-us/people/thoreg/">Thore Graepel</a> on the <a href="http://research.microsoft.com/en-us/projects/trueskill/">TrueSkill</a> team at <a href="http://research.microsoft.com/en-us/labs/cambridge/default.aspx">Microsoft Research Cambridge</a> for their help in answering many of my detailed questions about their fascinating algorithm.</em></p>
<div style='clear: both;'></div>
</div>
<div class='post-footer'>
<div class='post-footer-line post-footer-line-1'>
<span class='post-author vcard'>
Posted by
<span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'>
<meta content='http://www.blogger.com/profile/16074905903060665396' itemprop='url'/>
<a class='g-profile' href='http://www.blogger.com/profile/16074905903060665396' rel='author' title='author profile'>
<span itemprop='name'>Jeff Moser</span>
</a>
</span>
</span>
<span class='post-timestamp'>
at
<meta content='http://www.moserware.com/2010/03/computing-your-skill.html' itemprop='url'/>
<a class='timestamp-link' href='http://www.moserware.com/2010/03/computing-your-skill.html' rel='bookmark' title='permanent link'><abbr class='published' itemprop='datePublished' title='2010-03-18T08:33:00-04:00'>8:33 AM</abbr></a>
</span>
<span class='reaction-buttons'>
</span>
<span class='star-ratings'>
</span>
<span class='post-comment-link'>
<a class='comment-link' href='http://www.blogger.com/comment.g?blogID=6800934446457898793&amp;postID=793968235021421709' onclick=''>
129 comments:
    </a>
</span>
<span class='post-backlinks post-comment-link'>
<a class='comment-link' href='http://www.moserware.com/2010/03/computing-your-skill.html#links'>Links to this post</a>
</span>
<span class='post-icons'>
<span class='item-control blog-admin pid-1605934091'>
<a href='http://www.blogger.com/post-edit.g?blogID=6800934446457898793&postID=793968235021421709&from=pencil' title='Edit Post'>
<img alt='' class='icon-action' height='18' src='http://img2.blogblog.com/img/icon18_edit_allbkg.gif' width='18'/>
</a>
</span>
</span>
<div class='post-share-buttons goog-inline-block'>
</div>
</div>
<div class='post-footer-line post-footer-line-2'>
<span class='post-labels'>
Labels:
<a href='http://www.moserware.com/search/label/trueskill' rel='tag'>trueskill</a>
</span>
</div>
<div class='post-footer-line post-footer-line-3'>
<span class='post-location'>
</span>
</div>
</div>
</div>
</div>

        </div></div>
      
<!-- google_ad_section_end -->
</div>
<div class='blog-pager' id='blog-pager'>
<span id='blog-pager-older-link'>
<a class='blog-pager-older-link' href='http://www.moserware.com/search?updated-max=2010-03-18T08:33:00-04:00&amp;max-results=5' id='Blog1_blog-pager-older-link' title='Older Posts'>Older Posts</a>
</span>
<a class='home-link' href='http://www.moserware.com/'>Home</a>
</div>
<div class='clear'></div>
<div class='blog-feeds'>
<div class='feed-links'>
Subscribe to:
<a class='feed-link' href='http://www.moserware.com/feeds/posts/default' target='_blank' type='application/atom+xml'>Posts (Atom)</a>
</div>
</div>
<script type="text/javascript">window.___gcfg = {'lang': 'en_US'};</script>
</div></div>
</div>
<div id='sidebar-wrapper'>
<div class='sidebar section' id='sidebar'><div class='widget Profile' id='Profile1'>
<h2>About Me</h2>
<div class='widget-content'>
<a href='http://www.blogger.com/profile/16074905903060665396'><img alt='My Photo' class='profile-img' height='80' src='http://1.bp.blogspot.com/_Zfbv3mHcYrc/SLDM--5fn8I/AAAAAAAAA1w/EZtLwWvYhdI/S220/facebook+beard2.jpg' width='60'/></a>
<dl class='profile-datablock'>
<dt class='profile-data'>
<a class='profile-name-link g-profile' href='http://www.blogger.com/profile/16074905903060665396' rel='author' style='background-image: url(//www.blogger.com/img/logo-16.png);'>
Jeff Moser
</a>
</dt>
<dd class='profile-data'>Fishers, Indiana, United States</dd>
</dl>
<a class='profile-link' href='http://www.blogger.com/profile/16074905903060665396' rel='author'>View my complete profile</a>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=6800934446457898793&widgetType=Profile&widgetId=Profile1&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("Profile1"));' target='configProfile1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div><div class='widget BlogArchive' id='BlogArchive1'>
<h2>Blog Archive</h2>
<div class='widget-content'>
<div id='ArchiveList'>
<div id='BlogArchive1_ArchiveList'>
<ul class='hierarchy'>
<li class='archivedate expanded'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy toggle-open'>&#9660;&#160;</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/search?updated-min=2011-01-01T00:00:00-05:00&amp;updated-max=2012-01-01T00:00:00-05:00&amp;max-results=1'>2011</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='hierarchy'>
<li class='archivedate expanded'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy toggle-open'>&#9660;&#160;</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2011_11_01_archive.html'>November</a>
<span class='post-count' dir='ltr'>(1)</span>
<ul class='posts'>
<li><a href='http://www.moserware.com/2011/11/life-death-and-splitting-secrets.html'>Life, Death, and Splitting Secrets</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/search?updated-min=2010-01-01T00:00:00-05:00&amp;updated-max=2011-01-01T00:00:00-05:00&amp;max-results=2'>2010</a>
<span class='post-count' dir='ltr'>(2)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2010_10_01_archive.html'>October</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2010_03_01_archive.html'>March</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/search?updated-min=2009-01-01T00:00:00-05:00&amp;updated-max=2010-01-01T00:00:00-05:00&amp;max-results=7'>2009</a>
<span class='post-count' dir='ltr'>(7)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2009_09_01_archive.html'>September</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2009_07_01_archive.html'>July</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2009_06_01_archive.html'>June</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2009_04_01_archive.html'>April</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2009_03_01_archive.html'>March</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2009_02_01_archive.html'>February</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2009_01_01_archive.html'>January</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/search?updated-min=2008-01-01T00:00:00-05:00&amp;updated-max=2009-01-01T00:00:00-05:00&amp;max-results=20'>2008</a>
<span class='post-count' dir='ltr'>(20)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_12_01_archive.html'>December</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_10_01_archive.html'>October</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_09_01_archive.html'>September</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_08_01_archive.html'>August</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_07_01_archive.html'>July</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_06_01_archive.html'>June</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_05_01_archive.html'>May</a>
<span class='post-count' dir='ltr'>(1)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_04_01_archive.html'>April</a>
<span class='post-count' dir='ltr'>(4)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_03_01_archive.html'>March</a>
<span class='post-count' dir='ltr'>(2)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_02_01_archive.html'>February</a>
<span class='post-count' dir='ltr'>(3)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2008_01_01_archive.html'>January</a>
<span class='post-count' dir='ltr'>(4)</span>
</li>
</ul>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/search?updated-min=2007-01-01T00:00:00-05:00&amp;updated-max=2008-01-01T00:00:00-05:00&amp;max-results=15'>2007</a>
<span class='post-count' dir='ltr'>(15)</span>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2007_12_01_archive.html'>December</a>
<span class='post-count' dir='ltr'>(8)</span>
</li>
</ul>
<ul class='hierarchy'>
<li class='archivedate collapsed'>
<a class='toggle' href='javascript:void(0)'>
<span class='zippy'>

          &#9658;&#160;
        
</span>
</a>
<a class='post-count-link' href='http://www.moserware.com/2007_11_01_archive.html'>November</a>
<span class='post-count' dir='ltr'>(7)</span>
</li>
</ul>
</li>
</ul>
</div>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=6800934446457898793&widgetType=BlogArchive&widgetId=BlogArchive1&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("BlogArchive1"));' target='configBlogArchive1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div>
</div><div class='widget HTML' id='HTML1'>
<div class='widget-content'>
<p><a href="http://feeds.feedburner.com/Moserware" rel="alternate" title="Subscribe to my feed" type="application/rss+xml"><img alt="" style="border:0" src="http://www.feedburner.com/fb/images/pub/feed-icon32x32.png"/></a><a href="http://feeds.feedburner.com/Moserware" rel="alternate" title="Subscribe to my feed" type="application/rss+xml">Subscribe</a><br/><a href="http://www.feedburner.com/fb/a/emailverifySubmit?feedId=1338784&amp;loc=en_US">Subscribe by Email</a><br/><a href="http://feeds.feedburner.com/Moserware"><img width="88" style="border:0" alt="" src="http://feeds.feedburner.com/~fc/Moserware?bg=99CCFF&amp;fg=444444&amp;anim=0" height="26"/></a></p>
<p>
<a href="http://del.icio.us/moserware"><img src="http://dl.getdropbox.com/u/1083108/Moserware/delicious.png.jpg"/></a>
</p>
<a href="http://www.goodreads.com/review/list/310746&amp;shelf=read" title="Books I've read"><img border="0" alt="Books I've read" src="http://www.goodreads.com/images/badge/badge1.jpg"/></a>
<br/>
<h2>Contact Me</h2>
<p>
<img src="http://2.bp.blogspot.com/_Zfbv3mHcYrc/R6OysZLX2MI/AAAAAAAAANs/agDDvz2qYI8/s400/nothingtoseehere.png"/></p>
<p>
<a href="http://twitter.com/jeffmoser" title="Jeff Moser on Twitter"><img src="http://dl.getdropbox.com/u/1083108/Moserware/moserwaretwitterbadge.png.jpg"/></a>
</p>
</div>
<div class='clear'></div>
<span class='widget-item-control'>
<span class='item-control blog-admin'>
<a class='quickedit' href='//www.blogger.com/rearrange?blogID=6800934446457898793&widgetType=HTML&widgetId=HTML1&action=editWidget&sectionId=sidebar' onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML1"));' target='configHTML1' title='Edit'>
<img alt='' height='18' src='http://img1.blogblog.com/img/icon18_wrench_allbkg.png' width='18'/>
</a>
</span>
</span>
<div class='clear'></div>
</div></div>
</div>
<!-- spacer for skins that want sidebar and main to be the same height-->
<div class='clear'>&#160;</div>
</div>
<!-- end content-wrapper -->
<div id='footer-wrapper'>
<div class='footer section' id='footer'></div>
</div>
</div></div>
<!-- end outer-wrapper -->
<script type="text/javascript">
if (window.jstiming) window.jstiming.load.tick('widgetJsBefore');
</script><script type="text/javascript" src="https://www.blogger.com/static/v1/widgets/3401484092-widgets.js"></script>
<script type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
<script type='text/javascript'>
if (typeof(BLOG_attachCsiOnload) != 'undefined' && BLOG_attachCsiOnload != null) { window['blogger_templates_experiment_id'] = "templatesV1";window['blogger_blog_id'] = '6800934446457898793';BLOG_attachCsiOnload(''); }_WidgetManager._Init('//www.blogger.com/rearrange?blogID\x3d6800934446457898793','//www.moserware.com/','6800934446457898793');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'blogId': '6800934446457898793', 'bloggerUrl': 'http://www.blogger.com', 'title': 'Moserware', 'pageType': 'index', 'url': 'http://www.moserware.com/', 'canonicalUrl': 'http://www.moserware.com/', 'canonicalHomepageUrl': 'http://www.moserware.com/', 'homepageUrl': 'http://www.moserware.com/', 'blogspotFaviconUrl': 'http://www.moserware.com/favicon.ico', 'enabledCommentProfileImages': true, 'adultContent': false, 'disableAdSenseWidget': false, 'analyticsAccountNumber': '', 'searchLabel': '', 'searchQuery': '', 'pageName': '', 'pageTitle': 'Moserware', 'encoding': 'UTF-8', 'locale': 'en', 'localeUnderscoreDelimited': 'en', 'isPrivate': false, 'isMobile': false, 'isMobileRequest': false, 'mobileClass': '', 'isPrivateBlog': false, 'languageDirection': 'ltr', 'feedLinks': '\74link rel\75\42alternate\42 type\75\42application/atom+xml\42 title\75\42Moserware - Atom\42 href\75\42http://www.moserware.com/feeds/posts/default\42 /\76\n\74link rel\75\42alternate\42 type\75\42application/rss+xml\42 title\75\42Moserware - RSS\42 href\75\42http://www.moserware.com/feeds/posts/default?alt\75rss\42 /\76\n\74link rel\75\42service.post\42 type\75\42application/atom+xml\42 title\75\42Moserware - Atom\42 href\75\42http://www.blogger.com/feeds/6800934446457898793/posts/default\42 /\76\n', 'meTag': '\74link rel\75\42me\42 href\75\42http://www.blogger.com/profile/16074905903060665396\42 /\76\n', 'openIdOpTag': '\74link rel\75\42openid.server\42 href\75\42http://www.blogger.com/openid-server.g\42 /\76\n\74link rel\75\42openid.delegate\42 href\75\42http://www.moserware.com/\42 /\76\n', 'latencyHeadScript': '\74script type\75\42text/javascript\42\76(function() { var b\75window,f\75\42chrome\42,g\75\42tick\42,k\75\42jstiming\42;(function(){function d(a){this.t\75{};this.tick\75function(a,d,c){var e\75void 0!\75c?c:(new Date).getTime();this.t[a]\75[e,d];if(void 0\75\75c)try{b.console.timeStamp(\42CSI/\42+a)}catch(h){}};this[g](\42start\42,null,a)}var a;b.performance\46\46(a\75b.performance.timing);var n\75a?new d(a.responseStart):new d;b.jstiming\75{Timer:d,load:n};if(a){var c\75a.navigationStart,h\75a.responseStart;0\74c\46\46h\76\75c\46\46(b[k].srt\75h-c)}if(a){var e\75b[k].load;0\74c\46\46h\76\75c\46\46(e[g](\42_wtsrt\42,void 0,c),e[g](\42wtsrt_\42,\42_wtsrt\42,h),e[g](\42tbsd_\42,\42wtsrt_\42))}try{a\75null,\nb[f]\46\46b[f].csi\46\46(a\75Math.floor(b[f].csi().pageT),e\46\0460\74c\46\46(e[g](\42_tbnd\42,void 0,b[f].csi().startE),e[g](\42tbnd_\42,\42_tbnd\42,c))),null\75\75a\46\46b.gtbExternal\46\46(a\75b.gtbExternal.pageT()),null\75\75a\46\46b.external\46\46(a\75b.external.pageT,e\46\0460\74c\46\46(e[g](\42_tbnd\42,void 0,b.external.startE),e[g](\42tbnd_\42,\42_tbnd\42,c))),a\46\46(b[k].pt\75a)}catch(p){}})();b.tickAboveFold\75function(d){var a\0750;if(d.offsetParent){do a+\75d.offsetTop;while(d\75d.offsetParent)}d\75a;750\76\75d\46\46b[k].load[g](\42aft\42)};var l\75!1;function m(){l||(l\75!0,b[k].load[g](\42firstScrollTime\42))}b.addEventListener?b.addEventListener(\42scroll\42,m,!1):b.attachEvent(\42onscroll\42,m);\n })();\74/script\076', 'mobileHeadScript': '', 'view': '', 'dynamicViewsCommentsSrc': '//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js', 'dynamicViewsScriptSrc': '//www.blogblog.com/dynamicviews/76f25a6f2e06af76', 'plusOneApiSrc': 'https://apis.google.com/js/plusone.js', 'sf': 'n'}}, {'name': 'skin', 'data': {'vars': {'sidebartextcolor': '#666666', 'linkcolor': '#5588aa', 'visitedlinkcolor': '#999999', 'textcolor': '#333333', 'headerfont': 'normal normal 78% \47Trebuchet MS\47,Trebuchet,Arial,Verdana,Sans-serif', 'pagetitlefont': 'normal normal 200% Georgia, Serif', 'bgcolor': '#ffffff', 'descriptioncolor': '#999999', 'titlecolor': '#cc6600', 'bordercolor': '#cccccc', 'postfooterfont': 'normal normal 78% \47Trebuchet MS\47, Trebuchet, Arial, Verdana, Sans-serif', 'pagetitlecolor': '#666666', 'bodyfont': 'normal normal 100% Georgia, Serif', 'descriptionfont': 'normal normal 78% \47Trebuchet MS\47, Trebuchet, Arial, Verdana, Sans-serif', 'sidebarcolor': '#999999'}, 'override': ''}}, {'name': 'view', 'data': {'classic': {'name': 'classic', 'url': '?view\75classic'}, 'flipcard': {'name': 'flipcard', 'url': '?view\75flipcard'}, 'magazine': {'name': 'magazine', 'url': '?view\75magazine'}, 'mosaic': {'name': 'mosaic', 'url': '?view\75mosaic'}, 'sidebar': {'name': 'sidebar', 'url': '?view\75sidebar'}, 'snapshot': {'name': 'snapshot', 'url': '?view\75snapshot'}, 'timeslide': {'name': 'timeslide', 'url': '?view\75timeslide'}}}]);
_WidgetManager._RegisterWidget('_ProfileView', new _WidgetInfo('Profile1', 'sidebar', null, document.getElementById('Profile1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogArchiveView', new _WidgetInfo('BlogArchive1', 'sidebar', null, document.getElementById('BlogArchive1'), {'languageDirection': 'ltr'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML1', 'sidebar', null, document.getElementById('HTML1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'header', null, document.getElementById('Header1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_NavbarView', new _WidgetInfo('Navbar1', 'navbar', null, document.getElementById('Navbar1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false, 'lightboxEnabled': true, 'lightboxModuleUrl': 'https://www.blogger.com/static/v1/jsbin/1938910137-lbx.js', 'lightboxCssUrl': 'https://www.blogger.com/static/v1/v-css/2392111094-lightbox_bundle.css'}, 'displayModeFull'));
</script>
</body>
</html>