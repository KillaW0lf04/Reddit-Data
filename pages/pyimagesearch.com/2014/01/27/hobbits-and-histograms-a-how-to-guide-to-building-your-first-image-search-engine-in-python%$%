<!DOCTYPE html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
<head><link rel="stylesheet" type="text/css" href="http://www.pyimagesearch.com/wp-content/cache/minify/000000/jY7RDsIwCEV_aLXukxCZbWyhKUy3v5dFzXxafCDA5VxgjNhhFQ66ssESUr6l4mHUI6rGmvlDnLwcxgPcElXSiAVUM37zoWUSNr8hDCgOVsgFU64tTNLDs4XWJfoWcmh7BhPh_SLLH6irdThHBH6ARrW10N5uQPGfZtu1aWa0LPyeapJuKFfSH9esJvUF.css" media="all" />

<meta charset="UTF-8" />

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<link rel="pingback" href="http://www.pyimagesearch.com/xmlrpc.php" />

<!-- Always force latest IE rendering engine (even in intranet) & Chrome Frame -->
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

<!--  Mobile viewport scale -->
<meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport"/>

<!-- This site is optimized with the Yoast WordPress SEO plugin v1.5.3.3 - https://yoast.com/wordpress/plugins/seo/ -->
<title>Hobbits and Histograms - A How-To Guide to Building Your First Image Search Engine in Python - PyImageSearch</title>
<meta name="description" content="A how-to guide on building a Content Based Image Retrieval (CBIR) image search engine using Python, NumPy, OpenCV, and color histograms."/>
<link rel="canonical" href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" />
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Hobbits and Histograms - A How-To Guide to Building Your First Image Search Engine in Python - PyImageSearch" />
<meta property="og:description" content="A how-to guide on building a Content Based Image Retrieval (CBIR) image search engine using Python, NumPy, OpenCV, and color histograms." />
<meta property="og:url" content="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" />
<meta property="og:site_name" content="PyImageSearch" />
<meta property="article:tag" content="3d histogram" />
<meta property="article:tag" content="code" />
<meta property="article:tag" content="how-to guide" />
<meta property="article:tag" content="lord of the rings" />
<meta property="article:tag" content="python" />
<meta property="article:tag" content="rgb" />
<meta property="article:tag" content="the hobbit" />
<meta property="article:section" content="Examples of Image Search Engines" />
<meta property="article:section" content="Image Descriptors" />
<meta property="article:section" content="Tutorials" />
<meta property="article:published_time" content="2014-01-27T10:00:26+00:00" />
<meta property="article:modified_time" content="2014-05-30T17:15:37+00:00" />
<meta property="og:updated_time" content="2014-05-30T17:15:37+00:00" />
<meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/01/dataset.jpg" />
<meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/01/Mordor-002.jpg" />
<meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/01/Goblin-004.jpg" />
<meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/01/result-montage.jpg" />
<meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/01/external-results-montage.jpg" />
<meta property="og:image" content="http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png" />
<!-- / Yoast WordPress SEO plugin. -->

<link rel="alternate" type="application/rss+xml" title="PyImageSearch &raquo; Feed" href="http://feeds.feedburner.com/Pyimagesearch" />
<link rel="alternate" type="application/rss+xml" title="PyImageSearch &raquo; Comments Feed" href="http://www.pyimagesearch.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="PyImageSearch &raquo; Hobbits and Histograms &#8211; A How-To Guide to Building Your First Image Search Engine in Python Comments Feed" href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/feed/" />







<!--[if lt IE 9]>
<link href="http://www.pyimagesearch.com/wp-content/themes/canvas/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 960px; max-width: 960px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 960px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]-->
<script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/000000/M9bPKixNLarUMYYydHMz04sSS1L1cjPzAA.js"></script>
<script type='text/javascript'>
/* <![CDATA[ */
var CrayonSyntaxSettings = {"version":"2.6.5","is_admin":"0","ajaxurl":"http:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php","prefix":"crayon-","setting":"crayon-setting","selected":"crayon-setting-selected","changed":"crayon-setting-changed","special":"crayon-setting-special","orig_value":"data-orig-value","debug":""};
var CrayonSyntaxStrings = {"copy":"Press %s to Copy, %s to Paste","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/000000/bcrRCoAgDIXhF8pWjzR06EJnbBbZ01fQpRcHfjjfCl6xV3HWpeHlEseU3zVS2AwKyw_mN6cFPMqJBiw-H4HsMy2xBrejtj4GpQZS4VvHdyQhxfwA.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.pyimagesearch.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.pyimagesearch.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.9.1" />
<link rel='shortlink' href='http://www.pyimagesearch.com/?p=152' />

<!-- Theme version -->
<meta name="generator" content="Canvas 5.5.7" />
<meta name="generator" content="WooFramework 5.5.5" />

<!-- Custom CSS Styling -->
<style type="text/css">
#logo .site-title, #logo .site-description { display:none; }
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-color:#ffffff;background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:15px;padding-bottom:20px;border:0px solid ;}
#logo .site-title a {font:bold 32px/1em "Helvetica Neue", Helvetica, sans-serif;color:#222222;}
#logo .site-description {font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#999999;}
#header-container{background-color:#ffffff;}#nav-container{background:#169fe6;}#nav-container{border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:none;border-right:none;}#nav-container #navigation ul#main-nav > li:first-child{border-left: 0px solid #dbdbdb;}#footer-widgets-container{background-color:#f0f0f0}#footer-widgets{border:none;}#footer-container{background-color:#169fe6}#footer-container{border-top:0px solid #dbdbdb;}#footer {border-width: 0 !important;}
body, p { font:300 14px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 2.2em/1.1em Arial, sans-serif;color:#3E3E3E;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#3E3E3E}
.post-meta { font:300 1em/1.5em Arial, sans-serif;color:#3E3E3E; }
.entry, .entry p{ font:300 15px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.post-more {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:;border-top:0px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:300 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.widget {font:300 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 12px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation .cart-contents, #navigation ul.rss, #navigation ul.cart .cart_list a{ font:300 13px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; } #navigation ul.rss li a:before { color:#ffffff;}
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover a, #navigation ul.nav li ul li a, #navigation ul.cart > li:hover > a, #navigation ul.cart > li > ul > div, #navigation ul.cart > li > ul > div p, #navigation ul.cart > li > ul span, #navigation ul.cart .cart_list a, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a { color:#169fe6!important; }
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover, #navigation ul.nav li ul, #navigation ul.cart > li:hover, #navigation ul.cart > li > ul > div, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a{background-color:#ffffff!important}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li > ul  { left: 0; }
#navigation  { box-shadow: none; -moz-box-shadow: none; -webkit-box-shadow: none; }#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {background:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:300 12px/1.6em "Helvetica Neue", Helvetica, sans-serif;color:#ddd; }
}
#footer, #footer p { font:300 13px/1.4em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; }
#footer {background-color:#169fe6;border-top:0px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title, .magazine .block .post .title a { font:bold 18px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em Arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
</style>
<!-- Options Panel Custom CSS -->
<style type="text/css">
/* Subscribe & Connect button style */
#mc-embedded-subscribe{background-color: #6DC713;}

/* MailChimp for WP Plugin styles */
.mc4wp-form input[type=submit]{background-color: #6DC713;}
</style>


<!-- Woo Shortcodes CSS -->


<!-- Custom Stylesheet -->

</head>
<body class="single single-post postid-152 single-format-standard unknown alt-style-default two-col-left width-960 two-col-left-960 full-width full-header full-footer">
<div id="wrapper">

	<div id="inner-wrapper">

	    <!--#header-container-->
    <div id="header-container">
<h3 class="nav-toggle icon"><a href="#navigation">Navigation</a></h3>

	<header id="header" class="col-full">

		<div id="logo">
<a href="http://www.pyimagesearch.com/" title="Be awesome at building image search engines in Python"><img src="http://www.pyimagesearch.com/wp-content/uploads/2013/12/logo.png" alt="PyImageSearch" /></a>
<span class="site-title"><a href="http://www.pyimagesearch.com/">PyImageSearch</a></span>
<span class="site-description">Be awesome at building image search engines in Python</span>
</div>

	</header>
	    </div><!--/#header-container-->
    <!--#nav-container-->
    <div id="nav-container">
<nav id="navigation" class="col-full" role="navigation">

	<section class="menus">

		<a href="http://www.pyimagesearch.com" class="nav-home"><span>Home</span></a>

			<ul id="main-nav" class="nav fl">
			
								<li class="page_item current_page_item"><a href="http://www.pyimagesearch.com/">Home</a></li>
				<li class="page_item page-item-299"><a href="http://www.pyimagesearch.com/practical-python-opencv/">Practical Python and OpenCV</a></li>
<li class="page_item page-item-828"><a href="https://www.pyimagesearch.com/case-studies/">Case Studies</a></li>
<li class="page_item page-item-24"><a href="http://www.pyimagesearch.com/about/">About</a></li>
<li class="page_item page-item-10"><a href="http://www.pyimagesearch.com/contact/">Contact</a></li>
					</ul><!-- /#nav -->
		<ul class="rss fr">
						<li class="sub-rss"><a href="http://feeds.feedburner.com/Pyimagesearch"></a></li>
			</ul>
	
	</section><!-- /.menus -->

	<a href="#top" class="nav-close"><span>Return to Content</span></a>

</nav>
    </div><!--/#nav-container-->
       
    <!-- #content Starts -->
	    <div id="content" class="col-full">
    
    	<div id="main-sidebar-container">    

            <!-- #main Starts -->
                        <section id="main">                       
<article class="post-152 post type-post status-publish format-standard hentry category-examples-of-image-search-engines category-image-descriptors category-tutorials tag-3d-histogram tag-code tag-how-to-guide tag-lord-of-the-rings tag-python tag-rgb tag-the-hobbit">
	<header>
	<h1 class="title">Hobbits and Histograms &#8211; A How-To Guide to Building Your First Image Search Engine in Python</h1>	</header>
<div class="post-meta"><span class="small">By</span> <span class="author vcard"><span class="fn"><a href="http://www.pyimagesearch.com/author/adrian/" title="Posts by Adrian Rosebrock" rel="author">Adrian Rosebrock</a></span></span> <span class="small">on</span> <abbr class="date time published" title="2014-01-27T10:00:26-0400">January 27, 2014</abbr>  <span class="small">in</span> <span class="categories"><a href="http://www.pyimagesearch.com/category/examples-of-image-search-engines/" title="View all items in Examples of Image Search Engines">Examples of Image Search Engines</a>, <a href="http://www.pyimagesearch.com/category/image-descriptors/" title="View all items in Image Descriptors">Image Descriptors</a>, <a href="http://www.pyimagesearch.com/category/tutorials/" title="View all items in Tutorials">Tutorials</a></span>  </div>
	<section class="entry">
<div id="fsb-social-bar" class="fsb-social-bar fsb-no-float" data-post-id="152" data-socialite="true"><style type="text/css">            #fsb-social-bar { width: 100%; border-bottom: 1px solid #dbdbdb; border-top: 1px solid #dbdbdb; padding: 10px 0; margin: 0px 0 20px 0; float: left; background: #fff; position: relative; clear: both; }            #fsb-social-bar a { border: 0px !important }            #fsb-social-bar.fsb-fixed { position: fixed; top: -2px; z-index: 99999; }            #fsb-social-bar .fsb-title { display: block; float: left; margin: 3px 20px 0 0; font-size: 16px; font-family: Arial, Helvetica, sans-serif; text-decoration: none; color: #333; }            #fsb-social-bar .fsb-share-facebook { width: 120px; float: left; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-facebook.fsb-hide-count { width: 44px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-twitter { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-twitter.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-google { float: left; width: 105px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-google.fsb-hide-count { width: 33px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-linkedin { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-linkedin.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-pinterest { float: left; width: 115px; padding: 3px 0 2px; height: 25px;}            #fsb-social-bar .fsb-share-pinterest.fsb-hide-count { width: 43px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .socialite { display: block; position: relative; background: url(http://www.pyimagesearch.com/wp-content/plugins/floating-social-bar/images/fsb-sprite.png) no-repeat scroll 0 0; }            #fsb-social-bar .socialite-loaded { background: none !important; }            #fsb-social-bar .fsb-service-title { display: none; }            #fsb-social-bar a { color: #333; text-decoration: none; font-size: 12px; font-family: Arial, Helvetica, sans-serif; }            #fsb-social-bar .fsb-twitter { width: 105px; height: 25px; background-position: -13px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-twitter .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 69px; color: #333; }            #fsb-social-bar .fsb-google { width: 75px; height: 25px; background-position: -136px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-google .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 41px; color: #333; }            #fsb-social-bar .fsb-google .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-share-google .socialite-loaded .socialite-button{padding: 2px 0 0}            #fsb-social-bar .fsb-facebook { width: 89px; height: 25px; background-position: -231px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-facebook .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 52px; color: #333; }            #fsb-social-bar .fsb-facebook .socialite-button { margin: 0 !important;}            #fsb-social-bar .fsb-share-facebook .socialite-loaded .socialite-button {padding: 2px 0 0}            #fsb-social-bar .fsb-linkedin { width: 105px; height: 25px; background-position: -347px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-linkedin .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 70px; color: #333; }            #fsb-social-bar .fsb-linkedin .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-pinterest { width: 88px; height: 25px; background-position: -484px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-pinterest .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 50px; color: #333; }            #fsb-social-bar .fsb-pinterest .socialite-button { margin: 0 !important; }            .fsb-clear { clear: both; }            .fsb-clear:after { clear:both; content:; display:block; height:0; line-height:0; overflow:auto; visibility:hidden; zoom:1; }            @media (max-width: 768px) { #fsb-social-bar.fsb-fixed { position: relative !important; top: auto !important; } }        </style><div class="fsb-share-twitter"><a href="https://twitter.com/share?original_referer=http%3A%2F%2Fwww.pyimagesearch.com%2F&source=tweetbutton&text=Hobbits+and+Histograms+%26%238211%3B+A+How-To+Guide+to+Building+Your+First+Image+Search+Engine+in+Python&url=http%3A%2F%2Fwww.pyimagesearch.com%2F2014%2F01%2F27%2Fhobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python%2F&via=pyimagesearch" class="socialite twitter fsb-twitter" data-fsb-service="twitter" rel="nofollow" target="_blank" title="117 retweets so far"><span class="fsb-service-title">Twitter</span><span class="fsb-count">117</span></a></div><div class="fsb-share-facebook"><a href="http://www.facebook.com/sharer.php?u=http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" class="socialite facebook fsb-facebook" data-fsb-service="facebook" data-href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" data-send="false" data-layout="button_count" data-width="60" data-show-faces="false" rel="nofollow" target="_blank"><span class="fsb-service-title">Facebook</span><span class="fsb-count">64</span></a></div><div class="fsb-share-google fsb-hide-count"><a href="https://plus.google.com/share?url=http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" class="socialite googleplus fsb-google" data-fsb-service="google" data-size="medium" data-href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" rel="nofollow" target="_blank"><span class="fsb-service-title">Google+</span><span class="fsb-count">0</span></a></div><div class="fsb-share-linkedin"><a href="https://www.linkedin.com/cws/share?url=http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" class="socialite linkedin fsb-linkedin" data-fsb-service="linkedin" data-size="medium" data-href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" rel="nofollow" target="_blank"><span class="fsb-service-title">LinkedIn</span><span class="fsb-count">7</span></a></div></div><div class="fsb-clear"></div><blockquote><p>One Ring to rule them all, One ring to find them; One ring to bring them all<br />
and in the darkness bind them.</p></blockquote>
<p>The image search engine we are about to build is going to be so awesome, it could have destroyed The One Ring itself, without the help of the fires of Mt. Doom.</p>
<p>Okay, I&#8217;ve obviously been watching a lot of <em>The Hobbit</em> and the <em>Lord of the Rings</em> over this past week.</p>
<p>And I thought to myself, you know what would be awesome?</p>
<p>Building a simple image search engine using screenshots from the movies. And that&#8217;s exactly what I did.</p>
<p>Here&#8217;s a quick overview:</p>
<ul>
<li><strong>What we&#8217;re going to do:</strong> Build an image search engine, from start to finish, using <em>The Hobbit</em> and <em>Lord of the Rings</em> screenshots.</li>
<li><strong>What you&#8217;ll learn:</strong> The 4 steps required to build an image search engine, with code examples included. From these examples, you&#8217;ll be able to build image search engines of your own.</li>
<li><strong>What you need:</strong> Python, NumPy, and <a href="http://opencv.org/quickstart.html" target="_blank">OpenCV</a>. A little knowledge of basic image concepts, such as pixels and histograms, would help, but <em>is absolutely not required</em>. This blog post is meant to be a How-To, hands on guide to building an image search engine.</li>
</ul>
<div style="padding-top: 10px; padding-bottom: 15px; padding-right: 10px; height: 70px; background: url('http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png'); background-size: 70px 70px; background-repeat: no-repeat;">
<p style="margin-top: 1px; margin-left: 80px; font-weight: bold;">Looking for the source code to this post?<br />
<a href="javascript:jQuery('html, body').animate({scrollTop: jQuery('#post_downloads').offset().top}, 1000);">Jump right to the downloads section.</a></p>
</div>
<p>I&#8217;ve never seen a &#8220;How-To&#8221; guide on building a simple image search engine before. But that&#8217;s exactly what this post is. We&#8217;re going to use (arguably) one of the most basic image descriptors to quantify and describe these screenshots &#8212; the color histogram.</p>
<p>I discussed the color histogram in my previous post, <a href="http://www.pyimagesearch.com/2014/01/22/clever-girl-a-guide-to-utilizing-color-histograms-for-computer-vision-and-image-search-engines/">a guide to utilizing color histograms for computer vision and image search engines.</a> If you haven&#8217;t read it, no worries, but I would suggest that you go back and read it after checking out this blog post to further understand color histograms.</p>
<p>But before I dive into the details of building an image search engine, let&#8217;s check out our dataset of <em>The Hobbit</em> and <em>Lord of the Rings</em> screenshots:</p>
<div id="attachment_154" style="width: 622px" class="wp-caption aligncenter"><a href="http://www.pyimagesearch.com/wp-content/uploads/2014/01/dataset.jpg"><img class=" wp-image-154 " alt="Figure 1: Our dataset of The Hobbit and Lord of the Rings screenshots. We have 25 total images of 5 different classes." src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/dataset.jpg" width="612" height="261" /></a><p class="wp-caption-text"><strong>Figure 1:</strong> Our dataset of <em>The Hobbit</em> and <em>Lord of the Rings</em> screenshots. We have 25 total images of 5 different categories including Dol Guldur, the Goblin Town, Mordor/The Black Gate, Rivendell, and The Shire.</p></div>
<p>So as you can see, we have a total of 25 different images in our dataset, five per category. Our categories include:</p>
<ul>
<li><strong>Dol Guldur:</strong> &#8220;The dungeons of the Necromancer&#8221;, Sauron&#8217;s stronghold in Mirkwood.</li>
<li><strong>Goblin Town:</strong> An Orc town in the Misty Mountains, home of The Goblin King.</li>
<li><strong>Mordor/The Black Gate:</strong> Sauron&#8217;s fortress, surrounded by mountain ranges and volcanic plains.</li>
<li><strong>Rivendell:</strong> The Elven outpost in Middle-earth.</li>
<li><strong>The Shire:</strong> Homeland of the Hobbits.</li>
</ul>
<p>The images from Dol Guldur, the Goblin Town, and Rivendell are from <em>The Hobbit: An Unexpected Journey</em>. Our Shire images are from <i>The Lord of the Rings: The Fellowship of the Ring</i>. And finally, our Mordor/Black Gate screenshots from <em>The Lord of the Rings: The Return of the King</em>.</p>
<h1>The Goal:</h1>
<p>The first thing we are going to do is <i>index</i> the 25 images in our dataset. Indexing is the process of quantifying our dataset by using an <em>image descriptor</em> to extract <em>features</em> from each image and storing the resulting features for later use, such as performing a search.</p>
<p>An <i>image descriptor</i> defines how we are quantifying an image, hence extracting features from an image is called <em>describing an image</em>. The output of an image descriptor is a <em>feature vector</em>, an abstraction of the image itself. Simply put, it is a list of numbers used to represent an image.</p>
<p>Two feature vectors can be compared using a <em>distance metric</em>. A distance metric is used to determine how &#8220;similar&#8221; two images are by examining the distance between the two feature vectors. In the case of an image search engine, we give our script a <i>query image</i> and ask it to rank the images in our index based on how relevant they are to our query.</p>
<p>Think about it this way. When you go to Google and type &#8220;Lord of the Rings&#8221; into the search box, you expect Google to return pages to you that are relevant to Tolkien&#8217;s books and the movie franchise. Similarly, if we present an image search engine with a query image, we expect it to return images that are relevant to the content of image &#8212; hence, we sometimes call image search engines by what they are more commonly known in academic circles as <i>Content Based Image Retrieval (CBIR)</i> systems.</p>
<p>So what&#8217;s the overall goal of our Lord of the Rings image search engine?</p>
<p><strong>The goal, given a query image from one of our five different categories, is to return the category&#8217;s corresponding images in the top 10 results.</strong></p>
<p>That was a mouthful. Let&#8217;s use an example to make it more clear.</p>
<p>If I submitted a query image of The Shire to our system, I would expect it to give me all 5 Shire images in our dataset back in the first 10 results. And again, if I submitted a query image of Rivendell, I would expect our system to give me all 5 Rivendell images in the first 10 results.</p>
<p>Make sense? Good. Let&#8217;s talk about the four steps to building our image search engine.</p>
<h1>The 4 Steps to Building an Image Search Engine</h1>
<p>On the most basic level, there are four steps to building an image search engine:</p>
<ol>
<li><strong>Define your descriptor:</strong> What type of descriptor are you going to use? Are you describing color? Texture? Shape?</li>
<li><strong>Index your dataset:</strong> Apply your descriptor to each image in your dataset, extracting a set of features.</li>
<li><strong>Define your similarity metric:</strong> How are you going to define how &#8220;similar&#8221; two images are? You&#8217;ll likely be using some sort of <a href="http://en.wikipedia.org/wiki/Metric_(mathematics)" target="_blank">distance metric</a>. Common choices include Euclidean, Cityblock (Manhattan), Cosine, and chi-squared to name a few.</li>
<li><strong>Searching:</strong> To perform a search, apply your descriptor to your query image, and then ask your distance metric to rank how similar your images are in your index to your query images. Sort your results via similarity and then examine them.</li>
</ol>
<h1>Step #1: The Descriptor &#8211; A 3D RGB Color Histogram</h1>
<p>Our image descriptor is a 3D color histogram in the RGB color space with 8 bins per red, green, and blue channel.</p>
<p>The best way to explain a 3D histogram is to use the conjunctive <strong>AND</strong>. This image descriptor will ask a given image how many pixels have a Red value that falls into bin #1 <strong>AND</strong> a Green value that falls into bin #2 <strong>AND</strong> how many Blue pixels fall into bin #1. This process will be repeated for each combination of bins; however, it will be done in a computational efficient manner.</p>
<p>When computing a 3D histogram with 8 bins, OpenCV will store the feature vector as an <code>(8, 8, 8)</code> array. We&#8217;ll simply flatten it and reshape it to <code>(512,)</code>. Once it&#8217;s flattened, we can easily compare feature vectors together for similarity.</p>
<p>Ready to see some code? Okay, here we go:</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb5895924304783" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">3D RGB Histogram in OpenCV and Python</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np
import cv2

class RGBHistogram:
	def __init__(self, bins):
		# store the number of bins the histogram will use
		self.bins = bins

	def describe(self, image):
		# compute a 3D histogram in the RGB colorspace,
		# then normalize the histogram so that images
		# with the same content, but either scaled larger
		# or smaller will have (roughly) the same histogram
		hist = cv2.calcHist([image], [0, 1, 2],
			None, self.bins, [0, 256, 0, 256, 0, 256])
		hist = cv2.normalize(hist)

		# return out 3D histogram as a flattened array
		return hist.flatten()</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-4">4</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-6">6</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-8">8</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-10">10</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-12">12</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-14">14</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-16">16</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-18">18</div><div class="crayon-num" data-line="crayon-53b15aefb5895924304783-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb5895924304783-20">20</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb5895924304783-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-2"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">numpy </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">np</span></div><div class="crayon-line" id="crayon-53b15aefb5895924304783-3"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">cv2</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-4">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb5895924304783-5"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">RGBHistogram</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">__init__</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">bins</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb5895924304783-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># store the number of bins the histogram will use</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">bins</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">bins</span></div><div class="crayon-line" id="crayon-53b15aefb5895924304783-9">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-10"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">describe</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">image</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb5895924304783-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># compute a 3D histogram in the RGB colorspace,</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># then normalize the histogram so that images</span></div><div class="crayon-line" id="crayon-53b15aefb5895924304783-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># with the same content, but either scaled larger</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># or smaller will have (roughly) the same histogram</span></div><div class="crayon-line" id="crayon-53b15aefb5895924304783-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">hist</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">calcHist</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-v">image</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-t">None</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">bins</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">256</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">256</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">256</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb5895924304783-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">hist</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">normalize</span><span class="crayon-sy">(</span><span class="crayon-v">hist</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-18">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb5895924304783-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># return out 3D histogram as a flattened array</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb5895924304783-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">hist</span><span class="crayon-sy">.</span><span class="crayon-e">flatten</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0046 seconds] -->
<p>As you can see, I have defined a <code>RGBHistogram</code> class. I tend to like to define my image descriptors as <em>classes</em> rather than <em>functions</em>. The reason for this is because you rarely ever extract features from a single image alone. You instead extract features from an entire dataset of images. Furthermore, you expect that the features extracted from all images utilize the same parameters &#8212; in this case, the number of bins for the histogram. It wouldn&#8217;t make much sense to extract a histogram using 32 bins from one image and then 128 bins for another image if you intend on comparing them for similarity.</p>
<p>Let&#8217;s take the code apart and understand what&#8217;s going on:</p>
<ul>
<li><strong>Lines 6-8:</strong> Here I am defining the constructor for the <code>RGBHistogram</code>. The only parameter we need is the number of bins for each channel in the histogram. Again, this is why I prefer using classes instead of functions for image descriptors &#8212; by putting the relevant parameters in the constructor, you ensure that the same parameters are utilized for each image.</li>
<li><strong>Line 10:</strong> You guessed it. The describe method is used to &#8220;describe&#8221; the image and return a feature vector.</li>
<li><strong>Line 15:</strong> Here we extract the actual 3D RGB Histogram (or actually, BGR since OpenCV stores the image as a NumPy array, but with the channels in reverse order).  We assume <code>self.bins</code> is a list of three integers, designating the number of bins for each channel.</li>
<li><strong>Line 16:</strong> It&#8217;s important that we normalize the histogram in terms of pixel counts. If we used the raw (integer) pixel counts of an image, then shrunk it by 50% and described it again, we would have two different feature vectors for identical images. In most cases, you want to avoid this scenario. We obtain <em>scale invariance</em> by converting the raw integer pixel counts into real-valued percentages. For example, instead of saying bin #1 has 120 pixels in it, we would say bin #1 has 20% of all pixels in it. Again, by using the percentages of pixel counts rather than raw, integer pixel counts, we can assure that two identical images, differing only in size, will have (roughly) identical feature vectors.</li>
<li><strong>Line 20:</strong> When computing a 3D histogram, the histogram will be represented as a NumPy array with <code>(N, N, N)</code> bins. In order to more easily compute the distance between histograms, we simply flatten this histogram to have a shape of <code>(N ** 3,)</code>. <strong>Example:</strong> When we instantiate our RGBHistogram, we will use 8 bins per channel. Without flattening our histogram, the shape would be <code>(8, 8, 8)</code>. But by flattening it, the shape becomes <code>(512,)</code>.</li>
</ul>
<p>Now that we have defined our image descriptor, we can move on to the process of indexing our dataset.</p>
<h1>Step #2: Indexing our Dataset</h1>
<p>Okay, so we&#8217;ve decided that our image descriptor is a 3D RGB histogram. The next step is to apply our image descriptor to each image in the dataset.</p>
<p>This simply means that we are going to loop over our 25 image dataset, extract a 3D RGB histogram from each image, store the features in a dictionary, and write the dictionary to file.</p>
<p>Yep, that&#8217;s it.</p>
<p>In reality, you can make indexing as simple or complex as you want. Indexing is a task that is easily made parallel. If we had a four core machine, we could divide the work up between the four cores and speedup the indexing process. But since we only have 25 images, that&#8217;s pretty silly, especially given how fast it is to compute a histogram.</p>
<p>Let&#8217;s dive into some code:</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb58ab662592687" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Indexing an Image Dataset using Python</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
from pyimagesearch.rgbhistogram import RGBHistogram
import argparse
import cPickle
import glob
import cv2

# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-d", "--dataset", required = True,
	help = "Path to the directory that contains the images to be indexed")
ap.add_argument("-i", "--index", required = True,
	help = "Path to where the computed index will be stored")
args = vars(ap.parse_args())

# initialize the index dictionary to store our our quantifed
# images, with the 'key' of the dictionary being the image
# filename and the 'value' our computed features
index = {}</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-4">4</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-6">6</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-8">8</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-10">10</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-12">12</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-14">14</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-16">16</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58ab662592687-18">18</div><div class="crayon-num" data-line="crayon-53b15aefb58ab662592687-19">19</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb58ab662592687-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-2"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-v">pyimagesearch</span><span class="crayon-sy">.</span><span class="crayon-e">rgbhistogram </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">RGBHistogram</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-3"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-4"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">cPickle</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-5"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">glob</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-6"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-8"><span class="crayon-c"># construct the argument parser and parse the arguments</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-9"><span class="crayon-v">ap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span><span class="crayon-sy">.</span><span class="crayon-e">ArgumentParser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-10"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-d"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--dataset"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">help</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Path to the directory that contains the images to be indexed"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-12"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-i"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--index"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">help</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Path to where the computed index will be stored"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-14"><span class="crayon-v">args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">vars</span><span class="crayon-sy">(</span><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">parse_args</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-15">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-16"><span class="crayon-c"># initialize the index dictionary to store our our quantifed</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-17"><span class="crayon-c"># images, with the 'key' of the dictionary being the image</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58ab662592687-18"><span class="crayon-c"># filename and the 'value' our computed features</span></div><div class="crayon-line" id="crayon-53b15aefb58ab662592687-19"><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-sy">}</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0034 seconds] -->
<p>Alright, the first thing we are going to do is import the packages we need. I&#8217;ve decided to store the <code>RGBHistogram</code> class in a module called <code>pyimagesearch</code>. I mean, it only makes sense, right? We&#8217;ll use <code>cPickle</code> to dump our index to disk. And we&#8217;ll use <code>glob</code> to get the paths of the images we are going to index.</p>
<p>The <code>--dataset</code> argument is the path to where our images are stored on disk and the <code>--index</code> option is the path to where we will store our index once it has been computed.</p>
<p>Finally, we&#8217;ll initialize our <code>index</code> &#8212; a builtin Python dictionary type. The key for the dictionary will be the image filename. We&#8217;ve made the assumption that all filenames are unique, and in fact, for this dataset, they are. The value for the dictionary will be the computed histogram for the image.</p>
<p>Using a dictionary for this example makes the most sense, especially for explanation purposes. Given a key, the dictionary points to some other object. When we use an image filename as a key and the histogram as the value, we are implying that a given histogram <em>H</em> is used to quantify and represent the image with filename <em>K</em><em>. </em></p>
<p>Again, you can make this process as simple or as complicated as you want. More complex image descriptors make use of term frequency-inverse document frequency weighting (<a href="http://en.wikipedia.org/wiki/Tf%E2%80%93idf" target="_blank">tf-idf</a>) and an <a href="http://en.wikipedia.org/wiki/Inverted_index" target="_blank">inverted index</a>, but we are going to stay clear of that for now. Don&#8217;t worry though, I&#8217;ll have <em>plenty</em> of blog posts discussing how we can leverage more complicated techniques, but for the time being, let&#8217;s keep it simple.</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb58b4590392984" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Indexing an Image Dataset using Python</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# initialize our image descriptor -- a 3D RGB histogram with
# 8 bins per channel
desc = RGBHistogram([8, 8, 8])</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb58b4590392984-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58b4590392984-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb58b4590392984-3">3</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb58b4590392984-1"><span class="crayon-c"># initialize our image descriptor -- a 3D RGB histogram with</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58b4590392984-2"><span class="crayon-c"># 8 bins per channel</span></div><div class="crayon-line" id="crayon-53b15aefb58b4590392984-3"><span class="crayon-v">desc</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">RGBHistogram</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-cn">8</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">8</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">8</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0009 seconds] -->
<p>Here we instantiate our <code>RGBHistogram</code>. Again, we will be using 8 bins for each, red, green, and blue, channel, respectively.</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb58bb080031221" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Indexing an Image Dataset using Python</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# use glob to grab the image paths and loop over them
for imagePath in glob.glob(args["dataset"] + "/*.png"):
	# extract our unique image ID (i.e. the filename)
	k = imagePath[imagePath.rfind("/") + 1:]

	# load the image, describe it using our RGB histogram
	# descriptor, and update the index
	image = cv2.imread(imagePath)
	features = desc.describe(image)
	index[k] = features</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb58bb080031221-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58bb080031221-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb58bb080031221-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58bb080031221-4">4</div><div class="crayon-num" data-line="crayon-53b15aefb58bb080031221-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58bb080031221-6">6</div><div class="crayon-num" data-line="crayon-53b15aefb58bb080031221-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58bb080031221-8">8</div><div class="crayon-num" data-line="crayon-53b15aefb58bb080031221-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58bb080031221-10">10</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb58bb080031221-1"><span class="crayon-c"># use glob to grab the image paths and loop over them</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58bb080031221-2"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">imagePath </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">glob</span><span class="crayon-sy">.</span><span class="crayon-k ">glob</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"dataset"</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-s">"/*.png"</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb58bb080031221-3"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># extract our unique image ID (i.e. the filename)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58bb080031221-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">k</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">imagePath</span><span class="crayon-sy">[</span><span class="crayon-v">imagePath</span><span class="crayon-sy">.</span><span class="crayon-e">rfind</span><span class="crayon-sy">(</span><span class="crayon-s">"/"</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-53b15aefb58bb080031221-5">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58bb080031221-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># load the image, describe it using our RGB histogram</span></div><div class="crayon-line" id="crayon-53b15aefb58bb080031221-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># descriptor, and update the index</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58bb080031221-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">image</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imread</span><span class="crayon-sy">(</span><span class="crayon-v">imagePath</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58bb080031221-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">features</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">desc</span><span class="crayon-sy">.</span><span class="crayon-e">describe</span><span class="crayon-sy">(</span><span class="crayon-v">image</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58bb080031221-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">index</span><span class="crayon-sy">[</span><span class="crayon-v">k</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">features</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0035 seconds] -->
<p>Here is where the actual indexing takes place. Let&#8217;s break it down:</p>
<ul>
<li><strong>Line 2:</strong> We use <code>glob</code> to grab the image paths and start to loop over our dataset.</li>
<li><strong>Line 4:</strong> We extract the &#8220;key&#8221; for our dictionary. All filenames are unique in this sample dataset, so the filename itself will be enough to serve as the key.</li>
<li><strong>Line 8-10:</strong> The image is loaded off disk and we then use our <code>RGBHistogram</code> to extract a histogram from the image. The histogram is then stored in the index.</li>
</ul>
<p></p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb58c2719379891" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Indexing an Image Dataset using Python</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# we are now done indexing our image -- now we can write our
# index to disk
f = open(args["index"], "w")
f.write(cPickle.dumps(index))
f.close()</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb58c2719379891-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c2719379891-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb58c2719379891-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c2719379891-4">4</div><div class="crayon-num" data-line="crayon-53b15aefb58c2719379891-5">5</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb58c2719379891-1"><span class="crayon-c"># we are now done indexing our image -- now we can write our</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c2719379891-2"><span class="crayon-c"># index to disk</span></div><div class="crayon-line" id="crayon-53b15aefb58c2719379891-3"><span class="crayon-v">f</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">open</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"index"</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"w"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c2719379891-4"><span class="crayon-v">f</span><span class="crayon-sy">.</span><span class="crayon-e">write</span><span class="crayon-sy">(</span><span class="crayon-k ">cPickle</span><span class="crayon-sy">.</span><span class="crayon-e">dumps</span><span class="crayon-sy">(</span><span class="crayon-v">index</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58c2719379891-5"><span class="crayon-v">f</span><span class="crayon-sy">.</span><span class="crayon-e">close</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0014 seconds] -->
<p>Now that our index has been computed, let&#8217;s write it to disk so we can use it for searching later on.</p>
<h1>Step #3: The Search</h1>
<p>We now have our index sitting on disk, ready to be searched.</p>
<p>The problem is, we need some code to perform the actual search. How are we going to compare two feature vectors and how are we going to determine how similar they are?</p>
<p>This question is better addressed first with some code, then I&#8217;ll break it down.</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb58c9300360281" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Building an Image Search Engine in Python and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
import numpy as np

class Searcher:
	def __init__(self, index):
		# store our index of images
		self.index = index

	def search(self, queryFeatures):
		# initialize our dictionary of results
		results = {}

		# loop over the index
		for (k, features) in self.index.items():
			# compute the chi-squared distance between the features
			# in our index and our query features -- using the
			# chi-squared distance which is normally used in the
			# computer vision field to compare histograms
			d = self.chi2_distance(features, queryFeatures)

			# now that we have the distance between the two feature
			# vectors, we can udpate the results dictionary -- the
			# key is the current image ID in the index and the
			# value is the distance we just computed, representing
			# how 'similar' the image in the index is to our query
			results[k] = d

		# sort our results, so that the smaller distances (i.e. the
		# more relevant images are at the front of the list)
		results = sorted([(v, k) for (k, v) in results.items()])

		# return our results
		return results

	def chi2_distance(self, histA, histB, eps = 1e-10):
		# compute the chi-squared distance
		d = 0.5 * np.sum([((a - b) ** 2) / (a + b + eps)
			for (a, b) in zip(histA, histB)])

		# return the chi-squared distance
		return d</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-4">4</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-6">6</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-8">8</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-10">10</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-12">12</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-14">14</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-16">16</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-18">18</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-20">20</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-22">22</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-24">24</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-26">26</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-28">28</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-30">30</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-32">32</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-34">34</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-36">36</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-38">38</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58c9300360281-40">40</div><div class="crayon-num" data-line="crayon-53b15aefb58c9300360281-41">41</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb58c9300360281-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-2"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">numpy </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">np</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-3">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-4"><span class="crayon-t">class</span><span class="crayon-h"> </span><span class="crayon-v">Searcher</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">__init__</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">index</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-6"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># store our index of images</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">index</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-8">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-9"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">search</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">queryFeatures</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># initialize our dictionary of results</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">results</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">{</span><span class="crayon-sy">}</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-12">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># loop over the index</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">k</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">features</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-v">index</span><span class="crayon-sy">.</span><span class="crayon-e">items</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># compute the chi-squared distance between the features</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># in our index and our query features -- using the</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># chi-squared distance which is normally used in the</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># computer vision field to compare histograms</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-19"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">d</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-r">self</span><span class="crayon-sy">.</span><span class="crayon-e">chi2_distance</span><span class="crayon-sy">(</span><span class="crayon-v">features</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">queryFeatures</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-20">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># now that we have the distance between the two feature</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># vectors, we can udpate the results dictionary -- the</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># key is the current image ID in the index and the</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># value is the distance we just computed, representing</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># how 'similar' the image in the index is to our query</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">results</span><span class="crayon-sy">[</span><span class="crayon-v">k</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">d</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-27">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-28"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># sort our results, so that the smaller distances (i.e. the</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># more relevant images are at the front of the list)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-30"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">results</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">sorted</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-sy">(</span><span class="crayon-v">v</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">k</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">v</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">results</span><span class="crayon-sy">.</span><span class="crayon-e">items</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-31">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-32"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># return our results</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-33"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-e">results</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-34">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-35"><span class="crayon-e">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-r">def</span><span class="crayon-h"> </span><span class="crayon-e">chi2_distance</span><span class="crayon-sy">(</span><span class="crayon-r">self</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">histA</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">histB</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">eps</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1e</span><span class="crayon-o">-</span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-36"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># compute the chi-squared distance</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-37"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">d</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0.5</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-k ">sum</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">eps</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-38"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">a</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">b</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">zip</span><span class="crayon-sy">(</span><span class="crayon-v">histA</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">histB</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-39">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58c9300360281-40"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># return the chi-squared distance</span></div><div class="crayon-line" id="crayon-53b15aefb58c9300360281-41"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">d</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0084 seconds] -->
<p>First off, most of this code is just comments. Don&#8217;t be scared that it&#8217;s 41 lines. If you haven&#8217;t already guessed, I like well-commented code. Let&#8217;s investigate what&#8217;s going on:</p>
<ul>
<li><strong>Lines 4-7:</strong> The first thing I do is define a <code>Searcher</code> class and a constructor with a single parameter &#8212; the <code>index</code>. This <code>index</code> is assumed to be the index dictionary that we wrote to file during the indexing step.</li>
<li><strong>Line 11:</strong> We define a dictionary to store our <code>results</code>. The key is the image filename (from the index) and the value is how similar the given image is to the query image.</li>
<li><strong>Lines 14-26:</strong> Here is the part where the actual searching takes place. We loop over the image filenames and corresponding features in our index. We then use the chi-squared distance to compare our color histograms. The computed distance is then stored in the <code>results</code> dictionary, indicating how similar the two images are to each other.</li>
<li><strong>Lines 30-33:</strong> The results are sorted in terms of relevancy (the smaller the chi-squared distance, the relevant/similar) and returned.</li>
<li><strong>Lines 35-41:</strong> Here we define the chi-squared distance function used to compare the two histograms. In general, the difference between large bins vs. small bins is less important and should be weighted as such. This is exactly what the chi-squared distance does. We provide an <code>epsilon</code> dummy value to avoid those pesky &#8220;divide by zero&#8221; errors. Images will be considered identical if their feature vectors have a chi-squared distance of zero. The larger the distance gets, the less similar they are.</li>
</ul>
<p>So there you have it, a Python class that can take an index and perform a search. Now it&#8217;s time to put this searcher to work.</p>
<p><strong>Note:</strong> For those who are more academically inclined, you might want to check out <em><a href="http://www.cs.huji.ac.il/~ofirpele/publications/ECCV2010.pdf" target="_blank">The Quadratic-Chi Histogram Distance Family</a> </em>from the ECCV &#8217;10 conference if you are interested in histogram distance metrics.</p>
<h1>Step #4: Performing a Search</h1>
<p>Finally. We are closing in on a functioning image search engine.</p>
<p>But we&#8217;re not quite there yet. We need a little extra code to handle loading the images off disk and performing the search:</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb58d3656813281" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Building an Image Search Engine in Python and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
from pyimagesearch.searcher import Searcher
import numpy as np
import argparse
import cPickle
import cv2

# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-d", "--dataset", required = True,
	help = "Path to the directory that contains the images we just indexed")
ap.add_argument("-i", "--index", required = True,
	help = "Path to where we stored our index")
args = vars(ap.parse_args())

# load the index and initialize our searcher
index = cPickle.loads(open(args["index"]).read())
searcher = Searcher(index)</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-4">4</div><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-6">6</div><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-8">8</div><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-10">10</div><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-12">12</div><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-14">14</div><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-16">16</div><div class="crayon-num" data-line="crayon-53b15aefb58d3656813281-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58d3656813281-18">18</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb58d3656813281-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-2"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-v">pyimagesearch</span><span class="crayon-sy">.</span><span class="crayon-e">searcher </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">Searcher</span></div><div class="crayon-line" id="crayon-53b15aefb58d3656813281-3"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">numpy </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">np</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-4"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span></div><div class="crayon-line" id="crayon-53b15aefb58d3656813281-5"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">cPickle</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-6"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span></div><div class="crayon-line" id="crayon-53b15aefb58d3656813281-7">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-8"><span class="crayon-c"># construct the argument parser and parse the arguments</span></div><div class="crayon-line" id="crayon-53b15aefb58d3656813281-9"><span class="crayon-v">ap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span><span class="crayon-sy">.</span><span class="crayon-e">ArgumentParser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-10"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-d"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--dataset"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-53b15aefb58d3656813281-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">help</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Path to the directory that contains the images we just indexed"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-12"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-i"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--index"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line" id="crayon-53b15aefb58d3656813281-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">help</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Path to where we stored our index"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-14"><span class="crayon-v">args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">vars</span><span class="crayon-sy">(</span><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">parse_args</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58d3656813281-15">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-16"><span class="crayon-c"># load the index and initialize our searcher</span></div><div class="crayon-line" id="crayon-53b15aefb58d3656813281-17"><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">cPickle</span><span class="crayon-sy">.</span><span class="crayon-e">loads</span><span class="crayon-sy">(</span><span class="crayon-k ">open</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"index"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">read</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58d3656813281-18"><span class="crayon-v">searcher</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Searcher</span><span class="crayon-sy">(</span><span class="crayon-v">index</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0053 seconds] -->
<p>First things first. Import the packages that we will need. As you can see, I&#8217;ve stored our <code>Searcher</code> class in the <code>pyimagesearch</code> module. We then define our arguments in the same manner that we did during the indexing step. Finally, we use <code>cPickle</code> to load our index off disk and initialize our <code>Searcher</code>.</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb58da717424152" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# loop over images in the index -- we will use each one as
# a query image
for (query, queryFeatures) in index.items():
	# perform the search using the current query
	results = searcher.search(queryFeatures)

	# load the query image and display it
	path = args["dataset"] + "/%s" % (query)
	queryImage = cv2.imread(path)
	cv2.imshow("Query", queryImage)
	print "query: %s" % (query)

	# initialize the two montages to display our results --
	# we have a total of 25 images in the index, but let's only
	# display the top 10 results; 5 images per montage, with
	# images that are 400x166 pixels
	montageA = np.zeros((166 * 5, 400, 3), dtype = "uint8")
	montageB = np.zeros((166 * 5, 400, 3), dtype = "uint8")

	# loop over the top ten results
	for j in xrange(0, 10):
		# grab the result (we are using row-major order) and
		# load the result image
		(score, imageName) = results[j]
		path = args["dataset"] + "/%s" % (imageName)
		result = cv2.imread(path)
		print "\t%d. %s : %.3f" % (j + 1, imageName, score)

		# check to see if the first montage should be used
		if j &lt; 5:
			montageA[j * 166:(j + 1) * 166, :] = result

		# otherwise, the second montage should be used
		else:
			montageB[(j - 5) * 166:((j - 5) + 1) * 166, :] = result

	# show the results
	cv2.imshow("Results 1-5", montageA)
	cv2.imshow("Results 6-10", montageB)
	cv2.waitKey(0)</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-4">4</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-6">6</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-8">8</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-10">10</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-12">12</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-14">14</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-16">16</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-18">18</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-20">20</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-22">22</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-24">24</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-26">26</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-28">28</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-30">30</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-32">32</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-34">34</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-36">36</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-38">38</div><div class="crayon-num" data-line="crayon-53b15aefb58da717424152-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58da717424152-40">40</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb58da717424152-1"><span class="crayon-c"># loop over images in the index -- we will use each one as</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-2"><span class="crayon-c"># a query image</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-3"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">query</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">queryFeatures</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">index</span><span class="crayon-sy">.</span><span class="crayon-e">items</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-4"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># perform the search using the current query</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-5"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">results</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">searcher</span><span class="crayon-sy">.</span><span class="crayon-e">search</span><span class="crayon-sy">(</span><span class="crayon-v">queryFeatures</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-6">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58da717424152-7"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># load the query image and display it</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-8"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">path</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"dataset"</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-s">"/%s"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">query</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-9"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">queryImage</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imread</span><span class="crayon-sy">(</span><span class="crayon-v">path</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-10"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Query"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">queryImage</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-11"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-s">"query: %s"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">query</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-12">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58da717424152-13"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># initialize the two montages to display our results --</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># we have a total of 25 images in the index, but let's only</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-15"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># display the top 10 results; 5 images per montage, with</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># images that are 400x166 pixels</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-17"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">montageA</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-cn">166</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">400</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dtype</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"uint8"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-18"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">montageB</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-cn">166</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">400</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dtype</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"uint8"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-19">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-20"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># loop over the top ten results</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-21"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">j</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">xrange</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-22"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># grab the result (we are using row-major order) and</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-23"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># load the result image</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-24"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">(</span><span class="crayon-v">score</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">imageName</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">results</span><span class="crayon-sy">[</span><span class="crayon-v">j</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-25"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">path</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"dataset"</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-s">"/%s"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">imageName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-26"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imread</span><span class="crayon-sy">(</span><span class="crayon-v">path</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-27"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-s">"\t%d. %s : %.3f"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">imageName</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">score</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-28">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58da717424152-29"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># check to see if the first montage should be used</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-30"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-31"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">montageA</span><span class="crayon-sy">[</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">166</span><span class="crayon-o">:</span><span class="crayon-sy">(</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">166</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-32">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58da717424152-33"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># otherwise, the second montage should be used</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-34"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-35"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">montageB</span><span class="crayon-sy">[</span><span class="crayon-sy">(</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">166</span><span class="crayon-o">:</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">166</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-36">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58da717424152-37"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># show the results</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-38"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Results 1-5"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">montageA</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58da717424152-39"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Results 6-10"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">montageB</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58da717424152-40"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">waitKey</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0115 seconds] -->
<p>Most of this code handles displaying the results. The actual &#8220;search&#8221; is done in a single line (#31). Regardless, let&#8217;s examine what&#8217;s going on:</p>
<ul>
<li><strong>Line 3:</strong> We are going to treat each image in our index as a query and see what results we get back. Normally, queries are <em>external</em> and not part of the dataset, but before we get to that, let&#8217;s just perform some example searches.</li>
<li><strong>Line 5:</strong> Here is where the actual search takes place. We treat the current image as our query and perform the search.</li>
<li><strong>Lines 8-11:</strong> Load and display our query image.</li>
<li><strong>Lines 17-35:</strong> In order to display the top 10 results, I have decided to use two montage images. The first montage shows results 1-5 and the second montage results 6-10. The name of the image and distance is provided on Line 27.</li>
<li><strong>Lines 38-40:</strong> Finally, we display our search results to the user.</li>
</ul>
<p>So there you have it. An entire image search engine in Python. Let&#8217;s see how this thing performs:</p>
<div id="attachment_166" style="width: 664px" class="wp-caption aligncenter"><a href="http://www.pyimagesearch.com/wp-content/uploads/2014/01/Mordor-002.jpg"><img class=" wp-image-166  " alt="Figure 2: Search Results using Mordor-002.png as a query." src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/Mordor-002.jpg" width="654" height="848" /></a><p class="wp-caption-text"><strong>Figure 2:</strong> Search Results using <em>Mordor-002.png</em> as a query. Our image search engine is able to return images from Mordor and the Black Gate.</p></div>
<p>Let&#8217;s start at the ending of <em>The Return of the King</em> using Frodo and Sam&#8217;s ascent into the volcano as our query image. As you can see, our top 5 results are from the &#8220;Mordor&#8221; category.</p>
<p>Perhaps you are wondering why the query image of Frodo and Sam is also the image in the #1 result position? Well, let&#8217;s think back to our chi-squared distance. We said that an image would be considered &#8220;identical&#8221; if the distance between the two feature vectors is zero. Since we are using images we have already indexed as queries, they are in fact identical and will have a distance of zero. Since a value of zero indicates perfect similarity, the query image appears in the #1 result position.</p>
<p>Now, let&#8217;s try another image, this time using The Goblin King in Goblin Town:</p>
<div id="attachment_167" style="width: 662px" class="wp-caption aligncenter"><a href="http://www.pyimagesearch.com/wp-content/uploads/2014/01/Goblin-004.jpg"><img class=" wp-image-167 " alt="Figure 3: Search Results using Goblin-004.png as a query." src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/Goblin-004.jpg" width="652" height="847" /></a><p class="wp-caption-text"><strong>Figure 3:</strong> Search Results using <em>Goblin-004.png</em> as a query. The top 5 images returned are from Goblin Town.</p></div>
<p>The Goblin King doesn&#8217;t look very happy. But we sure are happy that all five images from Goblin Town are in the top 10 results.</p>
<p>Finally, here are three more example searches for Dol-Guldur, Rivendell, and The Shire. Again, we can clearly see that all five images from their respective categories are in the top 10 results.</p>
<div id="attachment_168" style="width: 739px" class="wp-caption aligncenter"><a href="http://www.pyimagesearch.com/wp-content/uploads/2014/01/result-montage.jpg"><img class=" wp-image-168  " alt="Figure 4: Using images from Dol-Guldur, Rivendell, and The Shire as queries." src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/result-montage.jpg" width="729" height="315" /></a><p class="wp-caption-text"><strong>Figure 4:</strong> Using images from Dol-Guldur <em>(Dol-Guldur-004.png)</em>, Rivendell <em>(Rivendell-003.png)</em>, and The Shire (<em>Shire-002.png)</em> as queries.</p></div>
<h1>Bonus: External Queries</h1>
<p>As of right now, I&#8217;ve only shown you how to perform a search using images <em>that are already in your index</em>. But clearly, this is not how all image search engines work. Google allows you to upload an image of your own. TinEye allows you to upload an image of your own. Why can&#8217;t we? Let&#8217;s see how we can perform a search using an image that we haven&#8217;t already indexed:</p><!-- Crayon Syntax Highlighter v2.6.5 -->

		<div id="crayon-53b15aefb58e7925033332" class="crayon-syntax crayon-theme-classic crayon-font-monaco crayon-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" show" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title">Building an Image Search Engine using Python and OpenCV</span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button crayon-nums-button" title="Toggle Line Numbers"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-plain-button" title="Toggle Plain Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-wrap-button" title="Toggle Line Wrap"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-expand-button" title="Expand Code"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-copy-button" title="Copy"><div class="crayon-button-icon"></div></div><div class="crayon-button crayon-popup-button" title="Open Code In New Window"><div class="crayon-button-icon"></div></div><span class="crayon-language">Python</span></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="crayon-plain-wrap"><textarea wrap="soft" class="crayon-plain print-no" data-settings="" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# import the necessary packages
from pyimagesearch.rgbhistogram import RGBHistogram
from pyimagesearch.searcher import Searcher
import numpy as np
import argparse
import cPickle
import cv2

# construct the argument parser and parse the arguments
ap = argparse.ArgumentParser()
ap.add_argument("-d", "--dataset", required = True,
	help = "Path to the directory that contains the images we just indexed")
ap.add_argument("-i", "--index", required = True,
	help = "Path to where we stored our index")
ap.add_argument("-q", "--query", required = True,
	help = "Path to query image")
args = vars(ap.parse_args())

# load the query image and show it
queryImage = cv2.imread(args["query"])
cv2.imshow("Query", queryImage)
print "query: %s" % (args["query"])

# describe the query in the same way that we did in
# index.py -- a 3D RGB histogram with 8 bins per
# channel
desc = RGBHistogram([8, 8, 8])
queryFeatures = desc.describe(queryImage)

# load the index perform the search
index = cPickle.loads(open(args["index"]).read())
searcher = Searcher(index)
results = searcher.search(queryFeatures)

# initialize the two montages to display our results --
# we have a total of 25 images in the index, but let's only
# display the top 10 results; 5 images per montage, with
# images that are 400x166 pixels
montageA = np.zeros((166 * 5, 400, 3), dtype = "uint8")
montageB = np.zeros((166 * 5, 400, 3), dtype = "uint8")

# loop over the top ten results
for j in xrange(0, 10):
	# grab the result (we are using row-major order) and
	# load the result image
	(score, imageName) = results[j]
	path = args["dataset"] + "/%s" % (imageName)
	result = cv2.imread(path)
	print "\t%d. %s : %.3f" % (j + 1, imageName, score)

	# check to see if the first montage should be used
	if j &lt; 5:
		montageA[j * 166:(j + 1) * 166, :] = result

	# otherwise, the second montage should be used
	else:
		montageB[(j - 5) * 166:((j - 5) + 1) * 166, :] = result

# show the results
cv2.imshow("Results 1-5", montageA)
cv2.imshow("Results 6-10", montageB)
cv2.waitKey(0)</textarea></div>
			<div class="crayon-main" style="">
				<table class="crayon-table">
					<tr class="crayon-row">
				<td class="crayon-nums " data-settings="show">
					<div class="crayon-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-1">1</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-2">2</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-3">3</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-4">4</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-5">5</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-6">6</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-7">7</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-8">8</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-9">9</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-10">10</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-11">11</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-12">12</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-13">13</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-14">14</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-15">15</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-16">16</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-17">17</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-18">18</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-19">19</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-20">20</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-21">21</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-22">22</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-23">23</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-24">24</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-25">25</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-26">26</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-27">27</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-28">28</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-29">29</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-30">30</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-31">31</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-32">32</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-33">33</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-34">34</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-35">35</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-36">36</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-37">37</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-38">38</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-39">39</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-40">40</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-41">41</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-42">42</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-43">43</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-44">44</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-45">45</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-46">46</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-47">47</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-48">48</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-49">49</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-50">50</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-51">51</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-52">52</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-53">53</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-54">54</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-55">55</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-56">56</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-57">57</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-58">58</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-59">59</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-60">60</div><div class="crayon-num" data-line="crayon-53b15aefb58e7925033332-61">61</div><div class="crayon-num crayon-striped-num" data-line="crayon-53b15aefb58e7925033332-62">62</div></div>
				</td>
						<td class="crayon-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-line" id="crayon-53b15aefb58e7925033332-1"><span class="crayon-c"># import the necessary packages</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-2"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-v">pyimagesearch</span><span class="crayon-sy">.</span><span class="crayon-e">rgbhistogram </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">RGBHistogram</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-3"><span class="crayon-st">from</span><span class="crayon-h"> </span><span class="crayon-v">pyimagesearch</span><span class="crayon-sy">.</span><span class="crayon-e">searcher </span><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">Searcher</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-4"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-e">numpy </span><span class="crayon-st">as</span><span class="crayon-h"> </span><span class="crayon-e">np</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-5"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-6"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-k ">cPickle</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-7"><span class="crayon-r">import</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-8">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-9"><span class="crayon-c"># construct the argument parser and parse the arguments</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-10"><span class="crayon-v">ap</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">argparse</span><span class="crayon-sy">.</span><span class="crayon-e">ArgumentParser</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-11"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-d"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--dataset"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-12"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">help</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Path to the directory that contains the images we just indexed"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-13"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-i"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--index"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-14"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">help</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Path to where we stored our index"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-15"><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">add_argument</span><span class="crayon-sy">(</span><span class="crayon-s">"-q"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-s">"--query"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">required</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">True</span><span class="crayon-sy">,</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-16"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">help</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"Path to query image"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-17"><span class="crayon-v">args</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">vars</span><span class="crayon-sy">(</span><span class="crayon-v">ap</span><span class="crayon-sy">.</span><span class="crayon-e">parse_args</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-18">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-19"><span class="crayon-c"># load the query image and show it</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-20"><span class="crayon-v">queryImage</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imread</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"query"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-21"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Query"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">queryImage</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-22"><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-s">"query: %s"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"query"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-23">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-24"><span class="crayon-c"># describe the query in the same way that we did in</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-25"><span class="crayon-c"># index.py -- a 3D RGB histogram with 8 bins per</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-26"><span class="crayon-c"># channel</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-27"><span class="crayon-v">desc</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">RGBHistogram</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-cn">8</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">8</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">8</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-28"><span class="crayon-v">queryFeatures</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">desc</span><span class="crayon-sy">.</span><span class="crayon-e">describe</span><span class="crayon-sy">(</span><span class="crayon-v">queryImage</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-29">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-30"><span class="crayon-c"># load the index perform the search</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-31"><span class="crayon-v">index</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-k ">cPickle</span><span class="crayon-sy">.</span><span class="crayon-e">loads</span><span class="crayon-sy">(</span><span class="crayon-k ">open</span><span class="crayon-sy">(</span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"index"</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">read</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-32"><span class="crayon-v">searcher</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">Searcher</span><span class="crayon-sy">(</span><span class="crayon-v">index</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-33"><span class="crayon-v">results</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">searcher</span><span class="crayon-sy">.</span><span class="crayon-e">search</span><span class="crayon-sy">(</span><span class="crayon-v">queryFeatures</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-34">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-35"><span class="crayon-c"># initialize the two montages to display our results --</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-36"><span class="crayon-c"># we have a total of 25 images in the index, but let's only</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-37"><span class="crayon-c"># display the top 10 results; 5 images per montage, with</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-38"><span class="crayon-c"># images that are 400x166 pixels</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-39"><span class="crayon-v">montageA</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-cn">166</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">400</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dtype</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"uint8"</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-40"><span class="crayon-v">montageB</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">np</span><span class="crayon-sy">.</span><span class="crayon-e">zeros</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-cn">166</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">400</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">dtype</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">"uint8"</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-41">&nbsp;</div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-42"><span class="crayon-c"># loop over the top ten results</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-43"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">j</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-k ">xrange</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">10</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-44"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># grab the result (we are using row-major order) and</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-45"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># load the result image</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-46"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-sy">(</span><span class="crayon-v">score</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">imageName</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">results</span><span class="crayon-sy">[</span><span class="crayon-v">j</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-47"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">path</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">args</span><span class="crayon-sy">[</span><span class="crayon-s">"dataset"</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-s">"/%s"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">imageName</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-48"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">result</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imread</span><span class="crayon-sy">(</span><span class="crayon-v">path</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-49"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-k ">print</span><span class="crayon-h"> </span><span class="crayon-s">"\t%d. %s : %.3f"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">imageName</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">score</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-50">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-51"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># check to see if the first montage should be used</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-52"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-53"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">montageA</span><span class="crayon-sy">[</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">166</span><span class="crayon-o">:</span><span class="crayon-sy">(</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">166</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-54">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-55"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-c"># otherwise, the second montage should be used</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-56"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-st">else</span><span class="crayon-o">:</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-57"><span class="crayon-h">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="crayon-v">montageB</span><span class="crayon-sy">[</span><span class="crayon-sy">(</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">166</span><span class="crayon-o">:</span><span class="crayon-sy">(</span><span class="crayon-sy">(</span><span class="crayon-v">j</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-cn">5</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-cn">166</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-o">:</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">result</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-58">&nbsp;</div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-59"><span class="crayon-c"># show the results</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-60"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Results 1-5"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">montageA</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="crayon-53b15aefb58e7925033332-61"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">imshow</span><span class="crayon-sy">(</span><span class="crayon-s">"Results 6-10"</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">montageB</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="crayon-53b15aefb58e7925033332-62"><span class="crayon-v">cv2</span><span class="crayon-sy">.</span><span class="crayon-e">waitKey</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div>
<!-- [Format Time: 0.0170 seconds] -->
<p></p>
<ul>
<li><strong>Lines 2-17:</strong> This should feel like pretty standard stuff by now. We are importing our packages and setting up our argument parser, although, you should note the new argument &#8211;query. This is the path to our query image.</li>
<li><strong>Lines 20-21:</strong> We&#8217;re going to load your query image and show it to you, just in case you forgot what your query image is.</li>
<li><strong>Lines 27-28:</strong> Instantiate our <code>RGBHistogram</code> <em><strong>with the exact same number of bins as during our indexing step</strong></em>. I put that in bold and italics just to drive home how important it is to use the same parameters. We then extract features from our query image.</li>
<li><strong>Lines 31-33:</strong> Load our index off disk using <code>cPickle</code> and perform the search.</li>
<li><strong>Lines 39-62:</strong> Just as in the code above to perform a search, this code just shows us our results.</li>
</ul>
<p>Before writing this blog post, I went on Google and downloaded two images not present in our index. One of <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/01/rivendell-query.png" target="_blank">Rivendell</a> and one of <a href="http://www.pyimagesearch.com/wp-content/uploads/2014/01/shire-query.png" target="_blank">The Shire</a>. These two images will be our queries. Check out the results below:</p>
<div id="attachment_172" style="width: 610px" class="wp-caption aligncenter"><a href="http://www.pyimagesearch.com/wp-content/uploads/2014/01/external-results-montage.jpg"><img class=" wp-image-172 " alt="Figure 5: Using external Rivendell and the Shire query images. For both cases, we find the top 5 search results are from the same category." src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/external-results-montage.jpg" width="600" height="423" /></a><p class="wp-caption-text"><strong>Figure 5:</strong> Using external Rivendell <em>(Left)</em> and the Shire <em>(Right)</em> query images. For both cases, we find the top 5 search results are from the same category.</p></div>
<p>In this case, we searched using two images that we haven&#8217;t seen previously. The one on the left is of Rivendell. We can see from our results that the other 5 Rivendell images in our index were returned, demonstrating that our image search engine is working properly.</p>
<p>On the right, we have a query image from The Shire. Again, this image is not present in our index. But when we look at the search results, we can see that the other 5 Shire images were returned from the image search engine, once again demonstrating that our image search engine is returning semantically similar images.</p>
<h1>Summary</h1>
<p>In this blog post we&#8217;ve explored how to create an image search engine from start to finish. The first step was to choose an image descriptor &#8212; we used a 3D RGB histogram to characterize the color of our images. We then indexed each image in our dataset using our descriptor by extracting feature vectors (i.e. the histograms). From there, we used the chi-squared distance to define &#8220;similarity&#8221; between two images. Finally, we glued all the pieces together and created a <em>Lord of the Rings</em> image search engine.</p>
<p>So, what&#8217;s the next step?</p>
<p>We&#8217;re just getting started. Right now we&#8217;re just scratching the surface of image search engines. The techniques in this blog post are quite elementary. There is a lot to build on. For example, we focused on describing color using just histograms. But how do we describe texture? Or shape? And what is this mystical SIFT descriptor?</p>
<p>All those questions and more, answered in the coming months.</p>
<h3><strong>If you liked this blog post, please consider sharing it with others.</strong></h3>
<h1 id="post_downloads">Downloads:</h1>
<div id="mc4wp-form-1" class="form mc4wp-form mc4wp-form-249">
<form action="https://www.getdrip.com/forms/2829601/submissions" method="post" target="_blank" data-drip-embedded-form="1288"><img src="http://www.pyimagesearch.com/wp-content/uploads/2014/02/download-code-icon.png" alt="" style="padding-right: 10px; width: 115px; border: none; float: left;"/></p>
<p>
If you would like to download the code and images used in this post, please enter your email address in the form below. Not only will you get a .zip of the code, I&#8217;ll also send you a <strong>FREE 11-page Resource Guide</strong> on Computer Vision and Image Search Engines, including <strong>exclusive techniques</strong> that I don&#8217;t post on this blog! Sound good? If so, enter your email address and I&#8217;ll send you the code immediately!
</p>
<p style="margin-left: 130px;">
    <label for="fields[email]">Email address:</label><input type="email" name="fields[email]" value="" placeholder="Your email address" />
</p>
<p style="margin-left: 130px;">
	<input type="submit" value="Download the code!" />
</p>
</form>
</div>
<div id="fsb-social-bar" class="fsb-social-bar fsb-no-float" data-post-id="152" data-socialite="true"><style type="text/css">            #fsb-social-bar { width: 100%; border-bottom: 1px solid #dbdbdb; border-top: 1px solid #dbdbdb; padding: 10px 0; margin: 0px 0 20px 0; float: left; background: #fff; position: relative; clear: both; }            #fsb-social-bar a { border: 0px !important }            #fsb-social-bar.fsb-fixed { position: fixed; top: -2px; z-index: 99999; }            #fsb-social-bar .fsb-title { display: block; float: left; margin: 3px 20px 0 0; font-size: 16px; font-family: Arial, Helvetica, sans-serif; text-decoration: none; color: #333; }            #fsb-social-bar .fsb-share-facebook { width: 120px; float: left; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-facebook.fsb-hide-count { width: 44px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-twitter { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-twitter.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-google { float: left; width: 105px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-google.fsb-hide-count { width: 33px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-linkedin { float: left; width: 135px; padding: 3px 0 2px; height: 25px; }            #fsb-social-bar .fsb-share-linkedin.fsb-hide-count { width: 61px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .fsb-share-pinterest { float: left; width: 115px; padding: 3px 0 2px; height: 25px;}            #fsb-social-bar .fsb-share-pinterest.fsb-hide-count { width: 43px; overflow: hidden; margin-right: 30px; }            #fsb-social-bar .socialite { display: block; position: relative; background: url(http://www.pyimagesearch.com/wp-content/plugins/floating-social-bar/images/fsb-sprite.png) no-repeat scroll 0 0; }            #fsb-social-bar .socialite-loaded { background: none !important; }            #fsb-social-bar .fsb-service-title { display: none; }            #fsb-social-bar a { color: #333; text-decoration: none; font-size: 12px; font-family: Arial, Helvetica, sans-serif; }            #fsb-social-bar .fsb-twitter { width: 105px; height: 25px; background-position: -13px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-twitter .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 69px; color: #333; }            #fsb-social-bar .fsb-google { width: 75px; height: 25px; background-position: -136px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-google .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 41px; color: #333; }            #fsb-social-bar .fsb-google .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-share-google .socialite-loaded .socialite-button{padding: 2px 0 0}            #fsb-social-bar .fsb-facebook { width: 89px; height: 25px; background-position: -231px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-facebook .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 52px; color: #333; }            #fsb-social-bar .fsb-facebook .socialite-button { margin: 0 !important;}            #fsb-social-bar .fsb-share-facebook .socialite-loaded .socialite-button {padding: 2px 0 0}            #fsb-social-bar .fsb-linkedin { width: 105px; height: 25px; background-position: -347px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-linkedin .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 70px; color: #333; }            #fsb-social-bar .fsb-linkedin .socialite-button { margin: 0 !important; }            #fsb-social-bar .fsb-pinterest { width: 88px; height: 25px; background-position: -484px -10px; line-height: 25px; vertical-align: middle; }            #fsb-social-bar .fsb-pinterest .fsb-count { width: 30px; text-align: center; display: inline-block; margin: 0px 0 0 50px; color: #333; }            #fsb-social-bar .fsb-pinterest .socialite-button { margin: 0 !important; }            .fsb-clear { clear: both; }            .fsb-clear:after { clear:both; content:; display:block; height:0; line-height:0; overflow:auto; visibility:hidden; zoom:1; }            @media (max-width: 768px) { #fsb-social-bar.fsb-fixed { position: relative !important; top: auto !important; } }        </style><div class="fsb-share-twitter"><a href="https://twitter.com/share?original_referer=http%3A%2F%2Fwww.pyimagesearch.com%2F&source=tweetbutton&text=Hobbits+and+Histograms+%26%238211%3B+A+How-To+Guide+to+Building+Your+First+Image+Search+Engine+in+Python&url=http%3A%2F%2Fwww.pyimagesearch.com%2F2014%2F01%2F27%2Fhobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python%2F&via=pyimagesearch" class="socialite twitter fsb-twitter" data-fsb-service="twitter" rel="nofollow" target="_blank" title="117 retweets so far"><span class="fsb-service-title">Twitter</span><span class="fsb-count">117</span></a></div><div class="fsb-share-facebook"><a href="http://www.facebook.com/sharer.php?u=http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" class="socialite facebook fsb-facebook" data-fsb-service="facebook" data-href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" data-send="false" data-layout="button_count" data-width="60" data-show-faces="false" rel="nofollow" target="_blank"><span class="fsb-service-title">Facebook</span><span class="fsb-count">64</span></a></div><div class="fsb-share-google fsb-hide-count"><a href="https://plus.google.com/share?url=http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" class="socialite googleplus fsb-google" data-fsb-service="google" data-size="medium" data-href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" rel="nofollow" target="_blank"><span class="fsb-service-title">Google+</span><span class="fsb-count">0</span></a></div><div class="fsb-share-linkedin"><a href="https://www.linkedin.com/cws/share?url=http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" class="socialite linkedin fsb-linkedin" data-fsb-service="linkedin" data-size="medium" data-href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/" rel="nofollow" target="_blank"><span class="fsb-service-title">LinkedIn</span><span class="fsb-count">7</span></a></div></div><div class="fsb-clear"></div>	</section><!-- /.entry -->
	<div class="fix"></div>
		<aside id="connect">
		<h3>Resource Guide (it’s totally free).</h3>

		<div >
			<p><img title="Get your FREE 11-page Image Search Engine Resource Guide PDF" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/imagesearchengine-resourceguide-cover.png" style="padding-right: 10px;float: left" />
<div style="padding-top: 35px">
Enter your email address below to get my <strong>free 11-page Image Search Engine Resource Guide PDF</strong>. Uncover <strong>exclusive techniques</strong> that I don't publish on this blog and start building image search engines of your own!</div></p>

			
						<form action="https://www.getdrip.com/forms/1113813/submissions" method="post" target="_blank" data-drip-embedded-form="1295">
				<div>
					<input type="email" name="fields[email]" class="required email" value="" placeholder="Your email address" style="width: 50%;" />
				</div>
				<div>
					<input id="mc-embedded-subscribe" type="submit" name="submit" class="btn submit button" value="Download the Guide!" data-drip-attribute="sign-up-button" />
				</div>
			</form>
			
						<div class="social">
		   					</div>
			
		</div><!-- col-left -->

		
        <div class="fix"></div>
	</aside>
	<div class="post-utility"><p class="tags"><i class="icon-tag"></i> <a href="http://www.pyimagesearch.com/tag/3d-histogram/" rel="tag">3d histogram</a>, <a href="http://www.pyimagesearch.com/tag/code/" rel="tag">code</a>, <a href="http://www.pyimagesearch.com/tag/how-to-guide/" rel="tag">how-to guide</a>, <a href="http://www.pyimagesearch.com/tag/lord-of-the-rings/" rel="tag">lord of the rings</a>, <a href="http://www.pyimagesearch.com/tag/python/" rel="tag">python</a>, <a href="http://www.pyimagesearch.com/tag/rgb/" rel="tag">rgb</a>, <a href="http://www.pyimagesearch.com/tag/the-hobbit/" rel="tag">the hobbit</a></p> </div>
</article><!-- /.post -->
	        <div class="post-entries">
	            <div class="nav-prev fl"><a href="http://www.pyimagesearch.com/2014/01/22/clever-girl-a-guide-to-utilizing-color-histograms-for-computer-vision-and-image-search-engines/" rel="prev"><i class="icon-angle-left"></i> Clever Girl: A Guide to Utilizing Color Histograms for Computer Vision and Image Search Engines</a></div>
	            <div class="nav-next fr"><a href="http://www.pyimagesearch.com/2014/02/03/building-an-image-search-engine-defining-your-image-descriptor-step-1-of-4/" rel="next">Building an Image Search Engine: Defining Your Image Descriptor (Step 1 of 4) <i class="icon-angle-right"></i></a></div>
	            <div class="fix"></div>
	        </div>

		<div id="comments">		 	<h3 id="comments-title">12 Responses to <em>Hobbits and Histograms &#8211; A How-To Guide to Building Your First Image Search Engine in Python</em></h3>
		 	<ol class="commentlist">
					                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-20"></a>
	      	
	      	<div id="li-comment-20" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://0.gravatar.com/avatar/c6e0bde26a54d9254b8e61361ca19ee5?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">kerosene</span>           
	                <span class="date">January 27, 2014 at 9:04 pm</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-20" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-20">
				
				<p>How robust is this approach?</p>
<p>Add in random images from the web. Your corpus of images are obviously selected from clusters of different, strong colors. (the rows you organized them in).</p>
<p>I realize it&#8217;s only one feature, and it&#8217;s an early start, but tiny datasets do more harm than good when making broad claims to the image or search communities.</p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=20#respond' onclick='return addComment.moveForm("comment-20", "20", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-21"></a>
	      	
	      	<div id="li-comment-21" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 27, 2014 at 11:04 pm</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-21" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-21">
				
				<p>Hi kerosene, thanks for leaving the reply.</p>
<p>Perhaps you didn&#8217;t see my previous post, <a href="http://www.pyimagesearch.com/2014/01/22/clever-girl-a-guide-to-utilizing-color-histograms-for-computer-vision-and-image-search-engines/" rel="nofollow">Clever Girl: A Guide to Utilizing Color Histograms for Computer Vision and Image Search Engines</a>. Specifically, check out the &#8220;Drawbacks&#8221; section.</p>
<p>Color histograms, by definition, ignore the texture and shape of objects in an image. Semantically, they cannot tell the difference between a red shoe and a red shirt if the color distribution is the only aspect being examined. Thus, more robust methods include local invariant descriptors, such as SIFT, SURF, etc. However, these methods are considerably more complex and very confusing if you are just getting started in computer vision and image search engines.</p>
<p>This blog post simply served as an <em>example</em> of an image search engine. It shows readers that it&#8217;s cool and what&#8217;s possible with an imagination and an eagerness to explore a new field. I am certainly by no means am making broad claims regarding image or search (and I don&#8217;t think this blog post did so either).</p>
<p>Remember the title of this blog post places emphasis on your <em>first</em> search engine. We all learned basic algebra before we learned about systems of linear equations and linear algebra. Similarly, we must examine simple methods such as color histograms and understand why they work (along with their drawbacks) before we explore more complex solutions.</p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=21#respond' onclick='return addComment.moveForm("comment-21", "21", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment even depth-2">
	    
	    	<a name="comment-27"></a>
	      	
	      	<div id="li-comment-27" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://0.gravatar.com/avatar/c789ab052f13ddd37af520c4dc1dc375?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href='http://www.xyggy.com' rel='external nofollow' class='url'>Dinesh Vadhia</a></span>           
	                <span class="date">January 31, 2014 at 4:37 am</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-27" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-27">
				
				<p>As long as broad claims are not made then starting with a tiny data set is fine.  There are many aspects to building an image search capability and these set of blog posts are are doing a wonderful job to get these key areas across to people &#8211; technical and non-technical &#8211; of what is involved.  It might help if each introductory post contained a visible disclaimer of sorts.  Otherwise, a terrific set of posts so far.</p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=27#respond' onclick='return addComment.moveForm("comment-27", "27", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-3">
	    
	    	<a name="comment-28"></a>
	      	
	      	<div id="li-comment-28" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 31, 2014 at 7:55 am</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-28" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-28">
				
				<p>I&#8217;ll definitely keep in mind the disclaimer idea, thanks!</p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=28#respond' onclick='return addComment.moveForm("comment-28", "28", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-odd thread-alt depth-1">
	    
	    	<a name="comment-23"></a>
	      	
	      	<div id="li-comment-23" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://0.gravatar.com/avatar/cef988b2e4e768d783500631703bc119?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href='http://www.makan-studios.com' rel='external nofollow' class='url'>Andrei Blaj</a></span>           
	                <span class="date">January 29, 2014 at 6:08 am</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-23" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-23">
				
				<p>Great article Adrian <img src="http://www.pyimagesearch.com/wp-includes/images/smilies/icon_wink.gif" alt=";)" class="wp-smiley" /> </p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=23#respond' onclick='return addComment.moveForm("comment-23", "23", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor odd alt depth-2">
	    
	    	<a name="comment-24"></a>
	      	
	      	<div id="li-comment-24" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">January 29, 2014 at 7:21 am</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-24" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-24">
				
				<p>Thank you! I&#8217;m glad you enjoyed it!</p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=24#respond' onclick='return addComment.moveForm("comment-24", "24", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
	                 
		<li class="comment even thread-even depth-1">
	    
	    	<a name="comment-67"></a>
	      	
	      	<div id="li-comment-67" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://1.gravatar.com/avatar/5f2f81dd314ccb24e4d4489fe7fd7dfe?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name"><a href='http://softwaredevelopmentperestroika.wordpress.com' rel='external nofollow' class='url'>Tommy</a></span>           
	                <span class="date">February 11, 2014 at 3:03 pm</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-67" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-67">
				
				<p>Amazing post! Thanks! Even a grumpy old man like me can now figure out how to do image search&#8230;.! <img src="http://www.pyimagesearch.com/wp-includes/images/smilies/icon_smile.gif" alt=":-)" class="wp-smiley" /> </p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=67#respond' onclick='return addComment.moveForm("comment-67", "67", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
	                 
		<li class="comment odd alt thread-odd thread-alt depth-1">
	    
	    	<a name="comment-3835"></a>
	      	
	      	<div id="li-comment-3835" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://1.gravatar.com/avatar/5ebf30806385b31a8fe4d3acba4b4096?s=40&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Jose Luis de la Rosa</span>           
	                <span class="date">June 13, 2014 at 7:46 am</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-3835" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-3835">
				
				<p>Hello Adrian,</p>
<p>Congratulations for this post, it&#8217;s amazing how easy you show it.</p>
<p>What about images in black and white? Is it different? What&#8217;s the best way to clusterize and do an accurate search on them?</p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=3835#respond' onclick='return addComment.moveForm("comment-3835", "3835", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	<ul class="children">
	                 
		<li class="comment byuser comment-author-adrian bypostauthor even depth-2">
	    
	    	<a name="comment-3943"></a>
	      	
	      	<div id="li-comment-3943" class="comment-container">
	      	
					                <div class="avatar"><img alt='' src='http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=40&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D40&amp;r=G' class='avatar avatar-40 photo' height='40' width='40' /></div>
	                        
	
		      	<div class="comment-head">
		      	            
	                <span class="name">Adrian Rosebrock</span>           
	                <span class="date">June 13, 2014 at 7:38 pm</span>
	                <span class="perma"><a href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#comment-3943" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>
		        		          	
				</div><!-- /.comment-head -->
		      
		   		<div class="comment-entry"  id="comment-3943">
				
				<p>Hi Jose, shoot me an email and we can discuss clustering images.</p>
		            
										
	                <div class="reply">
	                    <a class='comment-reply-link' href='/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/?replytocom=3943#respond' onclick='return addComment.moveForm("comment-3943", "3943", "respond", "152")'>Reply</a>	                </div><!-- /.reply -->                       
			
				</div><!-- /comment-entry -->
	
			</div><!-- /.comment-container -->
			
	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>
		 				 	<h3 id="comments-title">Trackbacks/Pingbacks</h3>
			 	<ol class="commentlist">
						
		<li id="comment-35">
			<span class="author"><a href='http://www.pyimagesearch.com/2014/02/03/building-an-image-search-engine-defining-your-image-descriptor-step-1-of-4/' rel='external nofollow' class='url'>Building an Image Search Engine: Defining Your Image Descriptor (Step 1 of 4) - PyImageSearch</a></span> - 
			<span class="date">February 3, 2014</span>
			<span class="pingcontent"><p>[&#8230;] Monday, I showed you how to build an awesome Lord of the Rings image search engine, from start to finish. It was a lot of fun and we learned a lot. More importantly, we got to look [&#8230;]</p>
</span>
</li><!-- #comment-## -->
	
		<li id="comment-383">
			<span class="author"><a href='https://www.pyimagesearch.com/2014/03/03/charizard-explains-describe-quantify-image-using-feature-vectors/' rel='external nofollow' class='url'>How To Describe and Quantify an Image Using Feature Vectors</a></span> - 
			<span class="date">April 28, 2014</span>
			<span class="pingcontent"><p>[&#8230;] Clever Girl: A Guide to Utilizing Color Histograms for Computer Vision and Image Search Engines and Hobbits and Histograms, we could also use a 3D color histogram to describe our [&#8230;]</p>
</span>
</li><!-- #comment-## -->
	
		<li id="comment-384">
			<span class="author"><a href='https://www.pyimagesearch.com/2014/04/07/building-pokedex-python-indexing-sprites-using-shape-descriptors-step-3-6/' rel='external nofollow' class='url'>Building a Pokedex in Python: Indexing our Sprites using Shape Descriptors (Step 3 of 6) - PyImageSearch</a></span> - 
			<span class="date">April 28, 2014</span>
			<span class="pingcontent"><p>[&#8230;] you may know from the Hobbits and Histograms post, I tend to like to define my image descriptors as classes rather than functions. The reason [&#8230;]</p>
</span>
</li><!-- #comment-## -->
				</ol>
			</div>								<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/#respond" style="display:none;">Click here to cancel reply.</a></small></h3>
									<form action="http://www.pyimagesearch.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																										<p class="comment-form-author"><input id="author" name="author" type="text" class="txt" tabindex="1" value="" size="30" aria-required='true' /><label for="author">Name <span class="required">(required)</span></label> </p>
<p class="comment-form-email"><input id="email" name="email" type="text" class="txt" tabindex="2" value="" size="30" aria-required='true' /><label for="email">Email (will not be published) <span class="required">(required)</span></label> </p>
<p class="comment-form-url"><input id="url" name="url" type="text" class="txt" tabindex="3" value="" size="30" /><label for="url">Website</label></p>
												<p class="comment-form-comment"><label class="hide" for="comment">Comment</label> <textarea tabindex="4" id="comment" name="comment" cols="50" rows="10" aria-required="true"></textarea></p>												<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Submit Comment" />
							<input type='hidden' name='comment_post_ID' value='152' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="3889e3d8d8" /></p><script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/000000/M9RPzM4szk0t0Y_PzEvWT8svygUA.js"></script>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="28"/></p>					</form>
							</div><!-- #respond -->
			     
            </section><!-- /#main -->
                
            <aside id="sidebar">
<div id="text-2" class="widget widget_text"><h3>Resource Guide (it&#8217;s totally free).</h3>			<div class="textwidget"><img title="Get your FREE 11-page Image Search Engine Resource Guide PDF" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/imagesearchengine-resourceguide-cover.png" style="padding-right: 10px; width: 100px; float: left;"/>
<p>Enter your email address below to get my <strong>free 11-page Image Search Engine Resource Guide PDF</strong>. Uncover <strong>exclusive techniques</strong> that I don't publish on this blog and start building image search engines of your own!</p>
<div style="clear: left;"></div>

<div id="mc4wp-form-1" class="form mc4wp-form mc4wp-form-246"><form action="https://www.getdrip.com/forms/1113813/submissions" method="post" target="_blank" data-drip-embedded-form="1295"><p>
	<input type="email" name="fields[email]" value="" placeholder="Your email address" style="max-width: 400px;" />
</p>
<p>
	<input type="submit" value="Download the guide!" style="background-color: #6DC713;" />
</p></form></div></div>
		</div><div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo"><h3>Hello! I&#8217;m Adrian Rosebrock.</h3><span class="left"><img alt='' src='http://0.gravatar.com/avatar/02743529311d3b8babbaf6935670ec9c?s=90&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D90&amp;r=G' class='avatar avatar-90 photo' height='90' width='90' /></span>
<p>I'm an entrepreneur and Ph.D who has launched two successful image search engines, <a target="blank" href="http://www.idmypill.com">ID My Pill</a> and <a target="blank" href="http://www.chicengine.com">Chic Engine</a>. I'm here to share my tips, tricks, and hacks I've learned along the way.</p>
<div class="fix"></div>
</div><div id="text-4" class="widget widget_text"><h3>Learn computer vision in a single weekend.</h3>			<div class="textwidget"><a href="http://www.pyimagesearch.com/practical-python-opencv/" title="Practical Python and OpenCV"><img title="Become an OpenCV guru" src="http://www.pyimagesearch.com/static/templates/practical-python-and-opencv/images/practical_python_and_opencv_cover.png" style="margin-left: 35px; padding-bottom: 15px; width: 215px;"/></a>
<p>Want to learn computer vision? I can teach you in a <em><strong>single weekend</strong></em>. I know. It sounds crazy. But my new book is your <strong>guaranteed, quick-start guide</strong> to learning OpenCV. <a href="http://www.pyimagesearch.com/practical-python-opencv/" title="Practical Python and OpenCV">Click here to become a computer vision guru.</a></p>
<p><input type="submit" value="Click here to become an OpenCV guru" style="background-color: #6DC713;" onClick="document.location='http://www.pyimagesearch.com/practical-python-opencv/'; return false;" /></p></div>
		</div><div id="text-3" class="widget widget_text"><h3>Subscribe via RSS</h3>			<div class="textwidget"><a target="blank" href="http://feeds.feedburner.com/Pyimagesearch"><img title="PyImageSearch RSS Feed" src="http://www.pyimagesearch.com/wp-content/uploads/2014/01/rss-icon.png"/ style="padding-right: 10px; float: left;"></a>
<p><strong>Never miss a post!</strong> Subscribe to the PyImageSearch RSS Feed and keep up to date with my image search engine tutorials, tips, and tricks</p></div>
		</div>
		<div id="woo_tabs-2" class="widget widget_woo_tabs"> 		<div id="tabs">

            <ul class="wooTabs">
                                <li class="popular"><a href="#tab-pop">Popular</a></li>                                                            </ul>

            <div class="clear"></div>

            <div class="boxes box inside">

	            
                                <ul id="tab-pop" class="list">
                    	<li>
				<a title="Hobbits and Histograms &#8211; A How-To Guide to Building Your First Image Search Engine in Python" href="http://www.pyimagesearch.com/2014/01/27/hobbits-and-histograms-a-how-to-guide-to-building-your-first-image-search-engine-in-python/">Hobbits and Histograms &#8211; A How-To Guide to Building Your First Image Search Engine in Python</a>
		<span class="meta">January 27, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Building an Image Search Engine: Indexing Your Dataset (Step 2 of 4)" href="http://www.pyimagesearch.com/2014/02/10/building-an-image-search-engine-indexing-your-dataset-step-2-of-4/">Building an Image Search Engine: Indexing Your Dataset (Step 2 of 4)</a>
		<span class="meta">February 10, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Get off the deep learning bandwagon and get some perspective" href="http://www.pyimagesearch.com/2014/06/09/get-deep-learning-bandwagon-get-perspective/">Get off the deep learning bandwagon and get some perspective</a>
		<span class="meta">June 9, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="OpenCV and Python K-Means Color Clustering" href="http://www.pyimagesearch.com/2014/05/26/opencv-python-k-means-color-clustering/">OpenCV and Python K-Means Color Clustering</a>
		<span class="meta">May 26, 2014</span>
		<div class="fix"></div>
	</li>
		<li>
				<a title="Clever Girl: A Guide to Utilizing Color Histograms for Computer Vision and Image Search Engines" href="http://www.pyimagesearch.com/2014/01/22/clever-girl-a-guide-to-utilizing-color-histograms-for-computer-vision-and-image-search-engines/">Clever Girl: A Guide to Utilizing Color Histograms for Computer Vision and Image Search Engines</a>
		<span class="meta">January 22, 2014</span>
		<div class="fix"></div>
	</li>
	                </ul>
                                                                
            </div><!-- /.boxes -->

        </div><!-- /wooTabs -->

        </div>         <div id="woo_search-2" class="widget widget_woo_search"><h3>Search</h3><div class="search_main">
    <form method="get" class="searchform" action="http://www.pyimagesearch.com/" >
        <input type="text" class="field s" name="s" value="Search..." onfocus="if (this.value == 'Search...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search...';}" />
                <button type="submit" class="icon-search submit" name="submit" value="Search"></button>
    </form>    
    <div class="fix"></div>
</div>
</div></aside><!-- /#sidebar -->

		</div><!-- /#main-sidebar-container -->         

		
    </div><!-- /#content -->
	
    <!--#footer-widgets-container-->
    <div id="footer-widgets-container">
	</div><!--/#footer_widgets_container_end-->
    <!--#footer_container_start-->
    <div id="footer-container">
	<footer id="footer" class="col-full">

		
		<div id="copyright" class="col-left">
			<p>&copy; 2014 PyImageSearch. All Rights Reserved. </p>		</div>

		<div id="credit" class="col-right">
			Find me on <a target="blank" href="https://twitter.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Twitter</a>, <a target="blank" href="https://www.facebook.com/pyimagesearch" style="font-weight: bold; color: #FFFFFF;">Facebook</a>, <a target="blank" href="https://plus.google.com/115909176846554117735/?rel=author" style="font-weight: bold; color: #FFFFFF;">Google+</a>, and <a target="blank" href="http://www.linkedin.com/pub/adrian-rosebrock/2a/873/59b" style="font-weight: bold; color: #FFFFFF;">LinkedIn</a>.
		</div>

	</footer>

	    </div><!--/#footer_container_end-->

	</div><!-- /#inner-wrapper -->

</div><!-- /#wrapper -->

<div class="fix"></div><!--/.fix-->

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-46641058-1', 'pyimagesearch.com');
  ga('send', 'pageview');

</script>

<!-- Drip -->
<script type="text/javascript">
  var _dcq = _dcq || [];
  var _dcs = _dcs || {}; 
  _dcs.account = '4768429';
  
  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true; 
    dc.src = '//tag.getdrip.com/4768429.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script>

<!-- HitTail Code -->
<script type="text/javascript">
	(function(){ var ht = document.createElement('script');ht.async = true;
	  ht.type='text/javascript';ht.src = '//115962.hittail.com/mlt.js';
	  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ht, s);})();
</script>
<!-- Woo Tabs Widget -->
<script type="text/javascript">
jQuery(document).ready(function(){
	// UL = .wooTabs
	// Tab contents = .inside

	var tag_cloud_class = '#tagcloud';

	//Fix for tag clouds - unexpected height before .hide()
	var tag_cloud_height = jQuery( '#tagcloud').height();

	jQuery( '.inside ul li:last-child').css( 'border-bottom','0px' ); // remove last border-bottom from list in tab content
	jQuery( '.wooTabs').each(function(){
		jQuery(this).children( 'li').children( 'a:first').addClass( 'selected' ); // Add .selected class to first tab on load
	});
	jQuery( '.inside > *').hide();
	jQuery( '.inside > *:first-child').show();

	jQuery( '.wooTabs li a').click(function(evt){ // Init Click funtion on Tabs

		var clicked_tab_ref = jQuery(this).attr( 'href' ); // Strore Href value

		jQuery(this).parent().parent().children( 'li').children( 'a').removeClass( 'selected' ); //Remove selected from all tabs
		jQuery(this).addClass( 'selected' );
		jQuery(this).parent().parent().parent().children( '.inside').children( '*').hide();

		jQuery( '.inside ' + clicked_tab_ref).fadeIn(500);

		 evt.preventDefault();

	})
})
</script>
<script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/000000/M9FPzs_NTc0r0S1KLcip1MvNzAMA.js"></script>
<script type='text/javascript'>
/* <![CDATA[ */
var fsb = {"ajax":"http:\/\/www.pyimagesearch.com\/wp-admin\/admin-ajax.php"};
/* ]]> */
</script>
<script type="text/javascript" src="http://www.pyimagesearch.com/wp-content/cache/minify/000000/M9RPy8lPLMnMS9ctzk_OTMzRTUos0s8q1k8rTgIA.js"></script>
</body>
</html>

<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Minified using disk
Page Caching using disk: enhanced
Database Caching 39/64 queries in 0.009 seconds using disk
Object Caching 5270/5305 objects using disk

 Served from: www.pyimagesearch.com @ 2014-06-30 08:41:20 by W3 Total Cache -->