

<!DOCTYPE html>
<html lang="en-US">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />

        <title>Writing a FUSE filesystem in Python - Stavros&#39; Stuff</title>

        <meta http-equiv="X-XRDS-Location" content="//www.stavros.io/files/xrds" />
        <meta http-equiv="X-Yadis-Location" content="//www.stavros.io/files/xrds" />
        
        <link rel="canonical" href="//www.stavros.io/posts/python-fuse-filesystem/"/>
        

        <link rel="shortcut icon" type="image/x-icon" href="/media/images/favicon-0d350534022056c0dbf839720d461d8751cc5fae.png">

        <meta name="viewport" content="width=device-width, minimum-scale=1.0, initial-scale=1.0" />

        <!--[if IE]>
        <link rel="stylesheet" type="text/css" href="/media/ie9-be333572057c83aa058d5ecb874a763a288cd8c3.css" />
        <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
        <![endif]-->
        <!--[if lt IE 9]>
        <link rel="stylesheet" type="text/css" href="/media/ie-5b4684adae0e7d6208c60e1c9103ed59f30ceee0.css" />
        <![endif]-->

        
        

        <script type="text/javascript">
            document.documentElement.className = 'js';
        </script>

        <link rel="alternate" type="application/rss+xml" title="Stavros&#39; Stuff full posts feed" href="http://feeds.feedburner.com/stavrosstuff" />

        <link href='//fonts.googleapis.com/css?family=Lato:300,400,700|Raleway:400,200,300,600,800' rel='stylesheet' type='text/css'>
        <link href="//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css" rel="stylesheet">

        <link rel="stylesheet" type="text/css" href="/media/main-44be28796b4c3e0f474b5b4ca993992f7a180b5b.css" />

        <style type="text/css">
            a, #cancel-comment-reply i, #content .meta a, .post-navigation a:hover, .post-navigation li:hover i, .logo-text:hover i, #sidebar .widget li:before {
            color: #48ADD8
            ;
            }
            .logo-text, .next-prev a, #commentform #submit, .wpcf7-submit, .header .search-form .submit, .search-form .submit, .hero h3, .search-form .submit, .pull-quote, .flex-direction-nav a:hover, .tagcloud a {
            background: #48ADD8
            ;
            }
            .pull-quote:after {
            border-top: 20px solid #48ADD8
            ;
            }
        </style>
        <script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-51110-6']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</head>

    </head>
    <body class="single">
        <div class="header-wrap clearfix">
            <div class="header-search-hidden">
                <a class="header-search-hidden-close" href="#"><i class="icon-remove"></i></a>
                <form class="search-form clearfix">
                    <fieldset>
                        <input type="text" class="search-form-input text" name="q" onfocus="if (this.value == 'Search the site &hellip;') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search the site &hellip;';}" value="Search the site &hellip;"/>
                        <input type="submit" value="Search" class="submit search-button" />
                    </fieldset>
                </form>
            </div>
            <div class="container">
                <header class="header">
                    <!-- grab the logo and site title -->
                    <hgroup>
                    <h1 class="logo-text"><a href="/" title="Stavros&#39; Stuff">Stavros&#39; Stuff</a></h1>
                        <h2 class="logo-subtitle">Angry rants of programming and other things.</h2>
                    </hgroup>
                    <nav role="navigation" class="header-nav">
                        <!-- nav menu -->
                        <div class="menu-header-container">
                            <ul id="menu-header" class="nav">
                                <li class="menu-item menu-item-type-custom menu-item-object-custom">
                                    <a href="#">Tutorials</a>
                                    <ul class="sub-menu">
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/tutorials/python/">Learn Python in Ten Minutes</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/tutorials/online-security/">How to keep yourself secure online</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/tutorials/icecast/">How to create an internet radio station</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/tutorials/bittorrent/">How to use BitTorrent to send files</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/tutorials/bittorrent/download/">How to download files with uTorrent</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/tutorials/email/">How to delete emails on a POP3 server</a></li>
                                    </ul>
                                </li>
                                <li class="menu-item menu-item-type-custom menu-item-object-custom">
                                    <a href="#">Downloads</a>
                                    <ul class="sub-menu">
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/downloads/">Downloads</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/scripting/">Various scripts</a></li>
                                    </ul>
                                </li>
                                <li class="menu-item menu-item-type-custom menu-item-object-custom">
                                    <a href="#">Various</a>
                                    <ul class="sub-menu">
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/projects/">My projects</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/photography/">Photography</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/freelance-python-developer/">Freelance Python developer</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="https://github.com/skorokithakis/">My GitHub</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="http://resume.stavros.io/">My résumé</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/about/">About me</a></li>
                                    </ul>
                                </li>
                                <li class="menu-item menu-item-type-custom menu-item-object-custom">
                                    <a href="#">Archives</a>
                                    <ul class="sub-menu">
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/archives/full/">Full</a></li>
                                        <li class="menu-item menu-item-type-post_type menu-item-object-page"><a href="/archives/">By year</a></li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </nav>
                    <a class="search-toggle" href="#"><i class="icon-search"></i></a>
                </header>
            </div>
            <!-- container -->
        </div>
        
        <!-- header wrap -->
        <div id="wrapper" class="clearfix">
            <div class="inside-wrap clearfix">
                
<header class="page-titles">
<div class="container clearfix">
    <h1 class="entry-title"><a href="/posts/python-fuse-filesystem/" title='Permalink to "Writing a FUSE filesystem in Python"' rel="bookmark">Writing a FUSE filesystem in Python</a></h1>
    <h3 class="entry-subtitle">Conceived on 30 Oct 2013

/ Series:

<a href="/series/sideprojects/">sideprojects</a>,

<a href="/series/python/">python</a>


</h3>
    <div class="featured-image-bg" style="background-image: url('/media/images/bkg/books21-77356dd04e775dc4bb90acfad5b2158e68c96306.jpg')"></div>
</div>
</header>

                <div class="page container clearfix">
                    
<div id="content">
    <div class="posts">
        <article class="post">
        <div class="box-wrap">
            <div class="box">
                <div class="post-content">
                    <div class="pull-quote">Turns out FUSE filesystems are ridiculously easy!</div>

<p>If you&#8217;re a regular reader, you might have noticed that I&#8217;ve been on <a href="/posts/encrypted-offsite-backups/">a quest for the perfect backup program</a>, and ended up writing my own encryption layer over bup.</p>
<p>While writing encbup, I wasn&#8217;t very satisfied with having to download the entire huge archive just to restore a file, and still wished that I could use EncFS together with rdiff-backup to have true remote-mountable, encrypted, deduplicated, versioned backups.</p>
<p>Trying <a href="http://liw.fi/obnam/">obnam</a> again (spoiler: it&#8217;s still pretty slow), I noticed that it included a <code>mount</code> command. Looking at it, I discovered <a href="http://sourceforge.net/apps/mediawiki/fuse/index.php?title=Main_Page">fuse-python</a> and <a href="https://github.com/terencehonles/fusepy">fusepy</a>, and realized that writing a FUSE filesystem in Python is pretty much trivial.</p>
<p>The astute observer will have already realized where I&#8217;m going with this: I decided to write an encrypted filesystem layer in Python! This layer would be very similar to EncFS, with a few crucial differences:<!-- break --></p>
<ul>
<li>It would work in reverse mode by default, accepting regular files and exposing an encrypted directory. This way, <em>any</em> backup program will see (and back up) encrypted directories, without requiring any extra storage whatsoever.</li>
<li>It would also accept a configuration file with a list of directories and would expose them under the mountpoint. That way, all the backup script would need to do would be to back the mountpoint up, and various disparate directories would get backed up at once.</li>
<li>It would be geared towards backups, rather than encrypted storage, and would be very fun to write.</li>
</ul>
<h2 id="a-sample-fuse-filesystem">A sample FUSE filesystem</h2>
<p>The first step towards writing this script is to write a pure pass-through filesystem. This would merely accept one directory and expose it under the mountpoint, ensuring that all changes in that mountpoint would be mirrored to the source.</p>
<p>fusepy requires you to write a class with various OS-level filesystem methods defined. You define the ones your filesystem supports, and leave the others undefined, but I needed to define them all, since mine is a pass-through filesystem that should act like the original one as faithfully as possible.</p>
<p>It was pretty easy and fun to write this, as most methods are just thin wrappers around the os module (and, indeed, you can just assign them directly if you like, e.g. <code>open = os.open</code>, but my module needs some path expansion). Unfortunately, fuse-python had a bug (as far as I can tell) that did not allow it to pass the file handlers back to the filesystem when opening and reading files, so my script couldn&#8217;t tell which file handle an app wanted to read or write to, causing failures. fusepy worked very well, and required minimal changes. It&#8217;s also a single file, so you can just bundle it with your project.</p>
<h2 id="the-code">The code</h2>
<p>I would like to give you the code here, in case you want to implement your own filesystem. This provides a great starting point, as you can just paste the class into your project and override the methods you need, ignoring the rest.</p>
<p>Here is the actual listing:</p>
<div class="highlight"><pre><span class="c">#!/usr/bin/env python</span>

<span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">with_statement</span>

<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">errno</span>

<span class="kn">from</span> <span class="nn">fuse</span> <span class="kn">import</span> <span class="n">FUSE</span><span class="p">,</span> <span class="n">FuseOSError</span><span class="p">,</span> <span class="n">Operations</span>


<span class="k">class</span> <span class="nc">Passthrough</span><span class="p">(</span><span class="n">Operations</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">root</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">root</span> <span class="o">=</span> <span class="n">root</span>

    <span class="c"># Helpers</span>
    <span class="c"># =======</span>

    <span class="k">def</span> <span class="nf">_full_path</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">partial</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">partial</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">):</span>
            <span class="n">partial</span> <span class="o">=</span> <span class="n">partial</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
        <span class="n">path</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">root</span><span class="p">,</span> <span class="n">partial</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">path</span>

    <span class="c"># Filesystem methods</span>
    <span class="c"># ==================</span>

    <span class="k">def</span> <span class="nf">access</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">mode</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">os</span><span class="o">.</span><span class="n">access</span><span class="p">(</span><span class="n">full_path</span><span class="p">,</span> <span class="n">mode</span><span class="p">):</span>
            <span class="k">raise</span> <span class="n">FuseOSError</span><span class="p">(</span><span class="n">errno</span><span class="o">.</span><span class="n">EACCES</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">chmod</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">mode</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">chmod</span><span class="p">(</span><span class="n">full_path</span><span class="p">,</span> <span class="n">mode</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">chown</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">chown</span><span class="p">(</span><span class="n">full_path</span><span class="p">,</span> <span class="n">uid</span><span class="p">,</span> <span class="n">gid</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">getattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">fh</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="n">st</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">lstat</span><span class="p">(</span><span class="n">full_path</span><span class="p">)</span>
        <span class="k">return</span> <span class="nb">dict</span><span class="p">((</span><span class="n">key</span><span class="p">,</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">st</span><span class="p">,</span> <span class="n">key</span><span class="p">))</span> <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="p">(</span><span class="s">&#39;st_atime&#39;</span><span class="p">,</span> <span class="s">&#39;st_ctime&#39;</span><span class="p">,</span>
                     <span class="s">&#39;st_gid&#39;</span><span class="p">,</span> <span class="s">&#39;st_mode&#39;</span><span class="p">,</span> <span class="s">&#39;st_mtime&#39;</span><span class="p">,</span> <span class="s">&#39;st_nlink&#39;</span><span class="p">,</span> <span class="s">&#39;st_size&#39;</span><span class="p">,</span> <span class="s">&#39;st_uid&#39;</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">readdir</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">fh</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>

        <span class="n">dirents</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;.&#39;</span><span class="p">,</span> <span class="s">&#39;..&#39;</span><span class="p">]</span>
        <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">isdir</span><span class="p">(</span><span class="n">full_path</span><span class="p">):</span>
            <span class="n">dirents</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">listdir</span><span class="p">(</span><span class="n">full_path</span><span class="p">))</span>
        <span class="k">for</span> <span class="n">r</span> <span class="ow">in</span> <span class="n">dirents</span><span class="p">:</span>
            <span class="k">yield</span> <span class="n">r</span>

    <span class="k">def</span> <span class="nf">readlink</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span>
        <span class="n">pathname</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">readlink</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">))</span>
        <span class="k">if</span> <span class="n">pathname</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s">&quot;/&quot;</span><span class="p">):</span>
            <span class="c"># Path name is absolute, sanitize it.</span>
            <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">relpath</span><span class="p">(</span><span class="n">pathname</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">root</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">pathname</span>

    <span class="k">def</span> <span class="nf">mknod</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">dev</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">mknod</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">),</span> <span class="n">mode</span><span class="p">,</span> <span class="n">dev</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">rmdir</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">rmdir</span><span class="p">(</span><span class="n">full_path</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">mkdir</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">mode</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">mkdir</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">),</span> <span class="n">mode</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">statfs</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="n">stv</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">statvfs</span><span class="p">(</span><span class="n">full_path</span><span class="p">)</span>
        <span class="k">return</span> <span class="nb">dict</span><span class="p">((</span><span class="n">key</span><span class="p">,</span> <span class="nb">getattr</span><span class="p">(</span><span class="n">stv</span><span class="p">,</span> <span class="n">key</span><span class="p">))</span> <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="p">(</span><span class="s">&#39;f_bavail&#39;</span><span class="p">,</span> <span class="s">&#39;f_bfree&#39;</span><span class="p">,</span>
            <span class="s">&#39;f_blocks&#39;</span><span class="p">,</span> <span class="s">&#39;f_bsize&#39;</span><span class="p">,</span> <span class="s">&#39;f_favail&#39;</span><span class="p">,</span> <span class="s">&#39;f_ffree&#39;</span><span class="p">,</span> <span class="s">&#39;f_files&#39;</span><span class="p">,</span> <span class="s">&#39;f_flag&#39;</span><span class="p">,</span>
            <span class="s">&#39;f_frsize&#39;</span><span class="p">,</span> <span class="s">&#39;f_namemax&#39;</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">unlink</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">unlink</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">symlink</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">symlink</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">target</span><span class="p">),</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">rename</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">old</span><span class="p">,</span> <span class="n">new</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">rename</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">old</span><span class="p">),</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">new</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">link</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">target</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">link</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">target</span><span class="p">),</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">name</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">utimens</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">times</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">utime</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">),</span> <span class="n">times</span><span class="p">)</span>

    <span class="c"># File methods</span>
    <span class="c"># ============</span>

    <span class="k">def</span> <span class="nf">open</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">flags</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">full_path</span><span class="p">,</span> <span class="n">flags</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">create</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">mode</span><span class="p">,</span> <span class="n">fi</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">full_path</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">O_WRONLY</span> <span class="o">|</span> <span class="n">os</span><span class="o">.</span><span class="n">O_CREAT</span><span class="p">,</span> <span class="n">mode</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">read</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">length</span><span class="p">,</span> <span class="n">offset</span><span class="p">,</span> <span class="n">fh</span><span class="p">):</span>
        <span class="n">os</span><span class="o">.</span><span class="n">lseek</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">offset</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">SEEK_SET</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">length</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">write</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">buf</span><span class="p">,</span> <span class="n">offset</span><span class="p">,</span> <span class="n">fh</span><span class="p">):</span>
        <span class="n">os</span><span class="o">.</span><span class="n">lseek</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">offset</span><span class="p">,</span> <span class="n">os</span><span class="o">.</span><span class="n">SEEK_SET</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">fh</span><span class="p">,</span> <span class="n">buf</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">truncate</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">length</span><span class="p">,</span> <span class="n">fh</span><span class="o">=</span><span class="bp">None</span><span class="p">):</span>
        <span class="n">full_path</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_full_path</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">full_path</span><span class="p">,</span> <span class="s">&#39;r+&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="o">.</span><span class="n">truncate</span><span class="p">(</span><span class="n">length</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">flush</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">fh</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">fsync</span><span class="p">(</span><span class="n">fh</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">release</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">fh</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">os</span><span class="o">.</span><span class="n">close</span><span class="p">(</span><span class="n">fh</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">fsync</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">fdatasync</span><span class="p">,</span> <span class="n">fh</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">flush</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">fh</span><span class="p">)</span>


<span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">mountpoint</span><span class="p">,</span> <span class="n">root</span><span class="p">):</span>
    <span class="n">FUSE</span><span class="p">(</span><span class="n">Passthrough</span><span class="p">(</span><span class="n">root</span><span class="p">),</span> <span class="n">mountpoint</span><span class="p">,</span> <span class="n">foreground</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</pre></div>
</code></pre>

<p>If you want to run it as a script, just install fusepy, put the script into a file (e.g. <code>myfuse.py</code>) and run <code>python myfuse.py /your/dir /mnt/point</code>. You will see all files in <code>/your/dir</code> under <code>/mnt/point</code> and be able to manipulate them exactly as if they were in the original filesystem.</p>
<h2 id="epilogue">Epilogue</h2>
<p>Overall, I didn&#8217;t expect writing a filesystem to be so easy. What remains now is to write the encryption/decryption functionality into the script, as well as some helper methods. I aim to have this script be a full EncFS alternative, except it will be much more extensible (as it&#8217;s written in Python), and it will include extra features aimed at backing up files.</p>
<p>If you want to follow the development of this script, please subscribe to my mailing list below, or <a href="https://twitter.com/intent/user?screen_name=Stavros">follow me on Twitter</a>. As always, feedback is very welcome (the comments section below is ideal).</p>
                </div>
            </div>
        </div>
        </article>
    </div>

    <hr>

    <div id="mc_embed_signup" class="styled-form">
    <form action="http://korokithakis.us7.list-manage.com/subscribe/post?u=e852d258bd7a59b880efabdc5&amp;id=d1c29513c2" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="mailing-form validate" target="_blank" novalidate>
        <h4>Subscribe to my mailing list</h4>
        <p>Did you like what you just read and want to be notified when I post more? Subscribe
        to my mailing list to get updates on my posts and other random goodies.</p>
        <div class="mc-field-group">
            <input placeholder="Email" type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL">
            <input placeholder="First name" type="text" value="" name="FNAME" class="" id="mce-FNAME">
            <div class="response" id="mce-error-response" style="display:none"></div>
            <div class="response" id="mce-success-response" style="display:none"></div>
            <input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="submit-button">
        </div>
    </form>
</div>
<hr>


    <iframe src="http://www.facebook.com/plugins/like.php?href=http://www.stavros.io/posts/python-fuse-filesystem/&amp;layout=button_count&amp;show_faces=false&amp;width=110&amp;action=like&amp;colorscheme=light&amp;height=20" scrolling="no" frameborder="0" width="110" style="border:none; overflow:hidden; 110px; height:20px;" allowTransparency="true"></iframe>
    <g:plusone></g:plusone>
    <iframe allowtransparency="true" frameborder="0" scrolling="no" src="http://platform.twitter.com/widgets/tweet_button.html?url=http://www.stavros.io/posts/python-fuse-filesystem/&amp;via=stavros&amp;text=Writing%20a%20FUSE%20filesystem%20in%20Python&amp;count=horizontal" width="110" height="20"></iframe>

    <hr>

    
    <div id="comment-jump" class="comments">
        <div id="comments">
            <div class="comments-wrap clearfix">
                <h3 id="comments-title">
                    <span>Join the conversation!</span>&nbsp;
                </h3>
                <div id="disqus_thread"></div>
                <script type="text/javascript">
                    var disqus_shortname = 'stavros';
                    var disqus_identifier = 'aMYndaqMTD55fut5drmWBm';
                    var disqus_title = 'Writing a FUSE filesystem in Python';
                    var disqus_url = 'http://www.stavros.io/posts/python-fuse-filesystem/';

                    (function() {
                     var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
                     dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
                     (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
                     })();
                 </script>
                 <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
             </div>
         </div>
     </div>
     
</div>


                    
                    <div id="sidebar">
                        <div class="widget">
                            <div style="text-align: center">
                                <img style="border-radius: 100px; max-height: 200px; max-width:200px;" src="//gravatar.com/avatar/e42b84ae166cd4eceefdb4360a5d9357?s=128" />
                                <h3>Stavros Korokithakis</h3>
                                <h5 id="nametitle">Guy who likes computers</h5>
                            </div>
                            <p>
                            Greek. Amateur F1 driver. Technology enthusiast. Single parent. Liar.
                            </p>
                            <p>
                            Founder of <a href="http://www.stochastic.io">Stochastic Technologies</a>, a
                            software development agency, and creator of various products which you can
                            find in the <a href="http://resume.stavros.io">résumé</a>.
                            </p>
                        </div>

                        <div id="search-3" class="widget widget_search">
                            <form class="search-form clearfix">
                                <fieldset>
                                    <input type="text" class="search-form-input text" name="q" onfocus="if (this.value == 'Search the site &hellip;') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search the site &hellip;';}" value="Search the site &hellip;"/>
                                    <input type="submit" value="Search" class="submit search-button" />
                                </fieldset>
                            </form>
                        </div>

                        <div class="widget">
                            <h2 class="widgettitle">Connect with me</h2>
                            <div class="icons-widget clearfix">
                                <div id="icons" class="large-icons">
                                    <a href="mailto:hi@stavros.io" class="google-icon" title="Email me"><i class="icon-envelope-alt"></i></a>
                                    <a href="http://feeds.feedburner.com/stavrosstuff" class="google-icon" title="RSS feed"><i class="icon-rss"></i></a>
                                    <a href="https://twitter.com/Stavros" class="twitter-icon" title="Twitter"><i class="icon-twitter"></i></a>
                                    <a href="https://plus.google.com/112248633257102064185?rel=author" class="google-icon" title="Google+"><i class="icon-google-plus"></i></a>
                                    <a href="https://github.com/skorokithakis/" class="github-icon" title="Github"><i class="icon-github"></i></a>
                                    <a href="https://www.linkedin.com/in/skorokithakis" class="linkedin-icon" title="LinkedIn"><i class="icon-linkedin"></i></a>
                                    <a href="https://www.flickr.com/photos/poromenos/" class="flickr-icon" title="Flickr"><i class="icon-flickr"></i></a>
                                </div>
                            </div>
                        </div>

                        <div class="widget">
                            <h2 class="widgettitle">Recent Posts</h2>
                            <ul>
                                
                                <li>
                                <a href="/posts/store-bitcoins-safely/" title="How to safely store your bitcoins">How to safely store your bitcoins</a>
                                </li>
                                
                                <li>
                                <a href="/posts/holy-grail-backups/" title="I found the Holy Grail of backups">I found the Holy Grail of backups</a>
                                </li>
                                
                                <li>
                                <a href="/posts/arduino-powered-irrigation-system/" title="Arduino-powered irrigation system">Arduino-powered irrigation system</a>
                                </li>
                                
                                <li>
                                <a href="/posts/persona-accounts-disposable-email-addresses/" title="Mozilla Persona accounts with disposable email addresses">Mozilla Persona accounts with disposable email addresses</a>
                                </li>
                                
                                <li>
                                <a href="/posts/control-rf-devices-with-arduino/" title="Remotely controlling IR/RF devices with an Arduino">Remotely controlling IR/RF devices with an Arduino</a>
                                </li>
                                
                            </ul>
                        </div>

                        <div id="text-2" class="widget widget_text">
                            <div class="textwidget">
                                <a class="twitter-timeline" data-dnt="true" href="https://twitter.com/Stavros" data-widget-id="351341211300294656">Tweets by @Stavros</a>
                                <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.async=true;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
                            </div>
                        </div>
                    </div>
                    
                </div>
                <!-- container -->
                <!-- footer -->
            </div>
            <!-- inside wrap -->
        </div>
        
        <!-- wrapper -->
        <div class="footer-bottom">
            <div class="container clearfix">
                <div class="footer-widgets">
                    <div class="theme-name-icon">
                        <h3>Made in Greece</h3>
                    </div>
                </div>
            </div>
        </div>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
        <script async type="text/javascript" src="https://apis.google.com/js/plusone.js"></script>
        <script>
            $( document ).ready(function() {
                var sowitty = [
                "Guy who likes computers",
                "Man",
                "International person of mystery",
                "Full-heap developer",
                "Person with too much free time",
                "Unfunny",
                "Site-owner",
                "Random person",
                "Social climber",
                "Six-time solitaire champion",
                "(Fake/ironic title here)",
                "Likes solving pointless problems",
                "A simple man",
                ]
                var item = sowitty[Math.floor(Math.random()*sowitty.length)];
                $("#nametitle").text(item)
                $('body')
                .delay(500)
                .queue(
                function(next){
                    $(this).css('padding-right', '1px');
                }
                );
            });
        </script>

        <script type="text/javascript" src="/media/main-9567c8c9fb3c50cb70baabed856c0b2b4274e090.js"></script>

        
    </body>
</html>
